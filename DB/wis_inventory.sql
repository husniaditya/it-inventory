-- --------------------------------------------------------
-- Host:                         127.0.0.1
-- Server version:               5.0.18-nt - MySQL Community Edition (GPL)
-- Server OS:                    Win32
-- HeidiSQL Version:             10.3.0.5771
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;


-- Dumping database structure for wis_inventory
CREATE DATABASE IF NOT EXISTS `wis_inventory` /*!40100 DEFAULT CHARACTER SET latin1 */;
USE `wis_inventory`;

-- Dumping structure for table wis_inventory.acb
DROP TABLE IF EXISTS `acb`;
CREATE TABLE IF NOT EXISTS `acb` (
  `urut` int(11) NOT NULL auto_increment,
  `acc` varchar(50) default NULL,
  `accname` varchar(100) default NULL,
  `cct` varchar(50) default NULL,
  `cctname` varchar(100) default NULL,
  `budget` double default NULL,
  PRIMARY KEY  (`urut`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.acb: ~0 rows (approximately)
/*!40000 ALTER TABLE `acb` DISABLE KEYS */;
/*!40000 ALTER TABLE `acb` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.acc
DROP TABLE IF EXISTS `acc`;
CREATE TABLE IF NOT EXISTS `acc` (
  `acc` varchar(15) NOT NULL default ' ',
  `name` varchar(70) default NULL,
  `parent` varchar(15) default NULL,
  `detil` tinyint(1) default NULL,
  `level_` smallint(5) default NULL,
  `group_` smallint(5) default NULL,
  `chtime` char(16) default NULL,
  `chusr` char(10) default NULL,
  PRIMARY KEY  (`acc`),
  KEY `accparent` (`acc`,`parent`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.acc: ~514 rows (approximately)
/*!40000 ALTER TABLE `acc` DISABLE KEYS */;
REPLACE INTO `acc` (`acc`, `name`, `parent`, `detil`, `level_`, `group_`, `chtime`, `chusr`) VALUES
	('10000000', 'AKTIVA', '', 0, 1, 1, '', ''),
	('11000000', 'AKTIVA LANCAR', '10000000', 0, 2, 1, '', ''),
	('11010000', 'KAS DAN SETARA KAS', '11000000', 0, 3, 1, '', ''),
	('11011000', 'KAS', '11010000', 0, 4, 1, '', ''),
	('11011101', 'KAS IDR', '11011000', 1, 5, 1, '', ''),
	('11011102', 'KAS USD', '11011000', 1, 5, 1, '', ''),
	('11011103', 'KAS JPY', '11011000', 1, 5, 1, '', ''),
	('11013000', 'BANK', '11010000', 0, 4, 1, '', ''),
	('11013101', 'BANK CENTRAL ASIA (BCA IDR) 8383', '11013000', 1, 5, 1, '08/02/2019 08:36', 'trial'),
	('11013102', 'BANK CENTRAL ASIA (BCA IDR) 8888', '11013000', 1, 5, 1, '08/02/2019 08:36', 'trial'),
	('11013103', 'BANK CENTRAL ASIA (BCA USD)', '11013000', 1, 5, 1, '08/02/2019 08:37', 'trial'),
	('11013104', 'BANK PANIN (USD)', '11013000', 1, 5, 1, '', ''),
	('11013105', 'BANK CIMB NIAGA (CIMB 6200)', '11013000', 1, 5, 1, '15/11/2019 16:12', 'robert'),
	('11013106', 'BANK CENTRAL ASIA (BCA USD DHE) 8898', '11013000', 1, 5, 1, '23/12/2019 16:47', 'robert'),
	('11013107', 'BANK CENTRAL ASIA (BCA IDR) 6888', '11013000', 1, 5, 1, '30-01-2020 11:57', 'it'),
	('11014000', 'DEPOSITO', '11010000', 0, 4, 1, '', ''),
	('11014101', 'DEPOSITO', '11014000', 1, 5, 1, '', ''),
	('11014201', 'DEPOSITO TAX AMNESTY', '11014000', 1, 5, 1, '', ''),
	('11020000', 'PIUTANG USAHA', '11000000', 0, 3, 1, '', ''),
	('11020100', 'PIUTANG USAHA IDR', '11020000', 0, 4, 1, '', ''),
	('11020101', 'PIUTANG USAHA LOKAL', '11020100', 1, 5, 1, '08/02/2019 08:48', 'trial'),
	('11020102', 'PIUTANG USAHA LOKAL-PIHAK KETIGA', '11020100', 1, 5, 1, '', ''),
	('11020200', 'PIUTANG USAHA USD', '11020000', 0, 4, 1, '', ''),
	('11020201', 'PIUTANG USAHA EKSPOR', '11020200', 1, 5, 1, '', ''),
	('11020202', 'PIUTANG USAHA USD LAINNYA', '11020200', 1, 5, 1, '', ''),
	('11020203', 'PIUTANG USD LAINNYA', '11020200', 1, 5, 1, '13/01/2022 10:48', 'warsokip'),
	('11020300', 'PIUTANG GIRO', '11020000', 1, 4, 1, '', ''),
	('11020400', 'CADANGAN KERUGIAN PIUTANG', '11020000', 1, 4, 1, '', ''),
	('11030000', 'PIUTANG LAIN-LAIN', '11000000', 0, 3, 1, '', ''),
	('11030100', 'PIUTANG PINJAMAN KARYAWAN', '11030000', 1, 4, 1, '', ''),
	('11030200', 'PIUTANG PIHAK KETIGA', '11030000', 1, 4, 1, '', ''),
	('11040000', 'PERSEDIAAN', '11000000', 0, 3, 1, '', ''),
	('11040100', 'PERSEDIAAN BAHAN BAKU', '11040000', 0, 4, 1, '', ''),
	('11040101', 'PERSEDIAAN BAHAN BAKU IKAN', '11040100', 1, 5, 1, '', ''),
	('11040102', 'PERSEDIAAN BAHAN BAKU KEPITING', '11040100', 1, 5, 1, '', ''),
	('11040103', 'PERSEDIAAN BAHAN BAKU UDANG', '11040100', 1, 5, 1, '20/05/2019 11:25', 'trial'),
	('11040104', 'PERSEDIAAN MANDIRI BAHAN BAKU UDANG', '11040100', 1, 5, 1, '26/02/2021 08:50', 'warsokip'),
	('11040200', 'PERSEDIAAN BAHAN PENOLONG', '11040000', 1, 4, 1, '', ''),
	('11040300', 'PERSEDIAAN BAHAN WIP', '11040000', 0, 4, 1, '', ''),
	('11040301', 'PERSEDIAAN BAHAN WIP IKAN 1', '11040300', 1, 5, 1, '', ''),
	('11040302', 'PERSEDIAAN BAHAN WIP IKAN 2', '11040300', 1, 5, 1, '', ''),
	('11040303', 'PERSEDIAAN BAHAN WIP KEPITING', '11040300', 1, 5, 1, '07-12-2020 11:38', 'it'),
	('11040304', 'PERSEDIAAN BAHAN WIP UDANG', '11040300', 1, 5, 1, '07-12-2020 11:38', 'it'),
	('11040305', 'PERSEDIAAN MANDIRI BAHAN WIP UDANG', '11040300', 1, 5, 1, '26/02/2021 08:54', 'warsokip'),
	('11040400', 'PERSEDIAAN BARANG JADI', '11040000', 0, 4, 1, '', ''),
	('11040401', 'PERSEDIAAN BARANG JADI IKAN', '11040400', 1, 5, 1, '', ''),
	('11040402', 'PERSEDIAAN BARANG JADI KEPITING', '11040400', 1, 5, 1, '', ''),
	('11040403', 'PERSEDIAAN BARANG JADI SHRIMP', '11040400', 1, 5, 1, '', ''),
	('11040404', 'PERSEDIAAN MANDIRI BARANG JADI SHRIMP', '11040400', 1, 5, 1, '26/02/2021 08:54', 'warsokip'),
	('11040500', 'PERSEDIAAN BAHAN BAKAR & GENSET', '11040000', 1, 4, 1, '', ''),
	('11040600', 'PERSEDIAAN PACKAGING', '11040000', 1, 4, 1, '', ''),
	('11040700', 'PERSEDIAAN SUPPLIES PABRIK', '11040000', 0, 4, 1, '', ''),
	('11040701', 'PERSEDIAAN EMBALASE', '11040700', 1, 5, 1, '', ''),
	('11040702', 'PERSEDIAAN LAIN-LAIN', '11040700', 1, 5, 1, '', ''),
	('11040703', 'PERSEDIAAN PERLENGKAPAN KERJA', '11040700', 1, 5, 1, '', ''),
	('11040704', 'PERSEDIAAN SPAREPART', '11040700', 1, 5, 1, '', ''),
	('11040705', 'PERSEDIAAN ALAT TULIS KANTOR', '11040700', 1, 5, 1, '', ''),
	('11040706', 'PERSEDIAAN WASTE IKAN', '11040700', 1, 5, 1, '', ''),
	('11040707', 'PERSEDIAAN WASTE KEPITING', '11040700', 1, 5, 1, '13/03/2019 15:33', 'trial'),
	('11040708', 'PERSEDIAAN WASTE UDANG', '11040700', 1, 5, 1, '28/08/2019 16:29', 'trial'),
	('11040709', 'PERSEDIAAN CHEMICAL/ INGREDIENT', '11040700', 1, 5, 1, '13/03/2019 15:33', 'trial'),
	('11040710', 'PERSEDIAAN WASTE HADDOCK', '11040700', 1, 5, 1, '29/04/2021 09:26', 'warsokip'),
	('11050000', 'UANG MUKA PEMBELIAN', '11000000', 0, 3, 1, '', ''),
	('11050100', 'UANG MUKA PEMBELIAN (IDR)', '11050000', 0, 4, 1, '', ''),
	('11050101', 'UANG MUKA PEMBELIAN (IDR)', '11050100', 1, 5, 1, '', ''),
	('11050102', 'UANG MUKA PEMBELIAN AKTIVA TETAP LOKAL', '11050100', 1, 5, 1, '', ''),
	('11050103', 'UANG MUKA PEMBELIAN BLM FAKTUR (IDR)', '11050100', 1, 5, 1, '07-02-2019 08:19', 'root'),
	('11050200', 'UANG MUKA PEMBELIAN (USD)', '11050000', 0, 4, 1, '', ''),
	('11050201', 'UANG MUKA PEMBELIAN (USD)', '11050200', 1, 5, 1, '', ''),
	('11050202', 'UANG MUKA PEMBELIAN AKTIVA TETAP USD', '11050200', 1, 5, 1, '', ''),
	('11050203', 'UANG MUKA PEMBELIAN BLM FAKTUR (USD)', '11050200', 1, 5, 1, '07-02-2019 08:22', 'root'),
	('11060000', 'PAJAK DIBAYAR DIMUKA', '11000000', 0, 3, 1, '', ''),
	('11060100', 'PAJAK PERTAMBAHAN NILAI (PPN) DIBAYAR DIMUKA', '11060000', 0, 4, 1, '', ''),
	('11060101', 'PPN MASUKAN LOKAL', '11060100', 1, 5, 1, '', ''),
	('11060102', 'PPN MASUKAN IMPORT', '11060100', 1, 5, 1, '', ''),
	('11060103', 'PPN MASUKAN YANG TIDAK DI PUNGUT', '11060100', 1, 5, 1, '', ''),
	('11060104', 'PPN NOL PERSEN MASUKAN YG AKAN DITANGGUNG', '11060100', 1, 5, 1, '', ''),
	('11060105', 'PPN MASUKAN BELUM DIFAKTURKAN', '11060100', 1, 5, 1, '', ''),
	('11060200', 'UM PAJAK PENGHASILAN (PPH)', '11060000', 0, 4, 1, '27/01/2021 13:47', 'warsokip'),
	('11060201', 'UM PAJAK PENGHASILAN (PPH) PPH PS 21', '11060200', 1, 5, 1, '27/01/2021 13:47', 'warsokip'),
	('11060202', 'UM PAJAK PENGHASILAN (PPH) PPH PS 22 LOKAL', '11060200', 1, 5, 1, '27/01/2021 13:48', 'warsokip'),
	('11060203', 'UM PAJAK PENGHASILAN (PPH) PPH PS 22 IMPOR', '11060200', 1, 5, 1, '27/01/2021 13:48', 'warsokip'),
	('11060204', 'UM PAJAK PENGHASILAN (PPH) PPH PS 23', '11060200', 1, 5, 1, '27/01/2021 13:49', 'warsokip'),
	('11060205', 'UM PAJAK PENGHASILAN (PPH) PPH PS 25', '11060200', 1, 5, 1, '27/01/2021 13:49', 'warsokip'),
	('11060206', 'UM PAJAK PENGHASILAN (PPH) PPH PS 4 AYAT 2', '11060200', 1, 5, 1, '27/01/2021 13:50', 'warsokip'),
	('11060207', 'UM PAJAK PENGHASILAN (PPH) PPH BELUM DIFAKTURKAN', '11060200', 1, 5, 1, '27/01/2021 13:50', 'warsokip'),
	('11060300', 'PAJAK PENJUALAN EXPORT (BEA KELUAR)', '11060000', 0, 4, 1, '', ''),
	('11060301', 'PAJAK PENJUALAN EXPORT (BEA KELUAR)', '11060300', 1, 5, 1, '', ''),
	('11070000', 'BIAYA DIBAYAR DIMUKA', '11000000', 0, 3, 1, '', ''),
	('11070100', 'BIAYA DIBAYAR DIMUKA ASURANSI', '11070000', 0, 4, 1, '', ''),
	('11070101', 'BDM-ASURANSI GEDUNG', '11070100', 1, 5, 1, '', ''),
	('11070102', 'BDM-ASURANSI KENDARAAN', '11070100', 1, 5, 1, '', ''),
	('11070103', 'BDM-ASURANSI INVENTARIS', '11070100', 1, 5, 1, '', ''),
	('11070104', 'BDM-ASURANSI MESIN', '11070100', 1, 5, 1, '', ''),
	('11070105', 'BDM-ASURANSI STOK/BARANG', '11070100', 1, 5, 1, '', ''),
	('11070106', 'BDM-SURANSI LAIN-LAIN', '11070100', 1, 5, 1, '', ''),
	('11070200', 'BIAYA DIBAYAR DIMUKA BUNGA & ADMINISTRASI', '11070000', 0, 4, 1, '', ''),
	('11070201', 'BDM-BUNGA', '11070200', 1, 5, 1, '', ''),
	('11070202', 'BDM-ADMINISTRASI & POVISI BANK', '11070200', 1, 5, 1, '08/02/2019 09:54', 'trial'),
	('11070300', 'BIAYA DIBAYAR DIMUKA SEWA', '11070000', 0, 4, 1, '', ''),
	('11070301', 'BDM-SEWA GEDUNG', '11070300', 1, 5, 1, '', ''),
	('11070302', 'BDM-SEWA KENDARAAN', '11070300', 1, 5, 1, '', ''),
	('11070303', 'BDM-SEWA GUDANG', '11070300', 1, 5, 1, '', ''),
	('11070304', 'BDM-SEWA TANAH', '11070300', 1, 5, 1, '', ''),
	('11070400', 'BIAYA DIBAYAR DIMUKA LAIN-LAIN', '11070000', 0, 4, 1, '', ''),
	('11070401', 'BDM-BEA MASUK', '11070400', 1, 5, 1, '', ''),
	('11070402', 'BDM-BEA KELUAR', '11070400', 1, 5, 1, '', ''),
	('11070403', 'BDM-PUNGUTAN DANA PENGGANTI PAJAK', '11070400', 1, 5, 1, '', ''),
	('11070404', 'BDM-LAIN LAIN', '11070400', 1, 5, 1, '', ''),
	('11990000', 'AKTIVA LANCAR LAIN-LAIN', '11000000', 0, 3, 1, '', ''),
	('11999900', 'AKTIVA LANCAR LAIN-LAIN', '11990000', 0, 4, 1, '', ''),
	('11999990', 'AYAT SILANG', '11999900', 1, 5, 1, '30/11/2021 13:47', 'it'),
	('11999991', 'UANG JAMINAN BARANG BEA CUKAI', '11999900', 1, 5, 1, '16/09/2021 08:14', 'warsokip'),
	('11999999', 'AKTIVA LANCAR LAIN-LAIN', '11999900', 1, 5, 1, '', ''),
	('12000000', 'AKTIVA TIDAK LANCAR', '10000000', 0, 2, 1, '', ''),
	('12010000', 'DEPOSITO', '12000000', 0, 3, 1, '', ''),
	('12010100', 'DEPOSITO IDR', '12010000', 1, 4, 1, '', ''),
	('12010200', 'DEPOSITO VALAS', '12010000', 1, 4, 1, '', ''),
	('12020000', 'INVESTASI DAN PENYERTAAN JANGKA PANJANG', '12000000', 0, 3, 1, '', ''),
	('12020100', 'INVESTASI DAN PENYERTAAN JANGKA PANJANG IDR', '12020000', 1, 4, 1, '', ''),
	('12020200', 'INVESTASI DAN PENYERTAAN JANGKA PANJANG VALAS', '12020000', 1, 4, 1, '', ''),
	('12030000', 'AKTIVA TETAP', '12000000', 0, 3, 1, '', ''),
	('12030100', 'AKTIVA TETAP', '12030000', 0, 4, 1, '', ''),
	('12030101', 'TANAH', '12030100', 1, 5, 1, '', ''),
	('12030102', 'BANGUNAN DAN PRASARANA', '12030100', 1, 5, 1, '', ''),
	('12030103', 'MESIN DAN PERALATAN PABRIK', '12030100', 1, 5, 1, '', ''),
	('12030104', 'KENDARAAN', '12030100', 1, 5, 1, '', ''),
	('12030105', 'INVENTARIS/PERLENGKAPAN', '12030100', 1, 5, 1, '', ''),
	('12030106', 'COLDSTORAGE', '12030100', 1, 5, 1, '08/02/2019 12:59', 'trial'),
	('12030107', 'INSTALASI & PRASARANA', '12030100', 1, 5, 1, '11/03/2019 09:17', 'trial'),
	('12030108', 'ATP DLM PENYELESAIAN BANGUNAN & PRASARANA ', '12030100', 1, 5, 1, '08/02/2019 13:12', 'trial'),
	('12030109', 'ATP DLM PENYELESAIAN MESIN & PERALATAN', '12030100', 1, 5, 1, '08/02/2019 13:12', 'trial'),
	('12030110', 'ATP DLM PENYELESAIAN LAINNYA', '12030100', 1, 5, 1, '08/02/2019 13:12', 'trial'),
	('12040000', 'AKUMULASI PENYUSUTAN', '12000000', 0, 3, 1, '', ''),
	('12040100', 'AKUMULASI PENYUSUTAN', '12040000', 0, 4, 1, '', ''),
	('12040101', 'AKM PENYUSUTAN BANGUNAN DAN PRASARANA', '12040100', 1, 5, 1, '', ''),
	('12040102', 'AKM PENYUSUTAN MESIN DAN PERALATAN', '12040100', 1, 5, 1, '', ''),
	('12040103', 'AKM PENYUSUTAN KENDARAAN', '12040100', 1, 5, 1, '', ''),
	('12040104', 'AKM PENYUSUTAN INVENTARIS/PERLENGKAPAN', '12040100', 1, 5, 1, '', ''),
	('12040105', 'AKM PENYUSUTAN LAINNYA', '12040100', 1, 5, 1, '', ''),
	('12040106', 'AKM PENYUSUTAN COLDSTORAGE', '12040100', 1, 5, 1, '11/03/2019 08:54', 'trial'),
	('12040107', 'AKM PENYUSUTAN INSTALASI DAN PRASARANA', '12040100', 1, 5, 1, '11/03/2019 09:17', 'trial'),
	('12060000', 'UANG MUKA PEMBELIAN AKTIVA', '12000000', 0, 3, 1, '', ''),
	('12060100', 'UANG MUKA PEMBELIAN AKTIVA LOKAL', '12060000', 0, 4, 1, '', ''),
	('12060101', 'UANG MUKA PEMBELIAN AKTIVA LOKAL', '12060100', 1, 5, 1, '', ''),
	('12060102', 'UANG MUKA PEMBELIAN AKTIVA LOKAL BLM FAKTUR', '12060100', 1, 5, 1, '', ''),
	('12060200', 'UANG MUKA PEMBELIAN AKTIVA IMPORT', '12060000', 0, 4, 1, '', ''),
	('12060201', 'UANG MUKA PEMBELIAN AKTIVA IMPORT', '12060200', 1, 5, 1, '', ''),
	('12060202', 'UANG MUKA PEMBELIAN AKTIVA IMPORT BLM FAKTUR', '12060200', 1, 5, 1, '', ''),
	('12070000', 'BIAYA DITANGGUHKAN', '12000000', 0, 3, 1, '', ''),
	('12070001', 'BIAYA DITANGGUHKAN', '12070000', 1, 4, 1, '14/07/2021 16:49', 'warsokip'),
	('12080000', 'PAJAK YANG DITANGGUHKAN-AKTIVA ', '12000000', 0, 3, 1, '', ''),
	('12080100', 'PAJAK YANG DITANGGUHKAN-AKTIVA ', '12080000', 1, 4, 1, '', ''),
	('12090000', 'TAGIHAN PAJAK PENGHASILAN', '12000000', 0, 3, 1, '', ''),
	('12090100', 'TAGIHAN PAJAK PENGHASILAN', '12090000', 0, 4, 1, '', ''),
	('12090101', 'TAGIHAN PAJAK PENGHASILAN', '12090100', 1, 5, 1, '', ''),
	('12990000', 'AKTIVA TIDAK LANCAR LAIN-LAIN', '12000000', 0, 3, 1, '', ''),
	('12990100', 'PIUTANG LAIN-LAIN', '12990000', 1, 4, 1, '', ''),
	('20000000', 'KEWAJIBAN', '', 0, 1, 2, '', ''),
	('21000000', 'KEWAJIBAN LANCAR', '20000000', 0, 2, 2, '', ''),
	('21010000', 'HUTANG BANK JANGKA PENDEK', '21000000', 0, 3, 2, '', ''),
	('21010100', 'HUTANG BANK JANGKA PENDEK IDR', '21010000', 1, 4, 2, '', ''),
	('21010200', 'HUTANG BANK JANGKA PENDEK VALAS', '21010000', 1, 4, 2, '', ''),
	('21010300', 'VALUASI HUTANG BANK JANGKA PENDEK', '21010000', 1, 4, 2, '', ''),
	('21020000', 'HUTANG USAHA', '21000000', 0, 3, 2, '', ''),
	('21020100', 'HUTANG USAHA LOKAL', '21020000', 0, 4, 2, '', ''),
	('21020101', 'HUTANG USAHA LOKAL-NON RAW MATERIAL', '21020100', 1, 5, 2, '', ''),
	('21020102', 'HUTANG USAHA LOKAL-RAW MATERIAL', '21020100', 1, 5, 2, '', ''),
	('21020103', 'HUTANG USAHA LOKAL-AFFILIASI', '21020100', 1, 5, 2, '', ''),
	('21020200', 'HUTANG USAHA IMPORT', '21020000', 0, 4, 2, '', ''),
	('21020201', 'HUTANG USAHA IMPORT-NON RAW MATERIAL', '21020200', 1, 5, 2, '', ''),
	('21020202', 'HUTANG USAHA IMPORT-RAW MATERIAL', '21020200', 1, 5, 2, '', ''),
	('21020203', 'HUTANG USAHA IMPORT-AFFILIASI', '21020200', 1, 5, 2, '', ''),
	('21020300', 'HUTANG CEK/GIRO MUNDUR', '21020000', 1, 4, 2, '', ''),
	('21020400', 'HUTANG ASURANSI', '21020000', 1, 4, 2, '11/04/2019 11:11', 'trial'),
	('21020500', 'HUTANG LEASING', '21020000', 1, 4, 2, '05/07/2021 12:56', 'warsokip'),
	('21020501', 'HUTANG LEASING CIMB', '21020000', 1, 4, 2, '05/07/2021 14:55', 'warsokip'),
	('21020600', 'HUTANG BELUM DIFAKTURKAN', '21020000', 0, 4, 2, '', ''),
	('21020601', 'HUTANG BELUM DIFAKTURKAN LOKAL', '21020600', 1, 5, 2, '11/04/2019 11:11', 'trial'),
	('21020602', 'HUTANG BELUM DIFAKTURKAN IMPORT', '21020600', 1, 5, 2, '11/04/2019 11:11', 'trial'),
	('21020700', 'VALUASI HUTANG USAHA', '21020000', 1, 4, 2, '', ''),
	('21030000', 'HUTANG BIAYA', '21000000', 0, 3, 2, '06/02/2019 12:05', 'trial'),
	('21030100', 'HUTANG BIAYA', '21030000', 0, 4, 2, '06/02/2019 12:06', 'trial'),
	('21030101', 'HUTANG BIAYA', '21030100', 1, 5, 2, '06/02/2019 12:11', 'trial'),
	('21030102', 'HUTANG GAJI KARYAWAN', '21030100', 1, 5, 2, '10/12/2020 12:58', 'warsokip'),
	('21030200', 'VALUASI HUTANG PERSERO', '21030000', 0, 4, 2, '', ''),
	('21030201', 'VALUASI HUTANG PERSERO', '21030200', 1, 5, 2, '', ''),
	('21040000', 'HUTANG LAIN-LAIN', '21000000', 0, 3, 2, '', ''),
	('21040100', 'HUTANG DEVIDEND', '21040000', 1, 4, 2, '', ''),
	('21049900', 'HUTANG LAIN-LAIN ', '21040000', 0, 4, 2, '', ''),
	('21049901', 'HUTANG LAIN-LAIN LOKAL AFFILIASI', '21049900', 1, 5, 2, '', ''),
	('21049902', 'HUTANG LAIN-LAIN LOKAL', '21049900', 1, 5, 2, '', ''),
	('21049903', 'HUTANG LAIN-LAIN IMPOR AFFILIASI', '21049900', 1, 5, 2, '', ''),
	('21049904', 'HUTANG LAIN-LAIN IMPORT', '21049900', 1, 5, 2, '', ''),
	('21049905', 'HUTANG PIHAK KETIGA', '21049900', 1, 5, 2, '29/10/2019 09:50', 'trial'),
	('21049906', 'HPS', '21049900', 1, 5, 2, '29/10/2019 09:50', 'trial'),
	('21049999', 'VALUASI HUTANG LAIN-LAIN', '21049900', 1, 5, 2, '', ''),
	('21050000', 'HUTANG PAJAK', '21000000', 0, 3, 2, '', ''),
	('21050100', 'HUTANG PAJAK PERTAMBAHAN NILAI', '21050000', 0, 4, 2, '', ''),
	('21050101', 'PPN KELUARAN', '21050100', 1, 5, 2, '', ''),
	('21050102', 'PPN KELUARAN BELUM DIFAKTURKAN', '21050100', 1, 5, 2, '', ''),
	('21050103', 'PPN YANG TIDAK DIPUNGUT/DIBEBASKAN', '21050100', 1, 5, 2, '', ''),
	('21050104', 'PPN YANG DIPUNGUT OLEH PEMUNGUT SSP BELUM DITERIMA', '21050100', 1, 5, 2, '', ''),
	('21050105', 'PPN DITANGGUNG PEMERINTAH ', '21050100', 1, 5, 2, '', ''),
	('21060200', 'HUTANG PAJAK PENGHASILAN ', '21050000', 0, 4, 2, '', ''),
	('21060201', 'PPH PS 21', '21060200', 1, 5, 2, '', ''),
	('21060202', 'PPH PS 23', '21060200', 1, 5, 2, '', ''),
	('21060203', 'PPH PS 4 AYAT 2', '21060200', 1, 5, 2, '', ''),
	('21060204', 'PPH PS 25-29', '21060200', 1, 5, 2, '08/02/2019 13:05', 'trial'),
	('21060205', 'PPH PS 26', '21060200', 1, 5, 2, '', ''),
	('21060206', 'PPH PS 29', '21060200', 1, 5, 2, '', ''),
	('21060207', 'PPH PS 15', '21060200', 1, 5, 2, '', ''),
	('21060208', 'PPH PS 22', '21060200', 1, 5, 2, '', ''),
	('21070000', 'UANG MUKA PELANGGAN', '21000000', 0, 3, 2, '', ''),
	('21070100', 'PELANGGAN LOKAL', '21070000', 0, 4, 2, '', ''),
	('21070101', 'UM PELANGGAN-PENJUALAN LOKAL', '21070100', 1, 5, 2, '08/02/2019 13:03', 'trial'),
	('21070102', 'UM PELANGGAN-LOKAL BLM FAKTUR AFFILIASI', '21070100', 1, 5, 2, '', ''),
	('21070103', 'UM PELANGGAN-LOKAL PIHAK KETIGA', '21070100', 1, 5, 2, '', ''),
	('21070104', 'UM PELANGGAN-LOKAL BLM FAKTUR PIHAK KETIGA', '21070100', 1, 5, 2, '', ''),
	('21070200', 'PELANGGAN EXPORT', '21070000', 0, 4, 2, '', ''),
	('21070201', 'UM PELANGGAN-EXPORT', '21070200', 1, 5, 2, '', ''),
	('21070202', 'UM PELANGGAN-EXPORT BLM FAKTUR', '21070200', 1, 5, 2, '', ''),
	('21070203', 'UM PELANGGAN-EXPORT LAINNYA', '21070200', 1, 5, 2, '', ''),
	('21070204', 'UM PELANGGAN-EXPORT BLM FAKTUR LAINNYA', '21070200', 1, 5, 2, '', ''),
	('21080000', 'BIAYA YANG MASIH HARUS DI BAYAR', '21000000', 0, 3, 2, '', ''),
	('21080100', 'BUNGA PINJAMAN', '21080000', 0, 4, 2, '', ''),
	('21080101', 'BIAYA YG MSH DIBYR-BUNGA PINJAMAN AFFILIASI', '21080100', 1, 5, 2, '11/01/2022 09:21', 'warsokip'),
	('21080199', 'VALUASI HUTANG BUNGA PINJAMAN-USD', '21080100', 1, 5, 2, '', ''),
	('21080200', 'GAJI DAN UPAH', '21080000', 0, 4, 2, '', ''),
	('21080201', 'BIAYA YG MSH HRS DIBYR-GAJI DAN UPAH', '21080200', 1, 5, 2, '', ''),
	('21080202', 'BIAYA YG MSH HRS DIBYR-SPSI', '21080200', 1, 5, 2, '', ''),
	('21080203', 'BIAYA YG MSH HRS DIBYR-ASTEK', '21080200', 1, 5, 2, '', ''),
	('21080204', 'BIAYA YG MSH HRS DIBYR-ASKES', '21080200', 1, 5, 2, '', ''),
	('21080205', 'BIAYA YG MSH HRS DIBYR-ASURANSI JIWA', '21080200', 1, 5, 2, '', ''),
	('21080300', 'SEWA GEDUNG DAN PERALATAN', '21080000', 0, 4, 2, '', ''),
	('21080301', 'BIAYA YG MSH HRS DIBYR-SEWA GEDUNG DAN PERALATAN', '21080300', 1, 5, 2, '', ''),
	('21080600', 'BIAYA KOMISI', '21080000', 0, 4, 2, '', ''),
	('21080601', 'BIAYA YG MSH HRS DIBYR-BIAYA KOMISI', '21080600', 1, 5, 2, '', ''),
	('21080800', 'BIAYA ASURANSI BARANG', '21080000', 0, 4, 2, '', ''),
	('21080801', 'BIAYA YG MSH HRS DIBYR-ASURANSI BAHAN BAKU', '21080800', 1, 5, 2, '', ''),
	('21080900', 'BIAYA LAIN-LAIN', '21080000', 0, 4, 2, '', ''),
	('21080901', 'BIAYA YG MSH HRS DIBYR-LISTRK & GAS', '21080900', 1, 5, 2, '', ''),
	('21080902', 'BIAYA YG MSH HRS DIBYR-AIR', '21080900', 1, 5, 2, '', ''),
	('21080903', 'BIAYA YG MSH HRS DIBYR-TELEPON/FAX', '21080900', 1, 5, 2, '', ''),
	('21089999', 'BIAYA YG MSH HRS DIBYR-LAIN-LAIN', '21080900', 1, 5, 2, '', ''),
	('21090000', 'HUTANG JANGKA PANJANG YANG JATUH TEMPO', '21000000', 0, 3, 2, '', ''),
	('21091000', 'BANK', '21090000', 0, 4, 2, '', ''),
	('21091100', 'HUTANG JK PANJANG JATUH TEMPO IDR', '21091000', 1, 5, 2, '', ''),
	('21091200', 'HUTANG JK PANJANG JATUH TEMPO USD', '21091000', 1, 5, 2, '', ''),
	('2130103', 'HUTANG BPJS KETENAGAKERJAAN', '21030100', 1, 5, 2, '31/03/2021 08:54', 'warsokip'),
	('2130104', 'HUTANG BPJS KESEHATAN', '21030100', 1, 5, 2, '31/03/2021 08:54', 'warsokip'),
	('22000000', 'KEWAJIBAN TIDAK LANCAR', '20000000', 0, 2, 2, '', ''),
	('22010000', 'KEWAJIBAN JANGKA PANJANG', '22000000', 0, 3, 2, '', ''),
	('22010100', 'KEWAJIBAN JANGKA PANJANG', '22010000', 0, 4, 2, '', ''),
	('22010101', 'HUTANG BANK IDR', '22010100', 1, 5, 2, '', ''),
	('22010102', 'HUTANG BANK USD', '22010100', 1, 5, 2, '', ''),
	('22010200', 'HUTANG BANK JANGKA PANJANG-VALAS', '22010000', 1, 4, 2, '', ''),
	('22010300', 'VALUASI HUTANG BANK JANGKA PANJANG', '22010000', 1, 4, 2, '', ''),
	('22011200', 'BANK', '22010000', 1, 4, 2, '', ''),
	('22020000', 'PAJAK YANG DITANGGUHKAN - PASIVA', '22000000', 1, 3, 2, '', ''),
	('22040000', 'HUTANG JANGKA PANJANG LAIN-LAIN', '22000000', 0, 3, 2, '', ''),
	('22040100', 'HUTANG JANGKA PANJANG LAIN-LAIN-IDR', '22040000', 0, 4, 2, '', ''),
	('22040101', 'HUTANG JANGKA PANJANG LAIN-LAIN-IDR', '22040100', 1, 5, 2, '', ''),
	('22040200', 'HUTANG JANGKA PANJANG LAIN-LAIN-USD', '22040000', 0, 4, 2, '', ''),
	('22040201', 'HUTANG JANGKA PANJANG LAIN-LAIN-USD', '22040200', 1, 5, 2, '', ''),
	('22050000', 'HUTANG KPD PEMEGANG SAHAM', '22000000', 0, 3, 2, '', ''),
	('22050100', 'HUTANG KPD PEMEGANG SAHAM', '22050000', 1, 4, 2, '', ''),
	('22990000', 'KEWAJIBAN TIDAK LANCAR LAIN-LAIN', '22000000', 0, 3, 2, '', ''),
	('22990100', 'UANG JAMINAN PELANGGAN / CUSTOMER SECURITY DEPOSIT', '22990000', 1, 4, 2, '', ''),
	('22990101', 'UANG JAMINAN LAIN-LAIN', '22990000', 1, 4, 2, '04/05/2021 10:35', 'warsokip'),
	('30000000', 'EKUITAS', '', 0, 1, 3, '', ''),
	('31000000', 'MODAL SAHAM', '30000000', 0, 2, 3, '', ''),
	('31010000', 'MODAL SAHAM DITEMPATKAN DAN DISETOR PENUH', '31000000', 0, 3, 3, '', ''),
	('31010100', 'MODAL SAHAM DITEMPATKAN DAN DISETOR PENUH', '31010000', 0, 4, 3, '', ''),
	('31010101', 'MODAL SAHAM DISETOR', '31010100', 1, 5, 3, '08/02/2019 13:18', 'trial'),
	('31010102', 'MODAL SAHAM DITEMPATKAN DAN DISETOR LAINNYA', '31010100', 1, 5, 3, '', ''),
	('31020000', 'MODAL SAHAM YANG DIPESAN', '31000000', 0, 3, 3, '', ''),
	('31020100', 'MODAL SAHAM YANG DIPESAN', '31020000', 0, 4, 3, '', ''),
	('31020101', 'MODAL SAHAM YANG DIPESAN', '31020100', 1, 5, 3, '', ''),
	('31030000', 'PIUTANG KEPADA PEMESAN SAHAM', '31000000', 0, 3, 3, '', ''),
	('31030100', 'PIUTANG KEPADA PEMESAN SAHAM', '31030000', 0, 4, 3, '', ''),
	('31030101', 'PIUTANG KEPADA PEMESAN SAHAM', '31030100', 1, 5, 3, '', ''),
	('31040000', 'TAMBAHAN MODAL DISETOR - AGIO/DISAGIO', '31000000', 0, 3, 3, '', ''),
	('31040100', 'TAMBAHAN MODAL DISETOR - AGIO/DISAGIO', '31040000', 0, 4, 3, '', ''),
	('31040101', 'TAMBAHAN MODAL DISETOR-AGIO/DISAGIO', '31040100', 1, 5, 3, '', ''),
	('31050000', 'SELISIH KURS ATAS MODAL DISETOR', '31000000', 0, 3, 3, '', ''),
	('31050100', 'SELISIH KURS ATAS MODAL DISETOR', '31050000', 0, 4, 3, '', ''),
	('31050101', 'SELISIH KURS ATAS MODAL DISETOR', '31050100', 1, 5, 3, '', ''),
	('31090000', 'KOMPONEN EKUITAS LAINNYA', '31000000', 0, 3, 3, '', ''),
	('31090100', 'PENDAPATAN KOMPREHENSIF LAIN-LAIN', '31090000', 0, 4, 3, '', ''),
	('31090101', 'PENDAPATAN KOMPREHENSIF LAIN-LAIN', '31090100', 1, 5, 3, '', ''),
	('32000000', 'SALDO LABA/RUGI DITAHAN', '30000000', 0, 2, 3, '', ''),
	('32010000', 'LABA DITAHAN TAHUN LALU', '32000000', 0, 3, 3, '', ''),
	('32010100', 'LABA DITAHAN TAHUN LALU', '32010000', 0, 4, 3, '', ''),
	('32010101', 'LABA DITAHAN TAHUN LALU', '32010100', 1, 5, 3, '', ''),
	('32020000', 'KOREKSI POS-POS TAHUN LALU', '32000000', 0, 3, 3, '', ''),
	('32020100', 'KOREKSI POS-POS TAHUN LALU', '32020000', 0, 4, 3, '', ''),
	('32020101', 'KOREKSI POS-POS TAHUN LALU', '32020100', 1, 5, 3, '', ''),
	('32030000', 'LABA RUGI TAHUN BERJALAN', '32000000', 0, 3, 3, '', ''),
	('32030100', 'LABA RUGI TAHUN BERJALAN', '32030000', 0, 4, 3, '', ''),
	('32030101', 'RUGI LABA TAHUN BERJALAN', '32030100', 1, 5, 3, '', ''),
	('32050000', 'DEVIDEN', '32000000', 0, 3, 3, '', ''),
	('32050100', 'DEVIDEN TUNAI (DIVIDEND CASH)', '32050000', 0, 4, 3, '', ''),
	('32050101', 'DEVIDEN TUNAI / CASH DIVIDEND', '32050100', 1, 5, 3, '', ''),
	('32050200', 'DEVIDEN SAHAM (DIVIDEND STOCK)', '32050000', 0, 4, 3, '', ''),
	('32050201', 'DEVIDEN SAHAM/ STOCK DIVIDEND', '32050200', 1, 5, 3, '', ''),
	('32099000', 'HISTORICAL BALANCING', '32000000', 1, 3, 3, '12/03/2019 09:08', 'trial'),
	('40000000', 'PENJUALAN', '', 0, 1, 4, '', ''),
	('41000000', 'PENJUALAN', '40000000', 0, 2, 4, '', ''),
	('41010000', 'PENJUALAN LOKAL', '41000000', 0, 3, 4, '', ''),
	('41010100', 'PENJUALAN LOKAL', '41010000', 1, 4, 4, '', ''),
	('41010200', 'PENJUALAN LOKAL PIHAK KETIGA', '41010000', 1, 4, 4, '', ''),
	('41020000', 'PENJUALAN EXPORT', '41000000', 0, 3, 4, '', ''),
	('41020100', 'PENJUALAN EXPORT', '41020000', 1, 4, 4, '', ''),
	('41020200', 'PENJUALAN EXPORT LAINNYA', '41020000', 1, 4, 4, '', ''),
	('41030000', 'PENJUALAN JASA LOKAL', '41000000', 0, 3, 4, '25/02/2021 08:13', 'warsokip'),
	('41030100', 'PENJUALAN JASA LOKAL', '41030000', 1, 4, 4, '25/02/2021 08:12', 'warsokip'),
	('41030200', 'PENJUALAN JASA LOKAL PIHAK KETIGA', '41030000', 1, 4, 4, '25/02/2021 08:19', 'warsokip'),
	('41040000', 'PENJUALAN JASA EXPORT', '41000000', 0, 3, 4, '30/11/2021 13:48', 'it'),
	('41040100', 'PENJUALAN JASA EXPORT', '41040000', 1, 4, 4, '25/02/2021 08:19', 'warsokip'),
	('41040200', 'PENJUALAN JASA EXPORT LAINNYA', '41040000', 1, 4, 4, '25/02/2021 08:20', 'warsokip'),
	('42000000', 'POTONGAN PENJUALAN', '40000000', 0, 2, 4, '', ''),
	('42010000', 'POTONGAN PENJUALAN LOKAL', '42000000', 0, 3, 4, '', ''),
	('42010100', 'POTONGAN PENJUALAN LOKAL - AFFILIASI', '42010000', 1, 4, 4, '', ''),
	('42010200', 'POTONGAN PENJUALAN LOKAL - PIHAK KETIGA', '42010000', 1, 4, 4, '', ''),
	('42020000', 'POTONGAN PENJUALAN EXPORT', '42000000', 0, 3, 4, '', ''),
	('42020100', 'POTONGAN PENJUALAN EXPORT - AFFILIASI', '42020000', 1, 4, 4, '', ''),
	('42020200', 'POTONGAN PENJUALAN EXPORT - PIHAK KETIGA', '42020000', 1, 4, 4, '', ''),
	('43000000', 'RETUR PENJUALAN', '40000000', 0, 2, 4, '', ''),
	('43010000', 'RETUR PENJUALAN LOKAL', '43000000', 0, 3, 4, '', ''),
	('43010100', 'RETUR PENJUALAN LOKAL', '43010000', 1, 4, 4, '', ''),
	('43010200', 'RETUR PENJUALAN LOKAL - PIHAK KETIGA', '43010000', 1, 4, 4, '', ''),
	('43020000', 'RETUR PENJUALAN EXPORT', '43000000', 0, 3, 4, '', ''),
	('43020100', 'RETUR PENJUALAN EXPORT', '43020000', 1, 4, 4, '', ''),
	('43020200', 'RETUR PENJUALAN EXPORT - PIHAK KETIGA', '43020000', 1, 4, 4, '', ''),
	('49000000', 'KOREKSI PENJUALAN', '40000000', 0, 2, 4, '', ''),
	('49010000', 'KOREKSI PENJUALAN', '49000000', 1, 3, 4, '', ''),
	('50000000', 'HARGA POKOK PENJUALAN DAN HARGA POKOK PRODUKSI', '', 0, 1, 5, '', ''),
	('51000000', 'HARGA POKOK PENJUALAN', '50000000', 0, 2, 5, '', ''),
	('51010000', 'HARGA POKOK PENJUALAN LOKAL', '51000000', 0, 3, 5, '', ''),
	('51010100', 'HARGA POKOK PENJUALAN LOKAL BARANG JADI', '51010000', 1, 4, 5, '', ''),
	('51010200', 'HARGA POKOK PENJUALAN LOKAL BAHAN BAKU', '51010000', 1, 4, 5, '', ''),
	('51019900', 'HARGA POKOK PENJUALAN LOKAL BARANG LAIN-LAIN', '51010000', 1, 4, 5, '', ''),
	('51020000', 'HARGA POKOK PENJUALAN EXPORT', '51000000', 0, 3, 5, '', ''),
	('51020100', 'HARGA POKOK PENJUALAN EXPORT BARANG JADI', '51020000', 1, 4, 5, '', ''),
	('51020200', 'HARGA POKOK PENJUALAN EXPORT BAHAN BAKU', '51020000', 1, 4, 5, '', ''),
	('51029900', 'HARGA POKOK PENJUALAN EXPORT BARANG LAIN-LAIN', '51020000', 1, 4, 5, '', ''),
	('51030000', 'HARGA POKOK PENYESUAIAN', '51000000', 0, 3, 5, '', ''),
	('51030100', 'HARGA POKOK PENYESUAIAN-VARIANT BRG JADI ', '51030000', 1, 4, 5, '', ''),
	('51030200', 'HARGA POKOK PENYESUAIAN-OVER UNDER SETTLEMENT ', '51030000', 1, 4, 5, '', ''),
	('51030300', 'HARGA POKOK PENYESUAIAN-KOREKSI', '51030000', 1, 4, 5, '', ''),
	('51041000', 'HARGA POKOK PENJUALAN LOKAL BELUM FAKTUR', '51000000', 0, 3, 5, '18-05-2020 14:26', 'it'),
	('51041001', 'HARGA POKOK PENJUALAN LOKAL BELUM FAKTUR', '51041000', 1, 4, 5, '18-05-2020 14:26', 'it'),
	('51042000', 'HARGA POKOK PENJUALAN EKSPOR BLM FAKTUR', '51000000', 0, 3, 5, '18-05-2020 14:27', 'it'),
	('51042001', 'HARGA POKOK PENJUALAN EKSPOR BLM FAKTUR', '51042000', 1, 4, 5, '18-05-2020 14:27', 'it'),
	('52000000', 'HARGA POKOK PRODUKSI (HPPR)', '50000000', 0, 2, 5, '', ''),
	('52010000', 'HPPR-PEMAKAIAN BAHAN BAKU', '52000000', 1, 3, 5, '', ''),
	('52020000', 'HPPR-PEMAKAIAN BAHAN KEMASAN', '52000000', 1, 3, 5, '', ''),
	('52030000', 'HPPR-PEMAKAIAN BARANG DALAM PROSES ', '52000000', 1, 3, 5, '10/11/2021 15:30', 'warsokip'),
	('52040000', 'HPPR-PEMAKAIAN BARANG JADI ', '52000000', 1, 3, 5, '', ''),
	('52050000', 'HPPR-BIAYA TENAGA KERJA LANGSUNG (BTKL)', '52000000', 1, 3, 5, '', ''),
	('52060000', 'HPPR-BEBAN KONVERSI-OVERHEAD PABRIK ( BKOP )', '52000000', 1, 3, 5, '', ''),
	('52070000', 'HPPR-BEBAN KONVERSI-OVH PABRIK ( BKOP ) YG DITERAP', '52000000', 1, 3, 5, '', ''),
	('52080000', 'HPPR BEBAN KONV-OVH PABRIK (BKOP) SBLM ALOK-ACTUAL', '52000000', 0, 3, 5, '', ''),
	('52080100', 'HPPR BKOP SA-BIAYA GAJI DAN TUNJANGAN STAFF', '52080000', 1, 4, 5, '', ''),
	('52080200', 'HPPR BKOP SA-BIAYA UPAH & TUNJANGAN NON STAFF', '52080000', 1, 4, 5, '', ''),
	('52080300', 'HPPR BKOP SA-BIAYA ASURANSI', '52080000', 1, 4, 5, '', ''),
	('52080400', 'HPPR BKOP SA-BIAYA UTILITAS', '52080000', 1, 4, 5, '', ''),
	('52080500', 'HPPR BKOP SA-OFFICE SUPPLIES (PERLENGKAP KANTOR)', '52080000', 1, 4, 5, '', ''),
	('52080600', 'HPPR BKOP SA-FACTORY SUPPLIES/SPARE PART PABRIK ', '52080000', 1, 4, 5, '', ''),
	('52080700', 'HPPR BKOP SA-PERJALANAN DINAS', '52080000', 1, 4, 5, '', ''),
	('52080800', 'HPPR BKOP SA-BAHAN BAKAR', '52080000', 1, 4, 5, '', ''),
	('52080900', 'HPPR BKOP SA-PEMELIHARAAN AKTIVA TETAP PABRIK', '52080000', 1, 4, 5, '', ''),
	('52081000', 'HPPR BKOP SA-BIAYA PENYUSUTAN AKTIVA TETAP PABRIK', '52080000', 1, 4, 5, '', ''),
	('52081100', 'HPPR BKOP SA-SEWA', '52080000', 1, 4, 5, '', ''),
	('52081200', 'HPPR BKOP SA-PEMBELIAN IMPORT', '52080000', 1, 4, 5, '', ''),
	('52081300', 'HPPR-BKOP SA-AMORTISASI', '52080000', 1, 4, 5, '', ''),
	('52081400', 'HPPR BKOP SA-KESEJAHTERAAN KARYAWAN', '52080000', 1, 4, 5, '', ''),
	('52081500', 'HPPR BKOP SA-ANGKUTAN PEMBELIAN', '52080000', 1, 4, 5, '', ''),
	('52081600', 'HPPR BKOP SA-BIAYA PAJAK', '52080000', 1, 4, 5, '', ''),
	('52081700', 'HPPR BKOP SA-REPRESENTASI', '52080000', 1, 4, 5, '', ''),
	('52081800', 'HPPR BKOP SA-LAIN-LAIN', '52080000', 0, 4, 5, '', ''),
	('52089999', 'HPPR BKOP SA-LAIN-LAIN (PMD)', '52081800', 1, 5, 5, '10/11/2021 15:51', 'warsokip'),
	('52090000', 'HPPR-PEMAKAIAN BARANG PROMOSI DAN HADIAH', '52000000', 0, 3, 5, '', ''),
	('52090100', 'HPPR-PEMAKAIAN BARANG PROMOSI DAN HADIAH DIBELI', '52090000', 1, 4, 5, '', ''),
	('52100000', 'HPPR-PEMAKAIAN BAHAN BAKU SETENGAH JADI', '52000000', 0, 3, 5, '', ''),
	('52100001', 'HPPR-PEMAKAIAN BAHAN BAKU SETENGAH JADI DIBELI', '52100000', 1, 4, 5, '', ''),
	('52100002', 'HPPR-PEMAKAIAN BAHAN BAKU SETENGAH JADI DIPRODUKSI', '52100000', 1, 4, 5, '', ''),
	('60000000', 'BIAYA USAHA', '', 0, 1, 6, '', ''),
	('61000000', 'BIAYA USAHA', '60000000', 0, 2, 6, '', ''),
	('61010000', 'BIAYA PABRIKASI', '61000000', 0, 3, 6, '', ''),
	('61010100', 'BIAYA PABRIKASI', '61010000', 0, 4, 6, '', ''),
	('61010101', 'POTONGAN PEMBELIAN', '61010100', 1, 5, 6, '', ''),
	('61010102', 'BY PENGIRIMAN BARANG', '61010100', 1, 5, 6, '', ''),
	('61010103', 'BEBAN TENAGA KERJA LANGSUNG', '61010100', 1, 5, 6, '', ''),
	('61010104', 'GAJI KARYAWAN PRODUKSI', '61010100', 1, 5, 6, '20/01/2021 14:34', 'warsokip'),
	('61010105', 'UANG MAKAN KARYAWAN PRODUKSI', '61010100', 1, 5, 6, '20/01/2021 14:34', 'warsokip'),
	('61010106', 'LEMBUR KARYAWAN PRODUKSI', '61010100', 1, 5, 6, '20/01/2021 14:34', 'warsokip'),
	('61010107', 'PREMI KARYAWAN', '61010100', 1, 5, 6, '', ''),
	('61010108', 'THR KARYAWAN PRODUKSI', '61010100', 1, 5, 6, '20/01/2021 14:34', 'warsokip'),
	('61010109', 'TRANSPORT KARYAWAN', '61010100', 1, 5, 6, '', ''),
	('61010110', 'PENGOBATAN KARYAWAN PRODUKSI', '61010100', 1, 5, 6, '26/01/2021 13:41', 'warsokip'),
	('61010111', 'GAJI BORONGAN', '61010100', 1, 5, 6, '', ''),
	('61010112', 'ASTEK KARYAWAN', '61010100', 1, 5, 6, '21/01/2021 15:10', 'warsokip'),
	('61010112A', 'BPJS KETENAGAKERJAAN', '61010100', 1, 5, 6, '21/01/2021 15:13', 'warsokip'),
	('61010112B', 'BPJS KESEHATAN', '61010100', 1, 5, 6, '20/01/2021 14:44', 'warsokip'),
	('61010113', 'ES BATU', '61010100', 1, 5, 6, '', ''),
	('61010114', 'AIR', '61010100', 1, 5, 6, '', ''),
	('61010115', 'LISTRIK', '61010100', 1, 5, 6, '', ''),
	('61010116', 'LABORATORIUM', '61010100', 1, 5, 6, '', ''),
	('61010117', 'PEMELIHARAAN MESIN', '61010100', 1, 5, 6, '', ''),
	('61010118', 'PEMELIHARAAN INV PABRIK', '61010100', 1, 5, 6, '', ''),
	('61010119', 'PEMELIHARAAN COLDSTORAGE', '61010100', 1, 5, 6, '', ''),
	('61010120', 'PEMELIHARAAN INS LISTRIK', '61010100', 1, 5, 6, '', ''),
	('61010121', 'PACKAGING', '61010100', 1, 5, 6, '', ''),
	('61010122', 'EMBALASE', '61010100', 1, 5, 6, '', ''),
	('61010123', 'INGREDIENT', '61010100', 1, 5, 6, '', ''),
	('61010124', 'PERLENGKAPAN KERJA', '61010100', 1, 5, 6, '', ''),
	('61010125', 'BAHAN BAKAR & GENSET', '61010100', 1, 5, 6, '', ''),
	('61010126', 'ALAT TULIS & PERC PROD', '61010100', 1, 5, 6, '', ''),
	('61010127', 'KONSUMSI KARY PRODUKSI', '61010100', 1, 5, 6, '', ''),
	('61010128', 'BENGKEL', '61010100', 1, 5, 6, '', ''),
	('61010129', 'PERLENGKAPAN KERJA IKAN', '61010100', 1, 5, 6, '', ''),
	('61010130', 'SPAREPART', '61010100', 1, 5, 6, '', ''),
	('61010131', 'OVERHEAD LAINNYA', '61010100', 1, 5, 6, '', ''),
	('61010132', 'PEMELIHARAAN MESIN IKAN', '61010100', 1, 5, 6, '', ''),
	('61010133', 'PEMELIHARAAN INV PABRIK IKAN', '61010100', 1, 5, 6, '', ''),
	('61010134', 'BAHAN BAKU', '61010100', 1, 5, 6, '06/01/2022 09:37', 'warsokip'),
	('61010135', 'BEBAN PENSIUN KARYAWAN PRODUKSI', '61010100', 1, 5, 6, '01/02/2021 12:52', 'warsokip'),
	('61010136', 'SEWA TANAH', '61010100', 1, 5, 6, '22/02/2021 14:01', 'warsokip'),
	('61010137', 'BEBAN JASA BAHAN BAKU', '61010100', 1, 5, 6, '06/01/2022 09:38', 'warsokip'),
	('61010138', 'BEBAN PENGHAPUSAN PERSEDIAAN (HPP)', '61010100', 1, 5, 6, '06/01/2022 09:38', 'warsokip'),
	('61020000', 'BIAYA PENJUALAN', '61000000', 0, 3, 6, '', ''),
	('61020100', 'BIAYA PENJUALAN', '61020000', 0, 4, 6, '', ''),
	('61020101', 'ADVERTENSI & PROMOSI ', '61020100', 1, 5, 6, '', ''),
	('61020102', 'BANK EXPORT', '61020100', 1, 5, 6, '', ''),
	('61020103', 'PROVISI EXPORT', '61020100', 1, 5, 6, '', ''),
	('61020104', 'KOMISI EXPORT', '61020100', 1, 5, 6, '', ''),
	('61020105', 'EMKL', '61020100', 1, 5, 6, '', ''),
	('61020106', 'IMPORT', '61020100', 1, 5, 6, '', ''),
	('61020107', 'STUFFING', '61020100', 1, 5, 6, '', ''),
	('61020108', 'KLAIM EXPORT', '61020100', 1, 5, 6, '', ''),
	('61020109', 'DOKUMEN EXPORT', '61020100', 1, 5, 6, '', ''),
	('61020110', 'FREIGHT', '61020100', 1, 5, 6, '', ''),
	('61030000', 'BIAYA UMUM & ADMINISTRASI', '61000000', 0, 3, 6, '', ''),
	('61030100', 'BIAYA UMUM & ADMINISTRASI', '61030000', 0, 4, 6, '', ''),
	('61030101', 'GAJI KARYAWAN', '61030100', 1, 5, 6, '', ''),
	('61030102', 'THR KARYAWAN', '61030100', 1, 5, 6, '', ''),
	('61030103', 'SAMPLING', '61030100', 1, 5, 6, '', ''),
	('61030104', 'PERJALANAN DINAS', '61030100', 1, 5, 6, '', ''),
	('61030105', 'UANG MAKAN KARYAWAN', '61030100', 1, 5, 6, '25/01/2021 11:14', 'warsokip'),
	('61030106', 'ADMINISTRASI KANTOR', '61030100', 1, 5, 6, '', ''),
	('61030107', 'ALAT TULIS & PERCETAKAN', '61030100', 1, 5, 6, '19-03-2020 20:25', 'it'),
	('61030108', 'BAHAN BAKAR', '61030100', 1, 5, 6, '', ''),
	('61030109', 'TELEPON, TELEX, INTERNET DLL', '61030100', 1, 5, 6, '30/06/2021 09:17', 'warsokip'),
	('61030110', 'PAJAK', '61030100', 1, 5, 6, '', ''),
	('61030111', 'PARKIR, TOL & RETRIBUSI', '61030100', 1, 5, 6, '', ''),
	('61030112', 'KIRIM DOKUMEN & SURAT', '61030100', 1, 5, 6, '', ''),
	('61030113', 'REP & ENTERTAINMENT', '61030100', 1, 5, 6, '', ''),
	('61030114', 'PENGOBATAN KARYAWAN', '61030100', 1, 5, 6, '', ''),
	('61030115', 'SEWA GEDUNG', '61030100', 1, 5, 6, '', ''),
	('61030116', 'ASURANSI', '61030100', 1, 5, 6, '', ''),
	('61030117', 'PROFESIONAL FEE', '61030100', 1, 5, 6, '04/08/2021 16:59', 'warsokip'),
	('61030118', 'PAKAIAN DINAS KERJA', '61030100', 1, 5, 6, '', ''),
	('61030119', 'PEMELIHARAAN INV KANTOR', '61030100', 1, 5, 6, '', ''),
	('61030120', 'PEMELIHARAAN KENDARAAN', '61030100', 1, 5, 6, '', ''),
	('61030121', 'PEMELIHARAAN BANGUNAN', '61030100', 1, 5, 6, '', ''),
	('61030122', 'TRANSPORTASI KARYAWAN', '61030100', 1, 5, 6, '', ''),
	('61030123', 'SUMBANGAN', '61030100', 1, 5, 6, '', ''),
	('61030124', 'IJIN - IJIN & IURAN', '61030100', 1, 5, 6, '', ''),
	('61030125', 'OUTSOURCHING', '61030100', 1, 5, 6, '31/01/2019 18:01', 'trial'),
	('61030126', 'AMORTISASI PRA OPERASIONAL', '61030100', 1, 5, 6, '', ''),
	('61030127', 'FOTOCOPY', '61030100', 1, 5, 6, '', ''),
	('61030128', 'LAIN - LAIN', '61030100', 1, 5, 6, '', ''),
	('61030129', 'PAJAK PENGHASILAN', '61030100', 1, 5, 6, '', ''),
	('61030130', 'PEMELIHARAAN BANGUNAN IKAN', '61030100', 1, 5, 6, '', ''),
	('61030131', 'PELATIHAN & TRAINING', '61030100', 1, 5, 6, '', ''),
	('61030132', 'PENYUSUTAN BANGUNAN', '61030100', 1, 5, 6, '', ''),
	('61030133', 'PENYUSUTAN MESIN & PERALATAN', '61030100', 1, 5, 6, '', ''),
	('61030134', 'PENYUSUTAN INVENTARIS', '61030100', 1, 5, 6, '', ''),
	('61030135', 'PENYUSUTAN KENDARAAN', '61030100', 1, 5, 6, '', ''),
	('61030136', 'PENYUSUTAN HARTA LAINNYA', '61030100', 1, 5, 6, '', ''),
	('61030137', 'AMORTISASI PRA OPERASI DAN OPREASI', '61030100', 1, 5, 6, '', ''),
	('61030138', 'PENGHAPUSAN PERSEDIAAN', '61030100', 1, 5, 6, '15/05/2020 14:07', 'it'),
	('61030139A', 'BPJS KETENAGAKERJAAN UMUM', '61030100', 1, 5, 6, '01/02/2021 12:52', 'warsokip'),
	('61030139B', 'BPJS KESEHATAN UMUM', '61030100', 1, 5, 6, '01/02/2021 12:52', 'warsokip'),
	('61030140', 'KONSUMSI UMUM', '61030100', 1, 5, 6, '31/07/2020 17:00', 'warsokip'),
	('61030141', 'BEBAN PENSIUN KARYAWAN UMUM', '61030100', 1, 5, 6, '01/02/2021 12:52', 'warsokip'),
	('61030142', 'BEBAN CATERING', '61030100', 1, 5, 6, '03/02/2021 16:24', 'warsokip'),
	('61030143', 'BEBAN PAJAK', '61030100', 1, 5, 6, '03/11/2021 16:26', 'warsokip'),
	('61030144', 'BIAYA LIMBAH (B3)', '61030100', 1, 5, 6, '29/11/2021 13:44', 'warsokip'),
	('61030145', 'BIAYA KIRIM BARANG', '61030100', 1, 5, 6, '09/12/2021 10:09', 'warsokip'),
	('70000000', 'PENDAPATAN DAN BIAYA LAIN-LAIN', '', 0, 1, 7, '', ''),
	('71000000', 'PENDAPATAN LAIN-LAIN', '70000000', 0, 2, 7, '', ''),
	('71010000', 'LABA SELISIH KURS', '71000000', 0, 3, 7, '', ''),
	('71010100', 'LABA SELISIH KURS PIUTANG DAGANG', '71010000', 1, 4, 7, '', ''),
	('71010200', 'LABA SELISIH KURS HUTANG DAGANG', '71010000', 1, 4, 7, '', ''),
	('71010300', 'LABA SELISIH KURS PINJAMAN DALAM NEGERI', '71010000', 1, 4, 7, '', ''),
	('71010400', 'LABA SELISIH KURS PINJAMAN LUAR NEGERI', '71010000', 1, 4, 7, '', ''),
	('71010500', 'LABA SELISIH KURS KAS DAN SETARA KAS', '71010000', 1, 4, 7, '', ''),
	('71010600', 'LABA SELISIH KURS DEPOSITO ', '71010000', 1, 4, 7, '', ''),
	('71010700', 'LABA SELISIH KURS HUTANG BY BUNGA PINJAMAN', '71010000', 1, 4, 7, '', ''),
	('71010800', 'LABA SELISIH KURS BUNGA PPH PS 26', '71010000', 1, 4, 7, '', ''),
	('71010900', 'LABA SELISIH KURS HUTANG PERSERO', '71010000', 1, 4, 7, '', ''),
	('71011000', 'LABA SELISIH KURS JASA PPH PS 26', '71010000', 1, 4, 7, '', ''),
	('71019900', 'LABA SELISIH KURS LAIN-LAIN', '71010000', 1, 4, 7, '', ''),
	('71020000', 'LABA DARI PENJUALAN AKTIVA TETAP', '71000000', 1, 3, 7, '', ''),
	('71030000', 'PENDAPATAN BUNGA', '71000000', 0, 3, 7, '', ''),
	('71030100', 'PENDAPATAN BUNGA JASA GIRO BANK', '71030000', 1, 4, 7, '', ''),
	('71030200', 'PENDAPATAN BUNGA DEPOSITO BANK', '71030000', 1, 4, 7, '', ''),
	('71030900', 'PENDAPATAN BUNGA LAIN-LAIN', '71030000', 1, 4, 7, '', ''),
	('71040000', 'PENDAPATAN BUNGA-PAJAK', '71000000', 0, 3, 7, '', ''),
	('71040100', 'PENDAPATAN BUNGA JASA GIRO BANK-PAJAK', '71040000', 0, 4, 7, '', ''),
	('71040101', 'BIAYA PAJAK BUNGA JASA GIRO BANK', '71040100', 1, 5, 7, '', ''),
	('71040200', 'PENDAPATAN BUNGA DEPOSITO BANK-PAJAK', '71040000', 0, 4, 7, '', ''),
	('71040201', 'BIAYA PAJAK BUNGA DEPOSITO BANK', '71040200', 1, 5, 7, '', ''),
	('71990000', 'PENDAPATAN LAIN-LAIN', '71000000', 0, 3, 7, '', ''),
	('71990100', 'PENDAPATAN DEVIDEN', '71990000', 0, 4, 7, '', ''),
	('71990101', 'PENDAPATAN LAIN-LAIN-PENDAPATAN DEVIDEN', '71990100', 1, 5, 7, '', ''),
	('71990200', 'PENDAPATAN DI LUAR USAHA', '71990000', 1, 4, 7, '', ''),
	('71990300', 'SELISIH DARI PEMBULATAN', '71990000', 1, 4, 7, '', ''),
	('71990400', 'PENDAPATAN KLAIM ASURANSI', '71990000', 1, 4, 7, '', ''),
	('71990500', 'PENDAPATAN KLAIM LAIN-LAIN', '71990000', 1, 4, 7, '', ''),
	('71990600', 'BIAYA/PENDAPATAN LAIN-LAIN PENGHAPUSAN AKT TETAP', '71990000', 1, 4, 7, '', ''),
	('71990700', 'PENDAPATAN AFALAN RAW MATERIAL', '71990000', 1, 4, 7, '', ''),
	('71999900', 'PENDAPATAN LAIN-LAIN', '71990000', 0, 4, 7, '', ''),
	('71999999', 'PENDAPATAN LAIN-LAIN-PENDAPATAN LAIN-LAIN', '71999900', 1, 5, 7, '', ''),
	('72000000', 'BIAYA LAIN-LAIN', '70000000', 0, 2, 7, '', ''),
	('72010000', 'RUGI SELISIH KURS', '72000000', 0, 3, 7, '', ''),
	('72010100', 'RUGI SELISIH KURS PENJUALAN EKSPOR', '72010000', 1, 4, 7, '10/01/2020 17:34', 'leffi'),
	('72010200', 'RUGI SELISIH KURS HUTANG DAGANG', '72010000', 1, 4, 7, '', ''),
	('72010300', 'RUGI SELISIH KURS PINJAMAN DALAM NEGERI', '72010000', 1, 4, 7, '', ''),
	('72010400', 'RUGI SELISIH KURS PINJAMAN LUAR NEGERI', '72010000', 1, 4, 7, '', ''),
	('72010500', 'RUGI SELISIH KURS KAS DAN SETARA KAS', '72010000', 1, 4, 7, '', ''),
	('72010600', 'RUGI SELISIH KURS DEPOSITO', '72010000', 1, 4, 7, '', ''),
	('72010700', 'RUGI SELISIH KURS HUTANG BUNGA PINJAMAN', '72010000', 1, 4, 7, '', ''),
	('72010800', 'RUGI SELISIH KURS BUNGA PPH PS 26 ', '72010000', 1, 4, 7, '', ''),
	('72010900', 'RUGI SELISIH KURS HUTANG PERSERO', '72010000', 1, 4, 7, '', ''),
	('72019900', 'RUGI SELISIH KURS LAIN-LAIN', '72010000', 1, 4, 7, '', ''),
	('72020000', 'RUGI DARI PENJUALAN AKTIVA TETAP', '72000000', 0, 3, 7, '', ''),
	('72020100', 'RUGI DARI PENJUALAN AKTIVA TETAP', '72020000', 1, 4, 7, '', ''),
	('72030000', 'BUNGA DAN BIAYA BANK ', '72000000', 0, 3, 7, '', ''),
	('72030100', 'BUNGA PINJAMAN DALAM NEGERI', '72030000', 1, 4, 7, '', ''),
	('72030200', 'BUNGA PINJAMAN LUAR NEGRI', '72030000', 1, 4, 7, '', ''),
	('72030300', 'AMORTISASI BIAYA KEUANGAN', '72030000', 0, 4, 7, '', ''),
	('72030301', 'B.ADM-AMORTISASI BIAYA KEUANGAN', '72030300', 1, 5, 7, '', ''),
	('72030400', 'BEBAN ADM BANK DAN PROVISI KREDIT', '72030000', 1, 4, 7, '13/05/2019 12:49', 'trial'),
	('72030500', 'BEBAN BANK EKSPORT', '72030000', 1, 4, 7, '26/01/2021 10:32', 'warsokip'),
	('72030600', 'BEBAN BUNGA LEASING', '72030000', 1, 4, 7, '10/08/2021 10:27', 'warsokip'),
	('72030900', 'BUNGA LAIN-LAIN', '72030000', 0, 4, 7, '', ''),
	('72030901', 'BUNGA LAIN-LAIN', '72030900', 1, 5, 7, '', ''),
	('72990000', 'BIAYA LAIN-LAIN', '72000000', 0, 3, 7, '', ''),
	('72990100', 'PAYROLL CLEARING ACCOUNT ( PCA )', '72990000', 0, 4, 7, '', ''),
	('72990101', 'PAYROLL CLEARING ACCOUNT', '72990100', 1, 5, 7, '', ''),
	('72990300', 'BIAYA PAJAK (KEKURANGAN TAHUN YANG LALU)', '72990000', 0, 4, 7, '', ''),
	('72990301', 'BIAYA PAJAK (KEKURANGAN TAHUN YANG LALU)', '72990300', 1, 5, 7, '', ''),
	('72990400', 'BIAYA LAIN-LAIN-BIAYA DI LUAR USAHA', '72990000', 0, 4, 7, '', ''),
	('72990401', 'BIAYA LAIN-LAIN-BIAYA DI LUAR USAHA', '72990400', 1, 5, 7, '', ''),
	('72999900', 'BIAYA LAIN-LAIN', '72990000', 0, 4, 7, '', ''),
	('72999901', 'BIAYA PAJAK (DENDA PAJAK)', '72999900', 1, 5, 7, '', ''),
	('72999902', 'BIAYA PAJAK (PPH FINAL)', '72999900', 1, 5, 7, '', ''),
	('72999903', 'BIAYA PAJAK (PPH 26)', '72999900', 1, 5, 7, '', ''),
	('72999904', 'BIAYA PAJAK (DENDA BEA CUKAI)', '72999900', 1, 5, 7, '', ''),
	('72999999', 'BIAYA LAIN-LAIN', '72999900', 1, 5, 7, '', ''),
	('73000000', 'TAKSIRAN PAJAK PENGHASILAN', '70000000', 0, 2, 7, '', ''),
	('73010000', 'TAKSIRAN PAJAK PENGHASILAN - THN BERJALAN', '73000000', 0, 3, 7, '', ''),
	('73010100', 'TAKSIRAN PAJAK PENGHASILAN - THN BERJALAN', '73010000', 0, 4, 7, '', ''),
	('73010101', 'TAKSIRAN PAJAK PENGHASILAN-TAHUN BERJALAN', '73010100', 1, 5, 7, '', ''),
	('73020000', 'TAKSIRAN PAJAK PENGHASILAN - DITANGGUHKAN', '73000000', 0, 3, 7, '', ''),
	('73020100', 'TAKSIRAN PAJAK PENGHASILAN - DITANGGUHKAN', '73020000', 0, 4, 7, '', ''),
	('79010000', 'INITIAL BALANCE', '79000000', 1, 3, 7, '', '');
/*!40000 ALTER TABLE `acc` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.accbank
DROP TABLE IF EXISTS `accbank`;
CREATE TABLE IF NOT EXISTS `accbank` (
  `acc` char(15) default '',
  `bank` varchar(100) NOT NULL default ' ',
  `no_rek` varchar(30) NOT NULL default ' ',
  `sub` varchar(15) NOT NULL default ' ',
  `chtime` varchar(16) default NULL,
  `chusr` varchar(6) default NULL,
  `gironame` varchar(50) default NULL,
  `namavendor` varchar(50) default NULL,
  `adressbank` varchar(45) default NULL,
  `citybank` varchar(20) default NULL,
  `group_` int(11) NOT NULL default '0',
  `nomor` int(11) NOT NULL auto_increment,
  PRIMARY KEY  (`bank`,`no_rek`,`sub`,`group_`),
  KEY `nomor` (`nomor`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.accbank: ~0 rows (approximately)
/*!40000 ALTER TABLE `accbank` DISABLE KEYS */;
/*!40000 ALTER TABLE `accbank` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.accgl
DROP TABLE IF EXISTS `accgl`;
CREATE TABLE IF NOT EXISTS `accgl` (
  `remark` varchar(50) NOT NULL default ' ',
  `acc` varchar(15) default NULL,
  PRIMARY KEY  (`remark`),
  KEY `remark` (`remark`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.accgl: ~0 rows (approximately)
/*!40000 ALTER TABLE `accgl` DISABLE KEYS */;
/*!40000 ALTER TABLE `accgl` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.acd
DROP TABLE IF EXISTS `acd`;
CREATE TABLE IF NOT EXISTS `acd` (
  `jurnal` varchar(15) default NULL,
  `period` varchar(4) default NULL,
  `acc` varchar(15) default NULL,
  `date` datetime default NULL,
  `val` double default NULL,
  `cct` varchar(15) default NULL,
  `rem` longtext,
  `dk` varchar(1) default NULL,
  `subjurnal` varchar(3) default NULL,
  `adj` smallint(5) default NULL,
  `bsa` varchar(15) default ' ',
  KEY `date` (`date`),
  KEY `jurnalsubjurnal` (`jurnal`,`subjurnal`),
  KEY `period` (`period`),
  KEY `periodaccdate` (`period`,`acc`,`date`),
  KEY `perioddate` (`period`,`date`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.acd: ~0 rows (approximately)
/*!40000 ALTER TABLE `acd` DISABLE KEYS */;
/*!40000 ALTER TABLE `acd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.adj
DROP TABLE IF EXISTS `adj`;
CREATE TABLE IF NOT EXISTS `adj` (
  `adj` varchar(15) NOT NULL,
  `period` varchar(4) NOT NULL,
  `keterangan` varchar(50) NOT NULL,
  `val` double NOT NULL,
  `chtime` varchar(16) NOT NULL,
  `chusr` varchar(10) NOT NULL,
  PRIMARY KEY  (`adj`,`period`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.adj: ~0 rows (approximately)
/*!40000 ALTER TABLE `adj` DISABLE KEYS */;
/*!40000 ALTER TABLE `adj` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.akd
DROP TABLE IF EXISTS `akd`;
CREATE TABLE IF NOT EXISTS `akd` (
  `akt` varchar(15) NOT NULL,
  `cct` varchar(15) NOT NULL,
  `prosent` float default '0',
  `remark` varchar(45) default NULL,
  PRIMARY KEY  (`akt`,`cct`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.akd: ~0 rows (approximately)
/*!40000 ALTER TABLE `akd` DISABLE KEYS */;
/*!40000 ALTER TABLE `akd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.akt
DROP TABLE IF EXISTS `akt`;
CREATE TABLE IF NOT EXISTS `akt` (
  `akt` varchar(15) NOT NULL,
  `name` varchar(200) default ' ',
  `acc` varchar(15) default ' ',
  `jumlah` smallint(5) unsigned default '0',
  `unit` varchar(10) default ' ',
  `harga` double default '0',
  `residu` smallint(5) unsigned default '0',
  `tglbeli` datetime default NULL,
  `lokasi` varchar(45) default ' ',
  `prosentase` float default '0',
  `tgljual` datetime default NULL,
  `tglstop` datetime default NULL,
  `accsusut` varchar(15) default ' ',
  `remark` varchar(50) default ' ',
  `chusr` varchar(10) default NULL,
  `chtime` varchar(16) default NULL,
  `accbiaya` varchar(15) default ' ',
  PRIMARY KEY  (`akt`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.akt: ~0 rows (approximately)
/*!40000 ALTER TABLE `akt` DISABLE KEYS */;
/*!40000 ALTER TABLE `akt` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.akt2
DROP TABLE IF EXISTS `akt2`;
CREATE TABLE IF NOT EXISTS `akt2` (
  `akt` varchar(15) NOT NULL,
  `prosentase` float NOT NULL,
  PRIMARY KEY  (`akt`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.akt2: ~0 rows (approximately)
/*!40000 ALTER TABLE `akt2` DISABLE KEYS */;
/*!40000 ALTER TABLE `akt2` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.akt2014
DROP TABLE IF EXISTS `akt2014`;
CREATE TABLE IF NOT EXISTS `akt2014` (
  `kode` varchar(15) NOT NULL,
  `nama` varchar(100) default NULL,
  `tglbeli` datetime default NULL,
  `hargabeli` double default NULL,
  `nilaibuku` double default NULL,
  PRIMARY KEY  (`kode`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.akt2014: ~0 rows (approximately)
/*!40000 ALTER TABLE `akt2014` DISABLE KEYS */;
/*!40000 ALTER TABLE `akt2014` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.aktlama
DROP TABLE IF EXISTS `aktlama`;
CREATE TABLE IF NOT EXISTS `aktlama` (
  `kode` varchar(15) NOT NULL,
  `kodelama` varchar(15) default NULL,
  PRIMARY KEY  (`kode`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.aktlama: ~0 rows (approximately)
/*!40000 ALTER TABLE `aktlama` DISABLE KEYS */;
/*!40000 ALTER TABLE `aktlama` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.bckeluar
DROP TABLE IF EXISTS `bckeluar`;
CREATE TABLE IF NOT EXISTS `bckeluar` (
  `jenis` varchar(10) default NULL,
  `nodoc` varchar(50) default NULL,
  `nopen` varchar(50) default NULL,
  `datedoc` date default NULL,
  `sjh` varchar(15) NOT NULL,
  `sjhdate` datetime default NULL,
  `qty` varchar(50) default NULL,
  `inv` varchar(60) NOT NULL,
  `remark` varchar(100) default NULL,
  `qty1` double default '0',
  `unit` varchar(6) default NULL,
  `val` double default '0',
  `supplier` varchar(50) default NULL,
  `form` varchar(10) default NULL,
  `loc` varchar(15) default NULL,
  `sub` varchar(15) NOT NULL,
  PRIMARY KEY  USING BTREE (`inv`,`sjh`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.bckeluar: ~0 rows (approximately)
/*!40000 ALTER TABLE `bckeluar` DISABLE KEYS */;
/*!40000 ALTER TABLE `bckeluar` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.bcmasuk
DROP TABLE IF EXISTS `bcmasuk`;
CREATE TABLE IF NOT EXISTS `bcmasuk` (
  `jenis` varchar(10) NOT NULL,
  `nodoc` varchar(50) NOT NULL,
  `nopen` varchar(50) default NULL,
  `datedoc` date default NULL,
  `lpb` varchar(15) NOT NULL,
  `lpbdate` datetime NOT NULL,
  `supplier` varchar(200) default NULL,
  `inv` varchar(60) NOT NULL,
  `remark` varchar(100) NOT NULL default ' ',
  `qty` double NOT NULL default '0',
  `unit` varchar(6) default NULL,
  `val` double default '0',
  `sub` varchar(15) default NULL,
  `no_spb` int(10) unsigned NOT NULL default '1',
  PRIMARY KEY  USING BTREE (`lpb`,`inv`,`remark`,`no_spb`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.bcmasuk: ~0 rows (approximately)
/*!40000 ALTER TABLE `bcmasuk` DISABLE KEYS */;
/*!40000 ALTER TABLE `bcmasuk` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.berat
DROP TABLE IF EXISTS `berat`;
CREATE TABLE IF NOT EXISTS `berat` (
  `nodsg` varchar(50) NOT NULL,
  `berat` double(8,2) NOT NULL,
  PRIMARY KEY  (`nodsg`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.berat: ~0 rows (approximately)
/*!40000 ALTER TABLE `berat` DISABLE KEYS */;
/*!40000 ALTER TABLE `berat` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.bsa
DROP TABLE IF EXISTS `bsa`;
CREATE TABLE IF NOT EXISTS `bsa` (
  `bsa` varchar(15) NOT NULL default ' ',
  `area` varchar(40) NOT NULL default ' ',
  `remark` varchar(60) default ' ',
  PRIMARY KEY  (`bsa`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.bsa: ~0 rows (approximately)
/*!40000 ALTER TABLE `bsa` DISABLE KEYS */;
/*!40000 ALTER TABLE `bsa` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.bt
DROP TABLE IF EXISTS `bt`;
CREATE TABLE IF NOT EXISTS `bt` (
  `KODE` varchar(255) default NULL,
  `F2` double default NULL,
  `NAMATRANSAKSI` varchar(255) default NULL,
  `NOREKENING` double default NULL,
  `NAMA REKENING` varchar(255) default NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.bt: ~0 rows (approximately)
/*!40000 ALTER TABLE `bt` DISABLE KEYS */;
/*!40000 ALTER TABLE `bt` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.cad
DROP TABLE IF EXISTS `cad`;
CREATE TABLE IF NOT EXISTS `cad` (
  `cad` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `remark` varchar(60) default NULL,
  `period` varchar(4) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `sub` varchar(15) default NULL,
  `cur` varchar(15) default NULL,
  `kurs` double default NULL,
  `delete` bit(1) default NULL,
  `bsa` varchar(15) default ' ',
  PRIMARY KEY  (`cad`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.cad: ~0 rows (approximately)
/*!40000 ALTER TABLE `cad` DISABLE KEYS */;
/*!40000 ALTER TABLE `cad` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.cadet
DROP TABLE IF EXISTS `cadet`;
CREATE TABLE IF NOT EXISTS `cadet` (
  `cad` varchar(15) NOT NULL default ' ',
  `acc` varchar(15) default NULL,
  `cct` varchar(15) default NULL,
  `remark` varchar(60) default NULL,
  `dk` varchar(1) default NULL,
  `val` double default NULL,
  `nocad` varchar(15) default NULL,
  `no` smallint(5) NOT NULL default '0',
  PRIMARY KEY  (`cad`,`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.cadet: ~0 rows (approximately)
/*!40000 ALTER TABLE `cadet` DISABLE KEYS */;
/*!40000 ALTER TABLE `cadet` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.category
DROP TABLE IF EXISTS `category`;
CREATE TABLE IF NOT EXISTS `category` (
  `category` varchar(15) NOT NULL,
  `ket` varchar(45) default '',
  `group_` int(11) default '1',
  `chusr` char(10) default '',
  `chtime` char(16) default '',
  PRIMARY KEY  (`category`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COMMENT='category lokasi';

-- Dumping data for table wis_inventory.category: ~0 rows (approximately)
/*!40000 ALTER TABLE `category` DISABLE KEYS */;
/*!40000 ALTER TABLE `category` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.cca
DROP TABLE IF EXISTS `cca`;
CREATE TABLE IF NOT EXISTS `cca` (
  `cct` varchar(15) NOT NULL,
  `kode` varchar(15) NOT NULL,
  `name` varchar(50) default NULL,
  PRIMARY KEY  (`cct`,`kode`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.cca: ~0 rows (approximately)
/*!40000 ALTER TABLE `cca` DISABLE KEYS */;
/*!40000 ALTER TABLE `cca` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.cct
DROP TABLE IF EXISTS `cct`;
CREATE TABLE IF NOT EXISTS `cct` (
  `cct` char(15) NOT NULL,
  `name` char(70) default NULL,
  `parent` char(15) default NULL,
  `detil` tinyint(1) default NULL,
  `level_` smallint(5) default NULL,
  `budget` double default '0',
  `chtime` char(16) default NULL,
  `chusr` char(10) default NULL,
  PRIMARY KEY  (`cct`),
  KEY `cct` (`cct`),
  KEY `parent` (`parent`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.cct: ~0 rows (approximately)
/*!40000 ALTER TABLE `cct` DISABLE KEYS */;
/*!40000 ALTER TABLE `cct` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.cgr
DROP TABLE IF EXISTS `cgr`;
CREATE TABLE IF NOT EXISTS `cgr` (
  `cgr` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `dk` smallint(5) default NULL,
  `nobg` varchar(15) default NULL,
  `bank` varchar(50) default NULL,
  `acbank` varchar(50) default NULL,
  `bgdate` datetime default NULL,
  `bgduedate` datetime default NULL,
  `bgval` double default NULL,
  `sub` varchar(15) default NULL,
  `accbank` varchar(15) default NULL,
  `acc` varchar(15) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL,
  `remark` varchar(50) default NULL,
  `delete` bit(1) NOT NULL default '\0',
  PRIMARY KEY  (`cgr`),
  KEY `period` (`period`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.cgr: ~0 rows (approximately)
/*!40000 ALTER TABLE `cgr` DISABLE KEYS */;
/*!40000 ALTER TABLE `cgr` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.color
DROP TABLE IF EXISTS `color`;
CREATE TABLE IF NOT EXISTS `color` (
  `kode` varchar(6) NOT NULL,
  `warna` varchar(20) NOT NULL,
  `ket` varchar(45) NOT NULL,
  PRIMARY KEY  (`kode`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.color: ~94 rows (approximately)
/*!40000 ALTER TABLE `color` DISABLE KEYS */;
REPLACE INTO `color` (`kode`, `warna`, `ket`) VALUES
	('010', 'RED', ''),
	('011', 'RED', ''),
	('013', 'RED', ''),
	('014', 'RED', ''),
	('1010', 'GOLD', ''),
	('110', 'BLUE', ''),
	('111', 'BLUE', ''),
	('1110', 'BROWN', ''),
	('1111', 'BROWN', ''),
	('1112', 'BROWN', ''),
	('1113', 'BROWN', ''),
	('1114', 'BROWN', ''),
	('1115', 'BROWN', ''),
	('1117', 'BROWN', ''),
	('1118', 'BROWN', ''),
	('1119', 'BROWN', ''),
	('112', 'BLUE', ''),
	('1120', 'BROWN', ''),
	('1121', 'BROWN', ''),
	('113', 'BLUE', ''),
	('114', 'BLUE', ''),
	('115', 'BLUE', ''),
	('117', 'BLUE', ''),
	('119', 'BLUE', ''),
	('120', 'BLUE', ''),
	('121', 'BLUE', ''),
	('124', 'BLUE', ''),
	('125', 'BLUE', ''),
	('126', 'BLUE', ''),
	('128', 'BLUE', ''),
	('129', 'BLUE', ''),
	('130', 'BLUE', ''),
	('131', 'BLUE', ''),
	('132', 'BLUE', ''),
	('133', 'BLUE', ''),
	('134', 'BLUE', ''),
	('135', 'BLUE', ''),
	('136', 'BLUE', ''),
	('137', 'BLUE', ''),
	('138', 'BLUE', ''),
	('139', 'BLUE', ''),
	('210', 'GREEN', ''),
	('211', 'GREEN', ''),
	('212', 'GREEN', ''),
	('215', 'GREEN', ''),
	('216', 'GREEN', ''),
	('217', 'GREEN', ''),
	('218', 'GREEN', ''),
	('219', 'GREEN', ''),
	('220', 'GREEN', ''),
	('221', 'GREEN', ''),
	('222', 'GREEN', ''),
	('223', 'GREEN', ''),
	('224', 'GREEN', ''),
	('225', 'GREEN', ''),
	('226', 'GREEN', ''),
	('227', 'GREEN', ''),
	('310', 'YELLOW', ''),
	('311', 'YELLOW', ''),
	('312', 'YELLOW', ''),
	('313', 'YELLOW', ''),
	('314', 'YELLOW', ''),
	('315', 'YELLOW', ''),
	('410', 'VIOLET', ''),
	('411', 'VIOLET', ''),
	('412', 'VIOLET', ''),
	('413', 'VIOLET', ''),
	('414', 'VIOLET', ''),
	('415', 'VIOLET', ''),
	('416', 'VIOLET', ''),
	('417', 'VIOLET', ''),
	('418', 'VIOLET', ''),
	('419', 'VIOLET', ''),
	('420', 'VIOLET', ''),
	('421', 'VIOLET', ''),
	('422', 'VIOLET', ''),
	('510', 'ORANGE', ''),
	('511', 'ORANGE', ''),
	('512', 'ORANGE', ''),
	('513', 'ORANGE', ''),
	('514', 'ORANGE', ''),
	('515', 'ORANGE', ''),
	('610', 'BLACK', ''),
	('710', 'PINK', ''),
	('711', 'PINK', ''),
	('712', 'PINK', ''),
	('713', 'PINK', ''),
	('714', 'PINK', ''),
	('715', 'PINK', ''),
	('716', 'PINK', ''),
	('717', 'PINK', ''),
	('810', 'WHITE', ''),
	('913', 'GREY', ''),
	('914', 'GREY', '');
/*!40000 ALTER TABLE `color` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.company
DROP TABLE IF EXISTS `company`;
CREATE TABLE IF NOT EXISTS `company` (
  `company1` varchar(100) default NULL,
  `company2` varchar(100) default NULL,
  `company3` varchar(100) default NULL,
  `company4` varchar(100) default NULL,
  `company5` varchar(100) default NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.company: ~0 rows (approximately)
/*!40000 ALTER TABLE `company` DISABLE KEYS */;
/*!40000 ALTER TABLE `company` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.csa
DROP TABLE IF EXISTS `csa`;
CREATE TABLE IF NOT EXISTS `csa` (
  `csi` varchar(15) NOT NULL default ' ',
  `invo` varchar(50) NOT NULL default ' ',
  `remark` varchar(50) default NULL,
  `val` double default NULL,
  `no` smallint(5) NOT NULL default '0',
  `reff` varchar(15) default ' ',
  PRIMARY KEY  (`csi`,`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT COMMENT='InnoDB free: 333824 kB';

-- Dumping data for table wis_inventory.csa: ~0 rows (approximately)
/*!40000 ALTER TABLE `csa` DISABLE KEYS */;
/*!40000 ALTER TABLE `csa` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.csb
DROP TABLE IF EXISTS `csb`;
CREATE TABLE IF NOT EXISTS `csb` (
  `csi` varchar(15) NOT NULL default ' ',
  `no` smallint(5) NOT NULL default '0',
  `date` datetime default NULL,
  `mby` varchar(15) default ' ',
  `invo` varchar(50) default ' ',
  `remark` varchar(80) default ' ',
  `val` double default '0',
  PRIMARY KEY  (`csi`,`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.csb: ~0 rows (approximately)
/*!40000 ALTER TABLE `csb` DISABLE KEYS */;
/*!40000 ALTER TABLE `csb` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.csi
DROP TABLE IF EXISTS `csi`;
CREATE TABLE IF NOT EXISTS `csi` (
  `csi` varchar(15) NOT NULL,
  `oms` varchar(15) default NULL,
  `date` datetime default NULL,
  `chusr` varchar(10) default NULL,
  `chtime` varchar(16) default NULL,
  `period` varchar(4) default NULL,
  `delete` bit(1) NOT NULL,
  `bsa` varchar(15) default ' ',
  PRIMARY KEY  (`csi`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.csi: ~0 rows (approximately)
/*!40000 ALTER TABLE `csi` DISABLE KEYS */;
/*!40000 ALTER TABLE `csi` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.csiprosen
DROP TABLE IF EXISTS `csiprosen`;
CREATE TABLE IF NOT EXISTS `csiprosen` (
  `csi` varchar(15) NOT NULL,
  `inv` varchar(15) NOT NULL,
  `prosen` double NOT NULL default '0',
  PRIMARY KEY  USING BTREE (`csi`,`inv`,`prosen`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.csiprosen: ~0 rows (approximately)
/*!40000 ALTER TABLE `csiprosen` DISABLE KEYS */;
/*!40000 ALTER TABLE `csiprosen` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.csl
DROP TABLE IF EXISTS `csl`;
CREATE TABLE IF NOT EXISTS `csl` (
  `csi` varchar(15) NOT NULL default ' ',
  `lph` varchar(15) NOT NULL default ' ',
  `date` datetime default NULL,
  `inv` varchar(15) default ' ',
  `remark` varchar(50) default NULL,
  `val` double default NULL,
  `no` smallint(5) unsigned NOT NULL default '0',
  `qty` double default '0',
  `price` double default '0',
  `qty1` double default '0',
  `unit` varchar(6) default ' ',
  PRIMARY KEY  (`csi`,`no`),
  KEY `lph` (`lph`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT COMMENT='InnoDB free: 333824 kB';

-- Dumping data for table wis_inventory.csl: ~0 rows (approximately)
/*!40000 ALTER TABLE `csl` DISABLE KEYS */;
/*!40000 ALTER TABLE `csl` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.cta
DROP TABLE IF EXISTS `cta`;
CREATE TABLE IF NOT EXISTS `cta` (
  `period` varchar(4) NOT NULL default '',
  `cct` char(15) NOT NULL,
  `cfit3` double default NULL,
  `chusr` varchar(10) default NULL,
  `chtime` varchar(16) default NULL,
  `plant` varchar(15) default ' ',
  PRIMARY KEY  (`period`,`cct`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.cta: ~0 rows (approximately)
/*!40000 ALTER TABLE `cta` DISABLE KEYS */;
/*!40000 ALTER TABLE `cta` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.ctd
DROP TABLE IF EXISTS `ctd`;
CREATE TABLE IF NOT EXISTS `ctd` (
  `period` varchar(4) NOT NULL,
  `cct` char(15) NOT NULL,
  `inv` varchar(45) NOT NULL,
  `remark` varchar(50) default NULL,
  `qtybox` double default NULL,
  `qtypcs` double default NULL,
  `perbox` double default NULL,
  `pricebox` double default NULL,
  `pricepcs` double default NULL,
  `tsalespcs` double default NULL,
  `persensales` double default NULL,
  `costall` double default NULL,
  `costperbox` double default NULL,
  `costperpcs` double default NULL,
  `gross` double default NULL,
  `ratio` double default NULL,
  PRIMARY KEY  (`period`,`inv`,`cct`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.ctd: ~0 rows (approximately)
/*!40000 ALTER TABLE `ctd` DISABLE KEYS */;
/*!40000 ALTER TABLE `ctd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.cur
DROP TABLE IF EXISTS `cur`;
CREATE TABLE IF NOT EXISTS `cur` (
  `cur` varchar(15) NOT NULL,
  `name` varchar(50) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  PRIMARY KEY  (`cur`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.cur: ~0 rows (approximately)
/*!40000 ALTER TABLE `cur` DISABLE KEYS */;
/*!40000 ALTER TABLE `cur` ENABLE KEYS */;

-- Dumping structure for procedure wis_inventory.cutoff_data
DROP PROCEDURE IF EXISTS `cutoff_data`;
DELIMITER //
CREATE PROCEDURE `cutoff_data`(
	IN `periodenya` varchar(4)
)
BEGIN
delete from datalog;
delete from userlog;
delete from hpro where period <= periodenya;
delete from hprod where substring(hpro,5,4)<= periodenya;
delete from cad where period <= periodenya;
delete from cgr where period <= periodenya;
delete from cadet where substring(cad,5,4)<= periodenya;
delete from csi where period <= periodenya;
delete from csb where substring(csi,5,4)<= periodenya;
delete from csl where substring(csi,5,4)<= periodenya;
delete from csa where substring(csi,5,4)<= periodenya;
delete from fpjumk where period <= periodenya;
delete from ino where period <= periodenya;
delete from inod where substring(ino,5,4)<= periodenya;
delete from inoc where substring(ino,5,4)<= periodenya;
delete from kwt where period <= periodenya;
delete from kwd where substring(kwt,5,4)<= periodenya;
delete from lhp where period <= periodenya;
delete from lhd where substring(lhp,5,4)<= periodenya;
delete from prq where period <= periodenya;
delete from prd where substring(prq,5,4)<= periodenya;
delete from trm where period <= periodenya;
delete from trd where substring(trm,5,4)<= periodenya;
delete from opn where period <= periodenya;
delete from opd where substring(opn,5,4)<= periodenya;
delete from oms where period <= periodenya;
delete from omd where substring(oms,5,4)<= periodenya;
delete from oms_in where substring(oms,5,4)<= periodenya;
delete from msl where substring(msk,5,4)<= periodenya;
delete from okl where period <= periodenya;
delete from okd where substring(okl,5,4)<= periodenya;
delete from prq where period <= periodenya;
delete from prd where substring(prq,5,4)<= periodenya;
delete from rms where period <= periodenya;
delete from rmd where substring(rms,5,4)<= periodenya;
delete from rkl where period <= periodenya;
delete from rkd where substring(rkl,5,4)<= periodenya;
delete from rpo where period <= periodenya;
delete from msk where period <= periodenya;
delete from msd where substring(msk,5,4)<= periodenya;
delete from msx where substring(msk,5,4)<= periodenya;
delete from klr where period<= periodenya;
delete from kld where substring(klr,5,4)<= periodenya;
delete from lph where period<= periodenya;
delete from lpd where substring(lph,5,4)<= periodenya;
delete from sjh where period<= periodenya;
delete from sjd where substring(sjh,5,4)<= periodenya;
delete from umh where period<= periodenya;
delete from umd where substring(umh,5,4)<= periodenya;
delete from jsu where period<= periodenya;
delete from jsd where substring(jsu,5,4)<= periodenya;
delete from oms where period<= periodenya;
delete from omd where substring(oms,5,4)<= periodenya;
delete from kas where period<= periodenya;
delete from kad where substring(kas,5,4)<= periodenya;
delete from kag where substring(kas,5,4)<= periodenya;
delete from rsb where period<= periodenya;
delete from payhp where period <= periodenya;
delete from rhp where period<= periodenya;
delete from ind where period<= periodenya;
delete from ino where period<= periodenya;
delete from inoc where substring(ino,5,4)<= periodenya;
delete from inod where substring(ino,5,4)<= periodenya;
delete from acd where period<= periodenya;
delete from rgr where period<= periodenya;
delete from rin where period<= periodenya;
delete from jin where period<= periodenya;
delete from jid where substring(jin,5,4)<= periodenya;
delete from rac where period <= periodenya;
delete from racus where period <= periodenya;
delete from rka where period<= periodenya;
delete from rkb where substring(rka,5,4)<= periodenya;
delete from rma where period<= periodenya;
delete from rmb where substring(rma,5,4)<= periodenya;
delete from rso where period<= periodenya;
delete from spb where period<= periodenya;
delete from spbd where substring(spb,5,4)<= periodenya;
delete from sjr where period<= periodenya;
delete from sjrd where substring(sjr,5,4)<= periodenya;
delete from spm where period<= periodenya;
delete from spd where substring(spm,5,4)<= periodenya;
delete from umk where substring(klr,5,4)<= periodenya;
delete from umkp where substring(msk,5,4)<= periodenya;
END//
DELIMITER ;

-- Dumping structure for table wis_inventory.dataerror
DROP TABLE IF EXISTS `dataerror`;
CREATE TABLE IF NOT EXISTS `dataerror` (
  `period` varchar(4) default NULL,
  `jurnal` varchar(15) default NULL,
  `date` datetime default NULL,
  `acc` varchar(15) default NULL,
  `rem` varchar(100) default NULL,
  `dk` varchar(1) default NULL,
  `val` double default NULL,
  `remdetail` varchar(100) default NULL,
  KEY `period` (`period`),
  KEY `rem` (`rem`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.dataerror: ~0 rows (approximately)
/*!40000 ALTER TABLE `dataerror` DISABLE KEYS */;
/*!40000 ALTER TABLE `dataerror` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.datalog
DROP TABLE IF EXISTS `datalog`;
CREATE TABLE IF NOT EXISTS `datalog` (
  `logdate` date NOT NULL,
  `logtime` time NOT NULL,
  `user` varchar(16) NOT NULL,
  `query` varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.datalog: ~0 rows (approximately)
/*!40000 ALTER TABLE `datalog` DISABLE KEYS */;
/*!40000 ALTER TABLE `datalog` ENABLE KEYS */;

-- Dumping structure for procedure wis_inventory.deletealldata
DROP PROCEDURE IF EXISTS `deletealldata`;
DELIMITER //
CREATE PROCEDURE `deletealldata`()
BEGIN
delete from datalog;
delete from userlog;
delete from accgl;
delete from acc;
delete from hpro;
delete from hprod;
delete from hbl;
delete from hjl;
delete from cad;
delete from cgr;
delete from cadet;
delete from csi;
delete from csb;
delete from csl;
delete from csa;
delete from fpj;
delete from fpd;
delete from est;
delete from fpjumk;
delete from gah;
delete from gad;
delete from grp;
delete from hut;
delete from hutd;
delete from ino;
delete from inod;
delete from inoc;
delete from jenis;
delete from cct;
delete from cca;
delete from kwt;
delete from kwd;
delete from lhp;
delete from lhd;
delete from prq;
delete from prd;
delete from ttr;
delete from ttd;
delete from kode;
delete from konversi;
delete from trm;
delete from trd;
delete from opn;
delete from opd;
delete from oms;
delete from omd;
delete from oms_in;
delete from msl;
delete from okl;
delete from okd;
delete from prq;
delete from prd;
delete from vpo;
delete from vpd;
delete from rms;
delete from rmd;
delete from rkl;
delete from rkd;
delete from rpo;
delete from mlh;
delete from mld;
delete from mfd;
delete from vso;
delete from vpd;
delete from msk;
delete from msd;
delete from msn;
delete from msx;
delete from klr;
delete from kld;
delete from lph;
delete from lpd;
delete from sjh;
delete from sjd;
delete from umh;
delete from umd;
delete from jsu;
delete from jsd;
delete from oms;
delete from omd;
delete from kas;
delete from kad;
delete from kag;
delete from ksg;
delete from ksd;
delete from kbl;
delete from sub;
delete from inv;
delete from rsb;
delete from payhp;
delete from rhp;
delete from ind;
delete from ino;
delete from inoc;
delete from inod;
delete from acd;
delete from rgr;
delete from rin;
delete from jin;
delete from jid;
delete from ots;
delete from rac;
delete from racus;
delete from rfp;
delete from rfd;
delete from rka;
delete from rkb;
delete from rma;
delete from rmb;
delete from rso;
delete from rso;
delete from spb;
delete from spbd;
delete from sjr;
delete from sjrd;
delete from str;
delete from std;
delete from spm;
delete from spd;
delete from subto;
delete from umk;
delete from umkp;
delete from loc;
delete from akt;
delete from akd;
delete from adj;
END//
DELIMITER ;

-- Dumping structure for table wis_inventory.dept
DROP TABLE IF EXISTS `dept`;
CREATE TABLE IF NOT EXISTS `dept` (
  `dept` varchar(15) NOT NULL,
  `nama` varchar(50) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  PRIMARY KEY  (`dept`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.dept: ~0 rows (approximately)
/*!40000 ALTER TABLE `dept` DISABLE KEYS */;
/*!40000 ALTER TABLE `dept` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.dhrgdasar
DROP TABLE IF EXISTS `dhrgdasar`;
CREATE TABLE IF NOT EXISTS `dhrgdasar` (
  `kode` varchar(8) NOT NULL,
  `kertas` varchar(2) NOT NULL,
  `harga` varchar(45) NOT NULL default '0',
  PRIMARY KEY  (`kode`,`kertas`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.dhrgdasar: ~0 rows (approximately)
/*!40000 ALTER TABLE `dhrgdasar` DISABLE KEYS */;
/*!40000 ALTER TABLE `dhrgdasar` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.dhrgdsg
DROP TABLE IF EXISTS `dhrgdsg`;
CREATE TABLE IF NOT EXISTS `dhrgdsg` (
  `kode` varchar(8) NOT NULL,
  `nodsg` varchar(50) NOT NULL,
  `harga` double NOT NULL default '0',
  PRIMARY KEY  (`kode`,`nodsg`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.dhrgdsg: ~0 rows (approximately)
/*!40000 ALTER TABLE `dhrgdsg` DISABLE KEYS */;
/*!40000 ALTER TABLE `dhrgdsg` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.dhrggroup
DROP TABLE IF EXISTS `dhrggroup`;
CREATE TABLE IF NOT EXISTS `dhrggroup` (
  `kode` varchar(8) NOT NULL,
  `kwalitet` int(11) NOT NULL,
  `hrgm2` double NOT NULL default '0',
  `hrgkg` double NOT NULL default '0',
  PRIMARY KEY  (`kode`,`kwalitet`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.dhrggroup: ~0 rows (approximately)
/*!40000 ALTER TABLE `dhrggroup` DISABLE KEYS */;
/*!40000 ALTER TABLE `dhrggroup` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.docp
DROP TABLE IF EXISTS `docp`;
CREATE TABLE IF NOT EXISTS `docp` (
  `docp` varchar(15) NOT NULL default ' ',
  `date` datetime default NULL,
  `jnsp` varchar(15) default NULL,
  `oms` varchar(15) default NULL,
  `remmark` varchar(50) default NULL,
  `chusr` varchar(10) default NULL,
  `chtime` varchar(16) default NULL,
  `period` varchar(4) default NULL,
  `delete` bit(1) default '\0',
  `form` varchar(25) default ' ',
  PRIMARY KEY  (`docp`),
  KEY `oms` (`oms`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.docp: ~0 rows (approximately)
/*!40000 ALTER TABLE `docp` DISABLE KEYS */;
/*!40000 ALTER TABLE `docp` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.docpd
DROP TABLE IF EXISTS `docpd`;
CREATE TABLE IF NOT EXISTS `docpd` (
  `docp` varchar(15) NOT NULL default ' ',
  `nodoc` varchar(30) default ' ',
  `datedoc` datetime default NULL,
  `remmark` varchar(50) default ' ',
  `no` int(10) unsigned NOT NULL default '1',
  `no_bc` varchar(45) default ' ',
  `nopen` varchar(45) default NULL,
  PRIMARY KEY  (`docp`,`no`),
  KEY `nodoc` (`nodoc`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.docpd: ~0 rows (approximately)
/*!40000 ALTER TABLE `docpd` DISABLE KEYS */;
/*!40000 ALTER TABLE `docpd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.dod
DROP TABLE IF EXISTS `dod`;
CREATE TABLE IF NOT EXISTS `dod` (
  `doh` varchar(15) NOT NULL default ' ',
  `okl` varchar(15) default ' ',
  `inv` varchar(15) default ' ',
  `nodsg` varchar(50) default ' ',
  `loc` varchar(15) default ' ',
  `remark` varchar(100) default ' ',
  `spesifikasi` text,
  `qty1` double default '0',
  `no` smallint(5) NOT NULL default '0',
  `unit` varchar(6) default NULL,
  `qty` double default '0',
  `etd` longtext,
  `kgb` varchar(15) default NULL,
  PRIMARY KEY  (`doh`,`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.dod: ~0 rows (approximately)
/*!40000 ALTER TABLE `dod` DISABLE KEYS */;
/*!40000 ALTER TABLE `dod` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.doh
DROP TABLE IF EXISTS `doh`;
CREATE TABLE IF NOT EXISTS `doh` (
  `doh` varchar(15) NOT NULL default ' ',
  `date` datetime default NULL,
  `sub` varchar(15) default ' ',
  `remark` longtext,
  `chtime` varchar(16) default ' ',
  `chusr` varchar(10) default ' ',
  `period` varchar(4) NOT NULL default ' ',
  `nopol` varchar(15) default ' ',
  `okl` varchar(15) default ' ',
  `angkutan` varchar(15) default ' ',
  `aprov` bit(1) NOT NULL default '\0',
  `group_` tinyint(4) default '1',
  `delete` bit(1) NOT NULL default '\0',
  `cpo` bit(1) default '',
  `close` bit(1) default '\0',
  `bsa` varchar(15) default ' ',
  PRIMARY KEY  (`doh`),
  KEY `sub` (`sub`),
  KEY `okl` (`okl`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.doh: ~0 rows (approximately)
/*!40000 ALTER TABLE `doh` DISABLE KEYS */;
/*!40000 ALTER TABLE `doh` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.dsg
DROP TABLE IF EXISTS `dsg`;
CREATE TABLE IF NOT EXISTS `dsg` (
  `nodsg` varchar(50) NOT NULL,
  `inv` varchar(15) NOT NULL,
  `abrev` varchar(45) default NULL,
  `pjg` int(11) default '0',
  `lbr` int(11) default '0',
  `tig` int(11) default '0',
  `glue` varchar(15) default NULL,
  `stich` int(11) default '0',
  `jmlstich` int(11) default '0',
  `jmlkrt` int(11) default '0',
  `grp` varchar(15) default NULL,
  `kwalitet` int(11) default NULL,
  `type` varchar(15) default NULL,
  `color1` varchar(45) default NULL,
  `color2` varchar(45) default NULL,
  `color3` varchar(45) default NULL,
  `sflexo` int(11) default '0',
  `sglue` int(11) default '0',
  `sstich` int(11) default '0',
  `L1` int(11) default '0',
  `T` int(11) default '0',
  `L2` int(11) default '0',
  `P` int(11) default '0',
  `L` int(11) default '0',
  `dikali` int(11) default '0',
  `tambah` int(11) default '0',
  `LKertas` int(11) default '0',
  `PKertas` int(11) default '0',
  `kali` int(11) default '0',
  `kalip` int(11) default '0',
  `berat` double(8,2) default '0.00',
  `grppt` varchar(15) default NULL,
  `tambahrp` double default '0',
  `grpbrg` varchar(15) default NULL,
  `jmlprod` int(11) default '0',
  `counter` int(11) default '0',
  `hrgjual` double default '0',
  `partisi1` varchar(45) default NULL,
  `partisi2` varchar(45) default NULL,
  `partisi3` varchar(45) default NULL,
  `partisi4` varchar(45) default NULL,
  `chusr` char(10) default NULL,
  `chtime` char(16) default NULL,
  `aktif` bit(1) default '',
  `jmlbundel` int(11) default '0',
  `remark` varchar(45) default NULL,
  `beratkarton` double(8,2) default '0.00',
  PRIMARY KEY  (`nodsg`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.dsg: ~0 rows (approximately)
/*!40000 ALTER TABLE `dsg` DISABLE KEYS */;
/*!40000 ALTER TABLE `dsg` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.dtproperties
DROP TABLE IF EXISTS `dtproperties`;
CREATE TABLE IF NOT EXISTS `dtproperties` (
  `id` int(10) NOT NULL auto_increment,
  `objectid` int(10) default NULL,
  `property` varchar(64) NOT NULL,
  `value` varchar(255) default NULL,
  `uvalue` varchar(255) default NULL,
  `lvalue` longblob,
  `version` int(10) NOT NULL default '0',
  PRIMARY KEY  (`id`,`property`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.dtproperties: ~0 rows (approximately)
/*!40000 ALTER TABLE `dtproperties` DISABLE KEYS */;
/*!40000 ALTER TABLE `dtproperties` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.est
DROP TABLE IF EXISTS `est`;
CREATE TABLE IF NOT EXISTS `est` (
  `est` varchar(15) NOT NULL,
  `estname` varchar(30) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  PRIMARY KEY  (`est`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.est: ~0 rows (approximately)
/*!40000 ALTER TABLE `est` DISABLE KEYS */;
/*!40000 ALTER TABLE `est` ENABLE KEYS */;

-- Dumping structure for function wis_inventory.FCanDeleteLineItem
DROP FUNCTION IF EXISTS `FCanDeleteLineItem`;
DELIMITER //
CREATE FUNCTION `FCanDeleteLineItem`(Psubjurnal char(4),PJurnal varchar(15), Pno smallint(5)) RETURNS tinyint(1)
BEGIN
   declare Pallow boolean;
   if (Psubjurnal='PRD') then
      if ((select count(omd.prq) from omd,oms where oms.oms=omd.oms and prq=PJurnal and oms.`delete`=false)>0) then
         set Pallow = false;
      else
         set Pallow = true;
      end if;
   elseif (Psubjurnal ='OMD') then
      if ((select count(spb.spb) from spbd,spb,
      (select remark from omd where oms = PJurnal and `no`=Pno) as a
      where spb.oms = PJurnal and a.remark = spbd.remark and spb.spb=spbd.spb and spb.delete=false)>0) then
          set Pallow = false;
      else
          set Pallow = true;
      end if;
   elseif (Psubjurnal ='SPBD') then
      if ((select count(lph.lph) from lpd,lph,
      (select remark from spbd where spb = PJurnal and `no`=Pno) as a
      where a.remark = lpd.remark and lph.lph=lpd.lph and lph.spb=PJurnal and lph.delete=false)>0) then
          set Pallow = false;
      else
          set Pallow = true;
      end if;
   elseif (Psubjurnal='LPD') then
      if ((select count(msl) from msl,msk where msk.msk=msl.msk and msl.lph=Pjurnal and msk.delete=false)>0) then
         set Pallow = false;
      else
         set Pallow = true;
      end if;
   elseif (Psubjurnal ='OKD') then
      if ((select count(spd.spm) from spd, spm,
      (select remark from okd where okl = PJurnal and `no`=Pno) as a
      where a.remark = spd.remark and spd.okl=PJurnal and spd.spm=spm.spm and spm.`delete`=0))>0 then
          set Pallow = false;
      else
          set Pallow = true;
      end if;
   elseif (Psubjurnal ='RMB') then
      if ((select count(rms.rms) from rms,rmd,
      (select remark from rmb where rma= PJurnal and `no`=Pno) as a
      where rms.rms=rmd.rms and rmd.remark=a.remark and rms.rma=PJurnal and rms.delete=false)>0) then
          set Pallow = false;
      else
          set Pallow = true;
      end if;
   elseif (Psubjurnal ='RMD') then
      if ((select count(spm.spm) from spm,spd,
      (select remark from rmd where rms= PJurnal and `no`=Pno) as a
      where spm.spm=spd.spm and spd.remark=a.remark and spm.okl_rms=PJurnal and spm.delete=false)>0) then
          set Pallow = false;
      else
          set Pallow = true;
      end if;
   elseif (Psubjurnal ='SPD') then
      if ((select count(sjr.sjr) from sjr,sjrd,
      (select remark from spd where spm= PJurnal and `no`=Pno) as a
      where sjr.sjr=sjrd.sjr and sjrd.remark=a.remark and sjr.spm = PJurnal and sjr.delete=false)>0) then
          set Pallow = false;
      else
          set Pallow = true;
      end if;
   elseif (Psubjurnal = 'SPRD') then
      if ((select count(rka.rka) from rkb, rka,
      (select remark from sprd where spr = PJurnal and `no`=Pno) as a
      where rka.spr = PJurnal and a.remark = rkb.remark and rka.rka=rkb.rka and rka.delete=false)>0) then
          set Pallow = false;
      else
          set Pallow = true;
      end if;
   elseif (Psubjurnal = 'MSK') then
      if (select count(rfp) from rfd,rfp where rfp.rfp=rfd.rfp and jurnal=PJurnal and rfp.delete=false) > 0 then
         set Pallow = false;
      else
         set Pallow = true;
      end if;
   elseif (Psubjurnal = 'MPD') then
      if (select count(mpr) from prd,prq where prd.prq=prq.prq and prq.mpr=PJurnal and prq.delete=false) > 0 then
         set Pallow = false;
      else
         set Pallow = true;
      end if;
   elseif (Psubjurnal = 'RFD') then
      if (select count(kas.kas) from kad,kas where kas.kas=kad.kas and jurnal=PJurnal and kas.delete=false) > 0 then
         set Pallow = false;
      else
         set Pallow = true;
      end if;
   end if;
   return Pallow;
END//
DELIMITER ;

-- Dumping structure for function wis_inventory.FCariHpp
DROP FUNCTION IF EXISTS `FCariHpp`;
DELIMITER //
CREATE FUNCTION `FCariHpp`(
	`Ploc` char(15),
	`Pinv` char(15),
	`Pdate` datetime
,
	`Pnodsg` VARCHAR(50)
) RETURNS double
    DETERMINISTIC
BEGIN
declare Phpp  double;
declare Pperiod char(4);
set Pperiod=(select Fdate2period(Pdate));
set Phpp=(select if (qlast is null or qlast<=0,0,
              if(vlast is null or vlast=0,0,vlast/qlast))as hpp
              from
               (select sum(vlast) as vlast, sum(qlast) as qlast
                from
                (
		              select vlast,qlast from rin where period=Pperiod and loc=Ploc and inv=Pinv and ifnull(nodsg,'')=ifnull(Pnodsg,'')
                  union
		              select sum(val* if(dk='D',1,-1)) as val,sum(qty* if(dk='D',1,-1)) as qty from ind
                  where period=Pperiod and date<adddate(date(Pdate),1) and loc=Ploc and inv=Pinv and ifnull(nodsg,'')=ifnull(Pnodsg,'')
	              ) as rin
               ) as rin1
           );
return  Phpp;
END//
DELIMITER ;

-- Dumping structure for function wis_inventory.FCariHppScrap
DROP FUNCTION IF EXISTS `FCariHppScrap`;
DELIMITER //
CREATE FUNCTION `FCariHppScrap`(
	`Ploc` VARCHAR(50),
	`Pinv` VARCHAR(50),
	`Pdate` DATETIME
) RETURNS double
begin
declare Phpp double;
declare Pperiod char(4);
set Pperiod=(select Fdate2period(Pdate));
set Phpp=(select if (qlast is null or qlast<=0,0,
              if(vlast is null or vlast=0,0,vlast/qlast))as hpp
              from
               (select sum(vlast) as vlast, sum(qlast) as qlast
                from
                (
		              select vlast,qlast from rin where period=Pperiod and loc=Ploc and inv=Pinv
                  union
		              select sum(val* if(dk='D',1,-1)) as val,sum(qty* if(dk='D',1,-1)) as qty from ind
                  where period=Pperiod and date<adddate(date(Pdate),1) and loc=Ploc and inv=Pinv
	              ) as rin
               ) as rin1
           );
return  Phpp;
end//
DELIMITER ;

-- Dumping structure for function wis_inventory.FCariOpnQtyVal
DROP FUNCTION IF EXISTS `FCariOpnQtyVal`;
DELIMITER //
CREATE FUNCTION `FCariOpnQtyVal`(
	`Ploc` char(15),
	`Pinv` char(15),
	`Pdate` datetime,
	`Pflag` char(1),
	`pjurnal` char(15),
	`Pnodsg` VARCHAR(50)
) RETURNS double
BEGIN
declare Pvalqty,rqty,pval,rval double;
declare Pperiod char(4);
set Pperiod=Fdate2period(Pdate) ;
set rqty=(select ifnull(sum(ifnull(qty,0.00)*if(dk='D',1,-1)),0.00) from ind
                where period=pperiod and inv=pinv and loc=ploc and date<=pdate and ind.jurnal <> pjurnal and ind.nodsg=Pnodsg);
set rval=(select ifnull(sum(ifnull(val,0.00)*if(dk='D',1,-1)),0.00) from ind
                where period=pperiod and inv=pinv and loc=ploc and date<=pdate and ind.jurnal <> pjurnal and ind.nodsg=Pnodsg);
set Pvalqty= if (Pflag='Q',
   (select if ((qlast+qdebet-qkredit) is null,0.00,qlast+qdebet-qkredit)
    as qty from rin where loc=Ploc and inv=Pinv and period=Pperiod and nodsg=Pnodsg),
   (select if ((vlast+vdebet-vkredit) is null,0.00,vlast+vdebet-vkredit)
     as val from rin where loc=Ploc and inv=Pinv and period=Pperiod and nodsg=Pnodsg));
if pflag='Q' then
   set pvalqty=if(pvalqty is null,0.00,pvalqty)+rqty;
else
   set pvalqty=if(pvalqty is null,0.00,pvalqty)+rval;
end if;
return  if(Pvalqty is null,0.00,Pvalqty);
END//
DELIMITER ;

-- Dumping structure for function wis_inventory.FCekAccParent
DROP FUNCTION IF EXISTS `FCekAccParent`;
DELIMITER //
CREATE FUNCTION `FCekAccParent`(Pacc varchar(15), Paccparent varchar(15) ) RETURNS int(11)
BEGIN
declare ok bit;
set ok=0;
while (ok=0) do
    set Pacc=(select parent from acc where acc=Pacc);
    if (Pacc=Paccparent) then
        set ok=1;
    else
        if (Pacc is null) then
           set ok=0;
           return ok;
        else
           set ok=0;
        end if;
    end if;
end while;
return  ok;
END//
DELIMITER ;

-- Dumping structure for function wis_inventory.FCekDeleted
DROP FUNCTION IF EXISTS `FCekDeleted`;
DELIMITER //
CREATE FUNCTION `FCekDeleted`(
	`Psubjurnal` char(4),
	`Pjurnal` varchar(15)
) RETURNS tinyint(1)
BEGIN
   
   declare Pallow boolean;
   if (Psubjurnal='OMS') then
      if ((select count(spb.oms) from spb where spb.oms=Pjurnal and spb.delete=0)>0) then
         set Pallow = false;
      else
         if ((select count(lph.oms) from lph where lph.oms=Pjurnal and lph.delete=0)>0) then
           set Pallow = false;
         else
           if ((select count(msd.oms) from msd,msk where msd.oms=Pjurnal and msd.msk=msk.msk and msk.delete=0)>0) then
             set Pallow = false;
           else
             if ((select count(msl.oms) from msl,msk where msl.oms=Pjurnal and msl.msk=msk.msk and msk.delete=0)>0) then
               set Pallow = false;
             else
               set Pallow = true;
             end if;
           end if;
        end if;
      end if;
   end if;
   if (Psubjurnal='PRQ') then
      if ((select count(lph.oms) from lph where lph.oms=Pjurnal and lph.delete=0)>0) then
         set Pallow = false;
      else
         if ((select count(omd.oms) from omd,oms where omd.prq=Pjurnal and oms.oms=omd.oms and oms.delete=0)>0) then
           set Pallow = false;
         else
           set Pallow = true;
         end if;
      end if;
   end if;
   if (Psubjurnal='SPB') then
      if ((select count(lph.spb) from lph where lph.spb=Pjurnal and lph.delete=0)>0) then
         set Pallow = false;
      else
         set Pallow = true;
      end if;
   end if;
   if (Psubjurnal='LPH') then
      if ((select count(msl.lph) from msl,msk where msl.lph=Pjurnal and msl.msk=msk.msk and msk.delete=0)>0) then
         set Pallow = false;
      else
         set Pallow = true;
      end if;
   end if;
   if (Psubjurnal='MOR') then
      if ((select count(kld.okl) from klr,kld where kld.okl=Pjurnal and klr.delete=0 and kld.klr=klr.klr)>0) then
         set Pallow = false;
      else
         if ((select count(kll.klr) from kll,klr where kll.okl=Pjurnal and klr.klr = kll.klr and klr.delete=0)>0) then
             set Pallow = false;
         else
           if ((select count(spd.spm) from spd,spm where spm.spm=spd.spm and spd.mor=Pjurnal and spm.delete=0)>0) then
             set Pallow = false;
           else
             if ((select count(lhd.lhp) from lhp,lhd where lhd.lhp=lhp.lhp and lhd.mor=Pjurnal and lhp.delete=0)>0) then
               set Pallow = false;
             else
               set Pallow = true;
             end if;
           end if;
         end if;
      end if;
   end if;
   if (PSubjurnal='OKL') then
      if ((select count(mor) from mor where okl=Pjurnal and `delete`=0)>0) then
         set Pallow = false;
      else
        if ((select count(spd.spm) from spd,spm where spd.okl=Pjurnal and spm.spm=spd.spm and spm.delete=0)>0) then
           set Pallow = false;
        else
           if ((select count(kld.okl) from kld,klr where kld.klr=klr.klr and kld.okl=Pjurnal and klr.delete=0)>0) then
             set Pallow = false;
           else
             if ((select count(kll.klr) from kll,klr where kll.okl=Pjurnal and klr.klr = kll.klr and klr.delete=0)>0) then
               set Pallow = false;
             else
               set Pallow = true;
             end if;
           end if;
        end if;
      end if;
   end if;
  if (PSubjurnal='RMA') then
      if ((select count(rms.rma) from rms where rms.rma=Pjurnal and rms.delete=0)>0) then
         set Pallow = false;
      else
           set Pallow = true;
      end if;
   end if;
  if (PSubjurnal='RMS') then
      if ((select count(spm.okl_rms) from spm where spm.okl_rms=Pjurnal and spm.delete=0)>0) then
         set Pallow = false;
      else
         if ((select count(rms) from rsd,rsk where rms=Pjurnal and rsd.rsk=rsk.rsk and rsk.delete=0)>0) then
           set Pallow = false;
         else
           if ((select count(rms) from rsl,rsk where rms=Pjurnal and rsl.rsk=rsk.rsk and rsk.delete=0)>0) then
             set Pallow = false;
           else
             set Pallow = true;
           end if;
         end if;
      end if;
   end if;
   if (PSubjurnal='SPR') then
      if ((select count(rka.spr) from rka where rka.spr=Pjurnal and rka.delete=0)>0) then
         set Pallow = false;
      else
         set Pallow = true;
      end if;
   end if;
   if (PSubjurnal='SJR') then
      if ((select count(sjr) from rsl,rsk where sjr=Pjurnal and rsl.rsk=rsk.rsk and rsk.delete = 0)>0) then
         set Pallow = false;
      else
         set Pallow = true;
      end if;
   end if;
   if (PSubjurnal='SPM') then
      if ((select count(sjr.spm) from sjr where sjr.spm=Pjurnal and sjr.delete=0)>0) then
         set Pallow = false;
      else
         if ((select count(sjh.spm) from sjh where sjh.spm=Pjurnal and sjh.delete=0)>0) then
           set Pallow = false;
         else
           set Pallow = true;
         end if;
      end if;
   end if;
   if (PSubjurnal='RSM') then
      if ((select count(spr.rsm) from spr where spr.rsm=Pjurnal and spr.delete=0)>0) then
         set Pallow = false;
      else
         if ((select count(rka.rsm) from rka where rka.rsm=Pjurnal and rka.delete=0)>0) then
            set Pallow = false;
         else
            set Pallow = true;
         end if;
      end if;
   end if;
  if (PSubjurnal='SJH') then
      if ((select count(kll.klr) from kll,klr where kll.sjh=Pjurnal and klr.klr=kll.klr and klr.delete=0)>0) then
         set Pallow = false;
      else
         set Pallow = true;
      end if;
   end if;
   if (PSubjurnal='KAS') then
      if ((select count(umk.klr) from umk,klr where umk.jurnal=Pjurnal and umk.klr=klr.klr and klr.delete=0)>0) then
         set Pallow = false;
      else
         if ((select count(umkp.msk) from umkp,msk where umkp.jurnal=Pjurnal and umkp.msk=msk.msk and msk.delete=0)>0) then
            set Pallow = false;
         else
            set Pallow = true;
         end if;
      end if;
   end if;
   if (Psubjurnal = 'MSK') then
      if (select count(kad.kas) from kad, kas where kad.kas=kas.kas and kad.jurnal=PJurnal and kas.`delete`=0) > 0 then
         set Pallow = false;
      else
         set Pallow = true;
      end if;
   end if;
   return Pallow;
END//
DELIMITER ;

-- Dumping structure for function wis_inventory.FCekEdited
DROP FUNCTION IF EXISTS `FCekEdited`;
DELIMITER //
CREATE FUNCTION `FCekEdited`(Psubjurnal char(6),Pjurnal varchar(15)) RETURNS tinyint(1)
BEGIN
   declare Pallow boolean;
return true;
END//
DELIMITER ;

-- Dumping structure for function wis_inventory.FCekProses
DROP FUNCTION IF EXISTS `FCekProses`;
DELIMITER //
CREATE FUNCTION `FCekProses`(Puser varchar(15), Pjurnal varchar(15)) RETURNS varchar(15)
    READS SQL DATA
    DETERMINISTIC
BEGIN
    declare Pchuser varchar(15);
    declare Pperiod varchar(4);
    set Pperiod = mid(Pjurnal,5,4);
    set Pchuser = (select proses.chusr from proses where jurnal=Pjurnal);
    if (Pchuser is null) then
      insert into proses values(Pperiod,date_format(current_timestamp,"%d/%m/%Y %H:%i"),Puser,Pjurnal,0);
      set Pchuser = Puser;
    end if;
    return Pchuser;
END//
DELIMITER ;

-- Dumping structure for function wis_inventory.Fdate2period
DROP FUNCTION IF EXISTS `Fdate2period`;
DELIMITER //
CREATE FUNCTION `Fdate2period`(Pdate datetime) RETURNS char(4)
BEGIN
return trim(concat(right(year(Pdate),2),if(month(Pdate)>9,month(Pdate),concat('0',month(Pdate)))));
END//
DELIMITER ;

-- Dumping structure for table wis_inventory.fmc
DROP TABLE IF EXISTS `fmc`;
CREATE TABLE IF NOT EXISTS `fmc` (
  `fml` varchar(15) NOT NULL,
  `cct` varchar(15) NOT NULL,
  `remark` varchar(45) NOT NULL,
  PRIMARY KEY  (`fml`,`cct`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.fmc: ~0 rows (approximately)
/*!40000 ALTER TABLE `fmc` DISABLE KEYS */;
/*!40000 ALTER TABLE `fmc` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.fmd
DROP TABLE IF EXISTS `fmd`;
CREATE TABLE IF NOT EXISTS `fmd` (
  `fml` varchar(5) NOT NULL default '',
  `acc` char(15) default NULL,
  `name` varchar(70) default NULL,
  `operator` varchar(1) default NULL,
  `value` int(10) unsigned default NULL,
  `grouping` varchar(50) default NULL,
  `no_urut` int(10) unsigned NOT NULL,
  PRIMARY KEY  (`fml`,`no_urut`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.fmd: ~0 rows (approximately)
/*!40000 ALTER TABLE `fmd` DISABLE KEYS */;
/*!40000 ALTER TABLE `fmd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.fmd1
DROP TABLE IF EXISTS `fmd1`;
CREATE TABLE IF NOT EXISTS `fmd1` (
  `fml` varchar(5) NOT NULL default '',
  `acc` char(15) default NULL,
  `name` varchar(70) default NULL,
  `operator` varchar(1) default NULL,
  `value` int(10) unsigned default NULL,
  `grouping` varchar(50) default NULL,
  `no_urut` int(10) unsigned NOT NULL,
  PRIMARY KEY  (`fml`,`no_urut`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.fmd1: ~0 rows (approximately)
/*!40000 ALTER TABLE `fmd1` DISABLE KEYS */;
/*!40000 ALTER TABLE `fmd1` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.fml
DROP TABLE IF EXISTS `fml`;
CREATE TABLE IF NOT EXISTS `fml` (
  `fml` varchar(5) NOT NULL,
  `name` varchar(45) default NULL,
  `desc` varchar(45) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  PRIMARY KEY  (`fml`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.fml: ~0 rows (approximately)
/*!40000 ALTER TABLE `fml` DISABLE KEYS */;
/*!40000 ALTER TABLE `fml` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.fpd
DROP TABLE IF EXISTS `fpd`;
CREATE TABLE IF NOT EXISTS `fpd` (
  `fpj` varchar(15) default NULL,
  `jurnal` varchar(15) default NULL,
  `valdpp` double default NULL,
  `rem` varchar(50) default NULL,
  `no` smallint(5) default NULL,
  `valppn` double default NULL,
  `valsubtotal` double default NULL,
  `valdisc` double default NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.fpd: ~0 rows (approximately)
/*!40000 ALTER TABLE `fpd` DISABLE KEYS */;
/*!40000 ALTER TABLE `fpd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.fpj
DROP TABLE IF EXISTS `fpj`;
CREATE TABLE IF NOT EXISTS `fpj` (
  `fpj` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `sub` varchar(15) NOT NULL,
  `ppn` smallint(5) default NULL,
  `disc` double default NULL,
  `remark` varchar(50) default NULL,
  `valdpp` double default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL,
  `cur` varchar(4) default NULL,
  `kurs` double default NULL,
  `fpjdate` datetime default NULL,
  `umk` double default NULL,
  `fpjimport` smallint(5) default NULL,
  `no_fpj` varchar(20) default NULL,
  `valppn` double default NULL,
  PRIMARY KEY  (`fpj`,`period`,`sub`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.fpj: ~0 rows (approximately)
/*!40000 ALTER TABLE `fpj` DISABLE KEYS */;
/*!40000 ALTER TABLE `fpj` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.fpjumd
DROP TABLE IF EXISTS `fpjumd`;
CREATE TABLE IF NOT EXISTS `fpjumd` (
  `fpjumk` varchar(20) NOT NULL,
  `nofpj` varchar(20) NOT NULL,
  `oms` varchar(15) NOT NULL,
  `inv` varchar(15) NOT NULL,
  `val` double NOT NULL,
  `remark` varchar(150) NOT NULL default ' ',
  `no` smallint(5) NOT NULL default '0',
  `qty` double default '0',
  `unit` varchar(6) default NULL,
  `price` double default '0',
  PRIMARY KEY  (`fpjumk`,`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.fpjumd: ~0 rows (approximately)
/*!40000 ALTER TABLE `fpjumd` DISABLE KEYS */;
/*!40000 ALTER TABLE `fpjumd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.fpjumk
DROP TABLE IF EXISTS `fpjumk`;
CREATE TABLE IF NOT EXISTS `fpjumk` (
  `fpjumk` varchar(20) NOT NULL,
  `nofpj` varchar(20) NOT NULL,
  `sub` varchar(15) default NULL,
  `umk` double default NULL,
  `date` datetime default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` char(4) default NULL,
  `fpjdate` datetime default NULL,
  `cur` varchar(4) default NULL,
  `kurs` double default NULL,
  `delete` bit(1) NOT NULL default '\0',
  `remark` varchar(100) default '',
  `fpganti` int(11) default '0',
  PRIMARY KEY  (`fpjumk`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.fpjumk: ~0 rows (approximately)
/*!40000 ALTER TABLE `fpjumk` DISABLE KEYS */;
/*!40000 ALTER TABLE `fpjumk` ENABLE KEYS */;

-- Dumping structure for function wis_inventory.F_ConcateBaris
DROP FUNCTION IF EXISTS `F_ConcateBaris`;
DELIMITER //
CREATE FUNCTION `F_ConcateBaris`(tablename varchar(3),jurnal varchar(15)) RETURNS varchar(50)
BEGIN
DECLARE kolom,brs varchar(50);
DECLARE DONe,i INT DEFAULT 0;
  DECLARE baris CURSOR FOR
  select distinct Concat(substr(okl,5,4),'-',cast(right(okl,5) as SIGNED)) from sjd where sjh=jurnal and tablename='sjd' order by okl desc;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONe = 1;
set kolom='';
set i=0;
OPEN baris;
  REPEAT
     FETCH baris INTO brs;
         if DONe<>1 then
              set kolom= concat(trim(brs),if(i=0,'',','),trim(kolom));
              set i=i+1;
          end if;
     UNTIL DONe=1
  END REPEAT;
close baris;
return kolom;
END//
DELIMITER ;

-- Dumping structure for function wis_inventory.F_Concateinvklr
DROP FUNCTION IF EXISTS `F_Concateinvklr`;
DELIMITER //
CREATE FUNCTION `F_Concateinvklr`(Pjurnal varchar(15),kode int) RETURNS varchar(800)
BEGIN
DECLARE Done INT DEFAULT 0;
DECLARE noHutang longtext default '';
DECLARE nohut varchar(50);
DECLARE cur_nohut CURSOR FOR
    select distinct kld.inv as noHutang
    from kld where klr = Pjurnal;
DECLARE cur_unit CURSOR FOR
    select sjd.unit as noHutang from kll,sjd where kll.sjh=sjd.sjh and kll.klr=pjurnal limit 1;
DECLARE cur_inv CURSOR FOR
   select distinct sjd.inv as noHutang from kll,sjd where kll.sjh=sjd.sjh and kll.klr=pjurnal;
DECLARE cur_invname CURSOR FOR
   select distinct inv.name as noHutang
    from kld,inv where kld.inv=inv.inv and kld.klr = Pjurnal;
DECLARE cur_invnama CURSOR FOR
   select distinct sjd.remark as noHutang from kll,sjd where kll.sjh=sjd.sjh and kll.klr=pjurnal;
DECLARE cur_pib CURSOR FOR
   select distinct docpd.no_bc as noHutang
      from kll,sjh,spm,docpd,docp where docp.oms=kll.okl and docp.docp=docpd.docp and trim(spm.nodoc)=trim(docpd.nodoc) and kll.sjh=sjh.sjh and sjh.spm=spm.spm and kll.klr= Pjurnal;
DECLARE cur_payhp CURSOR FOR
   select distinct jurnal as noHutang
      from payhp where reff= Pjurnal  and subjurnal<>'KLR';
DECLARE CONTINUE HANDLER FOR NOT FOUND SET Done=1;
if (kode=1) then
OPEN cur_nohut;
    WHILE Done=0 DO
      set nohut='';
      FETCH cur_nohut INTO nohut;
      if (nohut <> '') then
        set noHutang = concat(noHutang,if(noHutang<>'',", ",""),nohut);
      end if;
    END WHILE;
  CLOSE cur_nohut;
end if;
if (kode=0) then
    OPEN cur_inv;
      WHILE Done=0 DO
      set nohut='';
      FETCH cur_inv INTO nohut;
      if (nohut <> '') then
        set noHutang = concat(noHutang,if(noHutang<>'',", ",""),nohut);
      end if;
    END WHILE;
    CLOSE cur_inv;
end if;
if (kode=2) then
OPEN cur_invname;
    WHILE Done=0 DO
      set nohut='';
      FETCH cur_invname INTO nohut;
      if (nohut <> '') then
        set noHutang = concat(noHutang,if(noHutang<>'',", ",""),nohut);
      end if;
    END WHILE;
  CLOSE cur_invname;
end if;
if (kode=21) then
OPEN cur_invnama;
    WHILE Done=0 DO
      set nohut='';
      FETCH cur_invnama INTO nohut;
      if (nohut <> '') then
        set noHutang = concat(noHutang,if(noHutang<>'',", ",""),nohut);
      end if;
    END WHILE;
  CLOSE cur_invnama;
end if;
if (kode=3) then
OPEN cur_pib;
    WHILE Done=0 DO
      set nohut='';
      FETCH cur_pib INTO nohut;
      if (nohut <> '') then
        set noHutang = concat(noHutang,if(noHutang<>'',", ",""),nohut);
      end if;
    END WHILE;
  CLOSE cur_pib;
end if;
if (kode=4) then
OPEN cur_payhp;
    WHILE Done=0 DO
      set nohut='';
      FETCH cur_payhp INTO nohut;
      if (nohut <> '') then
        set noHutang = concat(noHutang,if(noHutang<>'',", ",""),nohut);
      end if;
    END WHILE;
  CLOSE cur_payhp;
end if;
if (kode=5) then
OPEN cur_unit;
    WHILE Done=0 DO
      set nohut='';
      FETCH cur_unit INTO nohut;
      if (nohut <> '') then
        set noHutang = concat(noHutang,if(noHutang<>'',", ",""),nohut);
      end if;
    END WHILE;
  CLOSE cur_unit;
end if;
return noHutang;
END//
DELIMITER ;

-- Dumping structure for function wis_inventory.F_GetAwalKodebrg
DROP FUNCTION IF EXISTS `F_GetAwalKodebrg`;
DELIMITER //
CREATE FUNCTION `F_GetAwalKodebrg`(Pjurnal char(15)) RETURNS int(11)
BEGIN
  declare tleftinv  integer;
 select left(inv,1) into tleftinv from sjd where sjh=(select sjh from kll where klr=Pjurnal limit 1) limit 1;
 return tleftinv;
END//
DELIMITER ;

-- Dumping structure for function wis_inventory.F_getdatepelunasan
DROP FUNCTION IF EXISTS `F_getdatepelunasan`;
DELIMITER //
CREATE FUNCTION `F_getdatepelunasan`(Pjurnal varchar(15)) RETURNS datetime
    DETERMINISTIC
BEGIN
declare tgl datetime;
  set tgl = (select `date` as tgl
     from payhp where reff= Pjurnal and subjurnal<>'KLR' limit 1);
return tgl;
END//
DELIMITER ;

-- Dumping structure for function wis_inventory.F_GetKonversi
DROP FUNCTION IF EXISTS `F_GetKonversi`;
DELIMITER //
CREATE FUNCTION `F_GetKonversi`(PInv char(15), PUnit char(6)) RETURNS double
BEGIN
declare tkonversi double;
if ((select count(konversi)from konversi where inv=PInv and unit = PUnit) < 1) then
 set tkonversi=1;
else
select ifnull(konversi,1) into tkonversi from konversi where inv=PInv and unit = PUnit;
end if;
return tkonversi;
END//
DELIMITER ;

-- Dumping structure for function wis_inventory.F_getnopajak1
DROP FUNCTION IF EXISTS `F_getnopajak1`;
DELIMITER //
CREATE FUNCTION `F_getnopajak1`(psub varchar(15)) RETURNS varchar(19)
BEGIN
declare noawal,noakhir,nofpj varchar(19);
declare tglaktif  date;
declare nofpj1 integer;
if (select count(sub) from no_pjkd where aktif=1 and sub=psub)<=0 then
  set psub='00000';
end if;
set noawal= (select trim(no_awal) from no_pjkd where aktif=1 and sub=psub) ;
set noakhir = (select trim(no_akhir) from no_pjkd where aktif=1 and sub=psub) ;
set tglaktif = (select tgl from no_pjkd where aktif=1 and sub=psub);
if psub<>'00000' then
select max(fpj) as fpj  into nofpj from (
  select substr(fpj,12,8) fpj from klr where substr(fpj,5,6)=substr(noawal,5,6) and sub=psub
  union all
   select substr(fpjumk.nofpj,12,8) from fpjumk where substr(fpjumk.nofpj,5,6)=substr(noawal,5,6) and sub=psub
) as xfpj ;
else
 select max(fpj) as fpj  into nofpj from (
   select substr(fpj,12,8) fpj from klr where substr(fpj,5,6)=substr(noawal,5,6) and sub not in (select sub from no_pjkd where aktif=1)
     union all
   select substr(fpjumk.nofpj,12,8) from fpjumk where substr(fpjumk.nofpj,5,6)=substr(noawal,5,6) and sub not in (select sub from no_pjkd where aktif=1)
) as xfpj ;
end if;
if (nofpj is null) then
   set nofpj=noawal;
elseif (trim(nofpj) > trim(substr(noawal,12,8)) and trim(nofpj) >= trim(substr(noakhir,12,8))) then
   set nofpj = (select no_awal from no_pjkd where tgl>tglaktif and sub=psub order by tgl limit 1);
   update no_pjkd set aktif=0 where sub=psub;
   update no_pjkd set aktif=1 where trim(no_awal)=nofpj and sub=psub;
  else
   set nofpj= concat(left(noawal,11),lpad(nofpj + 1,8,'0'));
   
  end if;
return nofpj;
END//
DELIMITER ;

-- Dumping structure for function wis_inventory.F_getnumber
DROP FUNCTION IF EXISTS `F_getnumber`;
DELIMITER //
CREATE FUNCTION `F_getnumber`(nobg varchar(15)) RETURNS varchar(15)
BEGIN
set nobg = (select replace(replace(replace(replace(replace(replace(replace(replace(upper(nobg),'A',''),'B',''),'C',''),'D',''),'E',''),'F',''),'G',''),'L','') );
return nobg;
END//
DELIMITER ;

-- Dumping structure for function wis_inventory.F_getpelunasan
DROP FUNCTION IF EXISTS `F_getpelunasan`;
DELIMITER //
CREATE FUNCTION `F_getpelunasan`(Pjurnal varchar(15),kode int,pdatea datetime,pdatez datetime) RETURNS double
    DETERMINISTIC
BEGIN
declare val1 double;
if (kode=1) then
  set val1 = (select ifnull(sum(ifnull(val,0)*if(dk='K',1,-1)),0) as total
     from payhp where reff= Pjurnal   and subjurnal<>'KLR' and payhp.date>= pdatea and payhp.date < adddate(pdatez,1));
 else
   if (kode=2) then
   set val1 = (select ifnull(sum(ifnull(val,0)*if(dk='K',1,-1)),0) as total
      from payhp where reff= Pjurnal  and subjurnal<>'KLR' and payhp.date > pdatez);
   end if;
end if;
if (kode=3) then
   set val1 = (select ifnull(sum(ifnull(val,0)*if(dk='D',1,-1)),0) as total
      from acd where jurnal= Pjurnal and acc like '51%' and acd.date>= pdatea and acd.date < adddate(pdatez,1));
end if;
if (kode=4) then
   set val1 = (select ifnull(sum(ifnull(val,0)*if(dk='D',1,-1)),0) as total
      from acd where jurnal in (select rll.rka from rll where rll.rkl= Pjurnal) and acc like '51%' and acd.date>= pdatea and acd.date < adddate(pdatez,1));
end if;
if (kode=5) then
   set val1 = (select ifnull(sum(ifnull(val,0)*if(dk='D',1,-1)),0) as total
      from acd where jurnal in (select umd.okl from umd where umh= Pjurnal and umd.okl<>'') and acc like '51%' and acd.date>= pdatea and acd.date < adddate(pdatez,1));
end if;
return val1;
END//
DELIMITER ;

-- Dumping structure for function wis_inventory.F_GetPrice
DROP FUNCTION IF EXISTS `F_GetPrice`;
DELIMITER //
CREATE FUNCTION `F_GetPrice`(PInv char(15),DocDate datetime) RETURNS double
BEGIN
  declare pricekecil double;
  set pricekecil = (select ifnull(harga,0) from wis_inventory_trial.hrgjl a,wis_inventory_trial.hrgjld b where a.hrgjl=b.hrgjl and b.inv=Pinv
                 and a.grphrgjl='GroupWings' and date(DocDate) between a.tglawal and a.tglakhir order by a.tglakhir limit 1 );
if (pricekecil=0 or pricekecil is null) then
set pricekecil = (select sjd.price as price from kld,klr,kll,sjd where kld.klr=klr.klr and kll.klr=kld.klr and kld.inv=kll.inv and kll.sjh=sjd.sjh and kll.inv=sjd.inv and klr.sub='1110002'
and kld.inv=Pinv and klr.date<= DocDate order by klr.klr desc limit 1);
end if;
return pricekecil;
END//
DELIMITER ;

-- Dumping structure for function wis_inventory.F_GetQty
DROP FUNCTION IF EXISTS `F_GetQty`;
DELIMITER //
CREATE FUNCTION `F_GetQty`(PInv char(15), PFromUnit char(6), PQty double, PToUnit char(6)) RETURNS double
BEGIN
declare qty double;
declare qtyBase double;
if (PFromUnit = PToUnit) then
  set qty = PQty;
else
  set qtyBase = PQty * (select F_GetKonversi(PInv, PFromUnit));
  set qty = qtyBase / (select F_GetKonversi(PInv, PToUnit));
end if;
return qty;
END//
DELIMITER ;

-- Dumping structure for function wis_inventory.F_GetStock
DROP FUNCTION IF EXISTS `F_GetStock`;
DELIMITER //
CREATE FUNCTION `F_GetStock`(
	`Pdate` datetime,
	`Pinv` char(15),
	`Ploc` char(15),
	`Pnodsg` CHAR(50)
) RETURNS double
BEGIN
declare Pperiod varchar(4);
declare stockQty double;
set Pperiod=(select Fdate2period(Pdate));
 select sum(qlast) into stockQty
 from
 (
   select rin.inv, rin.loc, rin.qlast, rin.vlast
       from rin
       where rin.period=Pperiod and rin.inv=Pinv
         and rin.loc=Ploc
         and rin.nodsg=Pnodsg
         and trim(rin.nodsg)=Pnodsg
   union all
   select ind.inv, ind.loc, sum(ifnull(qty,0)*if(dk='D',1,-1)) as qlast, sum(ifnull(val,0)*if(dk='D',1,-1)) as vlast
      from ind
      where ind.period=Pperiod and ind.date < adddate(Pdate,1)
        and ind.inv=Pinv
        and ind.loc=Ploc
        and trim(ind.nodsg)=Pnodsg
      group by ind.inv, ind.loc
 ) as oawal group by inv,loc;
return stockQty;
END//
DELIMITER ;

-- Dumping structure for function wis_inventory.F_GetStockAll
DROP FUNCTION IF EXISTS `F_GetStockAll`;
DELIMITER //
CREATE FUNCTION `F_GetStockAll`(Pdate datetime, Pinv char(15)) RETURNS double
BEGIN
declare Pperiod varchar(4);
declare stockQty double;
set Pperiod=(select Fdate2period(Pdate));
 select sum(qlast) into stockQty
 from
 (
   select rin.inv, rin.qlast, rin.vlast
       from rin
       where rin.period=Pperiod and rin.inv=Pinv
   union all
   select ind.inv, sum(ifnull(qty,0)*if(dk='D',1,-1)) as qlast, sum(ifnull(val,0)*if(dk='D',1,-1)) as vlast
      from ind
      where ind.period=Pperiod and ind.date < adddate(Pdate,1)
        and ind.inv=Pinv
      group by ind.inv
 ) as oawal group by inv;
return stockQty;
END//
DELIMITER ;

-- Dumping structure for function wis_inventory.F_HitVarian
DROP FUNCTION IF EXISTS `F_HitVarian`;
DELIMITER //
CREATE FUNCTION `F_HitVarian`(PJurnal char(15), PSubjurnal char(3)) RETURNS double
BEGIN
declare varian double;
if (PSubjurnal='MSK') then
set varian= (select sum(val)/(select sum(msl.val) val from msl where msk=PJurnal) val from
             (
              select msk,sum(msd.dpp*msd.kurs) val from msd where msk=PJurnal and msd.oms<>'' group by msd.msk
              union
              select msk,-sum(val) as val from msl where msk=PJurnal group by msk
             ) as x
            );
end if;
if (PSubjurnal='KLR') then
set varian= (select sum(val)/(select sum(kll.val) val from kll where klr=PJurnal) val from
             (
              select klr,sum(kld.dpp) val from kld where klr=PJurnal group by kld.klr
              union
              select klr,-sum(val) as val from kll where klr=PJurnal group by klr
             ) as x
            );
end if;
if (PSubjurnal='RSK') then
set varian= (select sum(val)/(select sum(rsl.val) val from rsl where rsk=PJurnal) val from
             (
              select rsk,sum(rsd.dpp) val from rsd where rsk=PJurnal group by rsd.rsk
              union
              select rsk,-sum(val) as val from rsl where rsk=PJurnal group by rsk
             ) as x
            );
end if;
return varian;
END//
DELIMITER ;

-- Dumping structure for function wis_inventory.F_MakePO
DROP FUNCTION IF EXISTS `F_MakePO`;
DELIMITER //
CREATE FUNCTION `F_MakePO`(
	DocNo                    varchar(15),
	DocDate                  datetime,
	Acct                     varchar(15),
	Product                  varchar(15),
  QualityOfProduct         varchar(10),
	ShipmentTerm             varchar(6),
	ShipmentBy               varchar(25),
  DeliveryDate             datetime,
	Qty                      double,
	UoMQty                   int(6),
	Tolerance                double,
	Ccy                      varchar(3),
	Rate                     double,
	Price                    double,
	Discount                 double,
	Amount                   double,
	VAT                      bit(1),
	Specification            longtext,
  Remarks                  longtext,
  PaymentTerms1            double,
  PaymentTerms1Date        datetime,
  PaymentTerms2            double,
  PaymentTerms2Date        datetime,
  PaymentTerms3            double,
  PaymentTerms3Date        datetime
) RETURNS varchar(15)
BEGIN
  declare tperiod varchar(4);
  declare toms varchar(15);
  declare tremark varchar(50);
  declare tunit varchar(6);
  declare tdisc double default 0;
  declare tppn double default 0;
  declare tval double default 0;
  declare subtotal double default 0;
  declare total double default 0;
  declare tqty double default 0;
  declare tDueDate datetime;
  declare nrows int;
  declare rownum int default 1;
  declare data_found int default 0;
  set tperiod = date_format(`DocDate`,'%y%m');
  set tDueDate = PaymentTerms1Date;
  if PaymentTerms2Date is not null and tDueDate < PaymentTerms2Date then
    set tDueDate = PaymentTerms2Date;
  end if;
  if PaymentTerms3Date is not null and tDueDate < PaymentTerms3Date then
    set tDueDate = PaymentTerms3Date;
  end if;
  if DocNo = '' or DocNo is null then
    
    select concat('POL-', tperiod, '-', lpad(ifnull(max(right(oms,6)),0)+1,6,'0')) as oms INTO toms
    from `wis_inventory_trial`.oms
    where period=tperiod and group_=1;
  else
    
    set toms = DocNo;
    select count(*) into data_found from `wis_inventory_trial`.oms where oms=DocNo and `delete`=false and `close`=false and `chusr`='external';
    if data_found = 0 then
      RETURN '';
    end if;
  end if;
  replace into `wis_inventory_trial`.oms(oms, `date`, sub, term, shippedby, delivery_from, delivery_to, cur, kurs, ppn,
                              val, spec, remark, pay1, pay1date, pay2, pay2date, pay3, pay3date,
                              
                              chtime, chusr, period, `delete`, aprov, `close`, duedate, group_)
  values (toms, `DocDate`, trim(Acct), ShipmentTerm, ShipmentBy, DeliveryDate, DeliveryDate, Ccy, Rate, VAT,
          if(vat=1,amount/1.1,amount), Specification, Remarks, PaymentTerms1, PaymentTerms1Date, PaymentTerms2, PaymentTerms2Date, PaymentTerms3, PaymentTerms3Date,
          
          date_format(now(),'%d/%m/%Y %H:%i'), 'external', tperiod, false, true, false, tDueDate, 1);
  replace into `external`.oms(oms, `date`, sub, term, shippedby, delivery_from, delivery_to, cur, kurs, ppn,
                              val, spec, remark, pay1, pay1date, pay2, pay2date, pay3, pay3date,
                              
                              chtime, chusr, period, `delete`, aprov, `close`, duedate, group_)
  values (toms, `DocDate`, trim(Acct), ShipmentTerm, ShipmentBy, DeliveryDate, DeliveryDate, Ccy, Rate, VAT,
          Amount, Specification, Remarks, PaymentTerms1, PaymentTerms1Date, PaymentTerms2, PaymentTerms2Date, PaymentTerms3, PaymentTerms3Date,
          
          date_format(now(),'%d/%m/%Y %H:%i'), 'external', tperiod, false, true, false, tDueDate, 1);
  if DocNo <> '' and DocNo is not null then
    delete from `wis_inventory_trial`.omd where oms=DocNo;
    delete from `external`.omd where oms=DocNo;
  end if;
  if UoMQty = 0 then
    set tunit = 'KG';
  elseif UoMQty = 1 then
    set tunit = 'TON';
  end if;
  select ifnull(name,'') into tremark from `wis_inventory_trial`.inv where inv=Product;
  select (Qty * konversi) into tqty from `wis_inventory_trial`.konversi where inv=Product and unit=tunit;
  insert into `wis_inventory_trial`.omd(inv, qop, qty1, unit, toleransi, price, disc, val,
                             oms, remark, `no`, qty)
  values (Product, QualityOfProduct, Qty, tunit, Tolerance, Price, Discount, price*qty1,
          toms, tremark, 1, tqty);
  insert into `external`.omd(inv, qop, qty1, unit, toleransi, price, disc, val,
                             oms, remark, `no`, qty)
  values (Product, QualityOfProduct, Qty, tunit, Tolerance, Price, Discount, price*qty1,
          toms, tremark, 1, tqty);
  Call `wis_inventory_trial`.SP_Save(`DocDate`, 'OMS', toms);
  RETURN toms;
END//
DELIMITER ;

-- Dumping structure for function wis_inventory.F_MakeSO
DROP FUNCTION IF EXISTS `F_MakeSO`;
DELIMITER //
CREATE FUNCTION `F_MakeSO`(
	CustomerPORefference     varchar(25),
	DocNo                    varchar(15),
	DocDate                  datetime,
	Acct                     varchar(15),
	Product                  varchar(15),
  QualityOfProduct         varchar(10),
	Shipment                 varchar(25),
	ShipmentBy               varchar(25),
  DeliveryDate             datetime,
	Qty                      double,
	UoMQty                   int(6),
	Tolerance                double,
	Ccy                      varchar(3),
	Rate                     double,
	Price                    double,
	Discount                 double,
	Amount                   double,
	VAT                      bit(1),
	Specification            longtext,
	Remarks                  longtext,
	TermsOfPayment           double
) RETURNS varchar(15)
BEGIN
  declare tperiod varchar(4);
  declare tokl varchar(15);
  declare tremark varchar(50);
  declare tunit varchar(6);
  declare tdisc double default 0;
  declare tppn double default 0;
  declare tval double default 0;
  declare subtotal double default 0;
  declare total double default 0;
  declare tqty double default 0;
  declare data_update varchar(15);
  declare nrows int;
  declare rownum int default 1;
  declare data_found int default 0;
  set tperiod = date_format(`DocDate`,'%y%m');
  set tokl='';
  if DocNo = '' or DocNo is null then
  
    select okl into data_update from `wis_inventory_trial`.nopoc where nopoc=CustomerPORefference and `delete`=false and `close`=false ;
    
    if dataupdate<>'' then
       select sjd.sjh into data_found from wis_inventory_trial.sjd as sjd,wis_inventory_trial.sjh as sjh where sjh.sjh=sjd.sjh and sjd.okl=dataupdate;
       if datafound >=1 then
            RETURN 'Can_t Update';
       else
            set tokl = data_update ;
       end if;
    else
    
      select concat('SOL-', tperiod, '-', lpad(ifnull(max(right(okl,6)),0)+1,6,'0')) as okl INTO tokl
      from `wis_inventory_trial`.okl
      where period=tperiod;
    end if;
  else
    
    set tokl = DocNo;
    select count(*) into data_found from `wis_inventory_trial`.okl where okl=DocNo and `delete`=false and `close`=false and `chusr`='external';
    if data_found = 1 then
      RETURN '';
    end if;
  end if;
if DocNo = '' or DocNo is null then
  replace into `wis_inventory_trial`.okl(nopoc, okl, `date`, sub, shipment, shipby, delivery_from, delivery_to,
                              cur, kurs, ppn, val, spec, remark, noofdaypay, 
                              
                              chtime, chusr, period, `close`, `delete`, withMO, aprov, duedate)
  values (CustomerPORefference, tokl, DocDate, trim(Acct), Shipment, ShipmentBy, DeliveryDate, DeliveryDate,
          Ccy, Rate, VAT, Amount, Specification, Remarks, TermsOfPayment, 
          
          date_format(now(),'%d/%m/%Y %H:%i'), 'external', tperiod, false, false, false, true, date_add(DocDate, interval TermsOfPayment DAY));
  replace into `external`.okl(nopoc, okl, `date`, sub, shipment, shipby, delivery_from, delivery_to,
                              cur, kurs, ppn, val, spec, remark, noofdaypay, 
                              
                              chtime, chusr, period, `close`, `delete`, withMO, aprov, duedate)
  values (CustomerPORefference, tokl, DocDate, trim(Acct), Shipment, ShipmentBy, DeliveryDate, DeliveryDate,
          Ccy, Rate, VAT, Amount, Specification, Remarks, TermsOfPayment, 
          
          date_format(now(),'%d/%m/%Y %H:%i'), 'external', tperiod, false, false, false, true, date_add(DocDate, interval TermsOfPayment DAY));
  if UoMQty = 0 then
    set tunit = 'KG';
  elseif UoMQty = 1 then
    set tunit = 'TON';
  end if;
  select ifnull(name,'') into tremark from `wis_inventory_trial`.inv where inv=Product;
  select (Qty * konversi) into tqty from `wis_inventory_trial`.konversi where inv=Product and unit=tunit;
  insert into `wis_inventory_trial`.okd(inv, qop, qty1, unit, toleransi, price, disc, val,
                             okl, remark, `no`, qty)
  values (Product, QualityOfProduct, Qty, tunit, Tolerance, Price, Discount, (Price*Qty),
          tokl, tremark, 1, tqty);
  insert into `external`.okd(inv, qop, qty1, unit, toleransi, price, disc, val,
                             okl, remark, `no`, qty)
  values (Product, QualityOfProduct, Qty, tunit, Tolerance, Price, Discount, (Price*Qty),
          tokl, tremark, 1, tqty);
  Call `wis_inventory_trial`.SP_Save(`DocDate`,'OKL',tokl);
end if;
  RETURN tokl;
END//
DELIMITER ;

-- Dumping structure for function wis_inventory.F_MakeSOret_Wing
DROP FUNCTION IF EXISTS `F_MakeSOret_Wing`;
DELIMITER //
CREATE FUNCTION `F_MakeSOret_Wing`(
	CustomerPORefference     varchar(25),
  CustCode                 varchar(15),
	DocNo                    varchar(15),
	DocDate                  datetime,
	Product                  varchar(15),
	Qty                      double,
	UoM                      varchar(10),
	Tolerance                double,
	Ccy                      varchar(3),
	Rate                     double,
	Price                    double,
	Discount                 double,
	Amount                   double,
	VAT                      bit(1),
	Remarks                  longtext,
  number                   int
) RETURNS varchar(30)
BEGIN
  declare tperiod varchar(4);
  declare trsm varchar(15);
  declare tremark varchar(50);
  declare tunit varchar(6);
  declare tdisc double default 0;
  declare tppn double default 0;
  declare tval double default 0;
  declare subtotal double default 0;
  declare total double default 0;
  declare tqty double default 0;
  declare pricekecil double default 0;
  declare nrows int;
  declare rownum int default 1;
  declare data_found int default 0;
  set tperiod = date_format(`DocDate`,'%y%m');
  set trsm='';
  set VAT = 1;
  if DocNo = '' or DocNo is null then
    
    select concat('SOR-', tperiod, '-', lpad(ifnull(max(right(rsm,6)),0)+1,6,'0')) as rsm INTO trsm
    from `wis_inventory_trial`.rsm
    where period=tperiod;
  else
    
    set trsm = DocNo;
  end if;
  set pricekecil = (select max(ifnull(harga,0)) from wis_inventory_trial.hrgjl a,wis_inventory_trial.hrgjld b where a.hrgjl=b.hrgjl and b.inv=Product
                 and a.grphrgjl='GroupWings' and date(DocDate) < a.tglakhir order by a.tglakhir limit 1 );
 replace into `wis_inventory_trial`.rsm(nopoc, rsm, `date`, sub, cur, kurs, ppn, val, remark,
                              chtime, chusr, period, `close`, `delete`, duedate)
  values (CustomerPORefference, trsm, DocDate, trim(custcode), Ccy, Rate, VAT, Amount, Remarks,
          date_format(now(),'%d/%m/%Y %H:%i'), 'WingsSAP', tperiod, false, false, date_add(DocDate, interval 30 DAY));
  select ifnull(name,'') into tremark from `wis_inventory_trial`.inv where inv=Product;
  select (Qty * konversi) into tqty from `wis_inventory_trial`.konversi where inv=Product and unit=UoM;
  select ifnull((pricekecil * konversi),0) into Price from `wis_inventory_trial`.konversi where inv=Product and unit=UoM;
  replace into `wis_inventory_trial`.rsmd(inv, qty1, unit, toleransi, price, disc, val,
                             rsm, remark, `no`, qty, nodsg)
  values (Product, Qty, UoM, Tolerance, Price, Discount, (Price*Qty),
          trsm, tremark, number, tqty, '');
  RETURN concat(trsm);
END//
DELIMITER ;

-- Dumping structure for function wis_inventory.F_MakeSO_Wing
DROP FUNCTION IF EXISTS `F_MakeSO_Wing`;
DELIMITER //
CREATE FUNCTION `F_MakeSO_Wing`(
	CustomerPORefference     varchar(25),
	CustomerDORefference     varchar(25),
  CustCode                 varchar(15),
	DocNo                    varchar(15),
	DoNo                    varchar(15),
	DocDate                  datetime,
	Product                  varchar(15),
	Qty                      double,
	UoM                      varchar(10),
	Tolerance                double,
	Ccy                      varchar(3),
	Rate                     double,
	Price                    double,
	Discount                 double,
	Amount                   double,
	VAT                      bit(1),
	Remarks                  longtext
) RETURNS varchar(15)
BEGIN
  declare tperiod varchar(4);
  declare tokl varchar(15);
  declare tdoh varchar(15);
  declare tremark varchar(50);
  declare tunit varchar(6);
  declare tdisc double default 0;
  declare tppn double default 0;
  declare tval double default 0;
  declare subtotal double default 0;
  declare total double default 0;
  declare tqty double default 0;
  declare nrows int;
  declare rownum int default 1;
  declare data_found int default 0;
  set tperiod = date_format(`DocDate`,'%y%m');
set tokl='';
  if DocNo = '' or DocNo is null then
    
    select concat('SOL-', tperiod, '-', lpad(ifnull(max(right(okl,6)),0)+1,6,'0')) as okl INTO tokl
    from `wis_inventory_trial`.okl
    where period=tperiod;
    select concat('DOH-', tperiod, '-', lpad(ifnull(max(right(doh,6)),0)+1,6,'0')) as doh INTO tdoh
    from `wis_inventory_trial`.doh
    where period=tperiod;
  else
    
    set tokl = DocNo;
    select count(*) into data_found from `wis_inventory_trial`.okl where okl=DocNo and `delete`=false and `close`=false and `chusr`='wing';
    if data_found = 1 then
      RETURN '';
    end if;
  end if;
if DocNo = '' or DocNo is null then
  replace into `wis_inventory_trial`.okl(nopoc, okl, `date`, sub, cur, kurs, ppn, val, remark,
                              chtime, chusr, period, `close`, `delete`, withMO, aprov, duedate)
  values (CustomerPORefference, tokl, DocDate, trim(custcode),
          Ccy, Rate, VAT, Amount, Specification, Remarks,
          date_format(now(),'%d/%m/%Y %H:%i'), 'WingsSAP', tperiod, false, false, false, true, date_add(DocDate, interval 30 DAY));
  replace into `external`.okl(nopoc, okl, `date`, sub, cur, kurs, ppn, val, remark,
                              chtime, chusr, period, `close`, `delete`, withMO, aprov, duedate)
  values (CustomerPORefference, tokl, DocDate, trim(custcode),
          Ccy, Rate, VAT, Amount, Specification, Remarks,
          date_format(now(),'%d/%m/%Y %H:%i'), 'WingsSAP', tperiod, false, false, false, true, date_add(DocDate, interval 30 DAY));
  replace into `wis_inventory_trial`.doh(nopol,doh, `date`, sub, remark,
                              chtime, chusr, period, okl, `close`, `delete`,aprov)
  values (CustomerDORefference, tdoh, DocDate, trim(custcode),Remarks,
          date_format(now(),'%d/%m/%Y %H:%i'), 'WingsSAP', tperiod, tokl,false, false, true);
  replace into `external`.doh(nopol,doh, `date`, sub, remark,unit,
                              chtime, chusr, period, okl, `close`, `delete`,aprov)
  values (CustomerDORefference, tdoh, DocDate, trim(custcode),Remarks,
          date_format(now(),'%d/%m/%Y %H:%i'), 'WingsSAP', tperiod, tokl,false, false, true);
  select ifnull(name,'') into tremark from `wis_inventory_trial`.inv where inv=Product;
  select (Qty * konversi) into tqty from `wis_inventory_trial`.konversi where inv=Product and unit=tunit;
  insert into `wis_inventory_trial`.okd(inv, qop, qty1, unit, toleransi, price, disc, val,
                             okl, remark, `no`, qty)
  values (Product, QualityOfProduct, Qty, UoM, Tolerance, Price, Discount, (Price*Qty),
          tokl, tremark, 1, tqty);
  insert into `external`.okd(inv, qop, qty1, unit, toleransi, price, disc, val,
                             okl, remark, `no`, qty)
  values (Product, QualityOfProduct, Qty, UoM, Tolerance, Price, Discount, (Price*Qty),
          tokl, tremark, 1, tqty);
  Call `wis_inventory_trial`.SP_Save(`DocDate`,'OKL',tokl);
end if;
  RETURN tokl;
END//
DELIMITER ;

-- Dumping structure for table wis_inventory.gad
DROP TABLE IF EXISTS `gad`;
CREATE TABLE IF NOT EXISTS `gad` (
  `kode` varchar(15) default NULL,
  `acc` varchar(15) default NULL,
  `flag` varchar(1) default NULL,
  `group_` varchar(1) default NULL,
  KEY `IX_gad` (`kode`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.gad: ~0 rows (approximately)
/*!40000 ALTER TABLE `gad` DISABLE KEYS */;
/*!40000 ALTER TABLE `gad` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.gah
DROP TABLE IF EXISTS `gah`;
CREATE TABLE IF NOT EXISTS `gah` (
  `kode` varchar(15) NOT NULL,
  `name` varchar(50) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  PRIMARY KEY  (`kode`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.gah: ~0 rows (approximately)
/*!40000 ALTER TABLE `gah` DISABLE KEYS */;
/*!40000 ALTER TABLE `gah` ENABLE KEYS */;

-- Dumping structure for procedure wis_inventory.GetContact
DROP PROCEDURE IF EXISTS `GetContact`;
DELIMITER //
CREATE PROCEDURE `GetContact`(pdatea datetime)
BEGIN
select * from
(
select TIMESTAMP(STR_TO_DATE(left(chtime,10),'%d/%m/%Y '),time(substr(chtime,11,5))) as `date`,sub.sub as kode,sub.name as nama,
sub.address as alamat,sub.city,sub.phone,sub.remark as keterangan  from sub
) as tmpsub
where `date`>=pdatea;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Getproduct
DROP PROCEDURE IF EXISTS `Getproduct`;
DELIMITER //
CREATE PROCEDURE `Getproduct`()
BEGIN
select inv as productcode,name as nameproduct from cas_bb_trial.inv where left(inv,1)<=4 order by inv;
END//
DELIMITER ;

-- Dumping structure for table wis_inventory.grp
DROP TABLE IF EXISTS `grp`;
CREATE TABLE IF NOT EXISTS `grp` (
  `grp` varchar(15) NOT NULL,
  `grpname` varchar(50) default NULL,
  `acc` varchar(15) default NULL,
  `accppn` varchar(15) default NULL,
  `accum` varchar(15) default NULL,
  `accumbf` varchar(15) default NULL,
  `chusr` varchar(10) default NULL,
  `chtime` varchar(16) default NULL,
  `accppnbm` varchar(15) default NULL,
  `acchtbfl` varchar(15) default NULL,
  `accinvjl` varchar(15) default NULL,
  `accoang` varchar(15) default NULL,
  `accpang` varchar(15) default NULL,
  `accsls` varchar(15) default ' ',
  `accslsbhn` varchar(15) default ' ',
  `accslslain` varchar(15) default ' ',
  PRIMARY KEY  (`grp`),
  KEY `acc` (`acc`),
  KEY `accumk` (`grp`,`accumbf`,`accum`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.grp: ~0 rows (approximately)
/*!40000 ALTER TABLE `grp` DISABLE KEYS */;
/*!40000 ALTER TABLE `grp` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.grpdsg
DROP TABLE IF EXISTS `grpdsg`;
CREATE TABLE IF NOT EXISTS `grpdsg` (
  `nodsg` varchar(50) NOT NULL default '',
  `inv` varchar(15) NOT NULL default '',
  `name` varchar(100) default NULL,
  `grp` varchar(15) default NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.grpdsg: ~0 rows (approximately)
/*!40000 ALTER TABLE `grpdsg` DISABLE KEYS */;
/*!40000 ALTER TABLE `grpdsg` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.grphrgdasar
DROP TABLE IF EXISTS `grphrgdasar`;
CREATE TABLE IF NOT EXISTS `grphrgdasar` (
  `kode` varchar(15) NOT NULL,
  `nama` varchar(100) NOT NULL,
  `ongkos` double NOT NULL default '0',
  `chusr` varchar(10) NOT NULL,
  `chtime` varchar(16) NOT NULL,
  PRIMARY KEY  (`kode`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.grphrgdasar: ~0 rows (approximately)
/*!40000 ALTER TABLE `grphrgdasar` DISABLE KEYS */;
/*!40000 ALTER TABLE `grphrgdasar` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.grphrgjl
DROP TABLE IF EXISTS `grphrgjl`;
CREATE TABLE IF NOT EXISTS `grphrgjl` (
  `grphrgjl` varchar(15) NOT NULL,
  `keterangan` varchar(50) default NULL,
  `chusr` varchar(10) default NULL,
  `chtime` varchar(16) default NULL,
  PRIMARY KEY  (`grphrgjl`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.grphrgjl: ~0 rows (approximately)
/*!40000 ALTER TABLE `grphrgjl` DISABLE KEYS */;
/*!40000 ALTER TABLE `grphrgjl` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.grphrgjld
DROP TABLE IF EXISTS `grphrgjld`;
CREATE TABLE IF NOT EXISTS `grphrgjld` (
  `grphrgjl` varchar(15) default NULL,
  `sub` varchar(15) default NULL,
  `remark` varchar(100) default NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.grphrgjld: ~0 rows (approximately)
/*!40000 ALTER TABLE `grphrgjld` DISABLE KEYS */;
/*!40000 ALTER TABLE `grphrgjld` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.hbl
DROP TABLE IF EXISTS `hbl`;
CREATE TABLE IF NOT EXISTS `hbl` (
  `inv` varchar(15) default NULL,
  `remark` varchar(70) default NULL,
  `sub` varchar(15) default NULL,
  `subname` varchar(50) default NULL,
  `price` double default NULL,
  `satuan` varchar(10) default NULL,
  `no_po` varchar(15) default NULL,
  `tanggal` datetime default NULL,
  `cur` varchar(15) default NULL,
  `disc` double default NULL,
  `chusr` varchar(10) default NULL,
  `chtime` varchar(16) default NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.hbl: ~0 rows (approximately)
/*!40000 ALTER TABLE `hbl` DISABLE KEYS */;
/*!40000 ALTER TABLE `hbl` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.helpform
DROP TABLE IF EXISTS `helpform`;
CREATE TABLE IF NOT EXISTS `helpform` (
  `menuid` char(15) default NULL,
  `txthelp` longtext,
  KEY `IX_helpform` (`menuid`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.helpform: ~0 rows (approximately)
/*!40000 ALTER TABLE `helpform` DISABLE KEYS */;
/*!40000 ALTER TABLE `helpform` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.hjl
DROP TABLE IF EXISTS `hjl`;
CREATE TABLE IF NOT EXISTS `hjl` (
  `inv` varchar(15) NOT NULL default ' ',
  `remark` varchar(70) default NULL,
  `tanggal` datetime NOT NULL,
  `price` double NOT NULL default '0',
  `cur` varchar(15) default NULL,
  `time` time default NULL,
  PRIMARY KEY  (`tanggal`,`inv`,`price`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.hjl: ~0 rows (approximately)
/*!40000 ALTER TABLE `hjl` DISABLE KEYS */;
/*!40000 ALTER TABLE `hjl` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.hpro
DROP TABLE IF EXISTS `hpro`;
CREATE TABLE IF NOT EXISTS `hpro` (
  `hpro` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `remark` varchar(50) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL,
  `loc` varchar(15) default NULL,
  `datez` datetime default NULL,
  `delete` bit(1) NOT NULL default '\0',
  `cct` char(15) default NULL,
  PRIMARY KEY  (`hpro`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.hpro: ~0 rows (approximately)
/*!40000 ALTER TABLE `hpro` DISABLE KEYS */;
/*!40000 ALTER TABLE `hpro` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.hprod
DROP TABLE IF EXISTS `hprod`;
CREATE TABLE IF NOT EXISTS `hprod` (
  `hpro` varchar(15) NOT NULL default ' ',
  `inv` varchar(15) NOT NULL default ' ',
  `remark` varchar(50) default NULL,
  `hargapokokproduksi` double default '0',
  `mor` varchar(15) default NULL,
  `okl` varchar(15) default NULL,
  `nodsg` varchar(50) default NULL,
  `no` smallint(5) NOT NULL default '0',
  PRIMARY KEY  (`hpro`,`no`,`inv`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.hprod: ~0 rows (approximately)
/*!40000 ALTER TABLE `hprod` DISABLE KEYS */;
/*!40000 ALTER TABLE `hprod` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.hrd
DROP TABLE IF EXISTS `hrd`;
CREATE TABLE IF NOT EXISTS `hrd` (
  `inv` varchar(15) default NULL,
  `tgl` datetime default NULL,
  `cur` varchar(6) default NULL,
  `price1` double default NULL,
  `unit2` varchar(15) default NULL,
  `price2` double default NULL,
  `period` varchar(4) default NULL,
  `no` smallint(5) default NULL,
  `chtime` varchar(16) default NULL,
  KEY `inv` (`inv`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.hrd: ~0 rows (approximately)
/*!40000 ALTER TABLE `hrd` DISABLE KEYS */;
/*!40000 ALTER TABLE `hrd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.hrg
DROP TABLE IF EXISTS `hrg`;
CREATE TABLE IF NOT EXISTS `hrg` (
  `inv` varchar(15) default NULL,
  `tgl` datetime default NULL,
  `cur` varchar(6) default NULL,
  `price1` double default NULL,
  `unit2` varchar(6) default NULL,
  `price2` double default NULL,
  `period` varchar(4) default NULL,
  `no` smallint(5) default NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.hrg: ~0 rows (approximately)
/*!40000 ALTER TABLE `hrg` DISABLE KEYS */;
/*!40000 ALTER TABLE `hrg` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.hrgdasar
DROP TABLE IF EXISTS `hrgdasar`;
CREATE TABLE IF NOT EXISTS `hrgdasar` (
  `tglawal` datetime NOT NULL,
  `tglakhir` datetime NOT NULL,
  `aktif` bit(1) NOT NULL default '',
  `chusr` char(10) default NULL,
  `chtime` char(16) default NULL,
  `kode` varchar(8) NOT NULL,
  `nosurat` varchar(15) NOT NULL,
  `grp` varchar(15) NOT NULL,
  PRIMARY KEY  (`kode`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.hrgdasar: ~0 rows (approximately)
/*!40000 ALTER TABLE `hrgdasar` DISABLE KEYS */;
/*!40000 ALTER TABLE `hrgdasar` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.hrgjl
DROP TABLE IF EXISTS `hrgjl`;
CREATE TABLE IF NOT EXISTS `hrgjl` (
  `hrgjl` varchar(15) NOT NULL,
  `tglawal` datetime NOT NULL,
  `tglakhir` datetime NOT NULL,
  `grphrgjl` varchar(15) NOT NULL,
  `chusr` varchar(10) NOT NULL,
  `chtime` varchar(16) NOT NULL,
  `aktif` bit(1) NOT NULL,
  PRIMARY KEY  (`hrgjl`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.hrgjl: ~0 rows (approximately)
/*!40000 ALTER TABLE `hrgjl` DISABLE KEYS */;
/*!40000 ALTER TABLE `hrgjl` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.hrgjld
DROP TABLE IF EXISTS `hrgjld`;
CREATE TABLE IF NOT EXISTS `hrgjld` (
  `hrgjl` varchar(15) NOT NULL default ' ',
  `inv` varchar(15) NOT NULL default ' ',
  `remark` varchar(50) default ' ',
  `harga` double default '0',
  `unit` varchar(6) default NULL,
  PRIMARY KEY  (`hrgjl`,`inv`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.hrgjld: ~0 rows (approximately)
/*!40000 ALTER TABLE `hrgjld` DISABLE KEYS */;
/*!40000 ALTER TABLE `hrgjld` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.hut
DROP TABLE IF EXISTS `hut`;
CREATE TABLE IF NOT EXISTS `hut` (
  `Col001` varchar(255) default NULL,
  `Col002` varchar(255) default NULL,
  `Col003` varchar(255) default NULL,
  `Col004` varchar(255) default NULL,
  `Col005` varchar(255) default NULL,
  `Col006` varchar(255) default NULL,
  `Col007` varchar(255) default NULL,
  `Col008` varchar(255) default NULL,
  `Col009` varchar(255) default NULL,
  `Col010` varchar(255) default NULL,
  `Col011` varchar(255) default NULL,
  `Col012` varchar(255) default NULL,
  `Col013` varchar(255) default NULL,
  `Col014` varchar(255) default NULL,
  `Col015` varchar(255) default NULL,
  `Col016` varchar(255) default NULL,
  `Col017` varchar(255) default NULL,
  `Col018` varchar(255) default NULL,
  `Col019` varchar(255) default NULL,
  `Col020` varchar(255) default NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.hut: ~0 rows (approximately)
/*!40000 ALTER TABLE `hut` DISABLE KEYS */;
/*!40000 ALTER TABLE `hut` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.hutd
DROP TABLE IF EXISTS `hutd`;
CREATE TABLE IF NOT EXISTS `hutd` (
  `Col001` varchar(255) default NULL,
  `Col002` varchar(255) default NULL,
  `Col003` varchar(255) default NULL,
  `Col004` varchar(255) default NULL,
  `Col005` varchar(255) default NULL,
  `Col006` varchar(255) default NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.hutd: ~0 rows (approximately)
/*!40000 ALTER TABLE `hutd` DISABLE KEYS */;
/*!40000 ALTER TABLE `hutd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.ind
DROP TABLE IF EXISTS `ind`;
CREATE TABLE IF NOT EXISTS `ind` (
  `jurnal` varchar(15) default NULL,
  `period` varchar(4) default NULL,
  `inv` varchar(15) default NULL,
  `spesifikasi` text,
  `loc` varchar(15) default NULL,
  `date` datetime default NULL,
  `qty` double default NULL,
  `val` double default NULL,
  `rem` longtext,
  `dk` varchar(1) default NULL,
  `subjurnal` varchar(3) default NULL,
  `nodsg` varchar(50) default NULL,
  `expired` datetime default NULL,
  KEY `date` (`date`),
  KEY `jurnalsubjurnal` (`jurnal`,`subjurnal`),
  KEY `perioddate` (`period`,`date`),
  KEY `periodinvlocdate` (`period`,`inv`,`loc`,`date`),
  KEY `period` (`period`,`inv`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.ind: ~0 rows (approximately)
/*!40000 ALTER TABLE `ind` DISABLE KEYS */;
/*!40000 ALTER TABLE `ind` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.ino
DROP TABLE IF EXISTS `ino`;
CREATE TABLE IF NOT EXISTS `ino` (
  `ino` varchar(15) NOT NULL,
  `proname` varchar(50) default NULL,
  `cct` varchar(15) default NULL,
  `valpro` double default NULL,
  `date` datetime default NULL,
  `datea` datetime default NULL,
  `datez` datetime default NULL,
  `settle` smallint(5) default NULL,
  `jenis` varchar(15) default NULL,
  `akt` varchar(15) default NULL,
  `period` varchar(4) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `val` double default NULL,
  `acc` varchar(15) default NULL,
  `delete` bit(1) default NULL,
  `bsa` varchar(15) default ' ',
  PRIMARY KEY  (`ino`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.ino: ~0 rows (approximately)
/*!40000 ALTER TABLE `ino` DISABLE KEYS */;
/*!40000 ALTER TABLE `ino` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.inoc
DROP TABLE IF EXISTS `inoc`;
CREATE TABLE IF NOT EXISTS `inoc` (
  `ino` varchar(15) NOT NULL,
  `sub` varchar(15) default NULL,
  `no_kon` varchar(30) default NULL,
  `val` double default NULL,
  `remark` varchar(50) default NULL,
  `tgl` datetime default NULL,
  `no` smallint(5) NOT NULL default '0',
  PRIMARY KEY  (`ino`,`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.inoc: ~0 rows (approximately)
/*!40000 ALTER TABLE `inoc` DISABLE KEYS */;
/*!40000 ALTER TABLE `inoc` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.inod
DROP TABLE IF EXISTS `inod`;
CREATE TABLE IF NOT EXISTS `inod` (
  `ino` varchar(15) NOT NULL default ' ',
  `jurnal` varchar(15) default NULL,
  `date` datetime default NULL,
  `acc` varchar(15) default NULL,
  `rem` varchar(50) default NULL,
  `dk` varchar(1) default NULL,
  `val` double default NULL,
  `no` int(10) NOT NULL default '0',
  PRIMARY KEY  (`no`,`ino`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.inod: ~0 rows (approximately)
/*!40000 ALTER TABLE `inod` DISABLE KEYS */;
/*!40000 ALTER TABLE `inod` ENABLE KEYS */;

-- Dumping structure for procedure wis_inventory.InsertAll_ByDate
DROP PROCEDURE IF EXISTS `InsertAll_ByDate`;
DELIMITER //
CREATE PROCEDURE `InsertAll_ByDate`()
BEGIN
insert into cgr 
SELECT * from  cgr where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into lhp
SELECT * from  lhp where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into lhd
SELECT b.* 
from lhp a
join lhd b
  on a.lhp=b.lhp
where a.date between '2020-04-15 14:00:00' and '2020-04-20' ;
insert into prq
SELECT * from  prq where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into prd
SELECT b.* from  prq a
join prd b
  on a.prq=b.prq
where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into trm
SELECT * from  trm where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into trd
SELECT b.* from  trm a
join trd b
  on a.trm=b.trm 
where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into opn
SELECT * from  opn where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into opd
SELECT b.* from  opn a
join opd b
  on a.opn=b.opn
where a.date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into oms
SELECT * from  oms where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into omd
SELECT * from  oms a
join omd b
  on a.oms=b.oms
where a.date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into msl
SELECT * from  msl where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into okl
SELECT * from  okl where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into okd
SELECT b.* from  okl a
join okd b
  on a.okl=b.okl
where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into rms
SELECT * from  rms where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into rmd
SELECT b.* 
from  rms a
join rmd b
  on a.rms=b.rms
where date BETWEEN  '2020-04-01 14:00:00' and '2020-04-18';
insert into rkl
SELECT * from  rkl where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into rkd
SELECT b.* 
from  rkl a
join rkd b
  on a.rkl=b.rkl
where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into rpo
SELECT * from  rpo where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into msk
SELECT * from  msk where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into msd
SELECT b.* 
from  msk a
join msd b
  on a.msk=b.msk 
where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into klr
SELECT * from  klr where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into kld
SELECT b.* 
from  klr a
join kld b
  on a.klr=b.klr
where a.date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into lph
SELECT a.* from  lph a where a.date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into lpd
SELECT b.* 
from  lph a 
join lpd b 
  on a.lph=b.lph
where a.date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into sjh
SELECT * from  sjh where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into sjd
SELECT b.* 
from  sjh a
join sjd b
  on a.sjh=b.sjh
where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into umh
SELECT * from  umh where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into umd
SELECT b.* 
from  umh a
join umd b
  on a.umh=b.umh
where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into jsu
SELECT * from  jsu where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into jsd
SELECT b.* 
from  jsu a
join jsd b
  on a.jsu=b.jsu
where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into kas
SELECT * from  kas where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into kad
SELECT b.* 
from  kas a
join kad b
  on a.kas=b.kas
where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into rsb
SELECT * from  rsb where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into payhp
SELECT * from  payhp where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into rhp
SELECT * from  rhp where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into ind
SELECT * from  ind where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into ino
SELECT * from  ino where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into inoc
SELECT b.* 
from ino a  
join inoc b
  on a.ino=b.ino
where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into inod
SELECT a.* from inod a  where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into acd
SELECT * from  acd where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into rgr
SELECT * from  rgr where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into jin
SELECT * from  jin where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18'; 
insert into jid
SELECT b.* 
from  jin a
join jid b
  on a.jin=b.jin
where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18' ;
insert into rka
SELECT * from  rka where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into rkb
SELECT * 
from  rka a
join rkb b
  on a.rka=b.rka
where date BETWEEN  '2020-04-16 14:00:00' and '2020-04-18';
insert into rma
SELECT * from  rma where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into rmb
SELECT * 
from  rma a
join rmb b
  on a.rma=b.rma
where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into rsb
SELECT * from  rso where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into spb
SELECT * from  spb where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into sjr
SELECT * 
from  sjr a
where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into sjd
SELECT b.* 
from  sjr a
join sjrd b
  on a.sjr=b.sjr
where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into spm
SELECT * from  spm where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into spd
SELECT b.* 
from  spm a
join spd b
 on a.spm=b.spm
where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into umk
SELECT * from  umk where date BETWEEN  '2020-04-15 14:00:00' and '2020-04-18';
insert into umkp
SELECT b.* 
from  umk a
join umkp b
  on a.umk=b.umk
where substring(klr,5,4) BETWEEN  '2020-04-15 14:00:00' and '2020-04-18'	;
END//
DELIMITER ;

-- Dumping structure for table wis_inventory.inv
DROP TABLE IF EXISTS `inv`;
CREATE TABLE IF NOT EXISTS `inv` (
  `inv` varchar(15) NOT NULL,
  `name` varchar(100) default NULL,
  `spesifikasi` text,
  `unit` varchar(6) default NULL,
  `kd_unit` varchar(50) default NULL,
  `gross` double default NULL,
  `net` double default NULL,
  `qtymin` double default NULL,
  `valjual` double default NULL,
  `valbeli` double default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `remark` varchar(50) default NULL,
  `acc` varchar(15) default NULL,
  `acchpp` varchar(15) default NULL,
  `accrev` varchar(15) default NULL,
  `jenis` varchar(15) default NULL,
  `besar` double default NULL,
  `unit2` varchar(6) default NULL,
  `date` datetime default NULL,
  `cct` varchar(15) default NULL,
  `flag` bit(1) default '\0',
  `group_` varchar(2) NOT NULL default '',
  `accreturn` varchar(15) default NULL,
  `accdisc` varchar(15) default NULL,
  `acclaba` varchar(15) default NULL,
  `accrugi` varchar(15) default NULL,
  `accsls` varchar(15) default NULL,
  `prosen` double default NULL,
  `tglb` datetime default NULL,
  `tgle` datetime default NULL,
  `oldinv` varchar(15) default NULL,
  `oldname` varchar(100) default NULL,
  `oldinv1` varchar(15) default NULL,
  `oldname1` varchar(60) default NULL,
  `delete` bit(1) default '\0',
  `mrp` bit(1) default '\0',
  `lotsz` double default '0',
  `leadtm` int(11) default '0',
  `grpmat` varchar(15) default ' ',
  `loc` varchar(15) default NULL,
  `kgb` varchar(15) default NULL,
  PRIMARY KEY  (`inv`,`group_`),
  KEY `inv` (`inv`),
  KEY `unit` (`unit`),
  KEY `jenis` (`jenis`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.inv: ~0 rows (approximately)
/*!40000 ALTER TABLE `inv` DISABLE KEYS */;
/*!40000 ALTER TABLE `inv` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.jasa
DROP TABLE IF EXISTS `jasa`;
CREATE TABLE IF NOT EXISTS `jasa` (
  `id_jasa` varchar(50) NOT NULL,
  `jasa` text,
  PRIMARY KEY  (`id_jasa`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.jasa: ~0 rows (approximately)
/*!40000 ALTER TABLE `jasa` DISABLE KEYS */;
/*!40000 ALTER TABLE `jasa` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.jenis
DROP TABLE IF EXISTS `jenis`;
CREATE TABLE IF NOT EXISTS `jenis` (
  `jenis` varchar(15) NOT NULL,
  `name` varchar(50) default NULL,
  `remark` varchar(50) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) NOT NULL,
  `acc` varchar(15) default NULL,
  `accsls` varchar(15) default NULL,
  `accmt` varchar(15) default NULL,
  `mtp` varchar(15) default NULL,
  `accvarian` varchar(15) default NULL,
  `accdisc` varchar(15) default NULL,
  `accrev` varchar(15) default NULL,
  `accreturn` varchar(15) default NULL,
  `acchpp` varchar(15) default NULL,
  `acchppbf` varchar(15) default NULL,
  PRIMARY KEY  (`jenis`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.jenis: ~0 rows (approximately)
/*!40000 ALTER TABLE `jenis` DISABLE KEYS */;
/*!40000 ALTER TABLE `jenis` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.jid
DROP TABLE IF EXISTS `jid`;
CREATE TABLE IF NOT EXISTS `jid` (
  `jin` varchar(15) NOT NULL default ' ',
  `inv` varchar(15) default NULL,
  `remark` varchar(100) default NULL,
  `spesifikasi` text,
  `dk` varchar(1) default NULL,
  `qty` double default NULL,
  `price` double default NULL,
  `val` double default NULL,
  `no` smallint(5) NOT NULL default '0',
  `unit` varchar(6) default NULL,
  `qty1` double default NULL,
  `nodsg` varchar(50) default NULL,
  `mor` varchar(30) default NULL,
  `expired` datetime default NULL,
  PRIMARY KEY  (`jin`,`no`),
  KEY `jin` (`jin`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.jid: ~0 rows (approximately)
/*!40000 ALTER TABLE `jid` DISABLE KEYS */;
/*!40000 ALTER TABLE `jid` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.jin
DROP TABLE IF EXISTS `jin`;
CREATE TABLE IF NOT EXISTS `jin` (
  `jin` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `remark` varchar(200) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(50) default NULL,
  `period` varchar(4) NOT NULL,
  `acc` varchar(15) default NULL,
  `cct` varchar(15) default NULL,
  `bppb` varchar(15) default NULL,
  `kode` varchar(15) default NULL,
  `loc` varchar(15) default NULL,
  `group_` varchar(1) default NULL,
  `sperpart` smallint(5) default '0',
  `jenis` varchar(15) default NULL,
  `delete` bit(1) NOT NULL default '\0',
  `plant` varchar(15) default ' ',
  `bsa` varchar(15) default ' ',
  PRIMARY KEY  (`jin`),
  KEY `period` (`period`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.jin: ~0 rows (approximately)
/*!40000 ALTER TABLE `jin` DISABLE KEYS */;
/*!40000 ALTER TABLE `jin` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.jnsp
DROP TABLE IF EXISTS `jnsp`;
CREATE TABLE IF NOT EXISTS `jnsp` (
  `jnsp` varchar(15) NOT NULL default ' ',
  `remmark` varchar(45) default ' ',
  `chusr` varchar(10) default ' ',
  `chtime` varchar(16) default ' ',
  PRIMARY KEY  (`jnsp`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.jnsp: ~8 rows (approximately)
/*!40000 ALTER TABLE `jnsp` DISABLE KEYS */;
REPLACE INTO `jnsp` (`jnsp`, `remmark`, `chusr`, `chtime`) VALUES
	('BC 2.3', 'Pembelian Import', ' ', ' '),
	('BC 2.5', 'Penjualan Lokal', ' ', ' '),
	('BC 2.6.1', 'Jasa Keluar', ' ', ' '),
	('BC 2.6.2', 'Jasa Masuk', ' ', ' '),
	('BC 2.7', 'Subkon', ' ', ' '),
	('BC 3.0', 'Penjualan Eksport', ' ', ' '),
	('BC 4.0', 'Pembelian Lokal', ' ', ' '),
	('BC 4.1', 'Penjualan Lokal', ' ', ' ');
/*!40000 ALTER TABLE `jnsp` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.jsd
DROP TABLE IF EXISTS `jsd`;
CREATE TABLE IF NOT EXISTS `jsd` (
  `jsu` varchar(15) NOT NULL,
  `acc` varchar(15) default NULL,
  `cct` varchar(15) default NULL,
  `remark` varchar(70) default NULL,
  `dk` varchar(1) default NULL,
  `val` double default NULL,
  `ino` varchar(15) default NULL,
  `no` int(10) NOT NULL,
  `cad` varchar(15) default NULL,
  `okl` varchar(15) default ' ',
  `invoice` varchar(50) default NULL,
  PRIMARY KEY  (`jsu`,`no`),
  KEY `IX_jsu` (`jsu`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.jsd: ~0 rows (approximately)
/*!40000 ALTER TABLE `jsd` DISABLE KEYS */;
/*!40000 ALTER TABLE `jsd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.jsu
DROP TABLE IF EXISTS `jsu`;
CREATE TABLE IF NOT EXISTS `jsu` (
  `jsu` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `duedate` datetime default NULL,
  `sub` varchar(15) default NULL,
  `remark` varchar(70) default NULL,
  `val` double default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL,
  `acc` varchar(15) default NULL,
  `dk` varchar(1) default NULL,
  `acclawan` varchar(15) default NULL,
  `acclawan1` varchar(30) default NULL,
  `val1` double default NULL,
  `cur` varchar(4) default NULL,
  `kurs` double default NULL,
  `sspdate` datetime default NULL,
  `fakdate` datetime default NULL,
  `pib` varchar(30) default NULL,
  `bank` varchar(30) default NULL,
  `delete` bit(1) NOT NULL default '\0',
  PRIMARY KEY  (`jsu`),
  KEY `period` (`period`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.jsu: ~0 rows (approximately)
/*!40000 ALTER TABLE `jsu` DISABLE KEYS */;
/*!40000 ALTER TABLE `jsu` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.kad
DROP TABLE IF EXISTS `kad`;
CREATE TABLE IF NOT EXISTS `kad` (
  `kas` varchar(15) NOT NULL,
  `jurnal` varchar(15) default ' ',
  `remark` varchar(70) default NULL,
  `val` double default '0',
  `no` smallint(5) NOT NULL,
  `dk` varchar(1) default ' ',
  `acc` varchar(15) default ' ',
  `cct` varchar(15) default ' ',
  `group_` varchar(1) default NULL,
  `kode` varchar(15) default ' ',
  `est` double default '0',
  `invoice` varchar(50) default ' ',
  `kurs` double unsigned zerofill default '0000000000000000000000',
  `rfp` varchar(15) default ' ',
  `okl` varchar(15) default ' ',
  PRIMARY KEY  (`kas`,`no`),
  KEY `kasgroup` (`kas`,`group_`),
  KEY `jurnal` (`jurnal`,`invoice`),
  KEY `jurnalacc` (`jurnal`,`cct`,`invoice`),
  KEY `jurnalkas` (`kas`,`jurnal`,`invoice`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.kad: ~0 rows (approximately)
/*!40000 ALTER TABLE `kad` DISABLE KEYS */;
/*!40000 ALTER TABLE `kad` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.kag
DROP TABLE IF EXISTS `kag`;
CREATE TABLE IF NOT EXISTS `kag` (
  `kas` varchar(15) NOT NULL,
  `nobg` varchar(15) default NULL,
  `bank` varchar(50) default NULL,
  `acbank` varchar(50) default NULL,
  `duedate` datetime default NULL,
  `val` double default NULL,
  `no` smallint(5) NOT NULL,
  `group_` varchar(1) default NULL,
  `acc` varchar(15) default NULL,
  `accbank` varchar(15) default NULL,
  `gironame` varchar(60) default ' ',
  PRIMARY KEY  (`kas`,`no`),
  KEY `kasgroup` (`kas`,`group_`),
  KEY `nobggroup_` (`nobg`,`group_`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.kag: ~0 rows (approximately)
/*!40000 ALTER TABLE `kag` DISABLE KEYS */;
/*!40000 ALTER TABLE `kag` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.kas
DROP TABLE IF EXISTS `kas`;
CREATE TABLE IF NOT EXISTS `kas` (
  `kas` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `sub` varchar(15) default NULL,
  `remark` varchar(50) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL,
  `group_` varchar(1) default NULL,
  `val` double default NULL,
  `acc` varchar(15) default NULL,
  `cct` varchar(15) default NULL,
  `cur` varchar(4) default NULL,
  `kurs` double default NULL,
  `bilus` varchar(200) default NULL,
  `casto` smallint(5) default NULL,
  `chargeto` smallint(5) default NULL,
  `oms` varchar(15) default NULL,
  `tobepaid` varchar(25) default NULL,
  `tcsi` tinyint(1) default '0',
  `ttr` varchar(15) default NULL,
  `valrp` double default NULL,
  `delete` bit(1) NOT NULL default '\0',
  `rfp` varchar(15) default NULL,
  `valus` double default NULL,
  `valpro` double default NULL,
  `bsa` varchar(15) default ' ',
  PRIMARY KEY  (`kas`),
  KEY `periodgroup_` (`period`,`group_`),
  KEY `subdate` (`sub`,`date`),
  KEY `ttr` (`kas`,`kurs`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.kas: ~0 rows (approximately)
/*!40000 ALTER TABLE `kas` DISABLE KEYS */;
/*!40000 ALTER TABLE `kas` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.kbl
DROP TABLE IF EXISTS `kbl`;
CREATE TABLE IF NOT EXISTS `kbl` (
  `cur` varchar(15) default NULL,
  `val` double default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) default NULL,
  KEY `curperiod` (`cur`,`period`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.kbl: ~0 rows (approximately)
/*!40000 ALTER TABLE `kbl` DISABLE KEYS */;
/*!40000 ALTER TABLE `kbl` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.kgb
DROP TABLE IF EXISTS `kgb`;
CREATE TABLE IF NOT EXISTS `kgb` (
  `kgb` varchar(15) NOT NULL,
  `name` varchar(100) default NULL,
  PRIMARY KEY  (`kgb`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.kgb: ~0 rows (approximately)
/*!40000 ALTER TABLE `kgb` DISABLE KEYS */;
/*!40000 ALTER TABLE `kgb` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.kgr
DROP TABLE IF EXISTS `kgr`;
CREATE TABLE IF NOT EXISTS `kgr` (
  `acc` varchar(15) NOT NULL,
  `accbank` varchar(15) NOT NULL,
  `group_` smallint(5) NOT NULL default '0',
  `chtime` varchar(16) default ' ',
  `chusr` varchar(10) default ' ',
  PRIMARY KEY  (`acc`,`accbank`),
  KEY `IX_kgr` (`accbank`,`group_`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.kgr: ~0 rows (approximately)
/*!40000 ALTER TABLE `kgr` DISABLE KEYS */;
/*!40000 ALTER TABLE `kgr` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.khr
DROP TABLE IF EXISTS `khr`;
CREATE TABLE IF NOT EXISTS `khr` (
  `cur` varchar(15) NOT NULL,
  `date` datetime NOT NULL,
  `val` double default NULL,
  `period` varchar(4) default NULL,
  `valbi` double default NULL,
  `no_sk` varchar(50) default ' ',
  PRIMARY KEY  (`cur`,`date`),
  KEY `curperiod` (`cur`,`period`),
  KEY `date` (`date`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.khr: ~0 rows (approximately)
/*!40000 ALTER TABLE `khr` DISABLE KEYS */;
/*!40000 ALTER TABLE `khr` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.kkh
DROP TABLE IF EXISTS `kkh`;
CREATE TABLE IF NOT EXISTS `kkh` (
  `period` varchar(4) NOT NULL default ' ',
  `cct` varchar(15) NOT NULL default ' ',
  `qwipbl` double default NULL,
  `qsip` double default NULL,
  `qfit` double default NULL,
  `qwipbin` double default NULL,
  `qdip` double default NULL,
  `carm1` double default NULL,
  `capack1` double default NULL,
  `cadl1` double default NULL,
  `caovh1` double default NULL,
  `carm2` double default NULL,
  `capack2` double default NULL,
  `cadl2` double default NULL,
  `caovh2` double default NULL,
  `carm3` double default NULL,
  `capack3` double default NULL,
  `cadl3` double default NULL,
  `caovh3` double default NULL,
  `rm1` double default NULL,
  `pack1` double default NULL,
  `dl1` double default NULL,
  `foh1` double default NULL,
  `rm2` double default NULL,
  `pack2` double default NULL,
  `dl2` double default NULL,
  `foh2` double default NULL,
  `rm3` double default NULL,
  `pack3` double default NULL,
  `dl3` double default NULL,
  `foh3` double default NULL,
  `chusr` varchar(10) default NULL,
  `chtime` varchar(16) default NULL,
  `capro2` double default NULL,
  `cfit3` double default NULL,
  `trm` double default NULL,
  `tpack` double default NULL,
  `tpro` double default NULL,
  `tdl` double default NULL,
  `tfoh` double default NULL,
  `qfitf` double default NULL,
  `cfitf3` double default NULL,
  `rm4` double default NULL,
  `pack4` double default NULL,
  `dl4` double default NULL,
  `foh4` double default NULL,
  `plant` varchar(15) default ' ',
  PRIMARY KEY  (`period`,`cct`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COMMENT='InnoDB free: 7168 kB';

-- Dumping data for table wis_inventory.kkh: ~0 rows (approximately)
/*!40000 ALTER TABLE `kkh` DISABLE KEYS */;
/*!40000 ALTER TABLE `kkh` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.kld
DROP TABLE IF EXISTS `kld`;
CREATE TABLE IF NOT EXISTS `kld` (
  `klr` varchar(15) NOT NULL default '',
  `okl` varchar(15) default NULL,
  `remark` longtext,
  `val` double default NULL,
  `no` smallint(5) NOT NULL default '0',
  `nofp` varchar(20) default NULL,
  `tglfp` datetime default NULL,
  `tglsfp` datetime default NULL,
  `kurs` double default NULL,
  `dpp` double default NULL,
  `ppn` double default NULL,
  `invo` varchar(50) default NULL,
  `qty` double default '0',
  `price` double default '0',
  `inv` varchar(15) default NULL,
  `disc` double default '0',
  PRIMARY KEY  (`klr`,`no`),
  KEY `klr` (`klr`),
  KEY `okl` (`okl`),
  KEY `klrqty` (`klr`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.kld: ~0 rows (approximately)
/*!40000 ALTER TABLE `kld` DISABLE KEYS */;
/*!40000 ALTER TABLE `kld` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.kll
DROP TABLE IF EXISTS `kll`;
CREATE TABLE IF NOT EXISTS `kll` (
  `klr` varchar(15) NOT NULL default '',
  `date` datetime default NULL,
  `sjh` varchar(15) default NULL,
  `okl` varchar(15) default NULL,
  `remark` longtext,
  `val` double default NULL,
  `no` smallint(5) NOT NULL default '0',
  `qty` double default '0',
  `inv` varchar(15) default NULL,
  PRIMARY KEY  (`klr`,`no`),
  KEY `klr` (`klr`),
  KEY `okl` (`okl`),
  KEY `sjh` (`sjh`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.kll: ~0 rows (approximately)
/*!40000 ALTER TABLE `kll` DISABLE KEYS */;
/*!40000 ALTER TABLE `kll` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.klr
DROP TABLE IF EXISTS `klr`;
CREATE TABLE IF NOT EXISTS `klr` (
  `klr` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `duedate` datetime default NULL,
  `sub` varchar(15) default NULL,
  `ppn` smallint(5) NOT NULL default '0',
  `disc` double default '0',
  `remark` varchar(100) default NULL,
  `val` double default '0',
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL,
  `cur` varchar(4) default NULL,
  `kurs` double default NULL,
  `fpj` varchar(20) default NULL,
  `fpjdate` datetime default NULL,
  `discrp` double default '0',
  `delete` bit(1) NOT NULL default '\0',
  `sfpjdate` datetime default NULL,
  `fpjsederhana` varchar(20) default NULL,
  `bank` longtext,
  `youref` varchar(25) default NULL,
  `lcnum` varchar(25) default NULL,
  `lcdate` varchar(10) default NULL,
  `blno` varchar(25) default NULL,
  `bldate` varchar(10) default NULL,
  `ourref` varchar(25) default NULL,
  `cuntry_origin` varchar(25) default NULL,
  `country_dest` varchar(25) default NULL,
  `port_loading` varchar(35) default NULL,
  `port_discharge` varchar(35) default NULL,
  `feedervessel` varchar(35) default NULL,
  `mothervessel` varchar(35) default NULL,
  `incoterm` varchar(30) default NULL,
  `payterm` varchar(30) default NULL,
  `notify` longtext,
  `mers` longtext,
  `mark` longtext,
  `notes` longtext,
  `nopeb` varchar(35) default NULL,
  `valpeb` double default NULL,
  `no_container` varchar(40) default NULL,
  `tglproforma` datetime default NULL,
  `kurspeb` double default '0',
  PRIMARY KEY  (`klr`),
  KEY `period` (`period`),
  KEY `subdate` (`sub`,`date`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.klr: ~0 rows (approximately)
/*!40000 ALTER TABLE `klr` DISABLE KEYS */;
/*!40000 ALTER TABLE `klr` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.klri
DROP TABLE IF EXISTS `klri`;
CREATE TABLE IF NOT EXISTS `klri` (
  `klri` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `refno` varchar(25) default NULL,
  `yourref` varchar(25) default NULL,
  `sub` varchar(15) default NULL,
  `lcnum` varchar(30) default NULL,
  `lcdate` varchar(10) default NULL,
  `cur` varchar(15) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) default NULL,
  `ourref` varchar(25) default NULL,
  `kurs` double default NULL,
  `blno` varchar(20) default NULL,
  `bldate` varchar(10) default NULL,
  `delete` bit(1) default NULL,
  `nocon` varchar(20) default NULL,
  `notify` longtext,
  `bank` longtext,
  `shipingmark` longtext,
  `notes` longtext,
  `corigin` varchar(20) default NULL,
  `cdest` varchar(20) default NULL,
  `ploading` varchar(20) default NULL,
  `pdischarge` varchar(20) default NULL,
  `feeder` varchar(20) default NULL,
  `mother` varchar(20) default NULL,
  `incoterm` varchar(35) default NULL,
  `payment` varchar(40) default NULL,
  `subtotal` double default NULL,
  `val` double default NULL,
  `pnv` varchar(15) default NULL,
  `cscharge` double default NULL,
  `ppnfee` double default NULL,
  `freight` double default NULL,
  `jasa` text,
  PRIMARY KEY  (`klri`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT COMMENT='InnoDB free: 4096 kB; InnoDB free: 83968 kB';

-- Dumping data for table wis_inventory.klri: ~0 rows (approximately)
/*!40000 ALTER TABLE `klri` DISABLE KEYS */;
/*!40000 ALTER TABLE `klri` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.klrid
DROP TABLE IF EXISTS `klrid`;
CREATE TABLE IF NOT EXISTS `klrid` (
  `klri` varchar(15) NOT NULL default ' ',
  `inv` varchar(15) default NULL,
  `remark` varchar(100) default NULL,
  `qty` double default NULL,
  `price` double default NULL,
  `val` double default NULL,
  `no` smallint(5) NOT NULL default '0',
  `unit` varchar(6) default NULL,
  `netweight` double default NULL,
  `grossweight` double default NULL,
  `packaging` double default NULL,
  `ppnpackaging` double default NULL,
  PRIMARY KEY  (`klri`,`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.klrid: ~0 rows (approximately)
/*!40000 ALTER TABLE `klrid` DISABLE KEYS */;
/*!40000 ALTER TABLE `klrid` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.kode
DROP TABLE IF EXISTS `kode`;
CREATE TABLE IF NOT EXISTS `kode` (
  `kode` varchar(15) NOT NULL,
  `name` varchar(50) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `acc` varchar(15) default NULL,
  PRIMARY KEY  (`kode`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.kode: ~0 rows (approximately)
/*!40000 ALTER TABLE `kode` DISABLE KEYS */;
/*!40000 ALTER TABLE `kode` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.konversi
DROP TABLE IF EXISTS `konversi`;
CREATE TABLE IF NOT EXISTS `konversi` (
  `inv` varchar(15) NOT NULL,
  `unit` varchar(6) NOT NULL,
  `konversi` double NOT NULL,
  PRIMARY KEY  (`inv`,`unit`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.konversi: ~0 rows (approximately)
/*!40000 ALTER TABLE `konversi` DISABLE KEYS */;
/*!40000 ALTER TABLE `konversi` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.ksd
DROP TABLE IF EXISTS `ksd`;
CREATE TABLE IF NOT EXISTS `ksd` (
  `ksg` varchar(15) default NULL,
  `kas` varchar(15) default NULL,
  `sub` varchar(15) default NULL,
  `Val` double default NULL,
  `tgl` datetime default NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.ksd: ~0 rows (approximately)
/*!40000 ALTER TABLE `ksd` DISABLE KEYS */;
/*!40000 ALTER TABLE `ksd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.ksg
DROP TABLE IF EXISTS `ksg`;
CREATE TABLE IF NOT EXISTS `ksg` (
  `ksg` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `nobg` varchar(15) default NULL,
  `bank` varchar(50) default NULL,
  `bgdate` datetime default NULL,
  `bgduedate` datetime default NULL,
  `bgval` double default NULL,
  `accbank` varchar(15) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL,
  `remark` varchar(50) default NULL,
  `acount` varchar(25) default NULL,
  `dk` smallint(5) default NULL,
  PRIMARY KEY  (`ksg`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.ksg: ~0 rows (approximately)
/*!40000 ALTER TABLE `ksg` DISABLE KEYS */;
/*!40000 ALTER TABLE `ksg` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.kwalitet
DROP TABLE IF EXISTS `kwalitet`;
CREATE TABLE IF NOT EXISTS `kwalitet` (
  `kode` varchar(55) NOT NULL,
  `lapis` varchar(15) NOT NULL,
  `group` bit(1) default '\0',
  `kelompok` varchar(5) NOT NULL,
  `chusr` char(10) NOT NULL,
  `chtime` char(16) NOT NULL,
  `no` int(11) NOT NULL default '0',
  `berat` double NOT NULL default '0',
  PRIMARY KEY  (`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.kwalitet: ~0 rows (approximately)
/*!40000 ALTER TABLE `kwalitet` DISABLE KEYS */;
/*!40000 ALTER TABLE `kwalitet` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.kwd
DROP TABLE IF EXISTS `kwd`;
CREATE TABLE IF NOT EXISTS `kwd` (
  `kwt` varchar(15) NOT NULL default ' ',
  `fpj` varchar(20) default NULL,
  `valdpp` double default NULL,
  `rem` varchar(50) default NULL,
  `no` smallint(5) NOT NULL default '0',
  `valppn` double default NULL,
  `valsubtotal` double default NULL,
  `valdisc` double default NULL,
  `jurnal` varchar(15) NOT NULL default ' ',
  `jsu` varchar(15) default ' ',
  PRIMARY KEY  (`kwt`,`no`,`jurnal`),
  KEY `jurnal` (`jurnal`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.kwd: ~0 rows (approximately)
/*!40000 ALTER TABLE `kwd` DISABLE KEYS */;
/*!40000 ALTER TABLE `kwd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.kwt
DROP TABLE IF EXISTS `kwt`;
CREATE TABLE IF NOT EXISTS `kwt` (
  `kwt` varchar(15) NOT NULL default ' ',
  `date` datetime default NULL,
  `sub` varchar(15) NOT NULL default ' ',
  `ppn` smallint(5) default NULL,
  `disc` double default NULL,
  `remark` varchar(50) default NULL,
  `valdpp` double default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL default ' ',
  `cur` varchar(4) default NULL,
  `kurs` double default NULL,
  `fpjdate` datetime default NULL,
  `umk` double default NULL,
  `fpjimport` smallint(5) default NULL,
  `no_fpj` varchar(20) default NULL,
  `valppn` double default NULL,
  `delete` bit(1) default '\0',
  `revkwt` varchar(15) default NULL,
  PRIMARY KEY  (`kwt`,`period`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.kwt: ~0 rows (approximately)
/*!40000 ALTER TABLE `kwt` DISABLE KEYS */;
/*!40000 ALTER TABLE `kwt` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.lhc
DROP TABLE IF EXISTS `lhc`;
CREATE TABLE IF NOT EXISTS `lhc` (
  `lhp` varchar(15) NOT NULL default ' ',
  `jin` varchar(15) default ' ',
  `loc` varchar(15) default NULL,
  `qty` double default NULL,
  `unit` varchar(6) default NULL,
  `no` smallint(6) NOT NULL default '0',
  PRIMARY KEY  (`lhp`,`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.lhc: ~0 rows (approximately)
/*!40000 ALTER TABLE `lhc` DISABLE KEYS */;
/*!40000 ALTER TABLE `lhc` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.lhd
DROP TABLE IF EXISTS `lhd`;
CREATE TABLE IF NOT EXISTS `lhd` (
  `lhp` varchar(15) NOT NULL default ' ',
  `inv` varchar(15) default NULL,
  `remark` varchar(100) default NULL,
  `qty` double default '0',
  `price` double default '0',
  `val` double default '0',
  `no` smallint(5) NOT NULL default '0',
  `qty1` double default '0',
  `unit` varchar(6) default NULL,
  `nodsg` varchar(50) default NULL,
  `mor` varchar(30) default NULL,
  `expired` datetime default NULL,
  PRIMARY KEY  (`lhp`,`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.lhd: ~0 rows (approximately)
/*!40000 ALTER TABLE `lhd` DISABLE KEYS */;
/*!40000 ALTER TABLE `lhd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.lhp
DROP TABLE IF EXISTS `lhp`;
CREATE TABLE IF NOT EXISTS `lhp` (
  `lhp` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `remark` varchar(50) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(12) default NULL,
  `period` varchar(4) NOT NULL,
  `loc` varchar(15) default NULL,
  `delete` bit(1) NOT NULL default '\0',
  `msn` varchar(15) default ' ',
  `cct` varchar(15) default ' ',
  `plant` varchar(15) default ' ',
  `bsa` varchar(15) default ' ',
  PRIMARY KEY  (`lhp`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.lhp: ~0 rows (approximately)
/*!40000 ALTER TABLE `lhp` DISABLE KEYS */;
/*!40000 ALTER TABLE `lhp` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.library
DROP TABLE IF EXISTS `library`;
CREATE TABLE IF NOT EXISTS `library` (
  `keyword_` varchar(50) default NULL,
  `indonesia` varchar(50) default NULL,
  `inggris` varchar(50) default NULL,
  KEY `keyword_` (`keyword_`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.library: ~0 rows (approximately)
/*!40000 ALTER TABLE `library` DISABLE KEYS */;
/*!40000 ALTER TABLE `library` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.loc
DROP TABLE IF EXISTS `loc`;
CREATE TABLE IF NOT EXISTS `loc` (
  `loc` varchar(15) NOT NULL,
  `name` varchar(50) default NULL,
  `remark` varchar(50) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  PRIMARY KEY  (`loc`),
  KEY `locacc` (`loc`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.loc: ~0 rows (approximately)
/*!40000 ALTER TABLE `loc` DISABLE KEYS */;
/*!40000 ALTER TABLE `loc` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.lpd
DROP TABLE IF EXISTS `lpd`;
CREATE TABLE IF NOT EXISTS `lpd` (
  `lph` varchar(15) NOT NULL,
  `inv` varchar(15) default NULL,
  `loc` varchar(15) default NULL,
  `remark` longtext,
  `spesifikasi` text,
  `qty` double default '0',
  `no` smallint(5) NOT NULL default '0',
  `qty1` double default '0',
  `unit` varchar(6) default NULL,
  `cct` varchar(15) default NULL,
  `etd` longtext,
  `qtyc` double default NULL,
  `nodsg` varchar(50) default NULL,
  `expired` datetime default NULL,
  PRIMARY KEY  (`lph`,`no`),
  KEY `lph` (`lph`),
  KEY `lphqty` (`lph`,`qty`),
  KEY `lphinv` (`lph`,`inv`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.lpd: ~0 rows (approximately)
/*!40000 ALTER TABLE `lpd` DISABLE KEYS */;
/*!40000 ALTER TABLE `lpd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.lph
DROP TABLE IF EXISTS `lph`;
CREATE TABLE IF NOT EXISTS `lph` (
  `lph` varchar(15) NOT NULL default ' ',
  `date` datetime default NULL,
  `duedate` datetime default NULL,
  `sub` varchar(15) default NULL,
  `ppn` smallint(5) default NULL,
  `disc` double default NULL,
  `remark` longtext,
  `val` double default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL,
  `doc` varchar(50) default NULL,
  `nopol` varchar(25) default NULL,
  `oms` varchar(15) default NULL,
  `spb` varchar(15) default NULL,
  `loc` varchar(15) default NULL,
  `cct` varchar(15) default NULL,
  `cur` varchar(6) default NULL,
  `kurs` double default NULL,
  `delete` bit(1) NOT NULL default '\0',
  `plist` varchar(45) default NULL,
  `container` varchar(45) default NULL,
  `nodoc` varchar(50) default NULL,
  `tgl_bc` datetime default NULL,
  `status_bc` int(11) default '0',
  `bsa` varchar(15) default NULL,
  PRIMARY KEY  (`lph`),
  KEY `period` (`period`),
  KEY `spb` (`spb`),
  KEY `oms` (`oms`),
  KEY `sub` (`sub`),
  KEY `tgl` (`date`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.lph: ~0 rows (approximately)
/*!40000 ALTER TABLE `lph` DISABLE KEYS */;
/*!40000 ALTER TABLE `lph` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.mail
DROP TABLE IF EXISTS `mail`;
CREATE TABLE IF NOT EXISTS `mail` (
  `useridfrom` char(15) default NULL,
  `useridto` char(15) default NULL,
  `date` datetime default NULL,
  `subject` varchar(100) default NULL,
  `message` longtext,
  `msgid` double default NULL,
  `msggroup` smallint(5) default NULL,
  `msgstatus` tinyint(1) default NULL,
  `userid` char(15) default NULL,
  KEY `msgid` (`msgid`),
  KEY `userid` (`userid`),
  KEY `useridmsggroup` (`userid`,`msggroup`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.mail: ~0 rows (approximately)
/*!40000 ALTER TABLE `mail` DISABLE KEYS */;
/*!40000 ALTER TABLE `mail` ENABLE KEYS */;

-- Dumping structure for function wis_inventory.MaxNo
DROP FUNCTION IF EXISTS `MaxNo`;
DELIMITER //
CREATE FUNCTION `MaxNo`(
	`pTable` VARCHAR(10),
	`pVar` VARCHAR(10)
) RETURNS varchar(15)
BEGIN
  DECLARE maxno CHAR(15);
  IF pTable = 'sub' THEN
    SELECT MAX(sub) + 1 INTO maxno FROM sub WHERE grp=pVar;
  ELSEIF pTable = 'subtemp' THEN
    SELECT MAX(sub) + 1 INTO maxno FROM subtemp WHERE grp=pVar;
  ELSEIF pTable = 'inv' THEN
    SELECT MAX(inv) + 1 INTO maxno FROM inv WHERE jenis=pVar;
  END IF;
  IF maxno IS NULL THEN
    RETURN concat(pVar,'0001');
  ELSE
    RETURN maxno;
  END IF;
END//
DELIMITER ;

-- Dumping structure for table wis_inventory.mby
DROP TABLE IF EXISTS `mby`;
CREATE TABLE IF NOT EXISTS `mby` (
  `kode_by` varchar(15) NOT NULL default ' ',
  `name` varchar(30) default ' ',
  `remark` varchar(50) default ' ',
  `chusr` varchar(10) default ' ',
  `chtime` varchar(16) default ' ',
  PRIMARY KEY  (`kode_by`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.mby: ~0 rows (approximately)
/*!40000 ALTER TABLE `mby` DISABLE KEYS */;
/*!40000 ALTER TABLE `mby` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.menu
DROP TABLE IF EXISTS `menu`;
CREATE TABLE IF NOT EXISTS `menu` (
  `role` varchar(16) NOT NULL,
  `menu` varchar(50) NOT NULL,
  `submenu` varchar(50) NOT NULL default '',
  PRIMARY KEY  (`role`,`menu`,`submenu`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.menu: ~0 rows (approximately)
/*!40000 ALTER TABLE `menu` DISABLE KEYS */;
/*!40000 ALTER TABLE `menu` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.menuid
DROP TABLE IF EXISTS `menuid`;
CREATE TABLE IF NOT EXISTS `menuid` (
  `menuid` char(15) NOT NULL,
  `caption` char(50) default NULL,
  `formname` char(30) default NULL,
  `message` char(60) default NULL,
  `reportname` char(30) default NULL,
  `tablename` char(15) default NULL,
  PRIMARY KEY  (`menuid`),
  KEY `formname` (`formname`),
  KEY `menuid` (`menuid`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.menuid: ~462 rows (approximately)
/*!40000 ALTER TABLE `menuid` DISABLE KEYS */;
REPLACE INTO `menuid` (`menuid`, `caption`, `formname`, `message`, `reportname`, `tablename`) VALUES
	('1', 'Sistem', '', '', '', NULL),
	('11', 'Kalkulator', '', '', '', NULL),
	('12', 'Setting Printer', '', '', '', NULL),
	('13', '\\-', '', '', '', NULL),
	('14', 'Intra Mail', '', '', '', NULL),
	('18', 'Change Password', 'Fungsi.FrmUser', 'Change Password For This User', '', NULL),
	('19', 'Log Out', 'FrmMainMenu', 'Login As Different User', '', NULL),
	('1a', '\\-', '', '', '', NULL),
	('1b', 'About', '', 'About', '', NULL),
	('1c', '\\-', '', '', '', NULL),
	('1d', 'Report Tree', '', '', '', NULL),
	('2', 'Transaksi', '', 'Transaction', '', NULL),
	('20', 'Jurnal Perkiraan', 'Transaction.FrmTUmh', '', 'umh', NULL),
	('21', 'Pencadangan', 'Transaction.FrmTCad', '', '', 'cad'),
	('22', 'Cost Sheet Order', 'Transaction.FrmTCsi', NULL, NULL, 'vpo'),
	('23', 'Pembelian', '', '', '', NULL),
	('231', 'Purchase Request', 'Transaction.FrmTPrq', '', 'rprq', 'prq'),
	('232', 'Purchase Order Import', 'Transaction.FrmTOrderbeli_im', '', 'oms', 'oms'),
	('233', 'Memo PR', 'Transaction.FrmTMpr', '', 'omsus', 'mpr'),
	('234', '\\-', '', '', 'oms', NULL),
	('235', 'Purchase Order Lokal', 'Transaction.FrmTOrderbeli', '', '', 'oms'),
	('236', 'PR Retur / Jasa', '', '', '', NULL),
	('236a', 'PR Retur', 'Transaction.FrmTRma', '', 'rrma', 'rma'),
	('236b', 'PR Jasa', 'Transaction.FrmTPrj', '', 'rrma', 'rma'),
	('237', 'PO Retur / Jasa', '', '', '', NULL),
	('237a', 'PO Retur', 'Transaction.FrmTPor', '', 'rmsfpj', 'rms'),
	('237b', 'PO Jasa', 'Transaction.FrmTPoj', '', 'rmsfpj', 'rms'),
	('238', '\\-', '', '', '', NULL),
	('239', 'SPB', 'Transaction.FrmTSpb', '', 'rspb', 'spb'),
	('23a', 'LPB', 'Transaction.FrmTLpb', '', 'lpb', 'lph'),
	('23b', 'SPM Pengiriman Retur', 'Transaction.FrmTSpm', '', 'rsjr', 'spm'),
	('23c', 'SJ Pengiriman Retur', 'Transaction.FrmTSJRetur', '', 'roms', 'sjr'),
	('23d', '\\-', '', '', '', NULL),
	('23e', 'Pembelian Import', 'Transaction.FrmTMsk_im', '', 'bu', NULL),
	('23f', 'Pembelian Lokal', 'Transaction.FrmTMsk', '', 'bu', NULL),
	('23g', 'Retur / Jasa Pembelian', 'Transaction.FrmTRms', 'Retur Pembelian', NULL, NULL),
	('23h', '\\-', NULL, NULL, NULL, NULL),
	('23i', 'SPB Gudang', 'Transaction.FrmTSpbgd', NULL, NULL, NULL),
	('23j', 'LPB Jasa / Retur', 'Transaction.FrmTLpbJasa', NULL, NULL, NULL),
	('25', 'Penjualan', '', '', '', NULL),
	('251', 'Sales Order', '', '', '', NULL),
	('251a', 'Sales Order Export', 'Transaction.FrmTOrderjualex', '', '', 'okl'),
	('251b', 'Sales Order Lokal', 'Transaction.FrmTOrderjual', '', '', 'okl'),
	('252', 'Invoice / Packing List', '', NULL, NULL, 'mor'),
	('252a', 'Invoice / Packing List Buyer', 'Transaction.FrmTProforma', NULL, NULL, 'mor'),
	('252b', 'Invoice / Packing List EMKL', 'Transaction.FrmTProformaPeb', NULL, NULL, 'mor'),
	('252c', 'Invoice / Packing List Lokal', 'Transaction.FrmTProformaLokal', NULL, NULL, 'mor'),
	('252d', 'Invoice / Packing List Consignment', 'Transaction.FrmTProformaCons', NULL, NULL, 'mor'),
	('253', 'Shipping Intruction', 'Transaction.FrmTShippInt', '', '', ''),
	('254', 'SO Retur', 'Transaction.FrmTSORetur', '', '', 'rsm'),
	('255', 'Delivery Order', 'Transaction.FrmTDO', '', '', 'doh'),
	('256', 'SPM Penjualan', 'Transaction.FrmTSpmJual', '', 'rspm', 'spm'),
	('257', 'SPM Gudang', 'Transaction.FrmTSpmJual', NULL, NULL, NULL),
	('258', 'Surat Jalan Penjualan', 'Transaction.FrmTSJJual', '', '', 'sjh'),
	('259', 'SPB Retur', 'Transaction.FrmTSpbRetur', '', '', 'spr'),
	('25a', 'LPB Retur', 'Transaction.FrmTLpbRetur', '', 'rrka', 'rka'),
	('25b', '\\-', '', '', '', NULL),
	('25c', 'Penjualan', 'Transaction.FrmTKlr', '', '', NULL),
	('25d', 'Penjualan Export', 'Transaction.FrmTKlrImport', '', 'rklfpj', NULL),
	('25e', '\\-', '', '', '', NULL),
	('25f', 'Faktur Pajak Uang Muka', 'Transaction.FrmTFpjUM', '', '', NULL),
	('25g', 'Faktur Pajak Penjualan', '', '', 'fpj', NULL),
	('25h', 'Faktur Pajak Pengganti', '', '', '', NULL),
	('25i', 'Kwitansi', 'Transaction.FrmTKwitansi', '', 'rkwt', NULL),
	('25j', '\\-', NULL, NULL, NULL, NULL),
	('25k', 'SPM Transfer / Jasa', 'Transaction.FrmTSpm', NULL, NULL, NULL),
	('25l', 'Surat Jalan Transfer / Jasa', 'Transaction.FrmTSJRetur', NULL, NULL, NULL),
	('25m', '\\-', NULL, NULL, NULL, NULL),
	('25n', 'Retur Penjualan', 'Transaction.FrmTRkl', NULL, NULL, NULL),
	('26', '\\-', '', '', '', NULL),
	('27', 'Persediaan', '', '', '', NULL),
	('271', 'Koreksi Persediaan Accounting', 'Transaction.FrmTJin', '', 'bap', NULL),
	('272', 'Opname Persediaan Accounting', 'Transaction.FrmTOpname', '', '', NULL),
	('273', 'Koreksi Persediaan Gudang', 'Transaction.FrmTJin', '', '', NULL),
	('274', 'Opname Persediaan Gudang', 'Transaction.FrmTOpname', '', '', NULL),
	('275', '\\-', '', '', '', NULL),
	('276', 'Bukti Pengeluaran Pemakaian Barang', 'Transaction.FrmTBppb', '', 'bppb', NULL),
	('277', 'Laporan Hasil Produksi', 'Transaction.FrmTLhp', '', 'rlhp', NULL),
	('278', 'Bukti Pemindahan Barang', 'Transaction.FrmTTrm', '', 'trm', NULL),
	('279', 'Retur Bukti Pengeluaran Pemakaian Barang', 'Transaction.FrmTBppbR', '', 'bppbr', NULL),
	('27a', 'Harga Pokok Produksi', 'Transaction.FrmTHPP', '', '', NULL),
	('28', 'Aktiva Tetap', '', '', '', NULL),
	('281', 'Koreksi  Aktiva tetap', 'Transaction.FrmTJin', '', '', NULL),
	('282', 'Penyusutan Aktiva Tetap (Otomatis)', 'Transaction.FrmTJin', '', '', NULL),
	('29', '\\-', '', '', '', NULL),
	('2a', 'Jurnal Memo Debet / Kredit', 'Transaction.FrmTJsu', '', '', NULL),
	('2b', '\\-', '', '', '', NULL),
	('2c', 'Request For Payment', '', '', '', NULL),
	('2c1', 'Request For Payment', 'Transaction.FrmRFP', '', '', NULL),
	('2d', '\\-', '', '', '', NULL),
	('2e', 'Kas dan Bank', '', '', '', NULL),
	('2e1', 'Kas Kecil Keluar', 'Transaction.FrmTKBK', '', 'bkas', NULL),
	('2e2', 'Kas Kecil Masuk', 'Transaction.FrmTKBM', '', 'bkas', NULL),
	('2e3', '\\-', '', '', '', NULL),
	('2e4', 'Kas dan Bank Keluar', 'Transaction.FrmTPHutang', '', '', NULL),
	('2e5', 'Kas dan Bank Masuk', 'Transaction.FrmTPPiutang', '', '', NULL),
	('2e7', '\\-', '', '', '', NULL),
	('2ea', 'Pencairan Giro', 'Transaction.FrmTCGr', '', '', NULL),
	('2f', '\\-', '', '', '', NULL),
	('2g', 'Internal Order', 'Transaction.FrmTIno', '', 'rino', NULL),
	('2h', 'Produksi', NULL, NULL, NULL, NULL),
	('2h1', 'Kertas Kerja', '', NULL, NULL, NULL),
	('2h2', 'Joint Production Cost Allocation', 'Transaction.FrmTCostAll', NULL, NULL, NULL),
	('2h3', 'Jounal Entry', '', NULL, NULL, NULL),
	('2i', 'Bea Cukai', '', '', NULL, NULL),
	('2i1', 'Input Document Pelabuhan', 'Transaction.FrmDocPelabuhan', NULL, NULL, NULL),
	('2i2', 'Scrap', 'Transaction.FrmTScrap', NULL, NULL, NULL),
	('2j', 'Tanda Terima Faktur', 'Transaction.FrmTTtf', NULL, NULL, NULL),
	('3', 'Master', '', 'Master', '', NULL),
	('30', 'Perkiraan', 'Master.FrmMasterAcc', 'Chart of Account', '', NULL),
	('31', '\\-', '', '', '', NULL),
	('32', 'Material Type', 'Master.FrmMasterMtp', '', '', NULL),
	('33', 'Kode Transaksi', 'Master.FrmMasterKdtrans', '', '', NULL),
	('34', 'Group Customer/Supplier', 'Master.FrmMasterGroup', '', '', NULL),
	('35', 'Cost Centre', 'Master.FrmMasterCct', 'Chart of Cost Centre', '', NULL),
	('36', '\\-', '', '', '', NULL),
	('37', 'Supplier', 'Master.FrmMasterSupplier', '', '', NULL),
	('38', 'Customer', 'Master.FrmMasterCustomer', '', '', NULL),
	('39', 'Sales', '', '', '', NULL),
	('3a', '\\-', '', '', '', NULL),
	('3b', 'Kelompok Persediaan', 'Master.FrmMasterJenis', '', '', NULL),
	('3c', 'Persediaan', 'Master.FrmMasterInv', '', '', NULL),
	('3d', 'History Harga Beli', 'Master.FrmMasterHBL', '', '', NULL),
	('3e', 'Master harga Jual', '', '', '', NULL),
	('3e1', 'Harga Jual Sales Order', '', '', NULL, NULL),
	('3e2', 'Harga Jual Pasar', '', '', NULL, NULL),
	('3e3', '\\-', '', NULL, NULL, NULL),
	('3e4', 'Master Setting Harga Group', 'Master.FrmMasterGrpHrgJual', NULL, NULL, NULL),
	('3e5', 'Master Pricelist', 'Master.FrmMasterHrgJL1', NULL, NULL, NULL),
	('3f', 'Lokasi Persediaan', 'Master.FrmMasterLoc', '', '', NULL),
	('3g', 'Station', '', '', '', NULL),
	('3h', 'Mater Flexible dan Corrugated', '', '', '', NULL),
	('3h1', 'Master Corrugated', '', 'master corrugated', NULL, NULL),
	('3h2', 'Master Flexible', '', 'master flexible', NULL, NULL),
	('3i', 'Aktiva Tetap', 'Master.FrmMasterAktiva', '', '', NULL),
	('3j', '\\-', '', '', '', NULL),
	('3k', 'Mata Uang', 'Master.FrmMasterCur', '', '', NULL),
	('3l', 'Setting Rekening Vendor', 'Master.FrmMasterKGr', '', '', NULL),
	('3m', '\\-', '', '', '', NULL),
	('3n', 'Master Supplier Temporary', '', 'Master.FrmMasterSupplierTemp', '', NULL),
	('3o', 'Master Departement', '', '', '', NULL),
	('3p', '\\-', '', '', '', NULL),
	('3q', 'Penomoran Faktur Pajak', 'Master.FrmMasterNoPajak', '', '', NULL),
	('3r', 'Setting Nomor Pajak Supplier', 'Master.FrmMasterNoPjkS', '', '', NULL),
	('3s', 'Quality Of Product Location', '', '', '', NULL),
	('3t', 'Master Reason', 'Master.FrmMasterReason', '', '', NULL),
	('3u', '\\-', '', NULL, NULL, NULL),
	('3v', 'Prosentase BOP', '', '', '', NULL),
	('3w', 'Mesin', '', NULL, NULL, NULL),
	('3x', 'Master Biaya Trucking and Freight', '', 'master biaya trucking and freight', NULL, NULL),
	('3y', 'WIP Lost', '', NULL, NULL, NULL),
	('3z', 'Master Shipper', 'Master.FrmMasterShipper', NULL, NULL, NULL),
	('4', 'Register', '', 'Inquiry', '', NULL),
	('41', 'Register Perkiraan', '', '', '', NULL),
	('42', '\\-', '', '', '', NULL),
	('43', 'Hutang', '', '', '', NULL),
	('44', 'Piutang', '', '', '', NULL),
	('441', 'Piutang Customer', '', '', '', NULL),
	('442', '\\-', '', '', '', NULL),
	('443', 'Piutang Sales', '', '', '', NULL),
	('47', '\\-', '', '', '', NULL),
	('48', 'Inventory', '', '', '', NULL),
	('481', 'Arus Inventory Dengan Nilai', 'Master.FrmMasterInvFlow', '', '', NULL),
	('482', 'Arus Inventory Tanpa Nilai', 'Master.FrmMasterInvFlow1', '', '', NULL),
	('483', 'Update Status Inventory', 'Proses.FrmPInvIT', '', '', NULL),
	('49', '\\-', '', '', '', NULL),
	('4a', 'Harga Beli Persediaan', 'Master.FrmMasterHBL', '', '', NULL),
	('4b', 'Harga Jual Persediaan', '', '', '', NULL),
	('4c', '\\-', '', '', '', NULL),
	('5', 'Proses', '', 'Re-Process,Closing Period, And Cek Data Error', '', NULL),
	('51', 'Proses Ulang dan Tutup Periode', 'Proses.FrmPReproses', 'Re-Process And Closing Period', '', NULL),
	('52', 'Closse Month', 'Proses.FrmPLockPeriod', 'daftar tutup bulan', '', NULL),
	('53', 'Proses Multi Transaction', 'Proses.FrmPMultiProses', NULL, '', NULL),
	('54', 'Proses Adjustment HPPR Varian', 'Proses.FrmPAdjHpp', NULL, NULL, NULL),
	('55', 'Proses MRP PR', 'Proses.FrmPMrpPr', NULL, NULL, NULL),
	('56', 'Open PO', 'Proses.FrmPOpenPO', '', NULL, 'openpo'),
	('57', 'Open SO', 'Proses.FrmPOpenSO', NULL, NULL, NULL),
	('6', 'Laporan', '', 'Report', '', NULL),
	('61', 'Master', '', '', '', NULL),
	('611', 'Daftar Perkiraan', 'Laporan.FrmMPerkiraan', '', 'acclist', NULL),
	('6114', 'Status Memo Purchase Request', 'Laporan.FrmLHistoryMemo', NULL, NULL, NULL),
	('612', 'Struktur Perkiraan', '', '', 'acctree', NULL),
	('613', '\\-', '', '', '', NULL),
	('614', 'Daftar Cost Centre', '', '', 'cctlist', NULL),
	('615', 'Struktur Cost Centre', '', '', 'ccttree', NULL),
	('616', '\\-', '', '', '', NULL),
	('617', 'Supplier', 'Laporan.FrmLCustSup', '', 'suplist', NULL),
	('618', 'Customer', 'Laporan.FrmLCustSup', '', 'cuslist', NULL),
	('619', 'Sales', '', '', 'saleslist', NULL),
	('61c', '\\-', '', '', '', NULL),
	('61d', 'Kelompok Persediaan', '', '', 'jenislist', NULL),
	('61e', 'Persediaan', 'Laporan.FrmLMBarang', 'Maftar Master Barang', 'RepMBarang', NULL),
	('61f', 'Lokasi Persediaan', '', '', 'loclist', NULL),
	('61g', '\\-', '', '', '', NULL),
	('61h', 'Konversi Giro', '', '', 'kgrlist', NULL),
	('62', '\\-', '', '', '', NULL),
	('63', 'Transaksi', '', '', '', NULL),
	('631', 'Pembelian', '', '', '', NULL),
	('6311', 'Purchase Request', '', '', '', NULL),
	('63111', 'Status PR Dengan Nilai', 'Laporan.FrmLStatusPR', '', '', NULL),
	('63112', 'History PR', 'Laporan.FrmLHistoryPR', '', '', NULL),
	('63113', 'Status PR Tanpa Nilai', 'Laporan.FrmLStatusPR', '', '', NULL),
	('63114', 'Hystory Memo Purchase Request', 'Laporan.FrmLHistoryMemo', NULL, NULL, NULL),
	('6312', 'Order Pembelian', '', '', '', NULL),
	('63121', 'Corrugated Packaging', '', '', 'omslist01', NULL),
	('63122', 'Flexible Packaging', '', '', '', NULL),
	('63123', '\\-', '', '', 'omslist02', NULL),
	('63124', 'Status Order Pembelian Tanpa Nilai', 'Laporan.FrmLStatusPO', '', '', NULL),
	('63125', 'Status Order Pembelian Dengan Nilai', 'Laporan.FrmLStatusPO', '', 'omsout', NULL),
	('63126', 'History Order Pembelian', 'Laporan.FrmLHistoryPO', '', 'omsout1', NULL),
	('63127', 'History Order Pembelian Tanpa Nilai', 'Laporan.FrmLHistoryPO', '', 'omsout2', NULL),
	('63128', 'PO Tanpa Harga', 'Laporan.FrmLHistoryPO', '', 'omsout3', NULL),
	('63129', 'History Order Pembelian Jasa', 'Laporan.FrmLHistoryPO', '', 'omsout3', NULL),
	('6313', 'Evaluasi Pemakaian', '', '', '', NULL),
	('63130', '\\-', '', '', 'repldo', NULL),
	('63131', 'Evaluasi Pemakaian Per Kelompok Persediaan', 'Laporan.FrmLAvgPembelian', NULL, NULL, NULL),
	('6314', 'LPB', '', '', '', NULL),
	('63141', 'LPB Dengan Harga', 'Laporan.FrmLLPB', '', 'vpolist01', NULL),
	('63142', 'LPB Tanpa Harga', 'Laporan.FrmLLPB', '', '', NULL),
	('63143', 'Laporan Penerimaan Barang', 'Laporan.FrmLLPB', '', 'vpolist02', NULL),
	('6315', '\\-', '', '', '', NULL),
	('6316', 'Pembelian', '', '', '', NULL),
	('63161', 'Pembelian Per Tanggal', 'Laporan.FrmLMskPerTanggal', '', 'msklist01', NULL),
	('63162', '\\-', '', '', '', NULL),
	('63163', 'Pembelian Per Persediaan', '', '', 'msklist02', NULL),
	('63164', '\\-', '', '', '', NULL),
	('63165', 'Realisasi Pembelian dengan LPB', 'Laporan.FrmLMskPerTanggal', '', 'mskvslpb', NULL),
	('6317', '\\-', '', '', '', NULL),
	('6318', 'Retur Pembelian', '', '', '', NULL),
	('63181', 'Status PR Retur', 'Laporan.FrmLStatusPRRetur', '', 'rmslist01', NULL),
	('63182', 'History PR Retur', 'Laporan.FrmLHistoryPR', '', '', NULL),
	('63183', 'Status PO Retur', 'Laporan.FrmLStatusPO', '', 'rmslist02', NULL),
	('63184', 'History PO Retur', 'Laporan.FrmLHistoryPORetur', '', '', NULL),
	('63185', 'PO Retur tanpa Harga', 'Laporan.FrmLHistoryPORetur', '', '', ''),
	('6319', 'Laporan Request For Payment', 'Laporan.FrmLRFP', '', 'ttrq', NULL),
	('631a', 'Laporan History PR Jasa', 'Laporan.FrmLHistoryPR', NULL, NULL, NULL),
	('631b', 'Laporan Pembelian Raw Material', 'Laporan.FrmLPembelianRM', NULL, NULL, NULL),
	('632', '\\-', '', '', '', NULL),
	('633', 'Penjualan', '', '', '', NULL),
	('6331', 'Order Penjualan', '', '', '', NULL),
	('63311', 'Per Tanggal', '', '', 'okllist01', NULL),
	('63312', '\\-', '', '', '', NULL),
	('63313', 'Per Persediaan', '', '', 'okllist02', NULL),
	('63314', '\\-', '', '', '', NULL),
	('63315', 'Status Order Penjualan', 'Laporan.FrmLStatusSO', '', 'oklout', NULL),
	('63316', 'History Order Penjualan', 'Laporan.FrmLHistorySO', '', 'oklout1', NULL),
	('63317', 'Report Order Penjualan tanpa Harga', 'Laporan.FrmLHistorySO', '', 'oklout2', NULL),
	('63318', '\\-', '', '', '', NULL),
	('63319', 'Realisasi S.O', '', '', 'okllistr', NULL),
	('6332', '\\-', '', '', '', NULL),
	('6333', 'Delivery Order', '', '', '', NULL),
	('63331', 'Status DO', 'Laporan.FrmLStatusDO', '', 'repLDO', NULL),
	('63332', 'History DO', 'Laporan.FrmLStatusDO', '', '', NULL),
	('63333', 'Per Persediaan', '', '', 'vsolist02', NULL),
	('63334', '\\-', '', '', '', NULL),
	('63335', 'List MO', '', '', '', NULL),
	('6334', '\\-', '', '', '', NULL),
	('6335', 'Penjualan', '', '', '', NULL),
	('63351', 'Penjualan Per Tanggal', 'Laporan.FrmLKlrPerTanggal', '', 'klrlist01', NULL),
	('63352', 'Rekap Piutang Belum Terlunasi', 'Laporan.FrmLKwt_outstanding', '', 'klrlist01us', NULL),
	('63353', 'Uang Muka Penjualan', 'Laporan.FrmLUMK', '', '', NULL),
	('63354', 'Penjualan dan Biaya', 'Laporan.FrmLBiayaPenj', '', '', NULL),
	('63355', 'Penjualan Bank Mandiri', 'Laporan.FrmLJatuhTempo', '', '', NULL),
	('63356', 'History Penjualan Export', 'Laporan.FrmLJatuhTempo', '', 'klrlist04R', NULL),
	('63357', 'Selisih Penjualan dengan SJL', 'Laporan.FrmLSJPenjualanT', '', NULL, NULL),
	('6336', '\\-', '', '', '', NULL),
	('6337', 'Retur Penjualan', '', '', '', NULL),
	('63371', 'LPB Retur Penjualan', 'Laporan.FrmLLPBRetur', '', 'rkllist01', NULL),
	('63372', '\\-', '', '', '', NULL),
	('63373', 'Per Item', '', '', 'rkllist02', NULL),
	('63374', '\\-', '', '', '', NULL),
	('6338', 'Surat Jalan', '', '', '', NULL),
	('63381', 'Surat Jalan Per Tanggal', 'Laporan.FrmLSJPenjualan', '', 'sjllist', NULL),
	('63382', 'Surat Jalan Per Persediaan', 'Laporan.FrmLSJPenjualan', NULL, NULL, NULL),
	('63383', 'Laporan Surat Jalan Per SO', 'Laporan.FrmLSJPenjualan', 'lap Sj per so per persediaan', NULL, NULL),
	('63384', 'Surat Jalan Transfer', 'Laporan.FrmLSJPenjualanT', NULL, 'lapsjt', NULL),
	('63385', 'Surat Jalan Retur', 'Laporan.FrmLSJPenjualanT', NULL, NULL, NULL),
	('6339', '\\-', '', '', '', NULL),
	('633a', 'Hpp Belum Difakturkan', 'Laporan.FrmLHPPBF', '', 'sjlv', NULL),
	('633b', 'Invoice Yang Belum Di PPNkan', '', '', 'klrv', NULL),
	('634', '\\-', '', '', '', NULL),
	('635', 'Jurnal Persediaan', '', '', '', NULL),
	('6351', 'Koreksi Persediaan', '', '', 'jinlist', NULL),
	('6352', '\\-', '', '', '', NULL),
	('6353', 'Transfer Persediaan', '', '', 'trmlist', NULL),
	('6354', '\\-', '', '', '', NULL),
	('6355', 'Opname Persediaan', '', '', 'opnlist', NULL),
	('6356', 'Opname Persediaan Gudang', '', '', 'opnlistgd', NULL),
	('636', '\\-', '', '', '', NULL),
	('637', 'Jurnal Perkiraan', '', '', 'umhlist', NULL),
	('638', 'Jurnal Memo Debet / Kredit', '', '', 'jsulist', NULL),
	('63b', '\\-', '', '', '', NULL),
	('63c', 'Kas dan Bank', '', '', '', NULL),
	('63c1', 'Kas dan Bank Keluar', '', '', 'kkklist', NULL),
	('63c2', 'Kas dan Bank Masuk', '', '', 'kkmlist', NULL),
	('63c3', '\\-', '', '', '', NULL),
	('63c4', 'Pelunasan Hutang', '', '', 'kkllist', NULL),
	('63c5', 'Pelunasan Piutang', '', '', 'kmslist', NULL),
	('63c6', '\\-', '', '', '', NULL),
	('63c7', 'Setor Giro', '', '', 'strlist', NULL),
	('63c8', 'Tolakan Giro', '', '', 'tlklist', NULL),
	('63c9', 'Pencairan Giro', '', '', 'cgrlist', NULL),
	('63d', '\\-', '', '', '', NULL),
	('63f', '\\-', '', '', '', NULL),
	('63g', 'Angkutan', '', '', '', NULL),
	('63g1', 'Angkutan Per Supplier', 'Laporan.FrmLBuktiMuat', '', 'angkutan', NULL),
	('63g2', 'Angkutan Per Tujuan', 'Laporan.FrmLBuktiMuat', '', 'angkutan1', NULL),
	('63h', '\\-', '', '', '', NULL),
	('63i', 'Purchase Request', '', '', '', NULL),
	('63i1', 'Outstanding Puchase Request', '', '', 'prqout1', NULL),
	('63i2', 'History Purchase Request', '', '', 'prqout', NULL),
	('65', 'Laporan Keuangan', '', '', '', NULL),
	('651', 'Neraca Saldo', 'Laporan.FrmLNeracaSaldo', '', 'trial', NULL),
	('652', '\\-', '', '', '', NULL),
	('653', 'Buku Besar', '', '', 'repgen', NULL),
	('654', 'Buku Besar Pembantu', '', '', '', NULL),
	('6541', 'Perkiraan Induk', 'Laporan.FrmLBukuBesar', '', 'repsubglobal', NULL),
	('6542', 'Perkiraan Detil', 'Laporan.FrmLBukuBesar', '', 'repsubdetil', NULL),
	('655', '\\-', '', '', '', NULL),
	('656', 'Neraca', '', '', '', NULL),
	('6561', 'Neraca', 'Laporan.FrmLNeraca', '', 'neraca', NULL),
	('6563', 'Neraca Perbandingan', '', '', 'neracabulanan', NULL),
	('6565', '\\-', '', '', '', NULL),
	('6566', 'Lampiran Neraca', '', '', 'neracalampiran', NULL),
	('6567', 'Neraca Lajur', '', '', 'neracalajur', NULL),
	('657', 'Laba / Rugi', '', '', '', NULL),
	('6571', 'Laba / Rugi', 'Laporan.FrmLNeraca', '', 'rglaba', NULL),
	('6572', 'Laba  / Rugi Prosentase', '', '', 'rglabaprosentase', NULL),
	('6573', '\\-', '', '', '', NULL),
	('6574', 'Laba / Rugi Tahunan', '', '', 'rglabatahunan', NULL),
	('6575', '\\-', '', '', '', NULL),
	('6576', 'Lampiran Laba / Rugi', '', '', 'rglabalampiran', NULL),
	('66', 'Laporan Cost Centre', '', '', '', NULL),
	('661', 'Buku Besar Pembantu Detil / Perkiraan', 'Laporan.FrmLBukuBesar', '', 'repsubdetilcct1', NULL),
	('662', 'Buku Besar Pembantu Detil / Cost Centre', '', '', 'repsubdetilcct2', NULL),
	('663', '\\-', '', '', '', NULL),
	('664', 'Laba / Rugi', '', '', 'rglabacct', NULL),
	('67', '\\-', '', '', '', NULL),
	('68', 'Hutang / Piutang', '', '', '', NULL),
	('681', 'Saldo Hutang', 'Laporan.FrmLBPHutangPiutang', '', 'suppos', NULL),
	('682', 'Buku Pembantu Hutang', 'Laporan.FrmLBPHutangPiutang', '', 'supmut', NULL),
	('683', 'Umur Hutang', '', '', '', NULL),
	('6831', 'Umur Hutang Global', 'Laporan.FrmLUmurHutangPiutang', '', 'supage', NULL),
	('6832', 'Umur Hutang Detail', 'Laporan.FrmLUmurHutangPiutang', '', 'supage1', NULL),
	('684', 'Hutang Belum Difakturkan', 'Laporan.FrmLHutangXInvoice', '', 'valuasi', NULL),
	('685', 'Laporan Valuasi', '', '', '', NULL),
	('6851', 'Valuasi Supplier', 'Laporan.FrmLJatuhTempo', '', 'hisvaluasi', NULL),
	('6852', 'Valuasi Customer', 'Laporan.FrmLJatuhTempo', '', 'hisvaluasi', NULL),
	('687', 'Hutang Jatuh Tempo', 'Laporan.FrmLJatuhTempo', '', 'supduedate', NULL),
	('688', '\\-', '', '', '', NULL),
	('689', 'Saldo Piutang', 'Laporan.FrmLBPHutangPiutang', '', 'cuspos', NULL),
	('68a', 'Buku Pembantu Piutang', 'Laporan.FrmLBPHutangPiutang', '', 'cusmut', NULL),
	('68b', 'Umur Piutang', '', '', '', NULL),
	('68b1', 'Umur Piutang Global', 'Laporan.FrmLUmurHutangPiutang', '', 'cusage', NULL),
	('68b2', 'Umur Piutang Detail', 'Laporan.FrmLUmurHutangPiutang', '', 'cusage1', NULL),
	('68c', 'Proyeksi Piutang', '', '', '', NULL),
	('68c1', 'Proyeksi Piutang Global', '', '', 'cuspro', NULL),
	('68c2', 'Proyeksi Piutang  Detail', '', '', 'cuspro1', NULL),
	('68d', 'Piutang OutStanding', 'Laporan.FrmLJatuhTempo', '', 'cusduedate', NULL),
	('68e', 'Piutang Belum Difakturkan', 'Laporan.FrmLPiutangXInvoice', '', '', NULL),
	('68f', 'Saldo Piutang Sales', '', '', 'salespos', NULL),
	('68g', 'Buku Pembantu Piutang Sales', '', '', 'salesmut', NULL),
	('68h', 'Piutang Sales Jatuh Tempo', '', '', 'salesduedate', NULL),
	('68i', '\\-', '', '', '', NULL),
	('68j', 'History Customer', '', '', 'hisklr', NULL),
	('68k', '\\-', '', '', '', NULL),
	('68l', 'History Supplier', '', '', 'hisklr', NULL),
	('69', '\\-', '', '', '', NULL),
	('6a', 'Persediaan', '', '', '', NULL),
	('6a1', 'Kartu Persediaan', '', '', '', NULL),
	('6a11', 'Tanpa Nilai', 'Laporan.FrmLKartuStock', '', 'invmut', NULL),
	('6a12', 'Tanpa Nilai IT', 'Laporan.FrmLKartuStock', '', '', NULL),
	('6a13', 'Dengan Nilai', 'Laporan.FrmLKartuStock', '', 'invmut01', NULL),
	('6a2', '\\-', '', '', '', NULL),
	('6a3', 'Kartu Persediaan Global', '', '', '', NULL),
	('6a31', 'Tanpa Nilai', 'Laporan.FrmLKartuStock', '', 'invmut', NULL),
	('6a32', '\\-', '', '', '', NULL),
	('6a33', 'Dengan Nilai', 'Laporan.FrmLKartuStock', '', 'invmut01', NULL),
	('6a4', '-', '', '', '', NULL),
	('6a5', 'Rekap Persediaan', '', '', '', NULL),
	('6a51', 'Tanpa Nilai', 'Laporan.FrmLKartuStock', '', 'invpos04', NULL),
	('6a52', 'Tanpa Nilai IT', 'Laporan.FrmLKartuStock', '', 'invpos05', NULL),
	('6a53', '\\-', '', '', '', NULL),
	('6a54', 'Dengan Nilai', 'Laporan.FrmLKartuStock', '', 'invpos06', NULL),
	('6a55', 'Dengan Nilai Global', '', '', 'invpos07', NULL),
	('6a6', '\\-', '', '', '', NULL),
	('6a7', 'Saldo Persediaan', '', '', '', NULL),
	('6a71', 'Dengan Nilai Global', '', '', 'invpos', NULL),
	('6a72', 'Tanpa Nilai Global', '', '', 'invpos01', NULL),
	('6a73', '\\-', '', '', '', NULL),
	('6a74', 'Dengan Nilai', '', '', 'invpos02', NULL),
	('6a75', 'Dengan Nilai Global', '', '', 'invpos03', NULL),
	('6a8', '\\-', '', '', '', NULL),
	('6a9', 'Saldo Persediaan < Minimum', '', '', 'invmin', NULL),
	('6a91', 'Stock Minimum', '', NULL, 'RepStockOrderBeli', NULL),
	('6a92', 'Stock Minimum', 'Laporan.FrmLStatusPR', 'stock bahan baku', 'RepStockOrderBeli', NULL),
	('6aa', '\\-', '', '', '', NULL),
	('6ab', 'Laba Kotor', '', '', '', NULL),
	('6ab1', 'Per Customer Per Persediaan', 'Laporan.FrmLLabaKotor', '', 'invlaba', NULL),
	('6ab2', 'Per Persediaan Detail', '', '', 'invlaba1', NULL),
	('6ab3', '\\-', '', '', '', NULL),
	('6ab4', 'Per Customer', '', '', 'invlaba2', NULL),
	('6ab5', 'Per Customer Detail', '', '', 'invlaba3', NULL),
	('6ab6', '\\-', '', '', '', NULL),
	('6ab7', 'Per Customer Per Persediaan', '', '', 'invlaba4', NULL),
	('6ac', '\\-', '', '', '', NULL),
	('6ad', 'Laporan Hasil Produksi', '', '', '', NULL),
	('6ad1', 'LHP Dengan Nilai', 'Laporan.FrmLLHP', '', 'lhplist', NULL),
	('6ad2', 'LHP Tanpa Nilai Per Lokasi', 'Laporan.FrmLLHP', '', 'lhplist1', NULL),
	('6ad3', 'LHP Tanpa Nilai Per Mesin', 'Laporan.FrmLLHP', NULL, NULL, NULL),
	('6ad4', 'LHP Tanpa Nilai Per Cost Center', 'Laporan.FrmLLHP', NULL, NULL, NULL),
	('6ae', 'Bukti Pengeluaran Pemakaian Bahan', '', '', '', NULL),
	('6ae1', 'BPPB dengan Nilai', 'Laporan.FrmLLHP', '', 'bppblist', NULL),
	('6ae2', 'BPPB Tanpa Nilai', 'Laporan.FrmLLHP', '', 'bppblist1', NULL),
	('6ae3', 'Rekap BPPB Perbulan', 'Laporan.FrmLLHP', NULL, NULL, NULL),
	('6af', 'Bukti Pemindahan Barang', 'Laporan.FrmLTrm', '', 'bpblist', NULL),
	('6ag', 'Koreksi Persediaan', 'Laporan.FrmLLHP', NULL, NULL, NULL),
	('6b', '\\-', '', '', '', NULL),
	('6c', 'Kas dan Bank', '', '', '', NULL),
	('6c1', 'Giro', '', '', '', NULL),
	('6c11', 'Giro Per Perkiraan', 'Laporan.FrmLGiro', '', 'bglist', NULL),
	('6c12', 'Giro Per Perkiraan Accounting', 'Laporan.FrmLGiro', '', 'bglistcus', NULL),
	('6c13', 'Giro Jatuh Tempo Per Customer', '', '', 'bglistcusdue', NULL),
	('6c2', '\\-', '', '', '', NULL),
	('6c3', 'Kas dan Bank', '', '', 'kasmut', NULL),
	('6c31', 'Kas dan Bank', 'Laporan.FrmLMutasiKASBank', '', '', NULL),
	('6c32', '\\-', '', '', '', NULL),
	('6c33', 'Ringkasan BBM', 'Laporan.FrmLBBM', '', '', NULL),
	('6c34', 'Ringkasan BBK', 'Laporan.FrmLBBK', '', '', NULL),
	('6c35', 'Ringkasan BKM', 'Laporan.FrmLBKM', '', '', NULL),
	('6c36', 'Ringkasan BKK', 'Laporan.FrmLBKK', '', '', NULL),
	('6c37', '\\-', '', '', '', NULL),
	('6c38', 'Bank USD', 'Laporan.FrmLBus', '', 'repbankus', NULL),
	('6d', 'Pajak', '', '', '', NULL),
	('6d1', 'Laporan Pajak Masukan', 'Laporan.FrmLCustSup', '', 'rekfpj11906', NULL),
	('6d2', 'Laporan Pajak Keluaran', 'Laporan.FrmLCustSup', '', 'rekfpj11906a', NULL),
	('6d3', 'Pelunasan Hutang Piutang & PPN', 'Laporan.FrmLPPNPembelian', '', '', NULL),
	('6d4', 'Buku Besar Pajak', 'Laporan.FrmLBukuBesar', NULL, NULL, NULL),
	('6d5', 'Laporan Penerimaan Barang Pajak', 'Laporan.FrmLLPB', NULL, NULL, NULL),
	('6d6', 'Laporan Buku Besar Pembelian', 'Laporan.FrmLPPNPembelian', NULL, NULL, NULL),
	('6d7', 'Laporan Rekap Surat Jalan Pajak', 'Laporan.FrmLSJPenjualan', NULL, NULL, NULL),
	('6d8', 'Laporan Buku Penjualan Pajak', 'Laporan.FrmLKlrPerTanggal', NULL, NULL, NULL),
	('6d9', 'Laporan Buku Besar Piutang', 'Laporan.FrmLBukuBesar', NULL, NULL, NULL),
	('6da', 'Laporan Rekap Persediaan Pajak', 'Laporan.FrmLKartuStock', NULL, NULL, NULL),
	('6db', 'Laporan PPH', 'Laporan.FrmLBPHutangPiutang', NULL, NULL, NULL),
	('6e', 'Cost Production', '', '', '', NULL),
	('6e1', 'Biaya Overhead Pabrik', 'Laporan.FrmLNeraca', '', 'repbop', NULL),
	('6e2', 'LPB yang belum di Cost Sheet-kan', '', '', 'lpbcsi', NULL),
	('6e3', 'LPB yang di Cost Sheet-kan Bulan Lalu', '', '', 'lpbcsi1', NULL),
	('6e4', 'Nilai Cossheet', '', '', 'csicsb', NULL),
	('6f', 'Aktiva Tetap', '', '', '', NULL),
	('6fb', 'Aktiva Tetap & Penyusutan', 'Laporan.FrmLDaftarAkt', '', 'aktlist', NULL),
	('6fc', 'Aktiva Per Cost Center', '', '', 'aktlist2', NULL),
	('6fd', 'Master Aktiva Tetap', 'Laporan.FrmLMAktiva', '', 'invaktlist', NULL),
	('6g', 'Jurnal', 'Laporan.FrmLJurnal', NULL, NULL, NULL),
	('6h', 'User Define Report', '', '', 'mlhlist', NULL),
	('6i', 'Bea Cukai', NULL, NULL, NULL, NULL),
	('6i1', 'BC Pemasukan Barang', 'Laporan.FrmLBCMasukKeluar', NULL, NULL, NULL),
	('6i2', 'BC Pengeluaran Barang', 'Laporan.FrmLBCMasukKeluar', NULL, NULL, NULL),
	('6i3', 'BC Pertanggung Jawaban Mutasi Barang Jadi', 'Laporan.FrmLBCJadiBahan', NULL, NULL, NULL),
	('6i4', 'BC Pertanggung Jawaban Mutasi Bahan Baku', 'Laporan.FrmLBCJadiBahan', NULL, NULL, NULL),
	('6i5', 'BC Pertanggung Jawaban Mutasi Barang Scrap', 'Laporan.FrmLBCJadiBahan', NULL, NULL, NULL),
	('6i6', 'BC Pertanggung Jawaban Mutasi  Mesin dan Alat', 'Laporan.FrmLBCJadiBahan', NULL, NULL, NULL),
	('6i7', 'BC Posisi Barang Dalam Proses (WIP)', 'Laporan.FrmLBCJadiBahan', NULL, NULL, NULL),
	('6i8', 'BC Pengeluaran Sisa Pengemas', 'Laporan.FrmLBCKeluarSisa', NULL, NULL, NULL),
	('6j', 'Penagihan', NULL, NULL, NULL, NULL),
	('6j1', 'Rekap TTF', 'Laporan.FrmLHutangXInvoice', NULL, NULL, NULL),
	('7', 'Fungsi', '', 'Utility', '', NULL),
	('71', 'Konfigurasi', 'Fungsi.FrmKonfigurasi', '', '', NULL),
	('72', 'No Seri', 'Master.FrmMasterModul', NULL, NULL, NULL),
	('73', '\\-', '', '', '', NULL),
	('74', 'User', 'Fungsi.FrmUser', '', '', NULL),
	('75', 'Group User', 'Fungsi.FrmUserGroup', 'Setting Up For User Group', '', NULL),
	('76', 'User Purchase', 'Master.FrmMasterUsrP', '', '', NULL),
	('77', 'User Requisitioner', 'Master.FrmMasterUsrPr', '', '', NULL),
	('78', 'User Location', 'Master.FrmUserLoc', '', '', NULL),
	('8', 'Sinkron TPB', 'Proses.FrmPTpbinv', NULL, NULL, NULL);
/*!40000 ALTER TABLE `menuid` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.mfd
DROP TABLE IF EXISTS `mfd`;
CREATE TABLE IF NOT EXISTS `mfd` (
  `inv` varchar(15) default NULL,
  `cct` varchar(15) default NULL,
  `prosent` double default NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.mfd: ~0 rows (approximately)
/*!40000 ALTER TABLE `mfd` DISABLE KEYS */;
/*!40000 ALTER TABLE `mfd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.mkertas
DROP TABLE IF EXISTS `mkertas`;
CREATE TABLE IF NOT EXISTS `mkertas` (
  `kode` varchar(2) NOT NULL,
  `nama` varchar(45) NOT NULL,
  `chusr` char(10) default NULL,
  `chtime` char(16) default NULL,
  PRIMARY KEY  (`kode`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.mkertas: ~0 rows (approximately)
/*!40000 ALTER TABLE `mkertas` DISABLE KEYS */;
/*!40000 ALTER TABLE `mkertas` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.mld
DROP TABLE IF EXISTS `mld`;
CREATE TABLE IF NOT EXISTS `mld` (
  `name` varchar(50) default NULL,
  `acc` char(15) default NULL,
  `rem` char(60) default NULL,
  `flag` char(1) default NULL,
  `group_` char(1) default NULL,
  `no` smallint(5) default NULL,
  `gah` varchar(15) default NULL,
  `subtotal` varchar(1) default NULL,
  KEY `IX_mld` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.mld: ~0 rows (approximately)
/*!40000 ALTER TABLE `mld` DISABLE KEYS */;
/*!40000 ALTER TABLE `mld` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.mlh
DROP TABLE IF EXISTS `mlh`;
CREATE TABLE IF NOT EXISTS `mlh` (
  `name` varchar(50) NOT NULL,
  `chtime` char(16) default NULL,
  `chusr` char(10) default NULL,
  `jeniscetak` smallint(5) default NULL,
  `accrev` varchar(15) default NULL,
  `accasset` varchar(15) default NULL,
  `accequity` varchar(15) default NULL,
  `accwajib` varchar(15) default NULL,
  PRIMARY KEY  (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.mlh: ~0 rows (approximately)
/*!40000 ALTER TABLE `mlh` DISABLE KEYS */;
/*!40000 ALTER TABLE `mlh` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.modul
DROP TABLE IF EXISTS `modul`;
CREATE TABLE IF NOT EXISTS `modul` (
  `noseri` varchar(3) NOT NULL,
  `menuid` varchar(15) NOT NULL,
  `remark` varchar(50) NOT NULL,
  `chtime` varchar(16) NOT NULL,
  `chusr` varchar(10) NOT NULL,
  `subjurnal` varchar(3) default NULL,
  PRIMARY KEY  (`noseri`,`menuid`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.modul: ~68 rows (approximately)
/*!40000 ALTER TABLE `modul` DISABLE KEYS */;
REPLACE INTO `modul` (`noseri`, `menuid`, `remark`, `chtime`, `chusr`, `subjurnal`) VALUES
	('.FA', '282', 'FIXED ASSETS', '20/11/2008 11:19', 'root', 'AKT'),
	('BBK', '2e4', 'Pelunasan Hutang', '27/08/2008 13:47', 'root', 'KPH'),
	('BBM', '2e5', 'Pelunasan Piutang', '01/09/2008 12:53', 'root', 'KKP'),
	('BC1', '2i1', 'nomor bea cukai', '12/11/2013 09:51', 'root', NULL),
	('BKK', '2e1', 'Kas dan Bank Keluar', '25/08/2008 10:40', 'root', 'KBK'),
	('BKM', '2e2', 'Kas dan Bank Masuk', '27/08/2008 09:06', 'root', ''),
	('BPB', '278', 'BPB Tranfer Barang antar gudang', '03/02/2009 13:41', 'glovina', 'TRM'),
	('BPP', '276', 'bukti pengeluaran bahan', '04/03/2009 09:53', 'root', 'BPP'),
	('BPR', '279', 'Retur BPPB', '08-10-2019 08:11', 'root', NULL),
	('CAD', '21', 'cadangan', '19/05/2009 14:19', 'root', NULL),
	('CGR', '2ea', 'Pencairan Giro', '05/09/2008 10:42', 'root', 'CGR'),
	('CSI', '22', '', '30/05/2011 10:13', 'root', NULL),
	('FAC', '281', '', '24/11/2008 11:53', 'root', 'AKT'),
	('FPU', '25f', 'Fpj Uang muka Penjualan', '04/08/2011 08:43', 'root', NULL),
	('HPR', '27a', 'Harga Pokok Produksi', '23/08/2008 13:24', 'root', 'HPP'),
	('IBI', '23e', 'Pembelian Import', '03/04/2009 11:37', 'root', 'MSK'),
	('IBL', '23f', 'Pembelian Lokal', '25/07/2008 08:23', 'root', 'MSK'),
	('IJL', '25c', 'Invoice Penjualan', '29/07/2009 08:30', 'root', 'KLR'),
	('IJR', '25d', 'Invoice Retur Penjualan', '20/06/2011 15:58', 'root', 'RKL'),
	('INO', '2g', '', '07/06/2009 23:05', 'root', NULL),
	('JIN', '271', 'Koreksi Persediaan', '21/08/2008 10:34', 'root', 'JIN'),
	('JIN', '273', 'Koreksi Persediaan', '13/11/2008 08:23', 'root', 'JIN'),
	('KON', '22', 'Kontrak Order Pembelian', '08-10-2019 08:12', 'root', NULL),
	('KWT', '25i', '', '18/01/2010 15:52', 'Rachmad', NULL),
	('LHP', '277', 'Hasil Produksi', '23/08/2008 10:22', 'root', 'LHP'),
	('LPB', '23a', 'Penerimaan Barang', '09/10/2008 15:18', 'root', 'LPH'),
	('LPJ', '23j', 'LPB Jasa', '15/10/2014 12:53', 'root', NULL),
	('LPR', '25a', 'Penerimaan Retur Barang', '29/07/2009 08:31', 'root', 'RKA'),
	('MMO', '2a', 'Jurnal Memo DK', '27/08/2008 10:00', 'root', 'MMO'),
	('MPR', '233', 'Memo Purchase', '02/05/2016 10:02', 'root', NULL),
	('OPN', '272', 'Opname', '21/08/2008 13:31', 'root', 'OPN'),
	('OPN', '274', 'Opname Gudang', '13/11/2008 08:23', 'root', 'OPN'),
	('PEB', '252b', 'Proforma Invoice', '10-08-2019 14:56', 'root', ''),
	('PIC', '252d', 'INV / PL Consignment', '20-11-2019 11:47', 'root', NULL),
	('PIL', '252c', 'Inv / PL Lokal', '17-11-2019 18:40', 'root', NULL),
	('PIV', '252a', 'Proforma Invoice', '12/09/2008 11:39', 'root', ''),
	('POI', '233', 'PO Import', '10-08-2019 14:54', 'root', ''),
	('POJ', '237b', 'Purchase Order Jasa', '08-10-2019 08:14', 'root', NULL),
	('POL', '232', 'Order Pembelian lokal', '23/01/2014 09:14', 'root', ''),
	('POR', '237a', 'Retur Pembelian', '24-08-2019 08:11', 'root', ''),
	('POS', '235', '', '23/01/2014 09:15', 'root', NULL),
	('PRJ', '236b', 'Purchase Request Jasa', '13-09-2019 14:44', 'root', NULL),
	('PRQ', '231', 'Purchase Request', '23/01/2014 09:14', 'root', ''),
	('PRR', '236a', 'Pengembalian Barang', '13-09-2019 11:23', 'root', ''),
	('RFP', '2c1', 'Request For Payment', '01/07/2009 09:24', 'root', NULL),
	('RJL', '25d', '', '21/08/2009 15:54', 'Rachmad', NULL),
	('RKL', '25n', 'Retur Penjualan', '02/10/2015 13:00', 'root', NULL),
	('RSK', '23g', 'Retur Pembelian', '21/08/2009 14:17', 'Rachmad', 'RSK'),
	('SBR', '259', 'SPB Retur Penjualan', '29/07/2009 08:31', 'root', ''),
	('SCR', '2i2', 'BEA CUKAI SCRAP', '15/10/2016 10:00', 'root', NULL),
	('SHP', '253', 'Shipping Instruction', '14/02/2009 13:44', 'root', NULL),
	('SJL', '258', 'Surat Jalan Penjualan', '29/07/2009 08:29', 'root', 'SJL'),
	('SJR', '23c', 'Surat Jalan Retur', '29/07/2008 08:56', 'root', 'SJR'),
	('SJT', '25l', 'Surat Jalan Transfer', '28/01/2013 09:40', 'root', NULL),
	('SMR', '23b', 'SPM Penerimaan Retur Barang', '21/08/2009 12:01', 'Rachmad', ''),
	('SMT', '25k', 'SPM Transfer', '28/01/2013 09:39', 'root', NULL),
	('SOE', '251a', 'Sales Order Export', '21-01-2020 16:12', 'root', NULL),
	('SOL', '251b', 'Order Penjualan', '22-01-2020 08:27', 'root', ''),
	('SOR', '254', 'SO Retur', '15/01/2016 11:03', 'root', ''),
	('SPB', '239', 'Surat Perintah Bongkar', '09/10/2008 15:18', 'root', ''),
	('SPB', '23i', '', '07/05/2009 13:45', 'root', NULL),
	('SPM', '256', 'SPM Penjualan', '29/07/2009 08:30', 'root', ''),
	('SPM', '257', 'SPM Gudang', '28/07/2009 13:54', 'root', NULL),
	('STR', '2e8', 'Setor Giro', '01/09/2008 15:07', 'root', ''),
	('TDO', '255', '', '25/04/2011 10:08', 'root', NULL),
	('TLK', '2e9', 'Tolakan Giro', '02/09/2008 10:51', 'root', ''),
	('TTF', '2j', '', '19/03/2015 13:30', 'root', NULL),
	('UMH', '20', 'Jurnal GI Manual', '30/05/2011 10:21', 'root', 'UMH');
/*!40000 ALTER TABLE `modul` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.moduld
DROP TABLE IF EXISTS `moduld`;
CREATE TABLE IF NOT EXISTS `moduld` (
  `noseri` varchar(3) NOT NULL,
  `role` varchar(15) NOT NULL,
  PRIMARY KEY  (`noseri`,`role`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.moduld: ~128 rows (approximately)
/*!40000 ALTER TABLE `moduld` DISABLE KEYS */;
REPLACE INTO `moduld` (`noseri`, `role`) VALUES
	('.FA', '1'),
	('.FA', 'trial'),
	('BBK', '1'),
	('BBK', 'trial'),
	('BBM', '1'),
	('BBM', 'trial'),
	('BC1', '1'),
	('BC1', 'trial'),
	('BKK', '1'),
	('BKK', 'trial'),
	('BKM', '1'),
	('BKM', 'trial'),
	('BPB', '1'),
	('BPB', 'trial'),
	('BPP', '1'),
	('BPP', 'trial'),
	('BPR', '1'),
	('BPR', 'trial'),
	('CAD', '1'),
	('CAD', 'trial'),
	('CGR', '1'),
	('CGR', 'trial'),
	('CSI', '1'),
	('CSI', 'trial'),
	('FAC', '1'),
	('FAC', 'trial'),
	('FPU', '1'),
	('FPU', 'trial'),
	('HPR', '1'),
	('HPR', 'trial'),
	('IBI', '1'),
	('IBI', 'trial'),
	('IBL', '1'),
	('IBL', 'trial'),
	('IJL', '1'),
	('IJL', 'trial'),
	('IJR', '1'),
	('IJR', 'trial'),
	('INO', '1'),
	('INO', 'trial'),
	('JIN', '1'),
	('JIN', 'trial'),
	('KON', '1'),
	('KON', 'trial'),
	('KWT', '1'),
	('KWT', 'trial'),
	('LHP', '1'),
	('LHP', 'trial'),
	('LPB', '1'),
	('LPB', 'trial'),
	('LPJ', '1'),
	('LPJ', 'trial'),
	('LPR', '1'),
	('LPR', 'trial'),
	('MMO', '1'),
	('MMO', 'trial'),
	('MPR', '1'),
	('MPR', 'trial'),
	('OPN', '1'),
	('OPN', 'trial'),
	('PEB', '1'),
	('PEB', 'trial'),
	('PIC', '1'),
	('PIC', 'trial'),
	('PIL', '1'),
	('PIL', 'trial'),
	('PIV', '1'),
	('PIV', 'trial'),
	('POI', '1'),
	('POI', 'trial'),
	('POJ', '1'),
	('POJ', 'trial'),
	('POL', '1'),
	('POL', 'trial'),
	('POR', '1'),
	('POR', 'trial'),
	('POS', '1'),
	('POS', 'trial'),
	('PRJ', '1'),
	('PRJ', 'trial'),
	('PRQ', '1'),
	('PRQ', 'trial'),
	('PRR', '1'),
	('PRR', 'trial'),
	('RFP', '1'),
	('RFP', 'trial'),
	('RJL', '1'),
	('RJL', 'trial'),
	('RKL', '1'),
	('RKL', 'trial'),
	('RSK', '1'),
	('RSK', 'trial'),
	('SBR', '1'),
	('SBR', 'trial'),
	('SCR', '1'),
	('SCR', 'trial'),
	('SHP', '1'),
	('SHP', 'trial'),
	('SJL', '1'),
	('SJL', 'trial'),
	('SJR', '1'),
	('SJR', 'trial'),
	('SJT', '1'),
	('SJT', 'trial'),
	('SMR', '1'),
	('SMR', 'trial'),
	('SMT', '1'),
	('SMT', 'trial'),
	('SOE', '1'),
	('SOE', 'trial'),
	('SOL', '1'),
	('SOL', 'trial'),
	('SOR', '1'),
	('SOR', 'trial'),
	('SPB', '1'),
	('SPB', 'trial'),
	('SPM', '1'),
	('SPM', 'trial'),
	('STR', '1'),
	('STR', 'trial'),
	('TDO', '1'),
	('TDO', 'trial'),
	('TLK', '1'),
	('TLK', 'trial'),
	('TTF', '1'),
	('TTF', 'trial'),
	('UMH', '1'),
	('UMH', 'trial');
/*!40000 ALTER TABLE `moduld` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.mor
DROP TABLE IF EXISTS `mor`;
CREATE TABLE IF NOT EXISTS `mor` (
  `mor` varchar(15) NOT NULL,
  `date` datetime NOT NULL,
  `okl` varchar(15) NOT NULL,
  `nodsg` varchar(50) NOT NULL,
  `inv` varchar(15) NOT NULL,
  `qty1` double NOT NULL default '0',
  `unit` varchar(6) NOT NULL,
  `remark` longtext,
  `chusr` varchar(10) NOT NULL,
  `chtime` varchar(16) NOT NULL,
  `period` varchar(4) NOT NULL,
  `delete` bit(1) NOT NULL,
  `qty` double NOT NULL default '0',
  `toleransi` double NOT NULL default '0',
  `group_` smallint(5) NOT NULL,
  PRIMARY KEY  (`mor`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COMMENT='manuf.order; InnoDB free: 209920 kB';

-- Dumping data for table wis_inventory.mor: ~0 rows (approximately)
/*!40000 ALTER TABLE `mor` DISABLE KEYS */;
/*!40000 ALTER TABLE `mor` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.mpd
DROP TABLE IF EXISTS `mpd`;
CREATE TABLE IF NOT EXISTS `mpd` (
  `mpr` varchar(15) NOT NULL,
  `inv` varchar(15) NOT NULL,
  `remark` varchar(50) default NULL,
  `qty1` double default '0',
  `no` smallint(5) NOT NULL default '0',
  `unit` varchar(6) NOT NULL,
  `qty` double default '0',
  `dateneed` datetime default NULL,
  `dept` varchar(15) default ' ',
  `etd` longtext,
  PRIMARY KEY  (`mpr`,`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.mpd: ~0 rows (approximately)
/*!40000 ALTER TABLE `mpd` DISABLE KEYS */;
/*!40000 ALTER TABLE `mpd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.mpr
DROP TABLE IF EXISTS `mpr`;
CREATE TABLE IF NOT EXISTS `mpr` (
  `mpr` varchar(15) NOT NULL default ' ',
  `date` datetime default NULL,
  `aprov` bit(1) default '\0',
  `remark` longtext,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL,
  `loc` varchar(15) default NULL,
  `usrpr` varchar(15) default NULL,
  `close` bit(1) NOT NULL default '\0',
  `withPO` bit(1) default '',
  `delete` bit(1) NOT NULL default '\0',
  PRIMARY KEY  (`mpr`),
  KEY `period` (`period`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.mpr: ~0 rows (approximately)
/*!40000 ALTER TABLE `mpr` DISABLE KEYS */;
/*!40000 ALTER TABLE `mpr` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.mrppr
DROP TABLE IF EXISTS `mrppr`;
CREATE TABLE IF NOT EXISTS `mrppr` (
  `notrac` varchar(15) NOT NULL,
  `app` bit(1) default NULL,
  `no_pr` varchar(15) NOT NULL,
  `tgl_proses` date default NULL,
  `inv` varchar(15) NOT NULL default ' ',
  `invname` varchar(100) NOT NULL default ' ',
  `qtymin` double default NULL,
  `qtynow` double default NULL,
  `prout` double default NULL,
  `poout` double default NULL,
  `lotsz` double default NULL,
  `grpmat` varchar(15) default NULL,
  `leadtm` int(10) unsigned default NULL,
  `loc` varchar(15) default ' ',
  PRIMARY KEY  (`no_pr`,`inv`,`invname`,`notrac`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.mrppr: ~0 rows (approximately)
/*!40000 ALTER TABLE `mrppr` DISABLE KEYS */;
/*!40000 ALTER TABLE `mrppr` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.msd
DROP TABLE IF EXISTS `msd`;
CREATE TABLE IF NOT EXISTS `msd` (
  `msk` varchar(15) NOT NULL default '',
  `oms` varchar(15) default NULL,
  `remark` varchar(100) default NULL,
  `spesifikasi` text,
  `val` double default NULL,
  `no` smallint(5) NOT NULL default '0',
  `nofp` varchar(20) default NULL,
  `tglfp` datetime default NULL,
  `tglsfp` datetime default NULL,
  `kurs` double default NULL,
  `dpp` double default NULL,
  `ppn` double default NULL,
  `invo` varchar(50) default ' ',
  `sub1` varchar(15) default NULL,
  `npwp` varchar(25) default NULL,
  `name1` varchar(50) default NULL,
  PRIMARY KEY  (`msk`,`no`),
  KEY `msk` (`msk`),
  KEY `oms` (`oms`),
  KEY `mskqty` (`msk`),
  KEY `invo` (`invo`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.msd: ~0 rows (approximately)
/*!40000 ALTER TABLE `msd` DISABLE KEYS */;
/*!40000 ALTER TABLE `msd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.msetting
DROP TABLE IF EXISTS `msetting`;
CREATE TABLE IF NOT EXISTS `msetting` (
  `name` varchar(50) NOT NULL,
  `value` varchar(50) NOT NULL,
  PRIMARY KEY  (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.msetting: ~9 rows (approximately)
/*!40000 ALTER TABLE `msetting` DISABLE KEYS */;
REPLACE INTO `msetting` (`name`, `value`) VALUES
	('Group 1', 'GROUP SBY'),
	('Group 2', 'GROUP JKT'),
	('Paper Cost', '1000'),
	('Pengali BF', '1,4'),
	('Pengali CF', '1,5'),
	('Tambah Harga JKT', '40'),
	('Type Finishing 1', 'Glue'),
	('Type Finishing 2', 'Stich'),
	('Type Finishing 3', 'Glue/Stich');
/*!40000 ALTER TABLE `msetting` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.msk
DROP TABLE IF EXISTS `msk`;
CREATE TABLE IF NOT EXISTS `msk` (
  `msk` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `duedate` datetime default NULL,
  `sub` varchar(15) default NULL,
  `ppn` double default NULL,
  `disc` double default NULL,
  `remark` varchar(100) default NULL,
  `val` double default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL,
  `cur` varchar(4) default NULL,
  `kurs` double default NULL,
  `loc` varchar(15) default NULL,
  `oms` varchar(15) default NULL,
  `group_` varchar(2) default NULL,
  `fpj` varchar(25) default NULL,
  `cct` varchar(15) default NULL,
  `ppnbyr` smallint(5) default NULL,
  `delete` bit(1) NOT NULL default '\0',
  `bsa` varchar(15) default ' ',
  PRIMARY KEY  (`msk`),
  KEY `period` (`period`),
  KEY `subdate` (`sub`,`date`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.msk: ~0 rows (approximately)
/*!40000 ALTER TABLE `msk` DISABLE KEYS */;
/*!40000 ALTER TABLE `msk` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.msl
DROP TABLE IF EXISTS `msl`;
CREATE TABLE IF NOT EXISTS `msl` (
  `msk` varchar(15) NOT NULL default '',
  `date` datetime default NULL,
  `lph` varchar(15) NOT NULL default ' ',
  `oms` varchar(15) default NULL,
  `remark` longtext,
  `val` double default NULL,
  `no` smallint(5) NOT NULL default '0',
  PRIMARY KEY  (`msk`,`lph`),
  KEY `msk` (`oms`,`msk`),
  KEY `lph` (`lph`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.msl: ~0 rows (approximately)
/*!40000 ALTER TABLE `msl` DISABLE KEYS */;
/*!40000 ALTER TABLE `msl` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.msn
DROP TABLE IF EXISTS `msn`;
CREATE TABLE IF NOT EXISTS `msn` (
  `msn` varchar(15) NOT NULL,
  `name` varchar(25) NOT NULL,
  `chtime` varchar(16) default ' ',
  `chusr` varchar(10) default ' ',
  `aktif` bit(1) default '',
  PRIMARY KEY  (`msn`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.msn: ~0 rows (approximately)
/*!40000 ALTER TABLE `msn` DISABLE KEYS */;
/*!40000 ALTER TABLE `msn` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.msx
DROP TABLE IF EXISTS `msx`;
CREATE TABLE IF NOT EXISTS `msx` (
  `msk` varchar(15) NOT NULL,
  `acc` varchar(15) default NULL,
  `val` double default NULL,
  `no` smallint(5) NOT NULL default '0',
  `remark` varchar(100) default NULL,
  `dk` varchar(1) default NULL,
  `cct` varchar(15) default NULL,
  `kurs` double default '1',
  `cad` varchar(15) default NULL,
  `ino` varchar(15) default NULL,
  `okl` varchar(15) default ' ',
  `pph23` double default '0',
  `pph4ay2` double default '0',
  `pph15` double default '0',
  `tarif` double default '0',
  PRIMARY KEY  (`msk`,`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.msx: ~0 rows (approximately)
/*!40000 ALTER TABLE `msx` DISABLE KEYS */;
/*!40000 ALTER TABLE `msx` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.mtp
DROP TABLE IF EXISTS `mtp`;
CREATE TABLE IF NOT EXISTS `mtp` (
  `mtp` varchar(15) NOT NULL,
  `name` varchar(50) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  PRIMARY KEY  (`mtp`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.mtp: ~10 rows (approximately)
/*!40000 ALTER TABLE `mtp` DISABLE KEYS */;
REPLACE INTO `mtp` (`mtp`, `name`, `chtime`, `chusr`) VALUES
	('10', 'Lain-lain', NULL, NULL),
	('11', 'Bahan baku', '', ''),
	('21', 'Bahan penolong', '', ''),
	('31', 'Pengemas', '', ''),
	('41', 'WIP', '', ''),
	('51', 'Barang jadi', '', ''),
	('61', 'Barang Modal', '', ''),
	('71', 'Scrap / Waste', '', ''),
	('81', 'Bahan Bakar', '', ''),
	('91', 'Jasa', '', '');
/*!40000 ALTER TABLE `mtp` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.m_qop_loc
DROP TABLE IF EXISTS `m_qop_loc`;
CREATE TABLE IF NOT EXISTS `m_qop_loc` (
  `date` datetime NOT NULL,
  `loc` varchar(15) NOT NULL,
  `qop_name` varchar(10) NOT NULL default '',
  PRIMARY KEY  (`date`,`loc`,`qop_name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.m_qop_loc: ~64 rows (approximately)
/*!40000 ALTER TABLE `m_qop_loc` DISABLE KEYS */;
REPLACE INTO `m_qop_loc` (`date`, `loc`, `qop_name`) VALUES
	('2012-01-24 08:57:00', 'T108', 'CP 10.5'),
	('2012-01-24 08:58:00', 'T109', 'CP 10.5'),
	('2012-01-24 08:58:00', 'T206', 'CP 10.5'),
	('2012-01-24 08:59:00', 'T304', 'CP 8'),
	('2012-01-24 08:59:00', 'T307', 'CP 8'),
	('2012-02-08 10:42:00', 'T104', 'CP 10.5'),
	('2012-03-05 10:44:00', 'T307', 'CP 8'),
	('2012-03-19 08:38:00', 'T202', 'CP 10.5'),
	('2012-04-12 11:15:00', 'T101', 'CPO'),
	('2012-04-12 11:15:00', 'T102', 'CPO'),
	('2012-04-12 11:15:00', 'T103', 'CPO'),
	('2012-04-12 11:15:00', 'T104', 'CP 10.5'),
	('2012-04-12 11:16:00', 'T105', 'CPO'),
	('2012-04-12 11:16:00', 'T106', 'CPO'),
	('2012-04-12 11:16:00', 'T107', 'CPKO'),
	('2012-04-12 11:16:00', 'T108', 'CPO'),
	('2012-04-12 11:17:00', 'T109', 'CP 10.5'),
	('2012-04-12 11:17:00', 'T201', 'RBDPKO'),
	('2012-04-12 11:17:00', 'T202', 'CP 10.5'),
	('2012-04-12 11:17:00', 'T203', 'STEARIN'),
	('2012-04-12 11:18:00', 'T204', 'PFAD'),
	('2012-04-12 11:19:00', 'T205', 'PFAD'),
	('2012-04-12 11:19:00', 'T206', 'CP 10.5'),
	('2012-04-12 11:19:00', 'T301', 'PKFAD'),
	('2012-04-12 11:19:00', 'T302', 'RBDPO'),
	('2012-04-12 11:20:00', 'T303', 'RBDPO'),
	('2012-04-12 11:20:00', 'T304', 'CP 8'),
	('2012-04-12 11:21:00', 'T305', 'RBDPO'),
	('2012-04-12 11:21:00', 'T306', 'STEARIN'),
	('2012-04-12 11:21:00', 'T307', 'CP 8'),
	('2012-04-14 08:47:00', 'T206', 'RBDPO'),
	('2012-04-15 08:48:00', 'T304', 'CP 10.5'),
	('2012-04-24 09:24:00', 'T304', 'CP 8'),
	('2012-06-16 14:46:00', 'T303', 'CP 10.5'),
	('2012-07-03 12:19:00', 'T307', 'CP 10.5'),
	('2012-07-10 10:09:00', 'T202', 'CP 10.5'),
	('2012-07-10 12:19:00', 'T307', 'CP 8'),
	('2012-07-31 09:24:00', 'T303', 'CP 8'),
	('2012-09-24 13:23:00', 'T303', 'CP 8'),
	('2012-10-29 10:24:00', 'T108', 'CP 10.5'),
	('2012-11-21 09:27:00', 'T108', 'CP 8'),
	('2012-12-05 10:19:00', 'T303', 'CP 10.5'),
	('2012-12-05 15:10:00', 'T109', 'CP 8'),
	('2013-01-04 09:28:00', 'T108', 'CP 10.5'),
	('2013-01-04 09:28:00', 'T304', 'CP 10.5'),
	('2013-01-13 13:23:00', 'T108', 'CP 8'),
	('2013-01-18 10:45:00', 'T304', 'CP 8'),
	('2013-02-18 15:11:00', 'T304', 'CP 10.5'),
	('2013-02-18 15:13:00', 'T307', 'CP 10.5'),
	('2013-02-23 10:34:00', 'T109', 'CP 10.5'),
	('2013-02-23 10:34:00', 'T307', 'CP 8'),
	('2013-03-02 10:18:00', 'T304', 'CP 8'),
	('2013-03-28 09:05:00', 'T108', 'CP 8'),
	('2013-03-30 10:16:00', 'T104', 'CP 10.5'),
	('2013-04-04 10:59:00', 'T104', 'CP 8'),
	('2013-04-09 10:59:00', 'T104', 'CP 10.5'),
	('2013-04-20 13:32:00', 'T108', 'CP 10.5'),
	('2013-05-14 10:38:00', 'T303', 'CP 8'),
	('2013-06-10 10:34:00', 'T108', 'CP 10.5'),
	('2013-06-11 10:34:00', 'T108', 'CP 8'),
	('2013-06-19 12:07:00', 'T303', 'CP 10.5'),
	('2013-08-06 10:52:00', 'T109', 'CP 8'),
	('2013-08-19 11:49:00', 'T104', 'CP 8'),
	('2013-09-06 10:52:00', 'T104', 'CP 10.5');
/*!40000 ALTER TABLE `m_qop_loc` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.m_qop_loc1
DROP TABLE IF EXISTS `m_qop_loc1`;
CREATE TABLE IF NOT EXISTS `m_qop_loc1` (
  `date` datetime NOT NULL,
  `loc` varchar(15) NOT NULL,
  `qop_name` varchar(40) NOT NULL,
  PRIMARY KEY  (`date`,`loc`,`qop_name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.m_qop_loc1: ~7 rows (approximately)
/*!40000 ALTER TABLE `m_qop_loc1` DISABLE KEYS */;
REPLACE INTO `m_qop_loc1` (`date`, `loc`, `qop_name`) VALUES
	('2012-01-24 08:57:00', 'T108', 'CP 10.5'),
	('2012-01-24 08:58:00', 'T109', 'CP 10.5'),
	('2012-01-24 08:58:00', 'T206', 'CP 10.5'),
	('2012-01-24 08:59:00', 'T304', 'CP 8'),
	('2012-01-24 08:59:00', 'T307', 'CP 7.5'),
	('2012-01-28 08:57:00', 'T108', 'CP x'),
	('2012-01-28 08:57:00', 'T109', 'CP Y');
/*!40000 ALTER TABLE `m_qop_loc1` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.m_shipper
DROP TABLE IF EXISTS `m_shipper`;
CREATE TABLE IF NOT EXISTS `m_shipper` (
  `kode_shipper` varchar(50) NOT NULL,
  `kode_negara` varchar(50) default NULL,
  `nama_shipper` varchar(100) default NULL,
  `alamat` text,
  `keterangan` text,
  `chtime` varchar(50) default NULL,
  `chusr` varchar(50) default NULL,
  PRIMARY KEY  (`kode_shipper`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.m_shipper: ~0 rows (approximately)
/*!40000 ALTER TABLE `m_shipper` DISABLE KEYS */;
/*!40000 ALTER TABLE `m_shipper` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.nomor
DROP TABLE IF EXISTS `nomor`;
CREATE TABLE IF NOT EXISTS `nomor` (
  `nomor` int(10) unsigned NOT NULL auto_increment,
  PRIMARY KEY  (`nomor`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.nomor: ~10 rows (approximately)
/*!40000 ALTER TABLE `nomor` DISABLE KEYS */;
REPLACE INTO `nomor` (`nomor`) VALUES
	(1),
	(2),
	(3),
	(4),
	(5),
	(6),
	(7),
	(8),
	(9),
	(10);
/*!40000 ALTER TABLE `nomor` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.no_pjk
DROP TABLE IF EXISTS `no_pjk`;
CREATE TABLE IF NOT EXISTS `no_pjk` (
  `no_sk` varchar(40) NOT NULL default ' ',
  `tgl` datetime default NULL,
  `no_awal` varchar(20) default NULL,
  `no_akhir` varchar(20) default NULL,
  `aktif` varchar(5) NOT NULL default '0',
  `chusr` varchar(10) default NULL,
  `chtime` varchar(16) default NULL,
  PRIMARY KEY  (`no_sk`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.no_pjk: ~0 rows (approximately)
/*!40000 ALTER TABLE `no_pjk` DISABLE KEYS */;
/*!40000 ALTER TABLE `no_pjk` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.no_pjkd
DROP TABLE IF EXISTS `no_pjkd`;
CREATE TABLE IF NOT EXISTS `no_pjkd` (
  `no_sk` varchar(40) NOT NULL default ' ',
  `no` smallint(5) NOT NULL default '0',
  `sub` varchar(15) default ' ',
  `tgl` datetime default NULL,
  `no_awal` varchar(20) default '0',
  `no_akhir` varchar(20) default '0',
  `aktif` varchar(5) default '0',
  `remark` varchar(45) default ' ',
  PRIMARY KEY  (`no_sk`,`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.no_pjkd: ~0 rows (approximately)
/*!40000 ALTER TABLE `no_pjkd` DISABLE KEYS */;
/*!40000 ALTER TABLE `no_pjkd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.no_pjks
DROP TABLE IF EXISTS `no_pjks`;
CREATE TABLE IF NOT EXISTS `no_pjks` (
  `sub` varchar(15) NOT NULL default ' ',
  `tgl awal` datetime NOT NULL,
  `tgl akhir` datetime NOT NULL,
  `no awal` varchar(20) NOT NULL default '0',
  `no akhir` varchar(20) NOT NULL default '0',
  `chusr` varchar(10) default NULL,
  `chtime` varchar(16) default NULL,
  PRIMARY KEY  (`sub`,`no awal`,`no akhir`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.no_pjks: ~0 rows (approximately)
/*!40000 ALTER TABLE `no_pjks` DISABLE KEYS */;
/*!40000 ALTER TABLE `no_pjks` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.okd
DROP TABLE IF EXISTS `okd`;
CREATE TABLE IF NOT EXISTS `okd` (
  `okl` varchar(15) NOT NULL,
  `inv` varchar(15) NOT NULL,
  `loc` varchar(15) default NULL,
  `remark` varchar(100) NOT NULL,
  `spesifikasi` text,
  `qty` double default '0',
  `price` double default '0',
  `packaging` double default '0',
  `disc` double default '0',
  `val` double default '0',
  `no` smallint(5) NOT NULL default '0',
  `unit` varchar(6) NOT NULL,
  `qty1` double NOT NULL default '0',
  `dateneed` datetime default NULL,
  `toleransi` double default '0',
  `nodsg` varchar(50) default NULL,
  `qop` varchar(10) default NULL,
  `kgb` varchar(15) default NULL,
  PRIMARY KEY  (`okl`,`no`),
  KEY `okl` (`okl`),
  KEY `inv` (`inv`,`remark`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.okd: ~0 rows (approximately)
/*!40000 ALTER TABLE `okd` DISABLE KEYS */;
/*!40000 ALTER TABLE `okd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.okl
DROP TABLE IF EXISTS `okl`;
CREATE TABLE IF NOT EXISTS `okl` (
  `okl` varchar(15) NOT NULL,
  `kodeglobal` varchar(50) default NULL,
  `invoice` varchar(50) default NULL,
  `group_` int(11) default '2',
  `date` datetime default NULL,
  `duedate` datetime default NULL,
  `sub` varchar(15) default NULL,
  `ppn` bit(1) default '\0',
  `disc` double default NULL,
  `remark` varchar(50) default NULL,
  `val` double default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL,
  `cur` varchar(4) default NULL,
  `kurs` double default NULL,
  `loc` varchar(15) default NULL,
  `nopoc` varchar(25) default NULL,
  `shiptoname` varchar(40) default NULL,
  `shiptoaddress` longtext,
  `close` bit(1) NOT NULL,
  `valkg` double default NULL,
  `delete` bit(1) NOT NULL default '\0',
  `withMO` bit(1) NOT NULL default '',
  `aprov` bit(1) default '\0',
  `status` varchar(35) default ' ',
  `term` varchar(6) default ' ',
  `down_pay` int(11) default '0',
  `penyerahan` varchar(45) default NULL,
  `syaratpenyerahan` longtext,
  `syaratpembayaran` longtext,
  `bayarkepada` longtext,
  `asal` varchar(35) default ' ',
  `tujuan` varchar(35) default ' ',
  `spec` longtext,
  `ketlain` longtext,
  `exporttax` double default '0',
  `shipment` varchar(25) default NULL,
  `shipby` varchar(25) default NULL,
  `delivery_from` datetime default NULL,
  `delivery_to` datetime default NULL,
  `noofdaypay` double default NULL,
  `info` varchar(15) default NULL,
  `bsa` varchar(15) default ' ',
  `sync` varchar(1) default '\0',
  PRIMARY KEY  (`okl`),
  KEY `period` (`period`),
  KEY `subdate` (`sub`,`date`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.okl: ~0 rows (approximately)
/*!40000 ALTER TABLE `okl` DISABLE KEYS */;
/*!40000 ALTER TABLE `okl` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.omd
DROP TABLE IF EXISTS `omd`;
CREATE TABLE IF NOT EXISTS `omd` (
  `oms` varchar(15) NOT NULL,
  `inv` varchar(15) NOT NULL,
  `ino` varchar(15) default NULL,
  `loc` varchar(15) default NULL,
  `remark` varchar(100) default NULL,
  `spesifikasi` text,
  `qty` double default '0',
  `price` double default '0',
  `freight` double default '0',
  `insurance` double default '0',
  `disc` double default '0',
  `val` double default '0',
  `no` smallint(5) NOT NULL default '0',
  `unit` varchar(6) NOT NULL,
  `qty1` double default '0',
  `etd` longtext,
  `prq` varchar(15) default NULL,
  `noprd` smallint(5) default NULL,
  `cct` varchar(15) default '',
  `toleransi` double default '0',
  `acc` varchar(15) default NULL,
  `dateneed` datetime default NULL,
  `arrive` int(11) default '0',
  `rsn` varchar(40) default ' ',
  `per` double default '1',
  `pph` double default '0',
  `closeitem` smallint(6) default '0',
  `dept` varchar(100) default ' ',
  `batch` varchar(15) default ' ',
  `expired` datetime default NULL,
  `pph22` double default '0',
  `valpph22` double default '0',
  `pph23` double default '0',
  `valpph23` double default '0',
  `pph42` double default '0',
  `valpph42` double default '0',
  PRIMARY KEY  (`oms`,`no`),
  KEY `oms` (`oms`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.omd: ~0 rows (approximately)
/*!40000 ALTER TABLE `omd` DISABLE KEYS */;
/*!40000 ALTER TABLE `omd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.oms
DROP TABLE IF EXISTS `oms`;
CREATE TABLE IF NOT EXISTS `oms` (
  `oms` varchar(15) NOT NULL default '0',
  `date` datetime NOT NULL,
  `duedate` datetime default NULL,
  `sub` varchar(15) NOT NULL,
  `shipper` varchar(100) default NULL,
  `ppn` bit(1) default '\0',
  `pph` double default '0',
  `ppnbebas` int(11) default '0',
  `ppnganti` int(11) default '0',
  `disc` double default '0',
  `remark` longtext,
  `val` double default '0',
  `cmv` int(11) default '0',
  `chtime` varchar(16) NOT NULL,
  `chusr` varchar(10) NOT NULL,
  `period` varchar(4) NOT NULL,
  `cur` varchar(15) NOT NULL,
  `kurs` double NOT NULL,
  `loc` varchar(15) default NULL,
  `no_kon` varchar(15) default NULL,
  `aprov` bit(1) default '\0',
  `person` varchar(50) default NULL,
  `doctype` varchar(50) default NULL,
  `reference` varchar(50) default NULL,
  `pricebasis` varchar(50) default NULL,
  `payment` varchar(40) default NULL,
  `packaging` varchar(40) default NULL,
  `country` varchar(40) default NULL,
  `portload` varchar(40) default NULL,
  `shippedby` varchar(40) default NULL,
  `portdes` varchar(40) default NULL,
  `partial_` varchar(40) default NULL,
  `tranship` varchar(40) default NULL,
  `vessel` varchar(40) default NULL,
  `mark` varchar(40) default NULL,
  `facilities` varchar(40) default NULL,
  `shippingdoc` longtext,
  `shippingint` longtext,
  `addnote` longtext,
  `group_` varchar(2) default NULL,
  `by_` smallint(5) default NULL,
  `close` bit(1) default NULL,
  `closedval` bit(1) default '\0',
  `jenispo` tinyint(4) default NULL,
  `delete` bit(1) NOT NULL default '\0',
  `status` varchar(35) default ' ',
  `term` varchar(6) default ' ',
  `down_pay` int(11) default '0',
  `exporttax` double default '0',
  `delivery_from` datetime default NULL,
  `delivery_to` datetime default NULL,
  `paydate` varchar(45) default NULL,
  `pay1` double default NULL,
  `pay1date` datetime default NULL,
  `pay2` double default NULL,
  `pay2date` datetime default NULL,
  `pay3` double default NULL,
  `pay3date` datetime default NULL,
  `spec` longtext,
  `aprovby` varchar(50) default NULL,
  `info` varchar(15) default NULL,
  `bsa` varchar(15) default ' ',
  `aprov1` bit(1) default '\0',
  `aprovby1` varchar(45) default ' ',
  PRIMARY KEY  (`oms`),
  KEY `period` (`period`),
  KEY `subdate` (`sub`,`date`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.oms: ~0 rows (approximately)
/*!40000 ALTER TABLE `oms` DISABLE KEYS */;
/*!40000 ALTER TABLE `oms` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.oms1
DROP TABLE IF EXISTS `oms1`;
CREATE TABLE IF NOT EXISTS `oms1` (
  `oms` varchar(15) NOT NULL default '0',
  `date` datetime default NULL,
  `duedate` datetime default NULL,
  `sub` varchar(15) default NULL,
  `ppn` bit(1) default '\0',
  `disc` double default '0',
  `remark` longtext,
  `val` double default '0',
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) default NULL,
  `cur` varchar(15) default NULL,
  `kurs` double default NULL,
  `loc` varchar(15) default NULL,
  `no_kon` varchar(15) default NULL,
  `aprov` bit(1) default '\0',
  `person` varchar(50) default NULL,
  `doctype` varchar(50) default NULL,
  `reference` varchar(50) default NULL,
  `pricebasis` varchar(50) default NULL,
  `payment` varchar(40) default NULL,
  `packaging` varchar(40) default NULL,
  `country` varchar(40) default NULL,
  `portload` varchar(40) default NULL,
  `shippedby` varchar(40) default NULL,
  `portdes` varchar(40) default NULL,
  `partial_` varchar(40) default NULL,
  `tranship` varchar(40) default NULL,
  `vessel` varchar(40) default NULL,
  `mark` varchar(40) default NULL,
  `facilities` varchar(40) default NULL,
  `shippingdoc` longtext,
  `shippingint` longtext,
  `addnote` longtext,
  `group_` varchar(2) default NULL,
  `by_` smallint(5) default NULL,
  `close` bit(1) default NULL,
  `closedval` bit(1) default '\0',
  `jenispo` tinyint(4) default NULL,
  `delete` bit(1) default NULL,
  PRIMARY KEY  (`oms`),
  KEY `period` (`period`),
  KEY `subdate` (`sub`,`date`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.oms1: ~0 rows (approximately)
/*!40000 ALTER TABLE `oms1` DISABLE KEYS */;
/*!40000 ALTER TABLE `oms1` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.oms_in
DROP TABLE IF EXISTS `oms_in`;
CREATE TABLE IF NOT EXISTS `oms_in` (
  `oms` varchar(15) NOT NULL,
  `inv` varchar(15) NOT NULL,
  `loc` varchar(15) default NULL,
  `remark` varchar(100) NOT NULL,
  `qty` double default NULL,
  `price` double default NULL,
  `disc` float default NULL,
  `val` double default NULL,
  `cct` varchar(15) NOT NULL default ' ',
  `no` int(10) unsigned NOT NULL,
  `toleransi` double NOT NULL default '0',
  PRIMARY KEY  (`oms`,`inv`,`remark`,`cct`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.oms_in: ~0 rows (approximately)
/*!40000 ALTER TABLE `oms_in` DISABLE KEYS */;
/*!40000 ALTER TABLE `oms_in` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.opd
DROP TABLE IF EXISTS `opd`;
CREATE TABLE IF NOT EXISTS `opd` (
  `opn` varchar(15) NOT NULL default ' ',
  `inv` varchar(15) default NULL,
  `remark` varchar(100) default NULL,
  `qty` double default NULL,
  `price` double default NULL,
  `hpp` double default NULL,
  `val` double default NULL,
  `no` smallint(5) NOT NULL default '0',
  `nodsg` varchar(50) default NULL,
  `expired` datetime default NULL,
  `unit` varchar(6) default NULL,
  `qty1` double default NULL,
  PRIMARY KEY  (`opn`,`no`),
  KEY `opn` (`opn`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.opd: ~0 rows (approximately)
/*!40000 ALTER TABLE `opd` DISABLE KEYS */;
/*!40000 ALTER TABLE `opd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.opdtemp
DROP TABLE IF EXISTS `opdtemp`;
CREATE TABLE IF NOT EXISTS `opdtemp` (
  `inv` varchar(15) NOT NULL,
  `price` double NOT NULL,
  PRIMARY KEY  (`inv`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.opdtemp: ~0 rows (approximately)
/*!40000 ALTER TABLE `opdtemp` DISABLE KEYS */;
/*!40000 ALTER TABLE `opdtemp` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.openpo
DROP TABLE IF EXISTS `openpo`;
CREATE TABLE IF NOT EXISTS `openpo` (
  `no` int(11) default '0',
  `inv` varchar(15) NOT NULL default ' ',
  `remark` varchar(50) NOT NULL default ' ',
  `close` bit(1) default '\0',
  `qtypo` double default '0',
  `tol` double default '0',
  `rate` int(11) default NULL,
  `crate` int(11) default NULL,
  `chusr` varchar(10) default NULL,
  `chtime` varchar(16) NOT NULL default ' ',
  `oms` varchar(15) NOT NULL default ' ',
  `unit` varchar(6) default NULL,
  PRIMARY KEY  (`inv`,`remark`,`oms`,`chtime`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.openpo: ~0 rows (approximately)
/*!40000 ALTER TABLE `openpo` DISABLE KEYS */;
/*!40000 ALTER TABLE `openpo` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.opn
DROP TABLE IF EXISTS `opn`;
CREATE TABLE IF NOT EXISTS `opn` (
  `opn` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `loc` varchar(15) default NULL,
  `remark` varchar(100) default NULL,
  `val` double default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL,
  `cct` varchar(15) default NULL,
  `aprov` smallint(5) unsigned zerofill default NULL,
  `delete` bit(1) NOT NULL default '\0',
  `bsa` varchar(15) default ' ',
  PRIMARY KEY  (`opn`),
  KEY `period` (`period`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.opn: ~0 rows (approximately)
/*!40000 ALTER TABLE `opn` DISABLE KEYS */;
/*!40000 ALTER TABLE `opn` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.otd
DROP TABLE IF EXISTS `otd`;
CREATE TABLE IF NOT EXISTS `otd` (
  `ots` varchar(15) default NULL,
  `inv` varchar(15) default NULL,
  `loc` varchar(15) default NULL,
  `remark` varchar(100) default NULL,
  `qty` double default NULL,
  `price` double default NULL,
  `disc` double default NULL,
  `val` double default NULL,
  `no` smallint(5) default NULL,
  `unit` varchar(6) default NULL,
  `qty1` double default NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.otd: ~0 rows (approximately)
/*!40000 ALTER TABLE `otd` DISABLE KEYS */;
/*!40000 ALTER TABLE `otd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.ots
DROP TABLE IF EXISTS `ots`;
CREATE TABLE IF NOT EXISTS `ots` (
  `ots` varchar(15) NOT NULL,
  `sub` varchar(15) default NULL,
  `name` varchar(50) default NULL,
  `person` varchar(50) default NULL,
  `address` varchar(50) default NULL,
  `city` varchar(50) default NULL,
  `phone` varchar(50) default NULL,
  `fax` varchar(50) default NULL,
  `sales` varchar(15) default NULL,
  `group_` smallint(5) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `remark` varchar(50) default NULL,
  `maxkredit` double default NULL,
  `shiptoname` varchar(50) default NULL,
  `shiptoaddress` longtext,
  `gironame` varchar(50) default NULL,
  `grp` varchar(15) default NULL,
  `aprov` smallint(5) default NULL,
  `date` datetime default NULL,
  `duedate` datetime default NULL,
  `ppn` smallint(5) default NULL,
  `disc` double default NULL,
  `val` double default NULL,
  `period` varchar(4) default NULL,
  `cur` varchar(4) default NULL,
  `kurs` double default NULL,
  PRIMARY KEY  (`ots`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.ots: ~0 rows (approximately)
/*!40000 ALTER TABLE `ots` DISABLE KEYS */;
/*!40000 ALTER TABLE `ots` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.parent
DROP TABLE IF EXISTS `parent`;
CREATE TABLE IF NOT EXISTS `parent` (
  `acc` varchar(15) NOT NULL,
  PRIMARY KEY  (`acc`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.parent: ~0 rows (approximately)
/*!40000 ALTER TABLE `parent` DISABLE KEYS */;
/*!40000 ALTER TABLE `parent` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.payhp
DROP TABLE IF EXISTS `payhp`;
CREATE TABLE IF NOT EXISTS `payhp` (
  `jurnal` varchar(15) default NULL,
  `reff` varchar(15) default NULL,
  `date` datetime default NULL,
  `sub` varchar(15) default NULL,
  `acc` varchar(15) default NULL,
  `dk` varchar(1) default NULL,
  `val` double default NULL,
  `subjurnal` varchar(3) default NULL,
  `period` varchar(4) default NULL,
  `invoice` varchar(50) default NULL,
  KEY `jurnalsubjurnal` (`jurnal`,`subjurnal`),
  KEY `period` (`period`),
  KEY `reffdatejurnal` (`reff`,`date`,`jurnal`),
  KEY `subdateacc` (`sub`,`date`,`acc`),
  KEY `jurnalsubdate` (`jurnal`,`sub`,`acc`,`date`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.payhp: ~0 rows (approximately)
/*!40000 ALTER TABLE `payhp` DISABLE KEYS */;
/*!40000 ALTER TABLE `payhp` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.perms
DROP TABLE IF EXISTS `perms`;
CREATE TABLE IF NOT EXISTS `perms` (
  `role` char(50) NOT NULL,
  `menuid` char(15) NOT NULL,
  `insert` tinyint(1) default NULL,
  `update` tinyint(1) default NULL,
  `delete` tinyint(1) default NULL,
  `print` tinyint(1) default NULL,
  `select` tinyint(1) default NULL,
  `approve` tinyint(1) default NULL,
  `jurnal` tinyint(1) default NULL,
  PRIMARY KEY  (`role`,`menuid`),
  KEY `levelidmenuid` (`role`,`menuid`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.perms: ~1,223 rows (approximately)
/*!40000 ALTER TABLE `perms` DISABLE KEYS */;
REPLACE INTO `perms` (`role`, `menuid`, `insert`, `update`, `delete`, `print`, `select`, `approve`, `jurnal`) VALUES
	('1', '', 1, 1, 1, 1, 1, 0, 1),
	('1', '1', 1, 1, 1, 1, 1, 0, 1),
	('1', '11', 1, 1, 1, 1, 1, 0, 1),
	('1', '12', 1, 1, 1, 1, 1, 0, 1),
	('1', '13', 1, 1, 1, 1, 1, 0, 1),
	('1', '14', 1, 1, 1, 1, 1, 0, 1),
	('1', '18', 1, 1, 1, 1, 1, 0, 1),
	('1', '19', 1, 1, 1, 1, 1, 0, 1),
	('1', '1a', 1, 1, 1, 1, 1, 0, 1),
	('1', '1b', 1, 1, 1, 1, 1, 0, 1),
	('1', '1c', 1, 1, 1, 1, 1, 0, 1),
	('1', '1d', 1, 1, 1, 1, 1, 0, 1),
	('1', '2', 1, 1, 1, 1, 1, 0, 1),
	('1', '20', 1, 1, 1, 1, 1, 0, 1),
	('1', '21', 1, 1, 1, 1, 1, 0, 1),
	('1', '211', 1, 1, 1, 1, 1, 0, 1),
	('1', '212', 1, 1, 1, 1, 1, 0, 1),
	('1', '213', 1, 1, 1, 1, 1, 0, 1),
	('1', '214', 1, 1, 1, 1, 1, 0, 1),
	('1', '215', 1, 1, 1, 1, 1, 0, 1),
	('1', '22', 1, 1, 1, 1, 1, 0, 1),
	('1', '23', 1, 1, 1, 1, 1, 0, 1),
	('1', '231', 1, 1, 1, 1, 1, 1, 1),
	('1', '232', 1, 1, 1, 1, 1, 1, 1),
	('1', '233', 1, 1, 1, 1, 1, 1, 1),
	('1', '234', 1, 1, 1, 1, 1, 0, 1),
	('1', '235', 1, 1, 1, 1, 1, 1, 1),
	('1', '236', 1, 1, 1, 1, 1, 1, 1),
	('1', '236a', 1, 1, 1, 1, 1, 1, 1),
	('1', '236b', 1, 1, 1, 1, 1, 1, 1),
	('1', '237', 1, 1, 1, 1, 1, 1, 1),
	('1', '237a', 1, 1, 1, 1, 1, 1, 1),
	('1', '237b', 1, 1, 1, 1, 1, 1, 1),
	('1', '238', 1, 1, 1, 1, 1, 0, 1),
	('1', '239', 1, 1, 1, 1, 1, 1, 1),
	('1', '23a', 1, 1, 1, 1, 1, 1, 1),
	('1', '23b', 1, 1, 1, 1, 1, 1, 1),
	('1', '23c', 1, 1, 1, 1, 1, 1, 1),
	('1', '23d', 1, 1, 1, 1, 1, 0, 1),
	('1', '23e', 1, 1, 1, 1, 1, 0, 1),
	('1', '23f', 1, 1, 1, 1, 1, 0, 1),
	('1', '23g', 1, 1, 1, 1, 1, 0, 1),
	('1', '23h', 0, 0, 1, 0, 1, 0, 0),
	('1', '23i', 1, 1, 1, 1, 1, 1, 1),
	('1', '23j', 1, 1, 1, 1, 1, 1, 1),
	('1', '24', 1, 1, 1, 1, 1, 0, 1),
	('1', '25', 1, 1, 1, 1, 1, 0, 1),
	('1', '251', 1, 1, 1, 1, 1, 1, 1),
	('1', '251a', 1, 1, 1, 1, 1, 1, 1),
	('1', '251b', 1, 1, 1, 1, 1, 1, 1),
	('1', '252', 1, 1, 1, 1, 1, 1, 1),
	('1', '252a', 1, 1, 1, 1, 1, 1, 1),
	('1', '252b', 1, 1, 1, 1, 1, 1, 1),
	('1', '252c', 1, 1, 1, 1, 1, 1, 1),
	('1', '252d', 1, 1, 1, 1, 1, 1, 1),
	('1', '253', 1, 1, 1, 1, 1, 1, 1),
	('1', '254', 1, 1, 1, 1, 1, 1, 1),
	('1', '255', 1, 1, 1, 1, 1, 1, 1),
	('1', '256', 1, 1, 1, 1, 1, 1, 1),
	('1', '257', 0, 0, 0, 0, 0, 0, 0),
	('1', '258', 1, 1, 1, 1, 1, 1, 1),
	('1', '259', 1, 1, 1, 1, 1, 1, 1),
	('1', '25a', 1, 1, 1, 1, 1, 0, 1),
	('1', '25b', 1, 1, 1, 1, 1, 0, 1),
	('1', '25c', 1, 1, 1, 1, 1, 0, 1),
	('1', '25d', 1, 1, 1, 1, 1, 0, 1),
	('1', '25e', 1, 1, 1, 1, 1, 0, 1),
	('1', '25f', 1, 1, 1, 1, 1, 0, 1),
	('1', '25g', 1, 1, 1, 1, 1, 0, 1),
	('1', '25i', 1, 1, 1, 1, 1, 1, 1),
	('1', '25j', 0, 0, 1, 0, 1, 0, 0),
	('1', '25k', 1, 1, 1, 1, 1, 1, 1),
	('1', '25l', 1, 1, 1, 1, 1, 1, 1),
	('1', '25m', 0, 0, 1, 0, 1, 0, 0),
	('1', '25n', 1, 1, 1, 1, 1, 1, 1),
	('1', '26', 1, 1, 1, 1, 1, 0, 1),
	('1', '27', 1, 1, 1, 1, 1, 0, 1),
	('1', '271', 1, 1, 1, 1, 1, 0, 1),
	('1', '272', 1, 1, 1, 1, 1, 0, 1),
	('1', '273', 1, 1, 1, 1, 1, 0, 1),
	('1', '274', 1, 1, 1, 1, 1, 0, 1),
	('1', '275', 1, 1, 1, 1, 1, 0, 1),
	('1', '276', 1, 1, 1, 1, 1, 0, 1),
	('1', '277', 1, 1, 1, 1, 1, 0, 1),
	('1', '278', 1, 1, 1, 1, 1, 0, 1),
	('1', '279', 1, 1, 1, 1, 1, 0, 1),
	('1', '27a', 1, 1, 1, 1, 1, 0, 1),
	('1', '28', 1, 1, 1, 1, 1, 0, 1),
	('1', '281', 1, 1, 1, 1, 1, 0, 1),
	('1', '282', 1, 1, 1, 1, 1, 0, 1),
	('1', '29', 1, 1, 1, 1, 1, 0, 1),
	('1', '2a', 1, 1, 1, 1, 1, 0, 1),
	('1', '2b', 1, 1, 1, 1, 1, 0, 1),
	('1', '2c', 1, 1, 1, 1, 1, 0, 1),
	('1', '2c1', 1, 1, 1, 1, 1, 0, 1),
	('1', '2c2', 1, 1, 1, 1, 1, 0, 1),
	('1', '2c3', 1, 1, 1, 1, 1, 0, 1),
	('1', '2c4', 1, 1, 1, 1, 1, 0, 1),
	('1', '2d', 1, 1, 1, 1, 1, 0, 1),
	('1', '2e', 1, 1, 1, 1, 1, 0, 1),
	('1', '2e1', 1, 1, 1, 1, 1, 0, 1),
	('1', '2e2', 1, 1, 1, 1, 1, 0, 1),
	('1', '2e3', 1, 1, 1, 1, 1, 0, 1),
	('1', '2e4', 1, 1, 1, 1, 1, 0, 1),
	('1', '2e5', 1, 1, 1, 1, 1, 0, 1),
	('1', '2e6', 1, 1, 1, 1, 1, 0, 1),
	('1', '2e7', 1, 1, 1, 1, 1, 0, 1),
	('1', '2e8', 1, 1, 1, 1, 1, 0, 1),
	('1', '2e9', 1, 1, 1, 1, 1, 0, 1),
	('1', '2ea', 1, 1, 1, 1, 1, 0, 1),
	('1', '2f', 0, 0, 1, 0, 1, 0, 1),
	('1', '2g', 1, 1, 1, 1, 1, 0, 1),
	('1', '2h', 1, 1, 1, 1, 1, 1, 1),
	('1', '2h1', 1, 1, 1, 1, 1, 1, 1),
	('1', '2h2', 1, 1, 1, 1, 1, 1, 1),
	('1', '2h3', 1, 1, 1, 1, 1, 1, 1),
	('1', '2i', 0, 0, 1, 0, 1, 0, 0),
	('1', '2i1', 1, 1, 1, 1, 1, 1, 1),
	('1', '2i2', 1, 1, 1, 1, 1, 1, 1),
	('1', '2j', 1, 1, 1, 1, 1, 1, 1),
	('1', '3', 1, 1, 1, 1, 1, 0, 1),
	('1', '30', 1, 1, 1, 1, 1, 0, 1),
	('1', '31', 1, 1, 1, 1, 1, 0, 1),
	('1', '32', 1, 1, 1, 1, 1, 0, 1),
	('1', '33', 1, 1, 1, 1, 1, 0, 1),
	('1', '34', 1, 1, 1, 1, 1, 0, 1),
	('1', '35', 1, 1, 1, 1, 1, 0, 1),
	('1', '36', 1, 1, 1, 1, 1, 0, 1),
	('1', '37', 1, 1, 1, 1, 1, 0, 1),
	('1', '38', 1, 1, 1, 1, 1, 0, 1),
	('1', '39', 1, 1, 1, 1, 1, 0, 1),
	('1', '3a', 1, 1, 1, 1, 1, 0, 1),
	('1', '3b', 1, 1, 1, 1, 1, 0, 1),
	('1', '3c', 1, 1, 1, 1, 1, 0, 1),
	('1', '3d', 1, 1, 1, 1, 1, 0, 1),
	('1', '3e', 0, 0, 1, 0, 1, 0, 0),
	('1', '3e1', 1, 1, 1, 1, 1, 1, 1),
	('1', '3e2', 1, 1, 1, 1, 1, 1, 1),
	('1', '3e3', 1, 1, 1, 1, 1, 1, 1),
	('1', '3e4', 1, 1, 1, 1, 1, 1, 1),
	('1', '3e5', 1, 1, 1, 1, 1, 1, 1),
	('1', '3f', 1, 1, 1, 1, 1, 0, 1),
	('1', '3g', 1, 1, 1, 1, 1, 0, 1),
	('1', '3h', 1, 1, 1, 1, 1, 0, 1),
	('1', '3h1', 1, 1, 1, 1, 1, 0, 1),
	('1', '3h2', 1, 1, 1, 1, 1, 0, 0),
	('1', '3i', 1, 1, 1, 1, 1, 0, 1),
	('1', '3j', 1, 1, 1, 1, 1, 0, 1),
	('1', '3k', 1, 1, 1, 1, 1, 0, 1),
	('1', '3l', 1, 1, 1, 1, 1, 0, 1),
	('1', '3m', 1, 1, 1, 1, 1, 0, 1),
	('1', '3n', 1, 1, 1, 1, 1, 0, 1),
	('1', '3o', 1, 1, 1, 1, 1, 0, 1),
	('1', '3p', 1, 1, 1, 1, 1, 0, 1),
	('1', '3q', 1, 1, 1, 1, 1, 0, 1),
	('1', '3r', 1, 1, 1, 1, 1, 0, 1),
	('1', '3s', 1, 1, 1, 1, 1, 1, 1),
	('1', '3t', 1, 1, 1, 1, 1, 0, 1),
	('1', '3u', 1, 1, 1, 1, 1, 0, 1),
	('1', '3v', 1, 1, 1, 1, 1, 0, 1),
	('1', '3w', 1, 1, 1, 1, 1, 0, 1),
	('1', '3x', 1, 1, 1, 1, 1, 0, 1),
	('1', '3y', 1, 1, 1, 1, 1, 1, 1),
	('1', '3z', 1, 1, 1, 1, 1, 0, 1),
	('1', '3z1', 1, 1, 1, 1, 0, 0, 0),
	('1', '3z2', 1, 1, 1, 1, 0, 0, 0),
	('1', '4', 1, 1, 1, 1, 1, 0, 1),
	('1', '40', 1, 1, 1, 1, 1, 0, 1),
	('1', '41', 1, 1, 1, 1, 1, 0, 1),
	('1', '42', 1, 1, 1, 1, 1, 0, 1),
	('1', '43', 1, 1, 1, 1, 1, 0, 1),
	('1', '44', 1, 1, 1, 1, 1, 0, 1),
	('1', '441', 1, 1, 1, 1, 1, 0, 1),
	('1', '442', 1, 1, 1, 1, 1, 0, 1),
	('1', '443', 1, 1, 1, 1, 1, 0, 1),
	('1', '444', 1, 1, 1, 1, 1, 0, 1),
	('1', '445', 1, 1, 1, 1, 1, 0, 1),
	('1', '45', 1, 1, 1, 1, 1, 0, 1),
	('1', '46', 1, 1, 1, 1, 1, 0, 1),
	('1', '47', 1, 1, 1, 1, 1, 0, 1),
	('1', '48', 1, 1, 1, 1, 1, 0, 1),
	('1', '481', 1, 1, 1, 1, 1, 0, 1),
	('1', '482', 1, 1, 1, 1, 1, 0, 1),
	('1', '483', 1, 1, 1, 1, 1, 0, 1),
	('1', '49', 1, 1, 1, 1, 1, 0, 1),
	('1', '4a', 1, 1, 1, 1, 1, 0, 1),
	('1', '4b', 1, 1, 1, 1, 1, 0, 1),
	('1', '4c', 1, 1, 1, 1, 1, 0, 1),
	('1', '4d', 1, 1, 1, 1, 1, 0, 1),
	('1', '5', 1, 1, 1, 1, 1, 0, 1),
	('1', '51', 1, 1, 1, 1, 1, 0, 1),
	('1', '52', 1, 1, 1, 1, 1, 0, 1),
	('1', '53', 1, 1, 1, 1, 1, 1, 1),
	('1', '54', 1, 1, 1, 1, 1, 0, 0),
	('1', '55', 1, 1, 1, 1, 1, 1, 1),
	('1', '56', 1, 1, 1, 1, 1, 1, 1),
	('1', '57', 1, 1, 1, 1, 1, 1, 1),
	('1', '6', 1, 1, 1, 1, 1, 0, 1),
	('1', '61', 1, 1, 1, 1, 1, 0, 1),
	('1', '611', 1, 1, 1, 1, 1, 0, 1),
	('1', '612', 1, 1, 1, 1, 1, 0, 1),
	('1', '613', 1, 1, 1, 1, 1, 0, 1),
	('1', '614', 1, 1, 1, 1, 1, 0, 1),
	('1', '615', 1, 1, 1, 1, 1, 0, 1),
	('1', '616', 1, 1, 1, 1, 1, 0, 1),
	('1', '617', 1, 1, 1, 1, 1, 0, 1),
	('1', '618', 1, 1, 1, 1, 1, 0, 1),
	('1', '619', 1, 1, 1, 1, 1, 0, 1),
	('1', '61a', 1, 1, 1, 1, 1, 0, 1),
	('1', '61b', 1, 1, 1, 1, 1, 0, 1),
	('1', '61c', 1, 1, 1, 1, 1, 0, 1),
	('1', '61d', 1, 1, 1, 1, 1, 0, 1),
	('1', '61e', 1, 1, 1, 1, 1, 0, 1),
	('1', '61f', 1, 1, 1, 1, 1, 0, 1),
	('1', '61g', 1, 1, 1, 1, 1, 0, 1),
	('1', '61h', 1, 1, 1, 1, 1, 0, 1),
	('1', '62', 1, 1, 1, 1, 1, 0, 1),
	('1', '63', 1, 1, 1, 1, 1, 0, 1),
	('1', '631', 1, 1, 1, 1, 1, 0, 1),
	('1', '6311', 1, 1, 1, 1, 1, 0, 1),
	('1', '63111', 1, 1, 1, 1, 1, 0, 1),
	('1', '63112', 1, 1, 1, 1, 1, 0, 1),
	('1', '63113', 1, 1, 1, 1, 1, 0, 1),
	('1', '63114', 1, 1, 1, 1, 1, 0, 1),
	('1', '63115', 1, 1, 1, 1, 1, 0, 1),
	('1', '63116', 1, 1, 1, 1, 1, 0, 1),
	('1', '63117', 1, 1, 1, 1, 1, 0, 1),
	('1', '63118', 0, 0, 1, 0, 0, 0, 1),
	('1', '63119', 0, 0, 1, 0, 0, 0, 1),
	('1', '6312', 1, 1, 1, 1, 1, 0, 1),
	('1', '63121', 1, 1, 1, 1, 1, 0, 1),
	('1', '63122', 0, 0, 1, 1, 1, 0, 0),
	('1', '63123', 1, 1, 1, 1, 1, 0, 1),
	('1', '63124', 0, 0, 1, 1, 1, 0, 0),
	('1', '63125', 1, 1, 1, 1, 1, 0, 1),
	('1', '63126', 1, 1, 1, 1, 1, 0, 1),
	('1', '63127', 1, 1, 1, 1, 1, 0, 1),
	('1', '63128', 1, 1, 1, 1, 1, 1, 1),
	('1', '63129', 1, 1, 1, 1, 1, 0, 1),
	('1', '6313', 1, 1, 1, 1, 1, 0, 1),
	('1', '63131', 1, 1, 1, 1, 1, 0, 1),
	('1', '63132', 1, 1, 1, 1, 1, 0, 1),
	('1', '63133', 1, 1, 1, 1, 1, 0, 1),
	('1', '6314', 1, 1, 1, 1, 1, 0, 1),
	('1', '63141', 1, 1, 1, 1, 1, 0, 1),
	('1', '63142', 0, 0, 1, 0, 1, 0, 0),
	('1', '63143', 1, 1, 1, 1, 1, 0, 1),
	('1', '6315', 1, 1, 1, 1, 1, 0, 1),
	('1', '63151', 1, 1, 1, 1, 1, 0, 1),
	('1', '63152', 1, 1, 1, 1, 1, 0, 1),
	('1', '63153', 1, 1, 1, 1, 1, 0, 1),
	('1', '63154', 1, 1, 1, 0, 1, 0, 1),
	('1', '63155', 1, 1, 1, 1, 1, 0, 1),
	('1', '6316', 1, 1, 1, 1, 1, 0, 1),
	('1', '63161', 1, 1, 1, 1, 1, 0, 1),
	('1', '63163', 1, 1, 1, 1, 1, 0, 1),
	('1', '63165', 1, 1, 1, 1, 1, 0, 1),
	('1', '6317', 1, 1, 1, 1, 1, 0, 1),
	('1', '63171', 1, 1, 1, 1, 1, 0, 1),
	('1', '63172', 1, 1, 1, 1, 1, 0, 1),
	('1', '63173', 1, 1, 1, 1, 1, 0, 1),
	('1', '6318', 1, 1, 1, 1, 1, 0, 1),
	('1', '63181', 1, 1, 1, 1, 1, 0, 1),
	('1', '63182', 0, 0, 1, 0, 1, 0, 0),
	('1', '63183', 1, 1, 1, 1, 1, 0, 1),
	('1', '63184', 1, 1, 1, 1, 1, 0, 1),
	('1', '63185', 1, 1, 1, 0, 1, 0, 0),
	('1', '6319', 1, 1, 1, 1, 1, 0, 1),
	('1', '631a', 1, 1, 0, 1, 1, 1, 0),
	('1', '631b', 1, 1, 0, 1, 1, 1, 0),
	('1', '632', 1, 1, 1, 1, 1, 0, 1),
	('1', '633', 1, 1, 1, 1, 1, 0, 1),
	('1', '6331', 1, 1, 1, 1, 1, 0, 1),
	('1', '63311', 1, 1, 1, 1, 1, 0, 1),
	('1', '63312', 1, 1, 1, 1, 1, 0, 1),
	('1', '63313', 1, 1, 1, 1, 1, 0, 1),
	('1', '63314', 1, 1, 1, 1, 1, 0, 1),
	('1', '63315', 1, 1, 1, 1, 1, 0, 1),
	('1', '63316', 1, 1, 1, 1, 1, 0, 1),
	('1', '63317', 0, 0, 1, 0, 1, 0, 1),
	('1', '63318', 1, 1, 1, 1, 1, 0, 1),
	('1', '63319', 0, 0, 1, 0, 0, 0, 1),
	('1', '6332', 1, 1, 1, 1, 1, 0, 1),
	('1', '6333', 1, 1, 1, 1, 1, 0, 1),
	('1', '63331', 1, 1, 1, 1, 1, 0, 1),
	('1', '63332', 1, 1, 1, 1, 1, 0, 1),
	('1', '63333', 1, 1, 1, 1, 1, 0, 1),
	('1', '63335', 1, 1, 1, 0, 1, 0, 0),
	('1', '6334', 1, 1, 1, 1, 1, 0, 1),
	('1', '6335', 1, 1, 1, 1, 1, 0, 1),
	('1', '63351', 1, 1, 1, 1, 1, 0, 1),
	('1', '63352', 1, 1, 1, 1, 1, 0, 1),
	('1', '63353', 1, 1, 1, 1, 1, 0, 1),
	('1', '63354', 1, 1, 1, 1, 1, 0, 1),
	('1', '63355', 1, 1, 1, 1, 1, 0, 1),
	('1', '63356', 1, 1, 1, 1, 1, 0, 1),
	('1', '63357', 1, 1, 1, 1, 1, 1, 1),
	('1', '6336', 1, 1, 1, 1, 1, 0, 1),
	('1', '6337', 1, 1, 1, 1, 1, 0, 1),
	('1', '63371', 1, 1, 1, 1, 1, 0, 1),
	('1', '63372', 1, 1, 1, 1, 1, 0, 1),
	('1', '63373', 1, 1, 1, 1, 1, 0, 1),
	('1', '63374', 0, 0, 1, 0, 0, 0, 1),
	('1', '6338', 1, 1, 1, 1, 1, 0, 1),
	('1', '63381', 1, 1, 1, 1, 1, 0, 1),
	('1', '63382', 1, 1, 1, 1, 1, 0, 0),
	('1', '63383', 1, 1, 1, 1, 1, 1, 1),
	('1', '63384', 0, 0, 1, 1, 1, 0, 0),
	('1', '63385', 1, 1, 1, 1, 1, 1, 1),
	('1', '6339', 1, 1, 1, 1, 1, 0, 1),
	('1', '63391', 1, 1, 1, 1, 1, 0, 1),
	('1', '63392', 1, 1, 1, 1, 1, 0, 1),
	('1', '63393', 1, 1, 1, 1, 1, 0, 1),
	('1', '63394', 1, 1, 1, 1, 1, 0, 1),
	('1', '63395', 1, 1, 1, 1, 1, 0, 1),
	('1', '633a', 1, 1, 1, 1, 1, 0, 1),
	('1', '633b', 1, 1, 1, 1, 1, 0, 1),
	('1', '633c', 1, 1, 1, 1, 1, 0, 1),
	('1', '633d', 1, 1, 1, 1, 1, 0, 1),
	('1', '633e', 1, 1, 1, 1, 1, 0, 1),
	('1', '633e1', 1, 1, 1, 1, 1, 0, 1),
	('1', '633e2', 1, 1, 1, 1, 1, 0, 1),
	('1', '633e3', 1, 1, 1, 1, 1, 0, 1),
	('1', '633f', 1, 1, 1, 1, 1, 0, 1),
	('1', '633g', 1, 1, 1, 1, 1, 0, 1),
	('1', '633g1', 1, 1, 1, 1, 1, 0, 1),
	('1', '633g2', 1, 1, 1, 1, 1, 0, 1),
	('1', '633g3', 1, 1, 1, 1, 1, 0, 1),
	('1', '633g4', 1, 1, 1, 1, 1, 0, 1),
	('1', '633g5', 1, 1, 1, 1, 1, 0, 1),
	('1', '633g6', 1, 1, 1, 1, 1, 0, 1),
	('1', '633g7', 1, 1, 1, 1, 1, 0, 1),
	('1', '634', 1, 1, 1, 1, 1, 0, 1),
	('1', '6341', 1, 1, 1, 1, 1, 0, 1),
	('1', '6342', 1, 1, 1, 1, 1, 0, 1),
	('1', '635', 1, 1, 1, 1, 1, 0, 1),
	('1', '6351', 1, 1, 1, 1, 1, 0, 1),
	('1', '6352', 1, 1, 1, 1, 1, 0, 1),
	('1', '6353', 1, 1, 1, 1, 1, 0, 1),
	('1', '6354', 1, 1, 1, 1, 1, 0, 1),
	('1', '6355', 1, 1, 1, 1, 1, 0, 1),
	('1', '6356', 1, 1, 1, 1, 1, 0, 1),
	('1', '636', 1, 1, 1, 1, 1, 0, 1),
	('1', '6361', 1, 1, 1, 1, 1, 0, 1),
	('1', '6362', 1, 1, 1, 1, 1, 0, 1),
	('1', '6363', 1, 1, 1, 1, 1, 0, 1),
	('1', '6364', 1, 1, 1, 1, 1, 0, 1),
	('1', '6365', 1, 1, 1, 1, 1, 0, 1),
	('1', '6366', 1, 1, 1, 1, 1, 0, 1),
	('1', '6367', 1, 1, 1, 1, 1, 0, 1),
	('1', '637', 1, 1, 1, 1, 1, 0, 1),
	('1', '6371', 1, 1, 1, 1, 1, 0, 1),
	('1', '6372', 1, 1, 1, 1, 1, 0, 1),
	('1', '6373', 1, 1, 1, 1, 1, 0, 1),
	('1', '6374', 1, 1, 1, 1, 1, 0, 1),
	('1', '6375', 1, 1, 1, 1, 1, 0, 1),
	('1', '6376', 1, 1, 1, 1, 1, 0, 1),
	('1', '638', 1, 1, 1, 1, 1, 0, 1),
	('1', '639', 1, 1, 1, 1, 1, 0, 1),
	('1', '63a', 1, 1, 1, 1, 1, 0, 1),
	('1', '63a1', 1, 1, 1, 1, 1, 0, 1),
	('1', '63a2', 1, 1, 1, 1, 1, 0, 1),
	('1', '63a3', 1, 1, 1, 1, 1, 0, 1),
	('1', '63b', 1, 1, 1, 1, 1, 0, 1),
	('1', '63c', 1, 1, 1, 1, 1, 0, 1),
	('1', '63c1', 1, 1, 1, 1, 1, 0, 1),
	('1', '63c2', 1, 1, 1, 1, 1, 0, 1),
	('1', '63c3', 1, 1, 1, 1, 1, 0, 1),
	('1', '63c4', 1, 1, 1, 1, 1, 0, 1),
	('1', '63c5', 1, 1, 1, 1, 1, 0, 1),
	('1', '63c6', 1, 1, 1, 1, 1, 0, 1),
	('1', '63c7', 1, 1, 1, 1, 1, 0, 1),
	('1', '63c8', 1, 1, 1, 1, 1, 0, 1),
	('1', '63c9', 1, 1, 1, 1, 1, 0, 1),
	('1', '63d', 1, 1, 1, 1, 1, 0, 1),
	('1', '63e1', 1, 1, 1, 1, 1, 0, 1),
	('1', '63e2', 1, 1, 1, 1, 1, 0, 1),
	('1', '63f', 1, 1, 1, 1, 1, 0, 1),
	('1', '63f1', 1, 1, 1, 1, 1, 0, 1),
	('1', '63f2', 1, 1, 1, 1, 1, 0, 1),
	('1', '63g', 1, 1, 1, 1, 1, 0, 1),
	('1', '63g1', 1, 1, 1, 1, 1, 0, 1),
	('1', '63g2', 0, 0, 1, 0, 1, 0, 1),
	('1', '63h', 0, 0, 1, 0, 0, 0, 1),
	('1', '63i', 0, 0, 1, 0, 1, 0, 1),
	('1', '63i1', 1, 1, 1, 1, 1, 0, 1),
	('1', '63i2', 1, 1, 1, 1, 1, 0, 1),
	('1', '64', 1, 1, 1, 1, 1, 0, 1),
	('1', '65', 1, 1, 1, 1, 1, 0, 1),
	('1', '651', 1, 1, 1, 1, 1, 0, 1),
	('1', '652', 1, 1, 1, 1, 1, 0, 1),
	('1', '653', 1, 1, 1, 1, 1, 0, 1),
	('1', '654', 1, 1, 1, 1, 1, 0, 1),
	('1', '6541', 1, 1, 1, 1, 1, 0, 1),
	('1', '6542', 1, 1, 1, 1, 1, 0, 1),
	('1', '655', 1, 1, 1, 1, 1, 0, 1),
	('1', '656', 1, 1, 1, 1, 1, 0, 1),
	('1', '6561', 1, 1, 1, 1, 1, 0, 1),
	('1', '6563', 1, 1, 1, 1, 1, 0, 1),
	('1', '6565', 1, 1, 1, 1, 1, 0, 1),
	('1', '6566', 1, 1, 1, 1, 1, 0, 1),
	('1', '6567', 1, 1, 1, 1, 1, 0, 1),
	('1', '657', 1, 1, 1, 1, 1, 0, 1),
	('1', '6571', 1, 1, 1, 1, 1, 0, 1),
	('1', '6572', 1, 1, 1, 1, 1, 0, 1),
	('1', '6573', 1, 1, 1, 1, 1, 0, 1),
	('1', '6574', 1, 1, 1, 1, 1, 0, 1),
	('1', '6575', 1, 1, 1, 1, 1, 0, 1),
	('1', '6576', 1, 1, 1, 1, 1, 0, 1),
	('1', '658', 1, 1, 1, 1, 1, 0, 1),
	('1', '66', 1, 1, 1, 1, 1, 0, 1),
	('1', '661', 1, 1, 1, 1, 1, 1, 1),
	('1', '662', 1, 1, 1, 1, 1, 0, 1),
	('1', '663', 1, 1, 1, 1, 1, 0, 1),
	('1', '664', 1, 1, 1, 1, 1, 0, 1),
	('1', '665', 1, 1, 1, 1, 1, 0, 1),
	('1', '666', 1, 1, 1, 1, 1, 0, 1),
	('1', '667', 1, 1, 1, 1, 1, 0, 1),
	('1', '67', 1, 1, 1, 1, 1, 0, 1),
	('1', '68', 1, 1, 1, 1, 1, 0, 1),
	('1', '681', 1, 1, 1, 1, 1, 0, 1),
	('1', '682', 1, 1, 1, 1, 1, 0, 1),
	('1', '683', 1, 1, 1, 1, 1, 0, 1),
	('1', '6831', 1, 1, 1, 1, 1, 0, 1),
	('1', '6832', 1, 1, 1, 1, 1, 0, 1),
	('1', '684', 1, 1, 1, 1, 1, 0, 1),
	('1', '6841', 1, 1, 1, 1, 1, 0, 1),
	('1', '6842', 1, 1, 1, 1, 1, 0, 1),
	('1', '685', 1, 1, 1, 1, 1, 0, 1),
	('1', '6851', 1, 1, 1, 1, 1, 0, 1),
	('1', '6852', 1, 1, 1, 1, 1, 0, 1),
	('1', '686', 1, 1, 1, 1, 1, 0, 1),
	('1', '6861', 1, 1, 1, 1, 1, 0, 1),
	('1', '6862', 1, 1, 1, 1, 1, 0, 1),
	('1', '687', 1, 1, 1, 1, 1, 0, 1),
	('1', '688', 1, 1, 1, 1, 1, 0, 1),
	('1', '689', 1, 1, 1, 1, 1, 0, 1),
	('1', '68a', 1, 1, 1, 1, 1, 0, 1),
	('1', '68b', 1, 1, 1, 1, 1, 0, 1),
	('1', '68b1', 1, 1, 1, 1, 1, 0, 1),
	('1', '68b2', 1, 1, 1, 1, 1, 0, 1),
	('1', '68c', 1, 1, 1, 1, 1, 0, 1),
	('1', '68c1', 1, 1, 1, 1, 1, 0, 1),
	('1', '68c2', 1, 1, 1, 1, 1, 0, 1),
	('1', '68d', 1, 1, 1, 1, 1, 0, 1),
	('1', '68e', 1, 1, 1, 1, 1, 0, 1),
	('1', '68f', 1, 1, 1, 1, 1, 0, 1),
	('1', '68g', 1, 1, 1, 1, 1, 0, 1),
	('1', '68h', 1, 1, 1, 1, 1, 0, 1),
	('1', '68i', 0, 0, 1, 0, 0, 0, 1),
	('1', '68j', 1, 1, 1, 1, 1, 0, 1),
	('1', '68k', 0, 0, 1, 0, 1, 0, 1),
	('1', '68l', 1, 1, 1, 1, 1, 0, 1),
	('1', '69', 1, 1, 1, 1, 1, 0, 1),
	('1', '691', 1, 1, 1, 1, 1, 0, 1),
	('1', '6911', 1, 1, 1, 1, 1, 0, 1),
	('1', '69111', 1, 1, 1, 1, 1, 0, 1),
	('1', '69112', 1, 1, 1, 1, 1, 0, 1),
	('1', '69113', 1, 1, 1, 1, 1, 0, 1),
	('1', '6912', 1, 1, 1, 1, 1, 0, 1),
	('1', '6913', 1, 1, 1, 1, 1, 0, 1),
	('1', '69131', 1, 1, 1, 1, 1, 0, 1),
	('1', '69132', 1, 1, 1, 1, 1, 0, 1),
	('1', '69133', 1, 1, 1, 1, 1, 0, 1),
	('1', '6914', 1, 1, 1, 1, 1, 0, 1),
	('1', '6915', 1, 1, 1, 1, 1, 0, 1),
	('1', '69151', 1, 1, 1, 1, 1, 0, 1),
	('1', '69152', 1, 1, 1, 1, 1, 0, 1),
	('1', '69153', 1, 1, 1, 1, 1, 0, 1),
	('1', '6916', 1, 1, 1, 1, 1, 0, 1),
	('1', '6917', 1, 1, 1, 1, 1, 0, 1),
	('1', '69171', 1, 1, 1, 1, 1, 0, 1),
	('1', '69172', 1, 1, 1, 1, 1, 0, 1),
	('1', '69173', 1, 1, 1, 1, 1, 0, 1),
	('1', '692', 1, 1, 1, 1, 1, 0, 1),
	('1', '693', 1, 1, 1, 1, 1, 0, 1),
	('1', '6931', 1, 1, 1, 1, 1, 0, 1),
	('1', '69311', 1, 1, 1, 1, 1, 0, 1),
	('1', '69312', 1, 1, 1, 1, 1, 0, 1),
	('1', '69313', 1, 1, 1, 1, 1, 0, 1),
	('1', '6932', 1, 1, 1, 1, 1, 0, 1),
	('1', '6933', 1, 1, 1, 1, 1, 0, 1),
	('1', '69331', 1, 1, 1, 1, 1, 0, 1),
	('1', '69332', 1, 1, 1, 1, 1, 0, 1),
	('1', '69333', 1, 1, 1, 1, 1, 0, 1),
	('1', '6934', 1, 1, 1, 1, 1, 0, 1),
	('1', '6935', 1, 1, 1, 1, 1, 0, 1),
	('1', '69351', 1, 1, 1, 1, 1, 0, 1),
	('1', '69352', 1, 1, 1, 1, 1, 0, 1),
	('1', '69353', 1, 1, 1, 1, 1, 0, 1),
	('1', '69354', 1, 1, 1, 1, 1, 0, 1),
	('1', '69355', 1, 1, 1, 1, 1, 0, 1),
	('1', '69356', 1, 1, 1, 1, 1, 0, 1),
	('1', '6936', 1, 1, 1, 1, 1, 0, 1),
	('1', '6937', 1, 1, 1, 1, 1, 0, 1),
	('1', '69371', 1, 1, 1, 1, 1, 0, 1),
	('1', '69372', 1, 1, 1, 1, 1, 0, 1),
	('1', '69373', 1, 1, 1, 1, 1, 0, 1),
	('1', '694', 1, 1, 1, 1, 1, 0, 1),
	('1', '695', 1, 1, 1, 1, 1, 0, 1),
	('1', '696', 1, 1, 1, 1, 1, 0, 1),
	('1', '697', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a1', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a11', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a12', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a13', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a2', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a3', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a31', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a32', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a33', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a34', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a35', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a4', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a5', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a51', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a52', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a53', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a54', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a55', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a6', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a7', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a71', 1, 0, 1, 0, 1, 0, 0),
	('1', '6a72', 1, 0, 1, 0, 1, 0, 0),
	('1', '6a73', 1, 0, 1, 0, 1, 0, 0),
	('1', '6a74', 1, 0, 1, 0, 1, 0, 0),
	('1', '6a75', 1, 0, 1, 0, 1, 0, 0),
	('1', '6a8', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a9', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a91', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a92', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a93', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a94', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a95', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a96', 1, 1, 1, 1, 1, 0, 1),
	('1', '6a97', 1, 1, 1, 1, 1, 0, 1),
	('1', '6aa', 1, 1, 1, 1, 1, 0, 1),
	('1', '6ab', 1, 1, 1, 1, 1, 0, 1),
	('1', '6ab1', 1, 1, 1, 1, 1, 0, 1),
	('1', '6ab2', 1, 1, 1, 1, 1, 0, 1),
	('1', '6ac', 1, 1, 1, 1, 1, 0, 1),
	('1', '6ac1', 1, 1, 1, 1, 1, 0, 1),
	('1', '6ac2', 1, 1, 1, 1, 1, 0, 1),
	('1', '6ad', 1, 1, 1, 1, 1, 0, 1),
	('1', '6ad1', 1, 1, 1, 1, 1, 0, 1),
	('1', '6ad2', 1, 1, 1, 1, 1, 0, 1),
	('1', '6ad3', 1, 1, 1, 1, 1, 0, 0),
	('1', '6ad4', 1, 1, 1, 1, 1, 0, 0),
	('1', '6ae', 1, 1, 1, 1, 1, 0, 1),
	('1', '6ae1', 1, 1, 1, 1, 1, 0, 1),
	('1', '6ae2', 1, 1, 1, 1, 1, 0, 1),
	('1', '6ae3', 1, 1, 1, 1, 1, 1, 1),
	('1', '6af', 1, 1, 1, 1, 1, 1, 1),
	('1', '6af1', 1, 1, 1, 1, 1, 1, 1),
	('1', '6af2', 1, 1, 1, 1, 1, 1, 1),
	('1', '6af3', 1, 1, 1, 1, 1, 1, 1),
	('1', '6afa', 1, 1, 1, 1, 1, 1, 1),
	('1', '6afb', 1, 1, 1, 1, 0, 1, 1),
	('1', '6afc', 1, 1, 1, 1, 1, 1, 0),
	('1', '6ag', 1, 1, 1, 1, 1, 0, 1),
	('1', '6ah', 1, 1, 1, 1, 1, 0, 1),
	('1', '6ai', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b1', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b11', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b12', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b13', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b2', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b3', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b31', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b32', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b33', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b34', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b35', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b4', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b5', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b51', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b52', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b53', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b54', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b55', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b6', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b64', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b65', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b66', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b67', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b7', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b8', 1, 1, 1, 1, 1, 0, 1),
	('1', '6b81', 1, 1, 1, 1, 1, 0, 1),
	('1', '6c', 1, 1, 1, 1, 1, 0, 1),
	('1', '6c1', 1, 1, 1, 1, 1, 0, 1),
	('1', '6c11', 0, 0, 0, 1, 1, 0, 0),
	('1', '6c12', 0, 0, 0, 1, 1, 0, 0),
	('1', '6c13', 0, 0, 0, 1, 1, 0, 0),
	('1', '6c2', 1, 1, 1, 1, 1, 0, 1),
	('1', '6c3', 1, 1, 1, 1, 1, 0, 1),
	('1', '6c31', 0, 0, 0, 1, 1, 0, 0),
	('1', '6c32', 0, 0, 0, 0, 1, 0, 0),
	('1', '6c33', 0, 0, 0, 1, 1, 0, 0),
	('1', '6c34', 0, 0, 0, 1, 1, 0, 0),
	('1', '6c35', 0, 0, 0, 1, 1, 0, 0),
	('1', '6c36', 0, 0, 0, 1, 1, 0, 0),
	('1', '6c37', 0, 0, 0, 0, 1, 0, 0),
	('1', '6c38', 0, 0, 0, 1, 1, 0, 0),
	('1', '6c4', 1, 1, 1, 1, 1, 0, 1),
	('1', '6c5', 1, 1, 1, 1, 1, 0, 1),
	('1', '6c6', 1, 1, 1, 1, 1, 0, 1),
	('1', '6c7', 1, 1, 1, 1, 1, 0, 1),
	('1', '6c8', 1, 1, 1, 1, 1, 0, 1),
	('1', '6d', 1, 1, 1, 1, 1, 0, 1),
	('1', '6d1', 1, 1, 1, 1, 1, 0, 1),
	('1', '6d2', 1, 1, 1, 1, 1, 0, 1),
	('1', '6d3', 1, 1, 1, 1, 1, 0, 1),
	('1', '6d4', 0, 0, 1, 1, 1, 0, 0),
	('1', '6d5', 0, 0, 1, 1, 1, 0, 0),
	('1', '6d6', 0, 0, 1, 1, 1, 0, 0),
	('1', '6d7', 0, 0, 1, 1, 1, 0, 0),
	('1', '6d8', 0, 0, 1, 1, 1, 0, 0),
	('1', '6d9', 0, 0, 1, 1, 1, 0, 0),
	('1', '6da', 0, 0, 1, 1, 1, 0, 0),
	('1', '6db', 1, 1, 1, 1, 1, 1, 1),
	('1', '6e', 1, 1, 1, 1, 1, 0, 1),
	('1', '6e1', 1, 1, 1, 1, 1, 0, 1),
	('1', '6e2', 1, 1, 1, 1, 1, 0, 1),
	('1', '6e3', 0, 0, 1, 1, 1, 0, 1),
	('1', '6f', 1, 1, 1, 1, 1, 0, 1),
	('1', '6fa', 1, 1, 1, 1, 1, 0, 1),
	('1', '6fb', 1, 1, 1, 1, 1, 0, 1),
	('1', '6fc', 1, 1, 1, 1, 1, 0, 1),
	('1', '6fd', 1, 1, 1, 1, 1, 0, 1),
	('1', '6g', 0, 0, 1, 0, 1, 0, 0),
	('1', '6h', 1, 1, 1, 1, 1, 0, 1),
	('1', '6i', 0, 0, 1, 0, 1, 0, 0),
	('1', '6i1', 0, 0, 1, 1, 1, 0, 0),
	('1', '6i2', 0, 0, 1, 1, 1, 0, 0),
	('1', '6i3', 0, 0, 1, 1, 1, 0, 0),
	('1', '6i4', 0, 0, 1, 1, 1, 0, 0),
	('1', '6i5', 0, 0, 1, 1, 1, 0, 0),
	('1', '6i6', 0, 0, 1, 1, 1, 0, 0),
	('1', '6i7', 0, 0, 1, 1, 1, 0, 0),
	('1', '6i8', 1, 1, 1, 1, 1, 1, 1),
	('1', '6j', 0, 0, 1, 0, 1, 0, 0),
	('1', '6j1', 0, 0, 1, 1, 1, 0, 0),
	('1', '7', 1, 1, 1, 1, 1, 0, 1),
	('1', '71', 1, 1, 1, 1, 1, 0, 1),
	('1', '72', 1, 1, 1, 1, 1, 0, 1),
	('1', '73', 1, 1, 1, 1, 1, 0, 1),
	('1', '74', 1, 1, 1, 1, 1, 0, 1),
	('1', '75', 1, 1, 1, 1, 1, 0, 1),
	('1', '76', 1, 1, 1, 1, 1, 0, 1),
	('1', '77', 1, 1, 1, 1, 1, 0, 1),
	('1', '78', 1, 1, 1, 1, 1, 0, 1),
	('1', '79', 1, 1, 1, 1, 1, 0, 1),
	('1', '8', 1, 1, 1, 1, 1, 0, 1),
	('trial', '', 1, 1, 1, 1, 1, 0, 1),
	('trial', '1', 1, 1, 1, 1, 1, 0, 1),
	('trial', '11', 1, 1, 1, 1, 1, 0, 1),
	('trial', '12', 1, 1, 1, 1, 1, 0, 1),
	('trial', '13', 1, 1, 1, 1, 1, 0, 1),
	('trial', '14', 1, 1, 1, 1, 1, 0, 1),
	('trial', '18', 1, 1, 1, 1, 1, 0, 1),
	('trial', '19', 1, 1, 1, 1, 1, 0, 1),
	('trial', '1a', 1, 1, 1, 1, 1, 0, 1),
	('trial', '1b', 1, 1, 1, 1, 1, 0, 1),
	('trial', '1c', 1, 1, 1, 1, 1, 0, 1),
	('trial', '1d', 1, 1, 1, 1, 1, 0, 1),
	('trial', '2', 1, 1, 1, 1, 1, 0, 1),
	('trial', '20', 1, 1, 1, 1, 1, 0, 1),
	('trial', '21', 1, 1, 1, 1, 1, 0, 1),
	('trial', '211', 1, 1, 1, 1, 1, 0, 1),
	('trial', '212', 1, 1, 1, 1, 1, 0, 1),
	('trial', '213', 1, 1, 1, 1, 1, 0, 1),
	('trial', '214', 1, 1, 1, 1, 1, 0, 1),
	('trial', '215', 1, 1, 1, 1, 1, 0, 1),
	('trial', '22', 0, 0, 0, 0, 0, 0, 0),
	('trial', '23', 1, 1, 1, 1, 1, 0, 1),
	('trial', '231', 1, 1, 1, 1, 1, 1, 1),
	('trial', '232', 1, 1, 1, 1, 1, 1, 1),
	('trial', '233', 0, 0, 0, 0, 0, 0, 0),
	('trial', '234', 1, 1, 1, 1, 1, 0, 1),
	('trial', '235', 1, 1, 1, 1, 1, 1, 1),
	('trial', '236', 1, 1, 1, 1, 1, 1, 1),
	('trial', '236a', 1, 1, 0, 1, 1, 1, 1),
	('trial', '236b', 1, 1, 0, 1, 1, 1, 1),
	('trial', '237', 1, 1, 1, 1, 1, 1, 1),
	('trial', '237a', 1, 1, 0, 1, 1, 1, 1),
	('trial', '237b', 1, 1, 0, 1, 1, 1, 1),
	('trial', '238', 1, 1, 1, 1, 1, 0, 1),
	('trial', '239', 1, 1, 1, 1, 1, 1, 1),
	('trial', '23a', 1, 1, 1, 1, 1, 1, 1),
	('trial', '23b', 1, 1, 1, 1, 1, 1, 1),
	('trial', '23c', 1, 1, 1, 1, 1, 1, 1),
	('trial', '23d', 1, 1, 1, 1, 1, 0, 1),
	('trial', '23e', 1, 1, 1, 1, 1, 0, 1),
	('trial', '23f', 1, 1, 1, 1, 1, 0, 1),
	('trial', '23g', 1, 1, 1, 1, 1, 0, 1),
	('trial', '23h', 0, 0, 1, 0, 1, 0, 0),
	('trial', '23i', 0, 0, 0, 0, 0, 0, 0),
	('trial', '23j', 1, 1, 1, 1, 1, 1, 1),
	('trial', '24', 1, 1, 1, 1, 1, 0, 1),
	('trial', '25', 1, 1, 1, 1, 1, 0, 1),
	('trial', '251', 1, 1, 0, 1, 1, 1, 1),
	('trial', '251a', 1, 1, 0, 1, 1, 1, 0),
	('trial', '251b', 1, 1, 0, 1, 1, 1, 0),
	('trial', '252', 1, 1, 1, 1, 1, 1, 1),
	('trial', '252a', 1, 1, 0, 1, 1, 1, 1),
	('trial', '252b', 1, 1, 0, 1, 1, 1, 1),
	('trial', '252c', 1, 1, 0, 1, 1, 1, 1),
	('trial', '252d', 1, 1, 0, 1, 1, 1, 1),
	('trial', '253', 0, 0, 0, 0, 0, 0, 0),
	('trial', '254', 1, 1, 1, 1, 1, 1, 1),
	('trial', '255', 1, 1, 1, 1, 1, 1, 1),
	('trial', '256', 1, 1, 1, 1, 1, 1, 1),
	('trial', '257', 1, 1, 1, 1, 1, 1, 1),
	('trial', '258', 1, 1, 1, 1, 1, 1, 1),
	('trial', '259', 1, 1, 1, 1, 1, 1, 1),
	('trial', '25a', 1, 1, 1, 1, 1, 0, 1),
	('trial', '25b', 1, 1, 1, 1, 1, 0, 1),
	('trial', '25c', 1, 1, 1, 1, 1, 0, 1),
	('trial', '25d', 1, 1, 1, 1, 1, 0, 1),
	('trial', '25e', 1, 1, 1, 1, 1, 0, 1),
	('trial', '25f', 0, 0, 0, 0, 0, 0, 0),
	('trial', '25g', 0, 0, 0, 0, 0, 0, 0),
	('trial', '25i', 0, 0, 0, 0, 0, 0, 0),
	('trial', '25j', 0, 0, 1, 0, 1, 0, 0),
	('trial', '25k', 1, 1, 1, 1, 1, 1, 1),
	('trial', '25l', 1, 1, 1, 1, 1, 1, 1),
	('trial', '25m', 0, 0, 1, 0, 1, 0, 0),
	('trial', '25n', 1, 1, 1, 1, 1, 1, 1),
	('trial', '26', 1, 1, 1, 1, 1, 0, 1),
	('trial', '27', 1, 1, 1, 1, 1, 0, 1),
	('trial', '271', 1, 1, 1, 1, 1, 0, 1),
	('trial', '272', 1, 1, 1, 1, 1, 0, 1),
	('trial', '273', 1, 1, 1, 1, 1, 0, 1),
	('trial', '274', 1, 1, 1, 1, 1, 0, 1),
	('trial', '275', 1, 1, 1, 1, 1, 0, 1),
	('trial', '276', 1, 1, 1, 1, 1, 0, 1),
	('trial', '277', 1, 1, 1, 1, 1, 0, 1),
	('trial', '278', 1, 1, 1, 1, 1, 0, 1),
	('trial', '279', 1, 1, 1, 1, 1, 0, 1),
	('trial', '27a', 1, 1, 1, 1, 1, 0, 1),
	('trial', '28', 1, 1, 1, 1, 1, 0, 1),
	('trial', '281', 1, 1, 1, 1, 1, 0, 1),
	('trial', '282', 1, 1, 1, 1, 1, 0, 1),
	('trial', '29', 1, 1, 1, 1, 1, 0, 1),
	('trial', '2a', 1, 1, 1, 1, 1, 0, 1),
	('trial', '2b', 1, 1, 1, 1, 1, 0, 1),
	('trial', '2c', 1, 1, 1, 1, 1, 0, 1),
	('trial', '2c1', 1, 1, 1, 1, 1, 0, 1),
	('trial', '2c2', 1, 1, 1, 1, 1, 0, 1),
	('trial', '2c3', 1, 1, 1, 1, 1, 0, 1),
	('trial', '2c4', 1, 1, 1, 1, 1, 0, 1),
	('trial', '2d', 1, 1, 1, 1, 1, 0, 1),
	('trial', '2e', 1, 1, 1, 1, 1, 0, 1),
	('trial', '2e1', 1, 1, 1, 1, 1, 0, 1),
	('trial', '2e2', 1, 1, 1, 1, 1, 0, 1),
	('trial', '2e3', 1, 1, 1, 1, 1, 0, 1),
	('trial', '2e4', 1, 1, 1, 1, 1, 0, 1),
	('trial', '2e5', 1, 1, 1, 1, 1, 0, 1),
	('trial', '2e6', 1, 1, 1, 1, 1, 0, 1),
	('trial', '2e7', 1, 1, 1, 1, 1, 0, 1),
	('trial', '2e8', 1, 1, 1, 1, 1, 0, 1),
	('trial', '2e9', 1, 1, 1, 1, 1, 0, 1),
	('trial', '2ea', 0, 0, 0, 0, 0, 0, 0),
	('trial', '2f', 0, 0, 1, 0, 1, 0, 1),
	('trial', '2g', 1, 1, 1, 1, 1, 0, 1),
	('trial', '2h', 0, 0, 0, 0, 0, 0, 0),
	('trial', '2h1', 1, 1, 1, 1, 0, 1, 1),
	('trial', '2h2', 1, 1, 1, 1, 0, 1, 1),
	('trial', '2h3', 1, 1, 1, 1, 0, 1, 1),
	('trial', '2i', 0, 0, 1, 0, 1, 0, 0),
	('trial', '2i1', 1, 1, 1, 1, 1, 1, 1),
	('trial', '2i2', 0, 0, 0, 0, 0, 0, 0),
	('trial', '2j', 0, 0, 0, 0, 0, 0, 0),
	('trial', '3', 1, 1, 1, 1, 1, 1, 1),
	('trial', '30', 1, 1, 1, 1, 1, 1, 1),
	('trial', '31', 0, 0, 1, 1, 1, 0, 1),
	('trial', '32', 1, 1, 1, 1, 1, 1, 1),
	('trial', '33', 1, 1, 1, 1, 1, 1, 1),
	('trial', '34', 1, 1, 1, 1, 1, 1, 1),
	('trial', '35', 1, 1, 1, 1, 1, 1, 1),
	('trial', '36', 0, 0, 1, 1, 1, 0, 1),
	('trial', '37', 1, 1, 1, 1, 1, 1, 1),
	('trial', '38', 1, 1, 1, 1, 1, 1, 1),
	('trial', '39', 1, 1, 1, 1, 1, 1, 1),
	('trial', '3a', 0, 0, 1, 1, 1, 0, 1),
	('trial', '3b', 1, 1, 1, 1, 1, 1, 1),
	('trial', '3c', 1, 1, 1, 1, 1, 1, 1),
	('trial', '3d', 1, 1, 1, 1, 1, 0, 1),
	('trial', '3e', 0, 0, 0, 0, 0, 0, 0),
	('trial', '3e1', 1, 1, 1, 1, 0, 1, 1),
	('trial', '3e2', 1, 1, 1, 1, 0, 1, 1),
	('trial', '3e3', 0, 0, 1, 1, 0, 1, 1),
	('trial', '3e4', 1, 1, 1, 1, 0, 1, 1),
	('trial', '3e5', 1, 1, 1, 1, 0, 1, 1),
	('trial', '3f', 1, 1, 1, 1, 1, 1, 1),
	('trial', '3g', 1, 1, 1, 1, 1, 1, 1),
	('trial', '3h', 0, 0, 0, 0, 1, 0, 0),
	('trial', '3h1', 0, 0, 0, 0, 0, 0, 0),
	('trial', '3h2', 0, 0, 0, 0, 0, 0, 0),
	('trial', '3i', 1, 1, 1, 1, 1, 1, 1),
	('trial', '3j', 0, 0, 1, 1, 1, 0, 1),
	('trial', '3k', 1, 1, 1, 1, 1, 1, 1),
	('trial', '3l', 0, 0, 0, 0, 0, 0, 0),
	('trial', '3m', 0, 0, 1, 1, 1, 0, 1),
	('trial', '3n', 1, 1, 1, 1, 1, 1, 1),
	('trial', '3o', 0, 0, 1, 1, 1, 0, 1),
	('trial', '3p', 0, 0, 1, 1, 1, 0, 1),
	('trial', '3q', 1, 1, 1, 1, 1, 1, 1),
	('trial', '3r', 1, 1, 1, 1, 1, 1, 1),
	('trial', '3s', 1, 1, 1, 1, 1, 1, 1),
	('trial', '3t', 1, 1, 1, 1, 1, 1, 1),
	('trial', '3u', 0, 0, 1, 1, 1, 0, 1),
	('trial', '3v', 0, 0, 1, 1, 1, 0, 1),
	('trial', '3w', 0, 0, 1, 1, 1, 0, 1),
	('trial', '3x', 0, 0, 1, 1, 1, 0, 1),
	('trial', '3y', 0, 0, 1, 1, 1, 1, 1),
	('trial', '3z', 0, 0, 0, 0, 0, 0, 0),
	('trial', '3z1', 0, 0, 1, 1, 0, 0, 0),
	('trial', '3z2', 0, 0, 1, 1, 0, 0, 0),
	('trial', '4', 0, 0, 0, 0, 0, 0, 0),
	('trial', '40', 1, 1, 1, 1, 0, 0, 1),
	('trial', '41', 1, 1, 1, 1, 0, 0, 1),
	('trial', '42', 1, 1, 1, 1, 0, 0, 1),
	('trial', '43', 1, 1, 1, 1, 0, 0, 1),
	('trial', '44', 1, 1, 1, 1, 0, 0, 1),
	('trial', '441', 1, 1, 1, 1, 0, 0, 1),
	('trial', '442', 1, 1, 1, 1, 0, 0, 1),
	('trial', '443', 1, 1, 1, 1, 0, 0, 1),
	('trial', '444', 1, 1, 1, 1, 0, 0, 1),
	('trial', '445', 1, 1, 1, 1, 0, 0, 1),
	('trial', '45', 1, 1, 1, 1, 0, 0, 1),
	('trial', '46', 1, 1, 1, 1, 0, 0, 1),
	('trial', '47', 1, 1, 1, 1, 0, 0, 1),
	('trial', '48', 1, 1, 1, 1, 0, 0, 1),
	('trial', '481', 1, 1, 1, 1, 0, 0, 1),
	('trial', '482', 1, 1, 1, 1, 0, 0, 1),
	('trial', '483', 1, 1, 1, 1, 0, 0, 1),
	('trial', '49', 1, 1, 1, 1, 0, 0, 1),
	('trial', '4a', 1, 1, 1, 1, 0, 0, 1),
	('trial', '4b', 1, 1, 1, 1, 0, 0, 1),
	('trial', '4c', 1, 1, 1, 1, 0, 0, 1),
	('trial', '4d', 1, 1, 1, 1, 0, 0, 1),
	('trial', '5', 0, 0, 0, 0, 1, 0, 0),
	('trial', '51', 0, 0, 0, 0, 1, 0, 0),
	('trial', '52', 0, 0, 0, 0, 1, 0, 0),
	('trial', '53', 1, 1, 0, 1, 1, 1, 1),
	('trial', '54', 0, 0, 0, 0, 0, 0, 0),
	('trial', '55', 0, 0, 0, 0, 0, 0, 0),
	('trial', '56', 0, 0, 0, 0, 0, 0, 0),
	('trial', '57', 0, 0, 0, 0, 0, 0, 0),
	('trial', '6', 1, 1, 1, 1, 1, 0, 1),
	('trial', '61', 1, 1, 1, 1, 1, 0, 1),
	('trial', '611', 1, 1, 1, 1, 1, 0, 1),
	('trial', '612', 1, 1, 1, 1, 1, 0, 1),
	('trial', '613', 1, 1, 1, 1, 1, 0, 1),
	('trial', '614', 1, 1, 1, 1, 1, 0, 1),
	('trial', '615', 1, 1, 1, 1, 1, 0, 1),
	('trial', '616', 1, 1, 1, 1, 1, 0, 1),
	('trial', '617', 1, 1, 1, 1, 1, 0, 1),
	('trial', '618', 1, 1, 1, 1, 1, 0, 1),
	('trial', '619', 1, 1, 1, 1, 1, 0, 1),
	('trial', '61a', 1, 1, 1, 1, 1, 0, 1),
	('trial', '61b', 1, 1, 1, 1, 1, 0, 1),
	('trial', '61c', 1, 1, 1, 1, 1, 0, 1),
	('trial', '61d', 1, 1, 1, 1, 1, 0, 1),
	('trial', '61e', 1, 1, 1, 1, 1, 0, 1),
	('trial', '61f', 1, 1, 1, 1, 1, 0, 1),
	('trial', '61g', 1, 1, 1, 1, 1, 0, 1),
	('trial', '61h', 1, 1, 1, 1, 1, 0, 1),
	('trial', '62', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63', 1, 1, 1, 1, 1, 0, 1),
	('trial', '631', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6311', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63111', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63112', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63113', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63114', 0, 0, 0, 0, 0, 0, 0),
	('trial', '63115', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63116', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63117', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63118', 0, 0, 1, 0, 0, 0, 1),
	('trial', '63119', 0, 0, 1, 0, 0, 0, 1),
	('trial', '6312', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63121', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63122', 0, 0, 1, 1, 1, 0, 0),
	('trial', '63123', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63124', 0, 0, 1, 1, 1, 0, 0),
	('trial', '63125', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63126', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63127', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63128', 1, 1, 1, 1, 1, 1, 1),
	('trial', '63129', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6313', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63131', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63132', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63133', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6314', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63141', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63142', 0, 0, 1, 0, 1, 0, 0),
	('trial', '63143', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6315', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63151', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63152', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63153', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63154', 1, 1, 1, 0, 1, 0, 1),
	('trial', '63155', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6316', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63161', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63163', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63165', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6317', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63171', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63172', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63173', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6318', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63181', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63182', 0, 0, 1, 0, 1, 0, 0),
	('trial', '63183', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63184', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63185', 1, 1, 1, 0, 1, 0, 0),
	('trial', '6319', 1, 1, 1, 1, 1, 0, 1),
	('trial', '632', 1, 1, 1, 1, 1, 0, 1),
	('trial', '633', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6331', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63311', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63312', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63313', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63314', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63315', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63316', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63317', 0, 0, 1, 0, 1, 0, 1),
	('trial', '63318', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63319', 0, 0, 1, 0, 0, 0, 1),
	('trial', '6332', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6333', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63331', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63332', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63333', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63335', 1, 1, 1, 0, 1, 0, 0),
	('trial', '6334', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6335', 0, 0, 0, 0, 0, 0, 0),
	('trial', '63351', 1, 1, 1, 1, 0, 0, 1),
	('trial', '63352', 1, 1, 1, 1, 0, 0, 1),
	('trial', '63353', 0, 0, 0, 0, 0, 0, 0),
	('trial', '63354', 0, 0, 0, 0, 0, 0, 0),
	('trial', '63355', 0, 0, 0, 0, 0, 0, 0),
	('trial', '63356', 1, 1, 1, 1, 0, 0, 1),
	('trial', '63357', 1, 1, 1, 1, 0, 1, 1),
	('trial', '6336', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6337', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63371', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63372', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63373', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63374', 0, 0, 1, 0, 0, 0, 1),
	('trial', '6338', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63381', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63382', 1, 1, 1, 1, 1, 0, 0),
	('trial', '63383', 1, 1, 1, 1, 1, 1, 1),
	('trial', '63384', 0, 0, 1, 1, 1, 0, 0),
	('trial', '63385', 1, 1, 1, 1, 1, 1, 1),
	('trial', '6339', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63391', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63392', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63393', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63394', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63395', 1, 1, 1, 1, 1, 0, 1),
	('trial', '633a', 1, 1, 1, 1, 1, 0, 1),
	('trial', '633b', 1, 1, 1, 1, 1, 0, 1),
	('trial', '633c', 1, 1, 1, 1, 1, 0, 1),
	('trial', '633d', 1, 1, 1, 1, 1, 0, 1),
	('trial', '633e', 1, 1, 1, 1, 1, 0, 1),
	('trial', '633e3', 1, 1, 1, 1, 1, 0, 1),
	('trial', '633e4', 1, 1, 1, 1, 1, 0, 1),
	('trial', '633e5', 1, 1, 1, 1, 1, 0, 1),
	('trial', '633f', 1, 1, 1, 1, 1, 0, 1),
	('trial', '633g', 1, 1, 1, 1, 1, 0, 1),
	('trial', '633g1', 1, 1, 1, 1, 1, 0, 1),
	('trial', '633g2', 1, 1, 1, 1, 1, 0, 1),
	('trial', '633g3', 1, 1, 1, 1, 1, 0, 1),
	('trial', '633g4', 1, 1, 1, 1, 1, 0, 1),
	('trial', '633g5', 1, 1, 1, 1, 1, 0, 1),
	('trial', '633g6', 1, 1, 1, 1, 1, 0, 1),
	('trial', '633g7', 1, 1, 1, 1, 1, 0, 1),
	('trial', '634', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6341', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6342', 1, 1, 1, 1, 1, 0, 1),
	('trial', '635', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6351', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6352', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6353', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6354', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6355', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6356', 1, 1, 1, 1, 1, 0, 1),
	('trial', '636', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6361', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6362', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6363', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6364', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6365', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6366', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6367', 1, 1, 1, 1, 1, 0, 1),
	('trial', '637', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6371', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6372', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6373', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6374', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6375', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6376', 1, 1, 1, 1, 1, 0, 1),
	('trial', '638', 1, 1, 1, 1, 1, 0, 1),
	('trial', '639', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63a', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63a1', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63a2', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63a3', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63b', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63c', 0, 0, 0, 0, 0, 0, 0),
	('trial', '63c1', 1, 1, 1, 1, 0, 0, 1),
	('trial', '63c2', 1, 1, 1, 1, 0, 0, 1),
	('trial', '63c3', 1, 1, 1, 1, 0, 0, 1),
	('trial', '63c4', 1, 1, 1, 1, 0, 0, 1),
	('trial', '63c5', 1, 1, 1, 1, 0, 0, 1),
	('trial', '63c6', 1, 1, 1, 1, 0, 0, 1),
	('trial', '63c7', 1, 1, 1, 1, 0, 0, 1),
	('trial', '63c8', 1, 1, 1, 1, 0, 0, 1),
	('trial', '63c9', 1, 1, 1, 1, 0, 0, 1),
	('trial', '63d', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63e2', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63e3', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63f', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63f1', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63f2', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63g', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63g1', 1, 1, 1, 1, 1, 0, 1),
	('trial', '63g2', 0, 0, 1, 0, 1, 0, 1),
	('trial', '63h', 0, 0, 1, 0, 0, 0, 1),
	('trial', '63i', 0, 0, 0, 0, 0, 0, 0),
	('trial', '63i1', 1, 1, 1, 1, 0, 0, 1),
	('trial', '63i2', 1, 1, 1, 1, 0, 0, 1),
	('trial', '64', 1, 1, 1, 1, 1, 0, 1),
	('trial', '65', 1, 1, 1, 1, 1, 0, 1),
	('trial', '651', 1, 1, 1, 1, 1, 0, 1),
	('trial', '652', 1, 1, 1, 1, 1, 0, 1),
	('trial', '653', 1, 1, 1, 1, 1, 0, 1),
	('trial', '654', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6541', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6542', 1, 1, 1, 1, 1, 0, 1),
	('trial', '655', 1, 1, 1, 1, 1, 0, 1),
	('trial', '656', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6561', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6563', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6565', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6566', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6567', 1, 1, 1, 1, 1, 0, 1),
	('trial', '657', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6571', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6572', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6573', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6574', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6575', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6576', 1, 1, 1, 1, 1, 0, 1),
	('trial', '658', 1, 1, 1, 1, 1, 0, 1),
	('trial', '66', 1, 1, 1, 1, 1, 0, 1),
	('trial', '661', 1, 1, 1, 1, 1, 1, 1),
	('trial', '662', 1, 1, 1, 1, 1, 0, 1),
	('trial', '663', 1, 1, 1, 1, 1, 0, 1),
	('trial', '664', 1, 1, 1, 1, 1, 0, 1),
	('trial', '665', 1, 1, 1, 1, 1, 0, 1),
	('trial', '666', 1, 1, 1, 1, 1, 0, 1),
	('trial', '667', 1, 1, 1, 1, 1, 0, 1),
	('trial', '67', 1, 1, 1, 1, 1, 0, 1),
	('trial', '68', 1, 1, 1, 1, 1, 0, 1),
	('trial', '681', 1, 1, 1, 1, 1, 0, 1),
	('trial', '682', 1, 1, 1, 1, 1, 0, 1),
	('trial', '683', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6831', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6832', 1, 1, 1, 1, 1, 0, 1),
	('trial', '684', 0, 0, 0, 0, 0, 0, 0),
	('trial', '6841', 1, 1, 1, 1, 0, 0, 1),
	('trial', '6842', 1, 1, 1, 1, 0, 0, 1),
	('trial', '685', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6851', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6852', 1, 1, 1, 1, 1, 0, 1),
	('trial', '686', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6861', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6862', 1, 1, 1, 1, 1, 0, 1),
	('trial', '687', 1, 1, 1, 1, 1, 0, 1),
	('trial', '688', 1, 1, 1, 1, 1, 0, 1),
	('trial', '689', 1, 1, 1, 1, 1, 0, 1),
	('trial', '68a', 1, 1, 1, 1, 1, 0, 1),
	('trial', '68b', 1, 1, 1, 1, 1, 0, 1),
	('trial', '68b1', 1, 1, 1, 1, 1, 0, 1),
	('trial', '68b2', 1, 1, 1, 1, 1, 0, 1),
	('trial', '68c', 0, 0, 0, 0, 0, 0, 0),
	('trial', '68c1', 1, 1, 1, 1, 0, 0, 1),
	('trial', '68c2', 1, 1, 1, 1, 0, 0, 1),
	('trial', '68d', 0, 0, 0, 0, 0, 0, 0),
	('trial', '68e', 1, 1, 1, 1, 1, 0, 1),
	('trial', '68f', 1, 1, 1, 1, 1, 0, 1),
	('trial', '68g', 1, 1, 1, 1, 1, 0, 1),
	('trial', '68h', 1, 1, 1, 1, 1, 0, 1),
	('trial', '68i', 0, 0, 1, 0, 0, 0, 1),
	('trial', '68j', 1, 1, 1, 1, 1, 0, 1),
	('trial', '68k', 0, 0, 1, 0, 1, 0, 1),
	('trial', '68l', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69', 1, 1, 1, 1, 1, 0, 1),
	('trial', '691', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6911', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69111', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69112', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69113', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6912', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6913', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69131', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69132', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69133', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6914', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6915', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69151', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69152', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69153', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6916', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6917', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69171', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69172', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69173', 1, 1, 1, 1, 1, 0, 1),
	('trial', '692', 1, 1, 1, 1, 1, 0, 1),
	('trial', '693', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6931', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69311', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69312', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69313', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6932', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6933', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69331', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69332', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69333', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6934', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6935', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69351', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69352', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69353', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69354', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69355', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69356', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6936', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6937', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69371', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69372', 1, 1, 1, 1, 1, 0, 1),
	('trial', '69373', 1, 1, 1, 1, 1, 0, 1),
	('trial', '694', 1, 1, 1, 1, 1, 0, 1),
	('trial', '695', 1, 1, 1, 1, 1, 0, 1),
	('trial', '696', 1, 1, 1, 1, 1, 0, 1),
	('trial', '697', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a1', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a11', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a12', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a13', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a2', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a3', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a31', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a32', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a33', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a34', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a35', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a4', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a5', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a51', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a52', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a53', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a54', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a55', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a6', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a7', 0, 0, 0, 0, 0, 0, 0),
	('trial', '6a71', 1, 0, 1, 0, 0, 0, 0),
	('trial', '6a72', 1, 0, 1, 0, 0, 0, 0),
	('trial', '6a73', 1, 0, 1, 0, 0, 0, 0),
	('trial', '6a74', 1, 0, 1, 0, 0, 0, 0),
	('trial', '6a75', 1, 0, 1, 0, 0, 0, 0),
	('trial', '6a8', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a9', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a91', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a92', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a93', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a94', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a95', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a96', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6a97', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6aa', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6ab', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6ab1', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6ab2', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6ac', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6ac1', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6ac2', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6ad', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6ad1', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6ad2', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6ad3', 1, 1, 1, 1, 1, 0, 0),
	('trial', '6ad4', 1, 1, 1, 1, 1, 0, 0),
	('trial', '6ae', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6ae1', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6ae2', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6ae3', 1, 1, 1, 1, 1, 1, 1),
	('trial', '6af', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6ag', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6ah', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6ai', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b1', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b11', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b12', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b13', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b2', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b3', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b31', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b32', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b33', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b34', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b35', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b4', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b5', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b51', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b52', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b53', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b54', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b55', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b6', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b64', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b65', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b66', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b67', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b7', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b8', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6b81', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6c', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6c1', 0, 0, 0, 0, 0, 0, 0),
	('trial', '6c11', 0, 0, 0, 1, 0, 0, 0),
	('trial', '6c12', 0, 0, 0, 1, 0, 0, 0),
	('trial', '6c13', 0, 0, 0, 1, 0, 0, 0),
	('trial', '6c2', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6c3', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6c31', 0, 0, 0, 0, 1, 0, 0),
	('trial', '6c32', 0, 0, 0, 1, 1, 0, 0),
	('trial', '6c33', 0, 0, 0, 1, 1, 0, 0),
	('trial', '6c34', 0, 0, 0, 1, 1, 0, 0),
	('trial', '6c35', 0, 0, 0, 1, 1, 0, 0),
	('trial', '6c36', 0, 0, 0, 1, 1, 0, 0),
	('trial', '6c37', 0, 0, 0, 1, 1, 0, 0),
	('trial', '6c38', 0, 0, 0, 1, 1, 0, 0),
	('trial', '6c4', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6c5', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6c6', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6c7', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6c8', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6d', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6d1', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6d2', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6d3', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6d4', 0, 0, 1, 1, 1, 0, 0),
	('trial', '6d5', 0, 0, 1, 1, 1, 0, 0),
	('trial', '6d6', 0, 0, 1, 1, 1, 0, 0),
	('trial', '6d7', 0, 0, 1, 1, 1, 0, 0),
	('trial', '6d8', 0, 0, 1, 1, 1, 0, 0),
	('trial', '6d9', 0, 0, 1, 1, 1, 0, 0),
	('trial', '6da', 0, 0, 1, 1, 1, 0, 0),
	('trial', '6db', 1, 1, 1, 1, 1, 1, 1),
	('trial', '6e', 0, 0, 0, 0, 0, 0, 0),
	('trial', '6e1', 1, 1, 1, 1, 0, 0, 1),
	('trial', '6e2', 1, 1, 1, 1, 0, 0, 1),
	('trial', '6e3', 0, 0, 1, 1, 0, 0, 1),
	('trial', '6f', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6fa', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6fb', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6fc', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6fd', 0, 0, 0, 0, 0, 0, 0),
	('trial', '6g', 0, 0, 1, 0, 1, 0, 0),
	('trial', '6h', 1, 1, 1, 1, 1, 0, 1),
	('trial', '6i', 0, 0, 1, 0, 1, 0, 0),
	('trial', '6i1', 0, 0, 1, 1, 1, 0, 0),
	('trial', '6i2', 0, 0, 1, 1, 1, 0, 0),
	('trial', '6i3', 0, 0, 1, 1, 1, 0, 0),
	('trial', '6i4', 0, 0, 1, 1, 1, 0, 0),
	('trial', '6i5', 0, 0, 1, 1, 1, 0, 0),
	('trial', '6i6', 0, 0, 1, 1, 1, 0, 0),
	('trial', '6i7', 0, 0, 1, 1, 1, 0, 0),
	('trial', '6j', 0, 0, 0, 0, 0, 0, 0),
	('trial', '6j1', 0, 0, 1, 1, 0, 0, 0),
	('trial', '7', 0, 0, 0, 0, 0, 0, 0);
/*!40000 ALTER TABLE `perms` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.plant
DROP TABLE IF EXISTS `plant`;
CREATE TABLE IF NOT EXISTS `plant` (
  `plant` varchar(15) NOT NULL,
  `name` varchar(50) default NULL,
  `remark` varchar(50) default NULL,
  PRIMARY KEY  (`plant`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.plant: ~0 rows (approximately)
/*!40000 ALTER TABLE `plant` DISABLE KEYS */;
/*!40000 ALTER TABLE `plant` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.pnd
DROP TABLE IF EXISTS `pnd`;
CREATE TABLE IF NOT EXISTS `pnd` (
  `pnv` varchar(15) NOT NULL default ' ',
  `inv` varchar(15) default NULL,
  `remark` varchar(100) default NULL,
  `kode` text,
  `qty` double default NULL,
  `price` double default NULL,
  `val` double default NULL,
  `no` smallint(5) NOT NULL default '0',
  `unit` varchar(6) default NULL,
  `net` double default NULL,
  `konv` double default NULL,
  `gross` double default NULL,
  `process` double default '0',
  `packaging` double default '0',
  `ppnpackaging` double default '0',
  PRIMARY KEY  (`pnv`,`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.pnd: ~0 rows (approximately)
/*!40000 ALTER TABLE `pnd` DISABLE KEYS */;
/*!40000 ALTER TABLE `pnd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.pnv
DROP TABLE IF EXISTS `pnv`;
CREATE TABLE IF NOT EXISTS `pnv` (
  `pnv` varchar(15) NOT NULL,
  `okl` varchar(15) default NULL,
  `spm` varchar(15) default NULL,
  `noinv` varchar(50) default NULL,
  `hscode` varchar(50) default NULL,
  `date` datetime default NULL,
  `podate` datetime default NULL,
  `ponum` varchar(25) default NULL,
  `sub` varchar(15) default NULL,
  `incoterm` varchar(30) default NULL,
  `payment` text,
  `cur` varchar(15) default NULL,
  `group_` varchar(15) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) default NULL,
  `loaddate` datetime default NULL,
  `kurs` double default NULL,
  `aprov` smallint(5) default NULL,
  `validity` varchar(30) default NULL,
  `delete` bit(1) default NULL,
  `close` bit(1) default NULL,
  `grosw` varchar(20) default NULL,
  `netw` varchar(20) default NULL,
  `nocon` varchar(20) default NULL,
  `sealcon` varchar(50) default NULL,
  `notify` longtext,
  `bank` longtext,
  `shipingmark` longtext,
  `other` longtext,
  `subtot` double default '0',
  `taxvalue` double default '0',
  `freight` double default '0',
  `feepackaging` double default '0',
  `cscharge` double default '0',
  `totalvalue` double default '0',
  `jasa` text,
  PRIMARY KEY  (`pnv`),
  KEY `spm` (`spm`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=COMPACT COMMENT='InnoDB free: 4096 kB';

-- Dumping data for table wis_inventory.pnv: ~0 rows (approximately)
/*!40000 ALTER TABLE `pnv` DISABLE KEYS */;
/*!40000 ALTER TABLE `pnv` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.por
DROP TABLE IF EXISTS `por`;
CREATE TABLE IF NOT EXISTS `por` (
  `por` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `duedate` datetime default NULL,
  `sub` varchar(15) default NULL,
  `ppn` bit(1) default '\0',
  `ppnbebas` int(11) default '0',
  `ppnganti` int(11) default '0',
  `disc` double default NULL,
  `remark` text,
  `val` double default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL,
  `rma` varchar(25) default NULL,
  `fpj` varchar(20) default NULL,
  `fpjdate` datetime default NULL,
  `cur` varchar(15) default NULL,
  `kurs` double default NULL,
  `aprov` bit(1) NOT NULL,
  `group_` int(11) NOT NULL default '2',
  `close` bit(1) NOT NULL default '\0',
  `delete` bit(1) NOT NULL default '\0',
  PRIMARY KEY  (`por`),
  KEY `date` (`date`),
  KEY `period` (`period`),
  KEY `subdate` (`sub`,`date`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.por: ~0 rows (approximately)
/*!40000 ALTER TABLE `por` DISABLE KEYS */;
/*!40000 ALTER TABLE `por` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.pord
DROP TABLE IF EXISTS `pord`;
CREATE TABLE IF NOT EXISTS `pord` (
  `por` varchar(15) NOT NULL,
  `rma` varchar(15) default NULL,
  `inv` varchar(15) NOT NULL,
  `loc` varchar(15) default NULL,
  `remark` text NOT NULL,
  `spesifikasi` text,
  `qty` double NOT NULL default '0',
  `price` double NOT NULL default '0',
  `disc` double NOT NULL default '0',
  `val` double NOT NULL default '0',
  `no` smallint(5) NOT NULL default '0',
  `unit` varchar(6) NOT NULL,
  `qty1` double NOT NULL default '0',
  `cct` varchar(15) default NULL,
  `etd` longtext,
  `toleransi` double NOT NULL default '0',
  `acc` varchar(15) default NULL,
  `per` double default '1',
  `pph21` double default '0',
  `valpph21` double default '0',
  `pph22` double default '0',
  `valpph22` double default '0',
  `pph23` double default '0',
  `valpph23` double default '0',
  `pph42` double default '0',
  `valpph42` double default '0',
  PRIMARY KEY  (`por`,`no`),
  KEY `por` (`por`),
  KEY `porqty` (`por`,`qty`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.pord: ~0 rows (approximately)
/*!40000 ALTER TABLE `pord` DISABLE KEYS */;
/*!40000 ALTER TABLE `pord` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.prd
DROP TABLE IF EXISTS `prd`;
CREATE TABLE IF NOT EXISTS `prd` (
  `prq` varchar(15) NOT NULL,
  `inv` varchar(15) NOT NULL,
  `loc` varchar(15) NOT NULL,
  `remark` varchar(100) default NULL,
  `spesifikasi` text,
  `qty` double default '0',
  `no` smallint(5) NOT NULL default '0',
  `unit` varchar(6) NOT NULL,
  `qty1` double default '0',
  `dateneed` datetime default NULL,
  `cct` varchar(15) default NULL,
  `etd` longtext,
  `acc` varchar(15) default NULL,
  `dept` varchar(50) default ' ',
  `no_mpr` smallint(5) default '0',
  PRIMARY KEY  (`prq`,`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.prd: ~0 rows (approximately)
/*!40000 ALTER TABLE `prd` DISABLE KEYS */;
/*!40000 ALTER TABLE `prd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.price
DROP TABLE IF EXISTS `price`;
CREATE TABLE IF NOT EXISTS `price` (
  `inv` varchar(15) NOT NULL,
  `tglawal` date NOT NULL,
  `tglakhir` date NOT NULL,
  `price` double(15,2) NOT NULL,
  `aktif` bit(1) NOT NULL default '\0',
  PRIMARY KEY  (`inv`,`tglawal`,`tglakhir`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.price: ~0 rows (approximately)
/*!40000 ALTER TABLE `price` DISABLE KEYS */;
/*!40000 ALTER TABLE `price` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.printed
DROP TABLE IF EXISTS `printed`;
CREATE TABLE IF NOT EXISTS `printed` (
  `jurnal` varchar(15) default NULL,
  `tglcetak` varchar(20) default NULL,
  `reprint` int(10) default NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.printed: ~0 rows (approximately)
/*!40000 ALTER TABLE `printed` DISABLE KEYS */;
/*!40000 ALTER TABLE `printed` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.prosenbop
DROP TABLE IF EXISTS `prosenbop`;
CREATE TABLE IF NOT EXISTS `prosenbop` (
  `period` varchar(4) NOT NULL,
  `nama` varchar(25) NOT NULL,
  `cct` varchar(15) NOT NULL,
  `prosen` double NOT NULL,
  PRIMARY KEY  (`period`,`nama`,`cct`,`prosen`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.prosenbop: ~0 rows (approximately)
/*!40000 ALTER TABLE `prosenbop` DISABLE KEYS */;
/*!40000 ALTER TABLE `prosenbop` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.proses
DROP TABLE IF EXISTS `proses`;
CREATE TABLE IF NOT EXISTS `proses` (
  `period` varchar(4) NOT NULL default '',
  `chtime` varchar(16) default NULL,
  `chusr` varchar(15) default NULL,
  `jurnal` varchar(15) NOT NULL default '',
  `recordno` int(11) default NULL,
  PRIMARY KEY  (`period`,`jurnal`),
  KEY `period` (`period`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.proses: ~0 rows (approximately)
/*!40000 ALTER TABLE `proses` DISABLE KEYS */;
/*!40000 ALTER TABLE `proses` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.prq
DROP TABLE IF EXISTS `prq`;
CREATE TABLE IF NOT EXISTS `prq` (
  `prq` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `aprov` bit(1) default '\0',
  `remark` longtext,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL,
  `loc` varchar(15) default NULL,
  `cct` varchar(15) default NULL,
  `close` bit(1) NOT NULL default '\0',
  `withPO` bit(1) default '',
  `delete` bit(1) NOT NULL default '\0',
  `po_it` bit(1) NOT NULL default '\0',
  `arrive` bit(1) NOT NULL default '\0',
  `mpr` varchar(15) default ' ',
  `aprov1` bit(1) default '\0',
  `apdate` varchar(16) default ' ',
  `bsa` varchar(15) default ' ',
  PRIMARY KEY  (`prq`),
  KEY `period` (`period`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.prq: ~0 rows (approximately)
/*!40000 ALTER TABLE `prq` DISABLE KEYS */;
/*!40000 ALTER TABLE `prq` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.rac
DROP TABLE IF EXISTS `rac`;
CREATE TABLE IF NOT EXISTS `rac` (
  `acc` varchar(15) default NULL,
  `period` varchar(4) default NULL,
  `vlast` double default NULL,
  `vdebet` double default NULL,
  `vkredit` double default NULL,
  `vlastadj` double default NULL,
  `vdebetadj` double default NULL,
  `vkreditadj` double default NULL,
  KEY `accperiod` (`acc`,`period`),
  KEY `period` (`period`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rac: ~0 rows (approximately)
/*!40000 ALTER TABLE `rac` DISABLE KEYS */;
/*!40000 ALTER TABLE `rac` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.racus
DROP TABLE IF EXISTS `racus`;
CREATE TABLE IF NOT EXISTS `racus` (
  `period` varchar(4) default NULL,
  `acc` varchar(15) default NULL,
  `debet` double default NULL,
  `kredit` double default NULL,
  `val` double default NULL,
  `valrp` double default NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.racus: ~0 rows (approximately)
/*!40000 ALTER TABLE `racus` DISABLE KEYS */;
/*!40000 ALTER TABLE `racus` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.reglimit
DROP TABLE IF EXISTS `reglimit`;
CREATE TABLE IF NOT EXISTS `reglimit` (
  `period` varchar(4) NOT NULL default '',
  `sub` varchar(15) NOT NULL default '',
  `group_` int(10) unsigned default NULL,
  `val` double default NULL,
  `dk` double default NULL,
  `omsokl` varchar(15) NOT NULL default '',
  `kurs` double default NULL,
  `qty` double default NULL,
  `poreff` double NOT NULL default '0',
  `unit` varchar(6) default NULL,
  `remark` varchar(45) default NULL,
  PRIMARY KEY  (`period`,`sub`,`omsokl`,`poreff`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.reglimit: ~0 rows (approximately)
/*!40000 ALTER TABLE `reglimit` DISABLE KEYS */;
/*!40000 ALTER TABLE `reglimit` ENABLE KEYS */;

-- Dumping structure for view wis_inventory.regrsb
DROP VIEW IF EXISTS `regrsb`;
-- Creating temporary table to overcome VIEW dependency errors
CREATE TABLE `regrsb` (
	`sub` VARCHAR(15) NULL COLLATE 'latin1_swedish_ci',
	`acc` VARCHAR(15) NULL COLLATE 'latin1_swedish_ci',
	`jurnal` VARCHAR(15) NULL COLLATE 'latin1_swedish_ci',
	`kurs` DOUBLE NULL,
	`period` VARCHAR(15) NULL COLLATE 'latin1_swedish_ci',
	`invoice` VARCHAR(50) NULL COLLATE 'latin1_swedish_ci'
) ENGINE=MyISAM;

-- Dumping structure for table wis_inventory.rfd
DROP TABLE IF EXISTS `rfd`;
CREATE TABLE IF NOT EXISTS `rfd` (
  `rfp` varchar(15) NOT NULL,
  `no` smallint(5) unsigned NOT NULL,
  `nodoc` varchar(15) default NULL,
  `val` double default NULL,
  `acc` varchar(15) default NULL,
  `kurs` double default '1',
  `valrp` double default '0',
  `remark` varchar(100) default NULL,
  `invoice` varchar(50) default '',
  `dk` varchar(1) default NULL,
  `nama` varchar(100) default NULL,
  PRIMARY KEY  (`rfp`,`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rfd: ~0 rows (approximately)
/*!40000 ALTER TABLE `rfd` DISABLE KEYS */;
/*!40000 ALTER TABLE `rfd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.rfp
DROP TABLE IF EXISTS `rfp`;
CREATE TABLE IF NOT EXISTS `rfp` (
  `rfp` varchar(15) NOT NULL,
  `tglterima` datetime default NULL,
  `tglkembali` datetime default NULL,
  `sub` varchar(15) default ' ',
  `remark` longtext,
  `val` double default '0',
  `date` datetime default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) default NULL,
  `delete` bit(1) default NULL,
  `cur` varchar(6) default ' ',
  `kurs` double default '1',
  `stat_rfp` int(11) default '0',
  PRIMARY KEY  (`rfp`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rfp: ~0 rows (approximately)
/*!40000 ALTER TABLE `rfp` DISABLE KEYS */;
/*!40000 ALTER TABLE `rfp` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.rgr
DROP TABLE IF EXISTS `rgr`;
CREATE TABLE IF NOT EXISTS `rgr` (
  `period` varchar(15) default NULL,
  `jurnal` varchar(15) default NULL,
  `date` datetime default NULL,
  `duedate` datetime default NULL,
  `sub` varchar(15) default NULL,
  `nobg` varchar(15) default NULL,
  `bank` varchar(50) default NULL,
  `acbank` varchar(50) default NULL,
  `acc` varchar(15) default NULL,
  `dk` varchar(1) default NULL,
  `val` double default NULL,
  `subjurnal` varchar(3) default NULL,
  `remark` varchar(50) default NULL,
  `group_` varchar(1) default NULL,
  `acclawan` varchar(15) default NULL,
  `periodtrans` varchar(4) default NULL,
  KEY `jurnalsubjurnalperiod` (`jurnal`,`subjurnal`,`period`),
  KEY `perioddk` (`period`,`dk`),
  KEY `periodnobg` (`period`,`nobg`),
  KEY `periodtrans` (`periodtrans`),
  KEY `rgrperiod` (`period`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rgr: ~0 rows (approximately)
/*!40000 ALTER TABLE `rgr` DISABLE KEYS */;
/*!40000 ALTER TABLE `rgr` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.rhp
DROP TABLE IF EXISTS `rhp`;
CREATE TABLE IF NOT EXISTS `rhp` (
  `jurnal` varchar(15) NOT NULL,
  `subjurnal` varchar(3) default NULL,
  `date` datetime default NULL,
  `sub` varchar(15) NOT NULL,
  `acc` varchar(15) NOT NULL,
  `dk` varchar(1) NOT NULL,
  `val` double default NULL,
  `duedate` datetime default NULL,
  `remark` varchar(100) default NULL,
  `payment` double default NULL,
  `period` varchar(4) default NULL,
  `invoice` varchar(50) NOT NULL default ' ',
  `kurs` double default NULL,
  PRIMARY KEY  (`jurnal`,`acc`,`sub`,`dk`,`invoice`),
  KEY `jurnalperiod` (`jurnal`,`period`),
  KEY `jurnalsubjurnal` (`jurnal`,`subjurnal`,`period`),
  KEY `period` (`jurnal`,`period`),
  KEY `subdateacc` (`sub`,`date`,`acc`),
  KEY `subdate` (`sub`,`jurnal`,`date`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rhp: ~0 rows (approximately)
/*!40000 ALTER TABLE `rhp` DISABLE KEYS */;
/*!40000 ALTER TABLE `rhp` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.rin
DROP TABLE IF EXISTS `rin`;
CREATE TABLE IF NOT EXISTS `rin` (
  `inv` varchar(15) default NULL,
  `loc` varchar(15) default NULL,
  `period` varchar(4) default NULL,
  `vlast` double default NULL,
  `vdebet` double default NULL,
  `vkredit` double default NULL,
  `qlast` double default NULL,
  `qdebet` double default NULL,
  `qkredit` double default NULL,
  `nodsg` varchar(50) default ' ',
  `expired` datetime default NULL,
  KEY `invlocperiod` (`inv`,`loc`,`period`),
  KEY `period` (`period`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rin: ~0 rows (approximately)
/*!40000 ALTER TABLE `rin` DISABLE KEYS */;
/*!40000 ALTER TABLE `rin` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.rka
DROP TABLE IF EXISTS `rka`;
CREATE TABLE IF NOT EXISTS `rka` (
  `rka` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `duedate` datetime default NULL,
  `sub` varchar(15) NOT NULL,
  `ppn` smallint(5) default NULL,
  `disc` double default '0',
  `remark` varchar(50) default NULL,
  `val` double default '0',
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL,
  `loc` varchar(15) default NULL,
  `noretur` varchar(25) default NULL,
  `spr` varchar(15) default NULL,
  `rsm` varchar(15) default NULL,
  `nopol` varchar(15) default NULL,
  `delete` bit(1) NOT NULL default '\0',
  `jnsdoc` varchar(15) default NULL,
  `doc` varchar(20) default NULL,
  `tgl_bc` datetime default NULL,
  `bsa` varchar(15) default ' ',
  PRIMARY KEY  (`rka`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rka: ~0 rows (approximately)
/*!40000 ALTER TABLE `rka` DISABLE KEYS */;
/*!40000 ALTER TABLE `rka` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.rkb
DROP TABLE IF EXISTS `rkb`;
CREATE TABLE IF NOT EXISTS `rkb` (
  `rka` varchar(15) NOT NULL,
  `inv` varchar(15) NOT NULL,
  `loc` varchar(15) NOT NULL,
  `remark` varchar(50) NOT NULL,
  `qty` double NOT NULL default '0',
  `no` smallint(5) NOT NULL,
  `unit` varchar(6) NOT NULL,
  `qty1` double NOT NULL default '0',
  `etd` longtext,
  `nodsg` varchar(50) NOT NULL,
  `expired` datetime default NULL,
  PRIMARY KEY  (`rka`,`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rkb: ~0 rows (approximately)
/*!40000 ALTER TABLE `rkb` DISABLE KEYS */;
/*!40000 ALTER TABLE `rkb` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.rkd
DROP TABLE IF EXISTS `rkd`;
CREATE TABLE IF NOT EXISTS `rkd` (
  `rkl` varchar(15) NOT NULL default '',
  `rsm` varchar(15) default NULL,
  `remark` varchar(50) default NULL,
  `val` double default '0',
  `no` smallint(5) NOT NULL default '0',
  `nofp` varchar(20) default NULL,
  `tglfp` datetime default NULL,
  `tglsfp` datetime default NULL,
  `kurs` double default '0',
  `dpp` double default '0',
  `ppn` double default '0',
  `invo` varchar(50) default NULL,
  `qty` double default NULL,
  `unit` varchar(6) default NULL,
  `price` double default NULL,
  `inv` varchar(15) default NULL,
  PRIMARY KEY  (`rkl`,`no`),
  KEY `rkl` (`rkl`),
  KEY `rsm` (`rsm`),
  KEY `rklqty` (`rkl`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rkd: ~0 rows (approximately)
/*!40000 ALTER TABLE `rkd` DISABLE KEYS */;
/*!40000 ALTER TABLE `rkd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.rkl
DROP TABLE IF EXISTS `rkl`;
CREATE TABLE IF NOT EXISTS `rkl` (
  `rkl` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `duedate` datetime default NULL,
  `sub` varchar(15) default NULL,
  `ppn` double NOT NULL default '0',
  `disc` double default '0',
  `remark` varchar(50) default NULL,
  `val` double default '0',
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL,
  `cur` varchar(15) default NULL,
  `kurs` double default NULL,
  `delete` bit(1) NOT NULL default '\0',
  `bsa` varchar(15) default ' ',
  PRIMARY KEY  (`rkl`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rkl: ~0 rows (approximately)
/*!40000 ALTER TABLE `rkl` DISABLE KEYS */;
/*!40000 ALTER TABLE `rkl` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.rll
DROP TABLE IF EXISTS `rll`;
CREATE TABLE IF NOT EXISTS `rll` (
  `rkl` varchar(15) NOT NULL default '',
  `date` datetime default NULL,
  `rka` varchar(15) default NULL,
  `rsm` varchar(15) default NULL,
  `remark` varchar(50) default NULL,
  `val` double default NULL,
  `no` smallint(5) NOT NULL default '0',
  `qty` double default NULL,
  `unit` varchar(6) default NULL,
  `price` double default NULL,
  `inv` varchar(15) default NULL,
  PRIMARY KEY  (`rkl`,`no`),
  KEY `rkl` (`rkl`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rll: ~0 rows (approximately)
/*!40000 ALTER TABLE `rll` DISABLE KEYS */;
/*!40000 ALTER TABLE `rll` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.rma
DROP TABLE IF EXISTS `rma`;
CREATE TABLE IF NOT EXISTS `rma` (
  `rma` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `sub` varchar(15) default NULL,
  `remark` text,
  `group_` int(11) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL,
  `aprov` bit(1) NOT NULL default '\0',
  `close` bit(1) NOT NULL default '\0',
  `delete` bit(1) NOT NULL default '\0',
  `bsa` varchar(15) default ' ',
  PRIMARY KEY  (`rma`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rma: ~0 rows (approximately)
/*!40000 ALTER TABLE `rma` DISABLE KEYS */;
/*!40000 ALTER TABLE `rma` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.rmb
DROP TABLE IF EXISTS `rmb`;
CREATE TABLE IF NOT EXISTS `rmb` (
  `rma` varchar(15) NOT NULL default '',
  `inv` varchar(15) default NULL,
  `loc` varchar(15) default NULL,
  `remark` text,
  `qty` double default '0',
  `no` smallint(5) NOT NULL default '0',
  `unit` varchar(6) default NULL,
  `qty1` double default '0',
  `cct` varchar(15) default NULL,
  `acc` varchar(15) default NULL,
  `etd` longtext,
  PRIMARY KEY  (`rma`,`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rmb: ~0 rows (approximately)
/*!40000 ALTER TABLE `rmb` DISABLE KEYS */;
/*!40000 ALTER TABLE `rmb` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.rmd
DROP TABLE IF EXISTS `rmd`;
CREATE TABLE IF NOT EXISTS `rmd` (
  `rms` varchar(15) NOT NULL,
  `inv` varchar(15) NOT NULL,
  `loc` varchar(15) default NULL,
  `remark` varchar(100) NOT NULL,
  `qty` double NOT NULL default '0',
  `price` double NOT NULL default '0',
  `disc` double NOT NULL default '0',
  `val` double NOT NULL default '0',
  `no` smallint(5) NOT NULL default '0',
  `unit` varchar(6) NOT NULL,
  `qty1` double NOT NULL default '0',
  `cct` varchar(15) default NULL,
  `etd` longtext,
  `toleransi` double NOT NULL default '0',
  `acc` varchar(15) default NULL,
  `pph21` double default '0',
  `valpph21` double default '0',
  `pph22` double default '0',
  `valpph22` double default '0',
  `pph23` double default '0',
  `valpph23` double default '0',
  `pph42` double default '0',
  `valpph42` double default '0',
  PRIMARY KEY  (`rms`,`no`),
  KEY `rms` (`rms`),
  KEY `rmsqty` (`rms`,`qty`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rmd: ~0 rows (approximately)
/*!40000 ALTER TABLE `rmd` DISABLE KEYS */;
/*!40000 ALTER TABLE `rmd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.rms
DROP TABLE IF EXISTS `rms`;
CREATE TABLE IF NOT EXISTS `rms` (
  `rms` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `duedate` datetime default NULL,
  `sub` varchar(15) default NULL,
  `ppn` bit(1) default '\0',
  `ppnp` int(11) default '0',
  `ppnbebas` int(11) default '0',
  `disc` double default NULL,
  `remark` varchar(50) default NULL,
  `val` double default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL,
  `rma` varchar(25) default NULL,
  `fpj` varchar(20) default NULL,
  `fpjdate` datetime default NULL,
  `cur` varchar(15) default NULL,
  `kurs` double default NULL,
  `aprov` bit(1) NOT NULL,
  `close` bit(1) NOT NULL default '\0',
  `delete` bit(1) NOT NULL default '\0',
  `bsa` varchar(15) default ' ',
  PRIMARY KEY  (`rms`),
  KEY `date` (`date`),
  KEY `period` (`period`),
  KEY `subdate` (`sub`,`date`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rms: ~0 rows (approximately)
/*!40000 ALTER TABLE `rms` DISABLE KEYS */;
/*!40000 ALTER TABLE `rms` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.rmz
DROP TABLE IF EXISTS `rmz`;
CREATE TABLE IF NOT EXISTS `rmz` (
  `rmz` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `duedate` datetime default NULL,
  `sub` varchar(15) default NULL,
  `ppn` smallint(5) default NULL,
  `disc` double default NULL,
  `remark` varchar(50) default NULL,
  `val` double default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL default '',
  `rma` varchar(25) default NULL,
  `fpj` varchar(20) default NULL,
  `fpjdate` datetime default NULL,
  `cur` varchar(15) default NULL,
  `kurs` double default NULL,
  PRIMARY KEY  (`rmz`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rmz: ~0 rows (approximately)
/*!40000 ALTER TABLE `rmz` DISABLE KEYS */;
/*!40000 ALTER TABLE `rmz` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.role
DROP TABLE IF EXISTS `role`;
CREATE TABLE IF NOT EXISTS `role` (
  `role` varchar(16) NOT NULL,
  `user` varchar(16) NOT NULL,
  PRIMARY KEY  (`role`,`user`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.role: ~0 rows (approximately)
/*!40000 ALTER TABLE `role` DISABLE KEYS */;
/*!40000 ALTER TABLE `role` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.rpo
DROP TABLE IF EXISTS `rpo`;
CREATE TABLE IF NOT EXISTS `rpo` (
  `period` varchar(4) default NULL,
  `oms` varchar(15) default NULL,
  `date` datetime default NULL,
  `sub` varchar(15) default NULL,
  `inv` varchar(15) default NULL,
  `loc` varchar(15) default NULL,
  `qty` double default NULL,
  `qtyout` double default NULL,
  `remark` varchar(100) default NULL,
  KEY `omsperiod` (`oms`,`period`),
  KEY `periodsub` (`period`,`sub`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rpo: ~0 rows (approximately)
/*!40000 ALTER TABLE `rpo` DISABLE KEYS */;
/*!40000 ALTER TABLE `rpo` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.rprq
DROP TABLE IF EXISTS `rprq`;
CREATE TABLE IF NOT EXISTS `rprq` (
  `period` varchar(4) default NULL,
  `prq` varchar(15) default NULL,
  `date` datetime default NULL,
  `sub` varchar(15) default NULL,
  `inv` varchar(15) default NULL,
  `loc` varchar(15) default NULL,
  `qty` double default NULL,
  `qtyout` double default NULL,
  `remark` varchar(50) default NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rprq: ~0 rows (approximately)
/*!40000 ALTER TABLE `rprq` DISABLE KEYS */;
/*!40000 ALTER TABLE `rprq` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.rsb
DROP TABLE IF EXISTS `rsb`;
CREATE TABLE IF NOT EXISTS `rsb` (
  `period` varchar(15) default NULL,
  `jurnal` varchar(15) default NULL,
  `date` datetime default NULL,
  `sub` varchar(15) default NULL,
  `acc` varchar(15) default NULL,
  `dk` varchar(1) default NULL,
  `val` double default NULL,
  `payment` double default NULL,
  `duedate` datetime default NULL,
  `subjurnal` varchar(3) default NULL,
  `remark` varchar(100) default NULL,
  `valasli` double NOT NULL,
  `invoice` varchar(50) default NULL,
  `kurs` double default NULL,
  KEY `periodjurnal` (`period`,`jurnal`),
  KEY `periodsub` (`period`,`sub`),
  KEY `periodsubacc` (`period`,`sub`,`dk`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rsb: ~0 rows (approximately)
/*!40000 ALTER TABLE `rsb` DISABLE KEYS */;
/*!40000 ALTER TABLE `rsb` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.rsd
DROP TABLE IF EXISTS `rsd`;
CREATE TABLE IF NOT EXISTS `rsd` (
  `rsk` varchar(15) NOT NULL default '',
  `rms` varchar(15) default NULL,
  `remark` varchar(100) default NULL,
  `val` double default '0',
  `no` smallint(5) NOT NULL default '0',
  `nofp` varchar(20) default NULL,
  `tglfp` datetime default NULL,
  `tglsfp` datetime default NULL,
  `kurs` double default '0',
  `dpp` double default '0',
  `ppn` double default '0',
  `invo` varchar(50) default NULL,
  PRIMARY KEY  (`rsk`,`no`),
  KEY `rsk` (`rsk`),
  KEY `rms` (`rms`),
  KEY `rskqty` (`rsk`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rsd: ~0 rows (approximately)
/*!40000 ALTER TABLE `rsd` DISABLE KEYS */;
/*!40000 ALTER TABLE `rsd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.rsk
DROP TABLE IF EXISTS `rsk`;
CREATE TABLE IF NOT EXISTS `rsk` (
  `rsk` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `duedate` datetime default NULL,
  `sub` varchar(15) default NULL,
  `ppn` double default NULL,
  `remark` varchar(100) default NULL,
  `val` double default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL,
  `cur` varchar(4) default NULL,
  `delete` bit(1) NOT NULL default '\0',
  `nofp` varchar(20) default NULL,
  `tglfp` datetime default NULL,
  `tglsfp` datetime default NULL,
  PRIMARY KEY  (`rsk`),
  KEY `period` (`period`),
  KEY `subdate` (`sub`,`date`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rsk: ~0 rows (approximately)
/*!40000 ALTER TABLE `rsk` DISABLE KEYS */;
/*!40000 ALTER TABLE `rsk` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.rsl
DROP TABLE IF EXISTS `rsl`;
CREATE TABLE IF NOT EXISTS `rsl` (
  `rsk` varchar(15) NOT NULL default '',
  `date` datetime default NULL,
  `sjr` varchar(15) default NULL,
  `rms` varchar(15) default NULL,
  `remark` varchar(100) default NULL,
  `val` double default NULL,
  `no` smallint(5) NOT NULL default '0',
  PRIMARY KEY  (`rsk`,`no`),
  KEY `rsk` (`rsk`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rsl: ~0 rows (approximately)
/*!40000 ALTER TABLE `rsl` DISABLE KEYS */;
/*!40000 ALTER TABLE `rsl` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.rsm
DROP TABLE IF EXISTS `rsm`;
CREATE TABLE IF NOT EXISTS `rsm` (
  `rsm` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `duedate` datetime default NULL,
  `sub` varchar(15) default NULL,
  `ppn` bit(1) default '\0',
  `disc` double default NULL,
  `remark` varchar(100) default NULL,
  `val` double default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL default '',
  `cur` varchar(15) default NULL,
  `kurs` double default NULL,
  `close` bit(1) NOT NULL default '\0',
  `nopoc` varchar(15) NOT NULL,
  `delete` bit(1) NOT NULL default '\0',
  PRIMARY KEY  (`rsm`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rsm: ~0 rows (approximately)
/*!40000 ALTER TABLE `rsm` DISABLE KEYS */;
/*!40000 ALTER TABLE `rsm` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.rsmd
DROP TABLE IF EXISTS `rsmd`;
CREATE TABLE IF NOT EXISTS `rsmd` (
  `rsm` varchar(15) NOT NULL,
  `inv` varchar(15) NOT NULL default '',
  `loc` varchar(15) default NULL,
  `remark` varchar(100) NOT NULL default '',
  `qty` double NOT NULL default '0',
  `price` double NOT NULL default '0',
  `disc` double NOT NULL default '0',
  `val` double NOT NULL default '0',
  `no` smallint(5) NOT NULL default '0',
  `unit` varchar(6) NOT NULL default '',
  `qty1` double NOT NULL default '0',
  `etd` longtext,
  `klr` varchar(15) default NULL,
  `okl` varchar(15) default NULL,
  `nodsg` varchar(50) NOT NULL,
  `toleransi` double default '0',
  PRIMARY KEY  (`rsm`,`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rsmd: ~0 rows (approximately)
/*!40000 ALTER TABLE `rsmd` DISABLE KEYS */;
/*!40000 ALTER TABLE `rsmd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.rsn
DROP TABLE IF EXISTS `rsn`;
CREATE TABLE IF NOT EXISTS `rsn` (
  `rsn` varchar(50) NOT NULL,
  `remmark` varchar(100) default NULL,
  `chtime` datetime default NULL,
  `chusr` varchar(50) default NULL,
  `aktif` int(11) default NULL,
  PRIMARY KEY  (`rsn`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rsn: ~6 rows (approximately)
/*!40000 ALTER TABLE `rsn` DISABLE KEYS */;
REPLACE INTO `rsn` (`rsn`, `remmark`, `chtime`, `chusr`, `aktif`) VALUES
	('BEDA SUPPLIER', 'BEDA SUPPLIER, BEDA HARGA', '2019-02-12 16:04:00', 'trial', NULL),
	('HARGA BERBEDA', 'BARANG SAMA, UKURAN BERBEDA', '2019-01-23 17:10:00', 'trial', 1),
	('HARGA NAIK', 'HARGA MENGALAMI KENAIKAN', '2019-01-25 14:28:00', 'trial', NULL),
	('MERK BERBEDA UTK BARANG YANG SAMA', 'HARGA BERBEDA', '2019-01-25 14:25:00', 'trial', 1),
	('SUPPLIER BERBEDA', 'HARGA BERBEDA', '2019-01-28 16:22:00', 'trial', NULL),
	('UKURAN BERBEDA', 'BEDA UKURAN BEDA HARGA', '2019-02-12 16:19:00', 'trial', NULL);
/*!40000 ALTER TABLE `rsn` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.rso
DROP TABLE IF EXISTS `rso`;
CREATE TABLE IF NOT EXISTS `rso` (
  `period` varchar(4) default NULL,
  `okl` varchar(15) default NULL,
  `date` datetime default NULL,
  `sub` varchar(15) default NULL,
  `inv` varchar(15) default NULL,
  `loc` varchar(15) default NULL,
  `qty` double default NULL,
  `qtyout` double default NULL,
  `remark` varchar(50) default NULL,
  `nodsg` varchar(50) default NULL,
  KEY `oklperiod` (`okl`,`period`),
  KEY `periodsub` (`period`,`sub`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rso: ~0 rows (approximately)
/*!40000 ALTER TABLE `rso` DISABLE KEYS */;
/*!40000 ALTER TABLE `rso` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.rumus
DROP TABLE IF EXISTS `rumus`;
CREATE TABLE IF NOT EXISTS `rumus` (
  `kode` varchar(15) NOT NULL,
  `ket` varchar(45) NOT NULL,
  `pjg` smallint(6) NOT NULL,
  `lbr` smallint(6) NOT NULL,
  `tgi` smallint(6) NOT NULL,
  `L1` smallint(6) NOT NULL,
  `T` smallint(6) NOT NULL,
  `L2` smallint(6) NOT NULL,
  `P` smallint(6) NOT NULL,
  `L` smallint(6) NOT NULL,
  `kali` smallint(6) NOT NULL,
  `tambah` smallint(6) NOT NULL,
  `prod` smallint(6) NOT NULL,
  `chusr` char(10) default NULL,
  `chtime` char(16) default NULL,
  PRIMARY KEY  (`kode`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.rumus: ~3 rows (approximately)
/*!40000 ALTER TABLE `rumus` DISABLE KEYS */;
REPLACE INTO `rumus` (`kode`, `ket`, `pjg`, `lbr`, `tgi`, `L1`, `T`, `L2`, `P`, `L`, `kali`, `tambah`, `prod`, `chusr`, `chtime`) VALUES
	('DW/BC', 'Double Wall', 10, 10, 16, 7, 16, 7, 10, 10, 2, 35, 1000, '', ''),
	('SW/BF', 'Single Wall /BF', 6, 6, 8, 4, 8, 4, 6, 6, 2, 30, 1000, '', ''),
	('SW/CF', 'Single Wall / CF', 8, 8, 10, 5, 10, 5, 8, 8, 2, 30, 1000, '', '');
/*!40000 ALTER TABLE `rumus` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.sales
DROP TABLE IF EXISTS `sales`;
CREATE TABLE IF NOT EXISTS `sales` (
  `sales` varchar(15) NOT NULL,
  `name` varchar(50) default NULL,
  `address` varchar(50) default NULL,
  `city` varchar(50) default NULL,
  `phone` varchar(50) default NULL,
  `remark` varchar(50) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `acc` varchar(15) default NULL,
  `aktif` tinyint(1) default NULL,
  PRIMARY KEY  (`sales`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.sales: ~0 rows (approximately)
/*!40000 ALTER TABLE `sales` DISABLE KEYS */;
/*!40000 ALTER TABLE `sales` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.shd
DROP TABLE IF EXISTS `shd`;
CREATE TABLE IF NOT EXISTS `shd` (
  `shp` varchar(15) NOT NULL default ' ',
  `inv` varchar(15) default NULL,
  `remark` varchar(100) default NULL,
  `qty` double default NULL,
  `numcon` varchar(15) default NULL,
  `nocon` varchar(20) default NULL,
  `no` smallint(5) NOT NULL default '0',
  `unit` varchar(6) default NULL,
  PRIMARY KEY  (`shp`,`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.shd: ~0 rows (approximately)
/*!40000 ALTER TABLE `shd` DISABLE KEYS */;
/*!40000 ALTER TABLE `shd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.shp
DROP TABLE IF EXISTS `shp`;
CREATE TABLE IF NOT EXISTS `shp` (
  `shp` varchar(15) NOT NULL,
  `to` varchar(15) NOT NULL,
  `shipper` longtext,
  `sub` varchar(15) default NULL,
  `notify` longtext,
  `emkl` varchar(15) default NULL,
  `bookno` varchar(25) default NULL,
  `noso` varchar(25) default NULL,
  `feeder` varchar(25) default NULL,
  `etd` varchar(15) default NULL,
  `stacking` varchar(15) default NULL,
  `stuffing` varchar(15) default NULL,
  `clossing` varchar(15) default NULL,
  `vessel` varchar(25) default NULL,
  `port` varchar(25) default NULL,
  `eta` varchar(15) default NULL,
  `bill` varchar(40) default NULL,
  `payment` varchar(40) default NULL,
  `prepayat` varchar(30) default NULL,
  `stuckloc` varchar(20) default NULL,
  `insp` varchar(20) default NULL,
  `volume` varchar(15) default NULL,
  `spesint` varchar(40) default NULL,
  `shippingmark` longtext,
  `deliverintruct` longtext,
  `refno` varchar(20) default NULL,
  `pnv` varchar(15) default NULL,
  `group_` int(11) default '1',
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `delete` bit(1) default NULL,
  `cur` varchar(6) default NULL,
  `kurs` float default NULL,
  `period` varchar(4) default NULL,
  `date` datetime default NULL,
  `grosw` varchar(20) default NULL,
  `netw` varchar(20) default NULL,
  PRIMARY KEY  (`shp`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.shp: ~0 rows (approximately)
/*!40000 ALTER TABLE `shp` DISABLE KEYS */;
/*!40000 ALTER TABLE `shp` ENABLE KEYS */;

-- Dumping structure for procedure wis_inventory.sincproduct
DROP PROCEDURE IF EXISTS `sincproduct`;
DELIMITER //
CREATE PROCEDURE `sincproduct`()
BEGIN
insert into tpbdb.referensi_kode_barang(KODE_BARANG,URAIAN_BARANG)
select inv as kodebarang, name as uraian from cas_bb_trial.inv where left(inv,1)<=8 and flag =0
and inv not in (select KODE_BARANG from tpbdb.referensi_kode_barang) ;
END//
DELIMITER ;

-- Dumping structure for table wis_inventory.sjd
DROP TABLE IF EXISTS `sjd`;
CREATE TABLE IF NOT EXISTS `sjd` (
  `sjh` varchar(15) NOT NULL,
  `okl` varchar(15) default NULL,
  `inv` varchar(15) default NULL,
  `loc` varchar(15) default NULL,
  `remark` varchar(100) default NULL,
  `qty` double default NULL,
  `no` smallint(5) NOT NULL default '0',
  `unit` varchar(6) default NULL,
  `qty1` double default NULL,
  `nopoc` varchar(25) default NULL,
  `nodsg` varchar(50) default NULL,
  `mor` varchar(15) default NULL,
  `price` double default '0',
  `val` double default '0',
  `kgb` varchar(15) default NULL,
  `expired` datetime default NULL,
  PRIMARY KEY  (`sjh`,`no`),
  KEY `okl` (`okl`),
  KEY `sjh` (`sjh`),
  KEY `sjhqty` (`sjh`,`inv`,`qty`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.sjd: ~0 rows (approximately)
/*!40000 ALTER TABLE `sjd` DISABLE KEYS */;
/*!40000 ALTER TABLE `sjd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.sjd1
DROP TABLE IF EXISTS `sjd1`;
CREATE TABLE IF NOT EXISTS `sjd1` (
  `sjh` varchar(15) NOT NULL,
  `okl` varchar(15) default NULL,
  `inv` varchar(15) default NULL,
  `loc` varchar(15) default NULL,
  `remark` varchar(100) default NULL,
  `qty` double default NULL,
  `no` smallint(5) NOT NULL default '0',
  `unit` varchar(6) default NULL,
  `qty1` double default NULL,
  `nopoc` varchar(25) default NULL,
  `nodsg` varchar(50) default NULL,
  `mor` varchar(15) default NULL,
  `price` double default '0',
  `val` double default '0',
  PRIMARY KEY  (`sjh`,`no`),
  KEY `okl` (`okl`),
  KEY `sjh` (`sjh`),
  KEY `sjhqty` (`sjh`,`qty`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.sjd1: ~0 rows (approximately)
/*!40000 ALTER TABLE `sjd1` DISABLE KEYS */;
/*!40000 ALTER TABLE `sjd1` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.sjh
DROP TABLE IF EXISTS `sjh`;
CREATE TABLE IF NOT EXISTS `sjh` (
  `sjh` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `duedate` datetime default NULL,
  `sub` varchar(15) default NULL,
  `kodeglobal` varchar(50) default NULL,
  `totqtykemasan` double default '0',
  `totqty` double default '0',
  `ppn` smallint(5) default NULL,
  `disc` double default NULL,
  `remark` longtext,
  `val` double default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL,
  `nopo` varchar(15) default NULL,
  `spm` varchar(15) default NULL,
  `loc` varchar(15) default NULL,
  `nopol` varchar(30) default NULL,
  `Sales` varchar(15) default NULL,
  `angkutan` varchar(15) default NULL,
  `nodoc` varchar(30) default ' ',
  `shiptoname` varchar(40) default NULL,
  `shiptoaddress` longtext,
  `delete` bit(1) NOT NULL default '\0',
  `no_con` varchar(50) NOT NULL,
  `bsa` varchar(15) default ' ',
  PRIMARY KEY  (`sjh`),
  KEY `period` (`period`),
  KEY `sub` (`sub`),
  KEY `subdate` (`sub`,`date`),
  KEY `tgl` (`date`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.sjh: ~0 rows (approximately)
/*!40000 ALTER TABLE `sjh` DISABLE KEYS */;
/*!40000 ALTER TABLE `sjh` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.sjr
DROP TABLE IF EXISTS `sjr`;
CREATE TABLE IF NOT EXISTS `sjr` (
  `sjr` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `duedate` datetime default NULL,
  `sub` varchar(15) default NULL,
  `remark` text,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL,
  `okl_rms` varchar(15) default NULL,
  `spm` varchar(15) default NULL,
  `nopol` varchar(15) default NULL,
  `angkutan` varchar(15) default NULL,
  `shiptoname` varchar(40) default NULL,
  `shiptoaddress` longtext,
  `delete` bit(1) NOT NULL default '\0',
  `group_` tinyint(4) unsigned default '1',
  `doc` varchar(20) default NULL,
  `bcdate` datetime default NULL,
  `tgl_bc` datetime default NULL,
  `bsa` varchar(15) default ' ',
  PRIMARY KEY  (`sjr`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.sjr: ~0 rows (approximately)
/*!40000 ALTER TABLE `sjr` DISABLE KEYS */;
/*!40000 ALTER TABLE `sjr` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.sjrd
DROP TABLE IF EXISTS `sjrd`;
CREATE TABLE IF NOT EXISTS `sjrd` (
  `sjr` varchar(15) NOT NULL,
  `okl` varchar(15) default NULL,
  `inv` varchar(15) default NULL,
  `loc` varchar(15) default NULL,
  `remark` varchar(100) default NULL,
  `spesifikasi` text,
  `qty` double default NULL,
  `no` smallint(5) NOT NULL default '0',
  `unit` varchar(6) default NULL,
  `qty1` double default NULL,
  `price` double default '0',
  `val` double default '0',
  `nodsg` varchar(100) default NULL,
  `expired` date default NULL,
  PRIMARY KEY  (`sjr`,`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.sjrd: ~0 rows (approximately)
/*!40000 ALTER TABLE `sjrd` DISABLE KEYS */;
/*!40000 ALTER TABLE `sjrd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.spb
DROP TABLE IF EXISTS `spb`;
CREATE TABLE IF NOT EXISTS `spb` (
  `spb` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `duedate` datetime default NULL,
  `sub` varchar(15) default NULL,
  `shipper` varchar(100) default NULL,
  `remark` longtext,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL,
  `oms` varchar(15) NOT NULL default ' ',
  `station` int(11) default '0',
  `nopol` varchar(15) default NULL,
  `nosj` varchar(25) default NULL,
  `cpo` bit(1) default NULL,
  `withPO` bit(1) default '',
  `aprov` bit(1) NOT NULL default '\0',
  `delete` bit(1) NOT NULL default '\0',
  `sendgd` bit(1) NOT NULL,
  `nodoc` varchar(30) default ' ',
  `tgl_bc` datetime default NULL,
  `bsa` varchar(15) default ' ',
  PRIMARY KEY  (`spb`),
  KEY `period` (`period`),
  KEY `sub` (`sub`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.spb: ~0 rows (approximately)
/*!40000 ALTER TABLE `spb` DISABLE KEYS */;
/*!40000 ALTER TABLE `spb` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.spbd
DROP TABLE IF EXISTS `spbd`;
CREATE TABLE IF NOT EXISTS `spbd` (
  `spb` varchar(15) NOT NULL,
  `inv` varchar(15) default NULL,
  `loc` varchar(15) default NULL,
  `remark` varchar(100) default NULL,
  `spesifikasi` text,
  `qty` double default '0',
  `no` smallint(5) NOT NULL default '0',
  `unit` varchar(6) default NULL,
  `qty1` double default '0',
  `cct` varchar(15) default NULL,
  `qtygd` double default '0',
  `etd` longtext,
  `unitgd` varchar(6) default NULL,
  `qtytim` double default '0',
  `nodsg` varchar(50) default NULL,
  `expired` datetime default NULL,
  PRIMARY KEY  (`spb`,`no`),
  KEY `inv` (`inv`,`unit`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.spbd: ~0 rows (approximately)
/*!40000 ALTER TABLE `spbd` DISABLE KEYS */;
/*!40000 ALTER TABLE `spbd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.spd
DROP TABLE IF EXISTS `spd`;
CREATE TABLE IF NOT EXISTS `spd` (
  `spm` varchar(15) NOT NULL default ' ',
  `inv` varchar(15) NOT NULL,
  `loc` varchar(15) NOT NULL,
  `remark` varchar(100) default NULL,
  `spesifikasi` text,
  `qty` double NOT NULL default '0',
  `no` smallint(5) NOT NULL default '0',
  `unit` varchar(6) NOT NULL,
  `qty1` double NOT NULL default '0',
  `qtygudang` double NOT NULL default '0',
  `okl` varchar(15) NOT NULL,
  `cct` varchar(15) default NULL,
  `unitgudang` varchar(6) default NULL,
  `kgb` varchar(15) default NULL,
  `etd` longtext,
  `nodsg` varchar(50) default NULL,
  `mor` varchar(15) default NULL,
  `qtytim` double default '0',
  `expired` datetime default NULL,
  PRIMARY KEY  (`spm`,`no`),
  KEY `inv` (`okl`,`inv`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.spd: ~0 rows (approximately)
/*!40000 ALTER TABLE `spd` DISABLE KEYS */;
/*!40000 ALTER TABLE `spd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.spm
DROP TABLE IF EXISTS `spm`;
CREATE TABLE IF NOT EXISTS `spm` (
  `spm` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `sub` varchar(15) default NULL,
  `remark` longtext,
  `kodeglobal` varchar(50) default NULL,
  `totqtykemasan` double default '0',
  `totqty` double default '0',
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL,
  `nopol` varchar(15) default NULL,
  `okl_rms` varchar(15) default NULL,
  `angkutan` varchar(15) default NULL,
  `aprov` bit(1) NOT NULL default '\0',
  `group_` tinyint(4) NOT NULL,
  `sendgd` bit(1) default NULL,
  `delete` bit(1) NOT NULL default '\0',
  `cpo` bit(1) default '\0',
  `station` int(11) default '0',
  `nodoc` varchar(30) default '',
  `no_con` varchar(50) default ' ',
  `tgl_bc` datetime default NULL,
  `bsa` varchar(15) default ' ',
  PRIMARY KEY  (`spm`),
  KEY `subokl` (`sub`,`okl_rms`),
  KEY `periode` (`period`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.spm: ~0 rows (approximately)
/*!40000 ALTER TABLE `spm` DISABLE KEYS */;
/*!40000 ALTER TABLE `spm` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.spr
DROP TABLE IF EXISTS `spr`;
CREATE TABLE IF NOT EXISTS `spr` (
  `spr` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `duedate` datetime default NULL,
  `sub` varchar(15) default NULL,
  `shipper` varchar(100) default NULL,
  `remark` varchar(50) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL default '',
  `rsm` varchar(15) default NULL,
  `nopol` varchar(15) default NULL,
  `nosj` varchar(25) default NULL,
  `aprov` bit(1) NOT NULL default '\0',
  `delete` bit(1) NOT NULL default '\0',
  `nodoc` varchar(30) default ' ',
  `tgl_bc` datetime default NULL,
  `bsa` varchar(15) default ' ',
  PRIMARY KEY  (`spr`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.spr: ~0 rows (approximately)
/*!40000 ALTER TABLE `spr` DISABLE KEYS */;
/*!40000 ALTER TABLE `spr` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.sprd
DROP TABLE IF EXISTS `sprd`;
CREATE TABLE IF NOT EXISTS `sprd` (
  `spr` varchar(15) NOT NULL,
  `inv` varchar(15) NOT NULL,
  `loc` varchar(15) NOT NULL,
  `remark` varchar(200) default NULL,
  `qty` double NOT NULL default '0',
  `no` smallint(5) NOT NULL default '0',
  `unit` varchar(6) NOT NULL,
  `qty1` double NOT NULL default '0',
  `qtygd` double NOT NULL default '0',
  `etd` longtext,
  `unitgd` varchar(6) NOT NULL,
  `nodsg` varchar(50) NOT NULL,
  PRIMARY KEY  (`spr`,`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.sprd: ~0 rows (approximately)
/*!40000 ALTER TABLE `sprd` DISABLE KEYS */;
/*!40000 ALTER TABLE `sprd` ENABLE KEYS */;

-- Dumping structure for procedure wis_inventory.Sp_AnalisaPembelian
DROP PROCEDURE IF EXISTS `Sp_AnalisaPembelian`;
DELIMITER //
CREATE PROCEDURE `Sp_AnalisaPembelian`(pdatea datetime,pdatez datetime, pjenisa varchar(15), pjenisz varchar(15), Pinva varchar(15), Pinvz varchar(15) )
BEGIN
select jenis.name as materialgroup,inv.inv,inv.name,'' spec,inv.unit,ifnull(konversi.konversi,0) as konversi,inv.unit2 as unitbesar,
sum(if(dk='K',qty,0))/TIMESTAMPDIFF(MONTH,pdatea,adddate(pdatez,1)) as qtyout, sum(if(dk='D',qty,0)) as qtyin,sum(if(dk='D',round(val,2),0)) as val
from ind inner join inv on ind.inv=inv.inv inner join jenis on inv.jenis=jenis.jenis left outer join konversi on inv.unit2=konversi.unit and inv.inv=konversi.inv
where  date(ind.date) between pdatea and pdatez and inv.jenis between pjenisa and pjenisz and ind.inv between Pinva and Pinvz  and left(ind.inv,1) in ('1','2','3','6') group by ind.inv;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_ArusInventory
DROP PROCEDURE IF EXISTS `Sp_ArusInventory`;
DELIMITER //
CREATE PROCEDURE `Sp_ArusInventory`(Pdatea datetime, Pdatez datetime)
BEGIN
  select prq.prq,prclose,prq.dateneed,omd.name, omd.`close`,omd.dateneedpo,prq.date tglpr,prq.apdate,prq.inv,prq.remark,prq.qty1 qtypr,omd.oms,omd.date tglpo,omd.price,omd.cur, omd.qty1 qtypo,omd.unit,
  lpd.lph,lpd.date tgllpb,lpd.qty1 qtylpb,prq.po_it,omd.arrive, omd.person as userpur,prq.cct as pemesan,omd.ppn
  from (select prq.date,prq.apdate,prq.cct,prq.`close` prclose,prd.prq,prd.inv,prd.`no` as `no`,prd.remark,prd.qty1,prq.po_it,prq.arrive,prd.dateneed from prq,prd where prq.prq=prd.prq and prq.date between Pdatea and adddate(Pdatez,1)) prq
  left outer join (select oms.date,omd.oms,oms.person,sub.name,omd.prq,oms.`close`,omd.dateneed dateneedpo,omd.inv,omd.noprd,omd.remark,omd.qty1,omd.unit,omd.arrive,omd.price,oms.cur,oms.ppn from omd,oms,sub where omd.oms=oms.oms and oms.sub=sub.sub and oms.date>=pdatea) omd on prq.prq=omd.prq and prq.inv=omd.inv and prq.`no`=omd.noprd
  left outer join (select lph.date,lpd.lph,lph.oms,lpd.inv,lpd.remark,lpd.qty1 from lpd,lph where lpd.lph=lph.lph and lph.date>= pdatea) lpd on omd.oms=lpd.oms and omd.inv=lpd.inv and omd.remark=lpd.remark
  ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_ArusInventoryp
DROP PROCEDURE IF EXISTS `Sp_ArusInventoryp`;
DELIMITER //
CREATE PROCEDURE `Sp_ArusInventoryp`(Pdatea datetime, Pdatez datetime)
BEGIN
  select prq.prq,prclose,prq.dateneed,omd.name, omd.`close`,omd.dateneedpo,prq.date tglpr,prq.apdate,prq.inv,prq.remark,prq.qty1 qtypr,omd.oms,omd.date tglpo,omd.price,omd.cur, omd.qty1 qtypo,omd.unit,
  lpd.lph,lpd.date tgllpb,lpd.qty1 qtylpb,prq.po_it,omd.arrive, omd.person as userpur,prq.cct as pemesan,omd.ppn
  from (select prq.date,prq.apdate,prq.cct,prq.`close` prclose,prd.prq,prd.inv,prd.`no` as `no`,prd.remark,prd.qty1,prq.po_it,prq.arrive,prd.dateneed from prq,prd where prq.prq=prd.prq and prq.date < adddate(Pdatez,1)) prq
  right outer join (select oms.date,omd.oms,oms.person,sub.name,omd.prq,oms.`close`,omd.dateneed dateneedpo,omd.inv,omd.noprd,omd.remark,omd.qty1,omd.unit,omd.arrive,omd.price,oms.cur,oms.ppn from omd,oms,sub where omd.oms=oms.oms and oms.sub=sub.sub and oms.date between pdatea and adddate(Pdatez,1) and oms.group_=3) omd on prq.prq=omd.prq and prq.inv=omd.inv and prq.`no`=omd.noprd
  left outer join (select lph.date,lpd.lph,lph.oms,lpd.inv,lpd.remark,lpd.qty1 from lpd,lph where lpd.lph=lph.lph and lph.date>= pdatea) lpd on omd.oms=lpd.oms and omd.inv=lpd.inv and omd.remark=lpd.remark
  ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_BCBahan
DROP PROCEDURE IF EXISTS `Sp_BCBahan`;
DELIMITER //
CREATE PROCEDURE `Sp_BCBahan`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Pinva` varchar(15),
	IN `Pinvz` varchar(15)
)
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists TempAwal ;
create temporary table TempAwal (inv varchar(15),qlast double, vlast double,nodsg varchar(50));
insert into TempAwal
(
  select inv, sum(qlast) as qlast, sum(vlast) as vlast,nodsg
  from
  (
     select rin.inv, rin.qlast, rin.vlast,rin.nodsg
       from rin
      where rin.period=Pperiod and if(Pinva<>'' and Pinvz<>'', rin.inv between Pinva and Pinvz, 1) and (left(rin.inv,1)='1' or left(rin.inv,1)='2')
     union all
     select ind.inv, sum(qty*if(dk='D',1,-1)) as qlast , sum(val*if(dk='D',1,-1)) as vlast,ind.nodsg
       from ind
      where ind.period=Pperiod and ind.date < Pdatea
        and if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1) and (left(ind.inv,1)='1' or  left(ind.inv,1)='2')
      group by ind.inv, ind.nodsg
  ) as oawal group by inv,nodsg
);
select invname,inv,date,jurnal,'' rem, sum(s_awal) s_awal, sum(qdebet) qdebet, sum(qkredit) qkredit,
   sum(qadjust) qadjust, sum(qopn) selisih, max(unit) unit,  sum(s_awal) + sum(qdebet) - sum(qkredit) +  sum(qadjust) as sakhir,
   if(sum(qopn) <> 0 , sum(s_awal) + sum(qdebet) - sum(qkredit) +  sum(qadjust) + sum(qopn),0) as opname from
(
select inv.name as invname, TempAwal.inv, convert('' using latin1) as loc,
       STR_TO_DATE(Pdatea, '%Y/%m/%d') as date, convert('' using latin1) as jurnal,
       convert('BALANCE' using latin1) as rem,
       if(TempAwal.qlast >= 0 , TempAwal.qlast ,-TempAwal.qlast) as s_awal,
        0 as qdebet, 0 as qkredit,
       0 as qadjust, 0  as qopn,
       convert(' ' using latin1) as dk, inv.unit, 1 as urut,TempAwal.nodsg
       from TempAwal
       left outer join inv on TempAwal.inv=inv.inv
union all
select inv.name as invname, ind.inv, convert('' using latin1) as loc,
       ind.date as date, ind.jurnal as jurnal, ifnull(ind.rem,'') as rem, 0 as s_awal,
       if (ind.dk='D' and ind.subjurnal not in ('OPN','JIN') , ind.qty , 0) as qdebet,
       if (ind.dk='K' and ind.subjurnal not in ('OPN','JIN') , ind.qty , 0) as qkredit,
       if (ind.subjurnal='JIN' ,if(ind.dk='K', -ind.qty , ind.qty),0) as qadjust,
       if (ind.dk='D' and ind.subjurnal='OPN', ind.qty ,if (ind.dk='K' and ind.subjurnal='OPN',-ind.qty,0)) as qopn,
       ind.dk as dk, inv.unit, if (ind.subjurnal='OPN' , 2 , 1)  as urut,ind.nodsg
       from ind
       left outer join inv on ind.inv=inv.inv
       where (ind.date>=Pdatea and ind.date<adddate(Pdatez,1)) and
       if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1) and
      (left(ind.inv,1) = '1' or left(ind.inv,1) = '2') and left(ind.jurnal,3) in ('LPB','OPN','LPJ','JIN','BPP','SJL')
union all
select lpd.remark as invname,lpd.inv,lpd.loc,
       lpd.date,lpd.lph,'' as rem,0 as s_awal,
       lpd.qty as qdebet,0 as qkredit,0 as qadjust,0 as opn,
       'D' as dk,inv.unit,1 as urut,'' as nodsg
      from (select lpd.*,lph.oms,lph.date,lph.duedate, lph.spb,lph.sub,lph.doc from lpd,lph where lpd.lph=lph.lph and lph.duedate  >= pdatea and lph.duedate< adddate(pdatez,1)
        and lpd.inv between Pinva and PinvZ and lph.`delete`=0) lpd
      left outer join spb on lpd.spb=spb.spb
      left outer join sub on lpd.sub=sub.sub
      left outer join omd on lpd.oms=omd.oms and omd.inv=lpd.inv and omd.remark=lpd.remark
      left outer join oms on omd.oms=oms.oms
      left outer join inv on lpd.inv=inv.inv
      where ifnull(spb.nodoc,'') between '' and 'z'
      and if(Pinva<>'' and Pinvz<>'', lpd.inv between Pinva and Pinvz, 1)
      and left(lph,3)='LPJ'
union all
select lpd.remark as invname,lpd.inv,lpd.loc,
       lpd.date,lpd.lph,'' as rem,0 as s_awal,
       0 as qdebet,lpd.qty as qkredit,0 as qadjust,0 as opn,
       'D' as dk,inv.unit,1 as urut,'' as nodsg
      from (select lpd.*,lph.oms,lph.date,lph.duedate, lph.spb,lph.sub,lph.doc from lpd,lph where lpd.lph=lph.lph and lph.duedate  >= pdatea and lph.duedate< adddate(pdatez,1)
        and lpd.inv between Pinva and PinvZ and lph.`delete`=0) lpd
      left outer join spb on lpd.spb=spb.spb
      left outer join sub on lpd.sub=sub.sub
      left outer join omd on lpd.oms=omd.oms and omd.inv=lpd.inv and omd.remark=lpd.remark
      left outer join oms on omd.oms=oms.oms
      left outer join inv on lpd.inv=inv.inv
      where ifnull(spb.nodoc,'') between '' and 'z'
      and if(Pinva<>'' and Pinvz<>'', lpd.inv between Pinva and Pinvz, 1)
      and left(lph,3)='LPJ'
 
 
 
 
 
 
 
 
 
 
) as x group by inv
order by  inv;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_BCBahan1
DROP PROCEDURE IF EXISTS `Sp_BCBahan1`;
DELIMITER //
CREATE PROCEDURE `Sp_BCBahan1`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Pinva` varchar(15),
	IN `Pinvz` varchar(15)
)
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists TempAwal ;
create temporary table TempAwal (inv varchar(15),qlast double, vlast double,nodsg varchar(50));
insert into TempAwal
(
  select inv, sum(qlast) as qlast, sum(vlast) as vlast,nodsg
  from
  (
     select rin.inv, rin.qlast, rin.vlast,rin.nodsg
       from rin
      where rin.period=Pperiod and if(Pinva<>'' and Pinvz<>'', rin.inv between Pinva and Pinvz, 1) and left(rin.inv,1)='1'
     union all
     select ind.inv, sum(qty*if(dk='D',1,-1)) as qlast , sum(val*if(dk='D',1,-1)) as vlast,ind.nodsg
       from ind
      where ind.period=Pperiod and ind.date < Pdatea
        and if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1) and left(ind.inv,1)='1'
      group by ind.inv, ind.nodsg
  ) as oawal group by inv,nodsg
);
select invname,inv,date,jurnal,'' rem, sum(s_awal) s_awal, sum(qdebet) qdebet, sum(qkredit) qkredit,
   sum(qadjust) qadjust, sum(qopn) selisih, max(unit) unit,  sum(s_awal) + sum(qdebet) - sum(qkredit) +  sum(qadjust) as sakhir,
   if(sum(qopn) <> 0 , sum(s_awal) + sum(qdebet) - sum(qkredit) +  sum(qadjust) + sum(qopn),0) as opname from
(
select inv.name as invname, TempAwal.inv, convert('' using latin1) as loc,
       STR_TO_DATE(Pdatea, '%Y/%m/%d') as date, convert('' using latin1) as jurnal,
       convert('BALANCE' using latin1) as rem,
       if(TempAwal.qlast >= 0 , TempAwal.qlast ,-TempAwal.qlast) as s_awal,
        0 as qdebet, 0 as qkredit,
       0 as qadjust, 0  as qopn,
       convert(' ' using latin1) as dk, inv.unit, 1 as urut,TempAwal.nodsg
       from TempAwal
       left outer join inv on TempAwal.inv=inv.inv
union all
select inv.name as invname, ind.inv, convert('' using latin1) as loc,
       ind.date as date, ind.jurnal as jurnal, ifnull(ind.rem,'') as rem, 0 as s_awal,
       if (ind.dk='D' and ind.subjurnal<>'OPN' , ind.qty , 0) as qdebet,
       if (ind.dk='K' and ind.subjurnal<>'OPN' , ind.qty , 0) as qkredit,
       0 as qadjust,
       if (ind.dk='D' and ind.subjurnal='OPN', ind.qty ,if (ind.dk='K' and ind.subjurnal='OPN',-ind.qty,0)) as qopn,
       ind.dk as dk, inv.unit, if (ind.subjurnal='OPN' , 2 , 1)  as urut,ind.nodsg
       from ind
       left outer join inv on ind.inv=inv.inv
       where (ind.date>=Pdatea and ind.date<adddate(Pdatez,1)) and
       if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1) and
      left(ind.inv,1) = '1'
 
 
 
 
 
 
 
 
 
 
) as x group by inv
order by  inv;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_BCBahancoba
DROP PROCEDURE IF EXISTS `Sp_BCBahancoba`;
DELIMITER //
CREATE PROCEDURE `Sp_BCBahancoba`(Pdatea datetime,Pdatez datetime, Pinva varchar(15),Pinvz varchar(15))
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
select invname,inv,date,jurnal,'' rem, sum(s_awal) s_awal, sum(qdebet) qdebet, sum(qkredit) qkredit,
   sum(qadjust) qadjust, sum(qopn) selisih, max(unit) unit,  sum(s_awal) + sum(qdebet) - sum(qkredit) +  sum(qadjust) as sakhir,
   if(sum(qopn) <> 0 , sum(s_awal) + sum(qdebet) - sum(qkredit) +  sum(qadjust) + sum(qopn),0) as opname from
(
 select name as invname,inv,convert('' using latin1) as loc, date(Pdatea) as `date`, convert('' using latin1) as jurnal,
 convert('BALANCE' using latin1) as rem,
 sum(qlast) as s_awal,  0 as qdebet, 0 as qkredit,
       0 as qadjust, 0  as qopn,
       convert(' ' using latin1) as dk,unit,1 as urut,nodsg
  from
  (
     select rin.inv,inv.name, rin.qlast, rin.vlast,rin.nodsg,inv.unit2,inv.unit
       from rin left outer join inv on rin.inv=inv.inv
      where rin.period=Pperiod and (left(rin.inv,1)='1' or left(rin.inv,1)='2')
     union all
     select ind.inv,inv.name, qty*if(dk='D',1,-1) as qlast , val*if(dk='D',1,-1) as vlast,
     ind.nodsg,inv.unit2,inv.unit
       from ind left outer join inv on ind.inv=inv.inv
      where ind.period=Pperiod and ind.date < Pdatea   and (left(ind.inv,1)='1' or  left(ind.inv,1)='2')
  ) as oawal  where if(Pinva<>'' and Pinvz<>'', inv between Pinva and Pinvz, 1) group by inv,nodsg
  union all
select inv.name as invname, ind.inv, convert('' using latin1) as loc,
       ind.date as date, ind.jurnal as jurnal, ifnull(ind.rem,'') as rem, 0 as s_awal,
       if (ind.dk='D' and ind.subjurnal not in ('OPN','JIN') , ind.qty , 0) as qdebet,
       if (ind.dk='K' and ind.subjurnal not in ('OPN','JIN') , ind.qty , 0) as qkredit,
       if (ind.subjurnal='JIN' ,if(ind.dk='K', -ind.qty , ind.qty),0) as qadjust,
       if (ind.dk='D' and ind.subjurnal='OPN', ind.qty ,if (ind.dk='K' and ind.subjurnal='OPN',-ind.qty,0)) as qopn,
       ind.dk as dk, inv.unit, if (ind.subjurnal='OPN' , 2 , 1)  as urut,ind.nodsg
       from ind
       left outer join inv on ind.inv=inv.inv
       where (ind.date>=Pdatea and ind.date<adddate(Pdatez,1)) and
       if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1) and
      (left(ind.inv,1) = '1' or left(ind.inv,1) = '2') and left(ind.jurnal,3) in ('LPB','OPN','LPJ','JIN','BPP','SJL')
union all
select lpd.remark as invname,lpd.inv,lpd.loc,
       lpd.date,lpd.lph,'' as rem,0 as s_awal,
       lpd.qty as qdebet,0 as qkredit,0 as qadjust,0 as opn,
       'D' as dk,inv.unit,1 as urut,'' as nodsg
      from (select lpd.*,lph.oms,lph.date,lph.duedate, lph.spb,lph.sub,lph.doc from lpd,lph where lpd.lph=lph.lph and lph.duedate  >= pdatea and lph.duedate< adddate(pdatez,1)
        and lpd.inv between Pinva and PinvZ and lph.`delete`=0) lpd
      left outer join spb on lpd.spb=spb.spb
      left outer join sub on lpd.sub=sub.sub
      left outer join omd on lpd.oms=omd.oms and omd.inv=lpd.inv and omd.remark=lpd.remark
      left outer join oms on omd.oms=oms.oms
      left outer join inv on lpd.inv=inv.inv
      where ifnull(spb.nodoc,'') between '' and 'z'
      and if(Pinva<>'' and Pinvz<>'', lpd.inv between Pinva and Pinvz, 1)
      and left(lph,3)='LPJ'
union all
select lpd.remark as invname,lpd.inv,lpd.loc,
       lpd.date,lpd.lph,'' as rem,0 as s_awal,
       0 as qdebet,lpd.qty as qkredit,0 as qadjust,0 as opn,
       'D' as dk,inv.unit,1 as urut,'' as nodsg
      from (select lpd.*,lph.oms,lph.date,lph.duedate, lph.spb,lph.sub,lph.doc from lpd,lph where lpd.lph=lph.lph and lph.duedate  >= pdatea and lph.duedate< adddate(pdatez,1)
        and lpd.inv between Pinva and PinvZ and lph.`delete`=0) lpd
      left outer join spb on lpd.spb=spb.spb
      left outer join sub on lpd.sub=sub.sub
      left outer join omd on lpd.oms=omd.oms and omd.inv=lpd.inv and omd.remark=lpd.remark
      left outer join oms on omd.oms=oms.oms
      left outer join inv on lpd.inv=inv.inv
      where ifnull(spb.nodoc,'') between '' and 'z'
      and if(Pinva<>'' and Pinvz<>'', lpd.inv between Pinva and Pinvz, 1)
      and left(lph,3)='LPJ'
) as x group by inv
order by  inv;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_BCBahanweb
DROP PROCEDURE IF EXISTS `Sp_BCBahanweb`;
DELIMITER //
CREATE PROCEDURE `Sp_BCBahanweb`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Pinva` varchar(15),
	IN `Pinvz` varchar(15)
)
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists TempAwal ;
create temporary table TempAwal (inv varchar(15),qlast double, vlast double,nodsg varchar(50));
insert into TempAwal
(
  select inv, sum(qlast) as qlast, sum(vlast) as vlast,nodsg
  from
  (
     select rin.inv, rin.qlast, rin.vlast,rin.nodsg
       from rin
      where rin.period=Pperiod and if(Pinva<>'' and Pinvz<>'', rin.inv between Pinva and Pinvz, 1) and left(rin.inv,2)='11'
     union all
     select inv,sum(qty) as qlast, sum(val) val,'' as nodsg from  bcmasuk where lpbdate < Pdatea and month(lpbdate)=month(pdatea) and year(lpbdate)=year(pdatea)
       and if(Pinva<>'' and Pinvz<>'', bcmasuk.inv between Pinva and Pinvz, 1) and left(bcmasuk.inv,2)='11'
      group by bcmasuk.inv
  ) as oawal group by inv
);
select invname,inv,date,jurnal,'' rem, sum(s_awal) s_awal, sum(qdebet) qdebet, sum(qkredit) qkredit,
   sum(qadjust) qadjust, sum(qopn) selisih, max(unit) unit,  sum(s_awal) + sum(qdebet) - sum(qkredit) +  sum(qadjust) as sakhir,
   if(sum(qopn) <> 0 , sum(s_awal) + sum(qdebet) - sum(qkredit) +  sum(qadjust) + sum(qopn),0) as opname from
(
select inv.name as invname, TempAwal.inv, convert('' using latin1) as loc,
       STR_TO_DATE(Pdatea, '%Y/%m/%d') as date, convert('' using latin1) as jurnal,
       convert('BALANCE' using latin1) as rem,
       if(TempAwal.qlast >= 0 , TempAwal.qlast ,-TempAwal.qlast) as s_awal,
        0 as qdebet, 0 as qkredit,
       0 as qadjust, 0  as qopn,
       convert(' ' using latin1) as dk, inv.unit, 1 as urut,TempAwal.nodsg
       from TempAwal
       left outer join inv on TempAwal.inv=inv.inv
union all
select inv.name as invname, ind.inv, convert('' using latin1) as loc,
       ind.date as date, ind.jurnal as jurnal, ifnull(ind.rem,'') as rem, 0 as s_awal,
       if (ind.dk='D' and ind.subjurnal in ('LHP') , ind.qty , 0)  as qdebet,
       if (ind.dk='K' and ind.subjurnal not in ('OPN','JIN') , ind.qty , 0) as qkredit,
       if (ind.subjurnal='JIN' ,if(ind.dk='K', -ind.qty , ind.qty),0) as qadjust,
       if (ind.dk='D' and ind.subjurnal='OPN', ind.qty ,if (ind.dk='K' and ind.subjurnal='OPN',-ind.qty,0)) as qopn,
       ind.dk as dk, inv.unit, if (ind.subjurnal='OPN' , 2 , 1)  as urut,ind.nodsg
       from ind
       left outer join inv on ind.inv=inv.inv
       where (ind.date>=Pdatea and ind.date<adddate(Pdatez,1)) and
       if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1) and
      left(ind.inv,2) = '11' and left(ind.jurnal,3) in ('OPN','JIN','BPP','SJL','LHP')
union all
select bcmasuk.remark as invname,bcmasuk.inv,'' as loc,
       bcmasuk.lpbdate,bcmasuk.lpb,'' as rem,0 as s_awal,
       0 as qdebet,bcmasuk.qty as qkredit,0 as qadjust,0 as opn,
       'D' as dk,bcmasuk.unit,1 as urut,'' as nodsg
      from bcmasuk
      where bcmasuk.nodoc between '' and 'z'
      and if(Pinva<>'' and Pinvz<>'', bcmasuk.inv between Pinva and Pinvz, 1)
      and lpbdate >= Pdatea and lpbdate < adddate(Pdatez,1) and left(bcmasuk.lpb,3)='LPJ' and
      left(bcmasuk.inv,2) = '11'
 union all
select bcmasuk.remark as invname,bcmasuk.inv,'' as loc,
       bcmasuk.lpbdate,bcmasuk.lpb,'' as rem,0 as s_awal,
       bcmasuk.qty as qdebet,0 as qkredit,0 as qadjust,0 as opn,
       'D' as dk,bcmasuk.unit,1 as urut,'' as nodsg
      from bcmasuk
      where bcmasuk.nodoc between '' and 'z'
      and if(Pinva<>'' and Pinvz<>'', bcmasuk.inv between Pinva and Pinvz, 1)
      and lpbdate >= Pdatea and lpbdate < adddate(Pdatez,1) and left(bcmasuk.inv,2) = '11'
) as x group by inv
order by  inv;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_BCBrgJadi
DROP PROCEDURE IF EXISTS `Sp_BCBrgJadi`;
DELIMITER //
CREATE PROCEDURE `Sp_BCBrgJadi`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Pinva` varchar(15),
	IN `Pinvz` varchar(15)
)
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists TempAwal ;
create temporary table TempAwal (inv varchar(15),qlast double, vlast double,nodsg varchar(50));
insert into TempAwal
(
  select inv, sum(qlast) as qlast, sum(vlast) as vlast,nodsg
  from
  (
     select rin.inv, rin.qlast, rin.vlast,rin.nodsg
       from rin
      where rin.period=Pperiod and if(Pinva<>'' and Pinvz<>'', rin.inv between Pinva and Pinvz, 1) and left(rin.inv,1)='5'
     union all
     select ind.inv, sum(qty*if(dk='D',1,-1)) as qlast , sum(val*if(dk='D',1,-1)) as vlast,ind.nodsg
       from ind
      where ind.period=Pperiod and ind.date < Pdatea
        and if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1) and left(ind.inv,1)='5'
      group by ind.inv, ind.nodsg
  ) as oawal group by inv,nodsg
);
select invname,inv,date,jurnal,'' rem, sum(s_awal) s_awal, sum(qdebet) qdebet, sum(qkredit) qkredit,
   sum(qadjust) qadjust, sum(ifnull(qopn,0)) selisih, max(unit) unit,  sum(s_awal) + sum(qdebet) - sum(qkredit) +  sum(qadjust) as sakhir,
   if(sum(ifnull(round(qopn,2),0)) <> 0 , sum(s_awal) + sum(qdebet) - sum(qkredit) +  sum(qadjust) + sum(ifnull(qopn,0)),0) as opname from
(
select inv.name as invname, TempAwal.inv, convert('' using latin1) as loc,
       STR_TO_DATE(Pdatea, '%Y/%m/%d') as date, convert('' using latin1) as jurnal,
       convert('BALANCE' using latin1) as rem,
       sum(qlast) as s_awal,
        0 as qdebet, 0 as qkredit,
       0 as qadjust, 0  as qopn,
       convert(' ' using latin1) as dk, inv.unit, 1 as urut,TempAwal.nodsg
       from TempAwal
       left outer join inv on TempAwal.inv=inv.inv
union all
select inv.name as invname, ind.inv, convert('' using latin1) as loc,
       ind.date as date, ind.jurnal as jurnal, ifnull(ind.rem,'') as rem, 0 as s_awal,
       if (ind.dk='D' and ind.subjurnal not in ('OPN','JIN','BPP','RKA') , ind.qty , 0) as qdebet,
       if (ind.dk='K' and ind.subjurnal in ('OPN','JIN','BPP','RKA','SJL') , ind.qty , 0) as qkredit,
       if (ind.subjurnal in ('JIN','BPP','RKA') ,if(ind.dk='K', -ind.qty , ind.qty),0) as qadjust,
       if (ind.dk='D' and ind.subjurnal='OPN', ind.qty ,if (ind.dk='K' and ind.subjurnal='OPN',-ind.qty,0)) as qopn,
       ind.dk as dk, inv.unit, if (ind.subjurnal='OPN' , 2 , 1)  as urut,ind.nodsg
       from ind
       left outer join inv on ind.inv=inv.inv
       where (ind.date>=Pdatea and ind.date<adddate(Pdatez,1)) and
       if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1) and
      left(ind.inv,1) = '5' and left(ind.jurnal,3) in ('LHP','OPN','JIN','BPP','SJL','LPR','LPB')
union all
select sjrd.remark, sjrd.inv,'' as loc,sjr.date,sjr.sjr,'' as rem,0 as awal,if (inv='911010001',sjrd.qty,0) as qdebet,sjrd.qty as qkredit,0 qadjust,0 opn,'K' dk,sjrd.unit,1 urut, '' as dsg
from sjr left outer join sjrd on sjr.sjr=sjrd.sjr
left outer join sub on sjr.sub=sub.sub
where ifnull(sjr.doc,'') between '' and 'z'
and sjr.tgl_bc >= pdatea and sjr.tgl_bc< adddate(pdatez,1)
and left(sjr.sjr,3)='SJT' and if(Pinva<>'' and Pinvz<>'', sjrd.inv between Pinva and Pinvz, 1)
) as x group by inv
order by  inv;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_BCBrgJadicoba
DROP PROCEDURE IF EXISTS `Sp_BCBrgJadicoba`;
DELIMITER //
CREATE PROCEDURE `Sp_BCBrgJadicoba`(Pdatea datetime,Pdatez datetime, Pinva varchar(15),Pinvz varchar(15))
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
select invname,inv,date,jurnal,'' rem, sum(s_awal) s_awal, sum(qdebet) qdebet, sum(qkredit) qkredit,
   sum(qadjust) qadjust, sum(ifnull(qopn,0)) selisih, max(unit) unit,  sum(s_awal) + sum(qdebet) - sum(qkredit) +  sum(qadjust) as sakhir,
   if(sum(ifnull(round(qopn,2),0)) <> 0 , sum(s_awal) + sum(qdebet) - sum(qkredit) +  sum(qadjust) + sum(ifnull(qopn,0)),0) as opname from
(
select name as invname,inv,convert('' using latin1) as loc, date(Pdatea) as `date`, convert('' using latin1) as jurnal,
 convert('BALANCE' using latin1) as rem, sum(qlast) as s_awal,  0 as qdebet, 0 as qkredit,
       0 as qadjust, 0  as qopn,  convert(' ' using latin1) as dk,unit,1 as urut,nodsg
  from
  (
     select rin.inv,inv.name, rin.qlast, rin.vlast,rin.nodsg,inv.unit2,inv.unit
       from rin left outer join inv on rin.inv=inv.inv
      where rin.period=Pperiod and left(rin.inv,1)='4'
     union all
     select ind.inv,inv.name, qty*if(dk='D',1,-1) as qlast , val*if(dk='D',1,-1) as vlast,
     ind.nodsg,inv.unit2,inv.unit
       from ind left outer join inv on ind.inv=inv.inv
      where ind.period=Pperiod and ind.date < Pdatea   and left(ind.inv,1)='4'
  ) as oawal
  where if(Pinva<>'' and Pinvz<>'', inv between Pinva and Pinvz, 1 ) group by inv
  union all
select inv.name as invname, ind.inv, convert('' using latin1) as loc,
       ind.date as date, ind.jurnal as jurnal, ifnull(ind.rem,'') as rem, 0 as s_awal,
       if (ind.dk='D' and ind.subjurnal not in ('OPN','JIN','BPP','RKA') , ind.qty , 0) as qdebet,
       if (ind.dk='K' and ind.subjurnal not in ('OPN','JIN','BPP','RKA') , ind.qty , 0) as qkredit,
       if (ind.subjurnal in ('JIN','BPP','RKA') ,if(ind.dk='K', -ind.qty , ind.qty),0) as qadjust,
       if (ind.dk='D' and ind.subjurnal='OPN', ind.qty ,if (ind.dk='K' and ind.subjurnal='OPN',-ind.qty,0)) as qopn,
       ind.dk as dk, inv.unit, if (ind.subjurnal='OPN' , 2 , 1)  as urut,ind.nodsg
       from ind
       left outer join inv on ind.inv=inv.inv
       where (ind.date>=Pdatea and ind.date<adddate(Pdatez,1)) and
       if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1) and
      left(ind.inv,1) = '4' and left(ind.jurnal,3) in ('LHP','OPN','JIN','BPP','SJL','LPR')
) as x group by inv
order by  inv;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_BCBrgJadiweb
DROP PROCEDURE IF EXISTS `Sp_BCBrgJadiweb`;
DELIMITER //
CREATE PROCEDURE `Sp_BCBrgJadiweb`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Pinva` varchar(15),
	IN `Pinvz` varchar(15)
)
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists TempAwal ;
create temporary table TempAwal (inv varchar(15),qlast double, vlast double,nodsg varchar(50));
insert into TempAwal
(
  select inv, sum(qlast) as qlast, sum(vlast) as vlast,nodsg
  from
  (
     select rin.inv, rin.qlast, rin.vlast,rin.nodsg
       from rin
      where rin.period=Pperiod and if(Pinva<>'' and Pinvz<>'', rin.inv between Pinva and Pinvz, 1) and left(rin.inv,1)='5'
     union all
      select inv,sum(qty) as qlast, sum(val) val,'' as nodsg from  bckeluar where sjhdate < Pdatea and month(sjhdate)=month(pdatea) and year(sjhdate)=year(pdatea)
       and if(Pinva<>'' and Pinvz<>'', bckeluar.inv between Pinva and Pinvz, 1) and left(bckeluar.inv,1)='5'
      group by bckeluar.inv
  ) as oawal group by inv
);
select invname,inv,date,jurnal,'' rem, sum(s_awal) s_awal, sum(qdebet) qdebet, sum(qkredit) qkredit,
   sum(qadjust) qadjust, sum(ifnull(qopn,0)) selisih, max(unit) unit,  sum(s_awal) + sum(qdebet) - sum(qkredit) +  sum(qadjust) as sakhir,
   if(sum(ifnull(round(qopn,2),0)) <> 0 , sum(s_awal) + sum(qdebet) - sum(qkredit) +  sum(qadjust) + sum(ifnull(qopn,0)),0) as opname from
(
select inv.name as invname, TempAwal.inv, convert('' using latin1) as loc,
       STR_TO_DATE(Pdatea, '%Y/%m/%d') as date, convert('' using latin1) as jurnal,
       convert('BALANCE' using latin1) as rem,
       if(TempAwal.qlast >= 0 , TempAwal.qlast ,-TempAwal.qlast) as s_awal,
        0 as qdebet, 0 as qkredit,
       0 as qadjust, 0  as qopn,
       convert(' ' using latin1) as dk, inv.unit, 1 as urut,TempAwal.nodsg
       from TempAwal
       left outer join inv on TempAwal.inv=inv.inv
union all
select inv.name as invname, ind.inv, convert('' using latin1) as loc,
       ind.date as date, ind.jurnal as jurnal, ifnull(ind.rem,'') as rem, 0 as s_awal,
       if (ind.dk='D' and ind.subjurnal not in ('OPN','JIN','BPP','RKA') , ind.qty , 0) as qdebet,
       if (ind.dk='K' and ind.subjurnal not in ('OPN','JIN','BPP','RKA') , ind.qty , 0) as qkredit,
       if (ind.subjurnal in ('JIN','BPP','RKA') ,if(ind.dk='K', -ind.qty , ind.qty),0) as qadjust,
       if (ind.dk='D' and ind.subjurnal='OPN', ind.qty ,if (ind.dk='K' and ind.subjurnal='OPN',-ind.qty,0)) as qopn,
       ind.dk as dk, inv.unit, if (ind.subjurnal='OPN' , 2 , 1)  as urut,ind.nodsg
       from ind
       left outer join inv on ind.inv=inv.inv
       where (ind.date>=Pdatea and ind.date<adddate(Pdatez,1)) and
       if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1) and
      left(ind.inv,1) = '5' and left(ind.jurnal,3) in ('LHP','OPN','JIN','BPP','SJL','LPR','LPB')   
    
union all
select bckeluar.remark as invname,bckeluar.inv,'' as loc,
       bckeluar.sjhdate,bckeluar.sjh,'' as rem,0 as s_awal,
       if (inv='911010001',bckeluar.qty,0) as qdebet,bckeluar.qty as qkredit,0 as qadjust,0 as opn,
       'K' as dk,bckeluar.unit,1 as urut,'' as nodsg
      from bckeluar
      where bckeluar.nodoc between '' and 'z'
      and if(Pinva<>'' and Pinvz<>'', bckeluar.inv between Pinva and Pinvz, 1)
      and sjhdate >= Pdatea and sjhdate < adddate(Pdatez,1) and (left(bckeluar.inv,1) = '5' or inv='911010001')
) as x group by inv
order by  inv;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_BCMesin
DROP PROCEDURE IF EXISTS `Sp_BCMesin`;
DELIMITER //
CREATE PROCEDURE `Sp_BCMesin`(Pdatea datetime,Pdatez datetime, Pinva varchar(15),Pinvz varchar(15))
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
select akt,name,unit,tglbeli,tgljual,jumlah,
if(tglbeli<pdatea, if(tgljual<=tglbeli and tglbeli<pdatea,jumlah,0),0) as saldoawal,remark,
if(tglbeli>=pdatea,jumlah,0) as masuk,
if(tglbeli<tgljual and tglbeli>=pdatea,jumlah,0) as keluar
from akt where tglbeli <= pdatez and jumlah>0 and akt.acc not in ('12030101','12030102','12030104')
and akt.akt between Pinva and Pinvz;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_BCPengeluaranSisa
DROP PROCEDURE IF EXISTS `Sp_BCPengeluaranSisa`;
DELIMITER //
CREATE PROCEDURE `Sp_BCPengeluaranSisa`(
	IN `Pdatea` DATE,
	IN `Pdatez` DATE
)
SELECT @num := @num + 1 AS no,inv.inv,inv.name,inv.unit,SUM(sjd.qty1) AS jumlah,okd.price AS harga,sjd.qty1*okd.price AS total,sjh.date as tanggal
FROM sjh,sjd,okd,inv left outer JOIN (SELECT @num :=0) AS n ON 1=1
WHERE sjh.sjh = sjd.sjh AND sjd.okl = okd.okl AND sjd.inv = inv.inv AND
sjh.date BETWEEN Pdatea AND Pdatez AND (inv.inv = '1011020083' OR inv.inv = '711030006')
GROUP BY date(sjh.date),inv.inv
order by date(sjh.date)//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_BCWIP
DROP PROCEDURE IF EXISTS `Sp_BCWIP`;
DELIMITER //
CREATE PROCEDURE `Sp_BCWIP`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime
)
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists TempAwal ;
create temporary table TempAwal (inv varchar(15),qlast double, vlast double,nodsg varchar(50));
insert into TempAwal
(
  select inv, sum(qlast) as qlast, sum(vlast) as vlast,nodsg
  from
  (
     select rin.inv, rin.qlast, rin.vlast,rin.nodsg
       from rin
      where rin.period=Pperiod and 
      left(rin.inv,1) ='4'
     union all
     select ind.inv, sum(qty*if(dk='D',1,-1)) as qlast , sum(val*if(dk='D',1,-1)) as vlast,ind.nodsg
       from ind
      where ind.period=Pperiod and ind.date < Pdatea
       and left(ind.inv,1) ='4'
     
      group by ind.inv, trim(ind.nodsg)
  ) as oawal group by inv,trim(nodsg)
);
select x.inv as cct,invname as name, round((sum(s_awal) + sum(qdebet) - sum(qkredit)),2) as qwipbin,x.inv,x.unit,
round((sum(s_awal) + sum(qdebet) - sum(qkredit)),2)/konversi.konversi as qty2
 from
(
select inv.name as invname, TempAwal.inv, convert('' using latin1) as loc,inv.unit2,
       STR_TO_DATE(Pdatea, '%Y/%m/%d') as date, convert('' using latin1) as jurnal,
       convert('BALANCE' using latin1) as rem,
       if(TempAwal.qlast >= 0 , TempAwal.qlast ,-TempAwal.qlast) as s_awal,
        0 as qdebet, 0 as qkredit,
       0 as qadjust, 0  as qopn,
       convert(' ' using latin1) as dk, inv.unit, 1 as urut,TempAwal.nodsg
       from TempAwal
       left outer join inv on TempAwal.inv=inv.inv
union all
select inv.name as invname, ind.inv, convert('' using latin1) as loc,inv.unit2,
       ind.date as date, ind.jurnal as jurnal, ifnull(ind.rem,'') as rem, 0 as s_awal,
       if (ind.dk='D', ind.qty , 0) as qdebet,
       if (ind.dk='K', ind.qty , 0) as qkredit,
       0 as qadjust,
       if (ind.dk='D' and ind.subjurnal='OPN', ind.qty ,if (ind.dk='K' and ind.subjurnal='OPN',-ind.qty,0)) as qopn,
       ind.dk as dk, inv.unit, if (ind.subjurnal='OPN' , 2 , 1)  as urut,ind.nodsg
       from ind
       left outer join inv on ind.inv=inv.inv
       where (ind.date>=Pdatea and ind.date<adddate(Pdatez,1))
       and  left(ind.inv,1) = '4'
) as x left outer join konversi on x.inv=konversi.inv and konversi.unit=x.unit2
where left(x.inv,2) != 10 and left(x.inv,2) != 91
group by inv
order by  inv;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_BCWIPcoba
DROP PROCEDURE IF EXISTS `Sp_BCWIPcoba`;
DELIMITER //
CREATE PROCEDURE `Sp_BCWIPcoba`(Pdatea datetime,Pdatez datetime)
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
select @num := @num + 1 AS no,tmp.* from (
select  x.inv as cct,invname as name, round((sum(s_awal) + sum(qdebet) - sum(qkredit)),2) as qwipbin,x.inv,x.unit,
round((sum(s_awal) + sum(qdebet) - sum(qkredit)),2)/konversi.konversi as qty2
 from
(
 select name as invname,inv,convert('' using latin1) as loc,unit2,
 date(Pdatea) as `date`, convert('' using latin1) as jurnal,
 convert('BALANCE' using latin1) as rem,
 if(sum(qlast)>=0,qlast,-qlast) as s_awal,  0 as qdebet, 0 as qkredit,
       0 as qadjust, 0  as qopn,
       convert(' ' using latin1) as dk,unit,1 as urut,nodsg
  from
  (
     select rin.inv,inv.name, rin.qlast, rin.vlast,rin.nodsg,inv.unit2,inv.unit
       from rin left outer join inv on rin.inv=inv.inv
      where rin.period=Pperiod and
      left(rin.inv,1)<='4' and left(rin.loc,2) like 'GP%'
     union all
     select ind.inv,inv.name, sum(qty*if(dk='D',1,-1)) as qlast , sum(val*if(dk='D',1,-1)) as vlast,
     ind.nodsg,inv.unit2,inv.unit
       from ind left outer join inv on ind.inv=inv.inv
      where ind.period=Pperiod and ind.date < Pdatea
       and left(ind.inv,1)<='4' and left(ind.loc,2) like 'GP%'
      group by ind.inv, ind.nodsg
  ) as oawal  group by inv,nodsg
  union all
select inv.name as invname, ind.inv, convert('' using latin1) as loc,inv.unit2,
       ind.date as date, ind.jurnal as jurnal, ifnull(ind.rem,'') as rem, 0 as s_awal,
       if (ind.dk='D' and left(ind.loc,2) like 'GP%' , ind.qty , 0) as qdebet,
       if (ind.dk='K' and left(ind.loc,2) like 'GP%' , ind.qty , 0) as qkredit,
       0 as qadjust,
       if (ind.dk='D' and ind.subjurnal='OPN', ind.qty ,if (ind.dk='K' and ind.subjurnal='OPN',-ind.qty,0)) as qopn,
       ind.dk as dk, inv.unit, if (ind.subjurnal='OPN' , 2 , 1)  as urut,ind.nodsg
       from ind
       left outer join inv on ind.inv=inv.inv
       where (ind.date>=Pdatea and ind.date<adddate(Pdatez,1))
       and  left(ind.inv,1) <= '4'
) as x left outer join konversi on x.inv=konversi.inv and konversi.unit=x.unit2 and konversi.unit in ('POUCH','JRG','DOS','BOTOL','BOX')
group by inv
order by  inv) as tmp left outer JOIN (SELECT @num :=0) AS n ON 1=1 ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_BCwipWeb
DROP PROCEDURE IF EXISTS `Sp_BCwipWeb`;
DELIMITER //
CREATE PROCEDURE `Sp_BCwipWeb`(Pdatea datetime,Pdatez datetime, Pinva varchar(15),Pinvz varchar(15))
BEGIN
select invname,inv,sum(qkredit) qkredit
 from
(
select inv.name as invname, ind.inv,
       if (ind.dk='K' and ind.subjurnal not in ('OPN','JIN') , ind.qty , 0) as qkredit
       from ind
       left outer join inv on ind.inv=inv.inv
       where (ind.date>=Pdatea and ind.date<adddate(Pdatez,1)) and
       if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1) and
      (left(ind.inv,1) = '1' or left(ind.inv,1) = '2') and left(ind.jurnal,3) in ('OPN','JIN','BPP','SJL','LHP')
      and ind.inv in (select bahan from twip)
union all
select bcmasuk.remark as invname,bcmasuk.inv,
       bcmasuk.qty as qkredit
      from bcmasuk
      where bcmasuk.nodoc between '' and 'z'
      and if(Pinva<>'' and Pinvz<>'', bcmasuk.inv between Pinva and Pinvz, 1)
      and lpbdate >= Pdatea and lpbdate < adddate(Pdatez,1) and left(bcmasuk.lpb,3)='LPJ' and
      (left(bcmasuk.inv,1) = '1' or left(bcmasuk.inv,1) = '2')  and bcmasuk.inv in (select bahan from twip)
union all
select inv.name as invname, twip.bahan as inv,
       if (ind.dk='D' and ind.subjurnal not in ('OPN','JIN','BPP','RKA','LPB') , -ind.qty , 0) as qdebet
       from ind left outer join twip on ind.inv= twip.barangjadi
       left outer join inv on twip.bahan=inv.inv
       where (ind.date>=Pdatea and ind.date<adddate(Pdatez,1)) and
       if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1) and
       left(ind.inv,1) = '4' and left(ind.jurnal,3) in ('LHP') and
       ind.inv in (select barangjadi from twip) and
       ind.jurnal  not in (select lhp from lhp where lhp.cct='111111')
) as x group by inv
order by  inv;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_BC_keluarWeB
DROP PROCEDURE IF EXISTS `sp_BC_keluarWeB`;
DELIMITER //
CREATE PROCEDURE `sp_BC_keluarWeB`(pdatea datetime,pdatez datetime,Psuba char(15),PsubZ char(15),Pinva char(15),PinvZ char(15),Pdoca char(15),PdocZ char(15),Pjnsa char(15),Pjnsz char(15))
BEGIN
replace into bckeluar
select * from (
select ifnull(docpd.jnsp,'') as jenis,ifnull(docpd.no_bc,'') as nodoc,ifnull(date_format(docpd.datedoc,'%d-%m-%Y'),'') as datedoc,
sjh.sjh as sjh, ifnull(spm.tgl_bc,sjh.date) sjhdate,sjd.qty as qty, sjd.inv,sjd.remark,sjd.qty1,inv.unit,Ifnull(sjd.val,0)*ifnull(okl.kurs,1) as val,
sub.name as supplier,docpd.form as form,sjd.loc,sub.sub
from spm inner join sjh on spm.spm=sjh.spm left outer join sjd on sjh.sjh=sjd.sjh left outer join inv on sjd.inv=inv.inv
left outer join (select docp.docp,docp.jnsp,docp.oms,docpd.nodoc,docpd.datedoc,docpd.no_bc,docp.form from docpd,docp where docp.docp=docpd.docp ) docpd on docpd.nodoc=spm.nodoc and sjd.okl=docpd.oms
left outer join okl on sjd.okl=okl.okl  left outer join sub on sjh.sub=sub.sub 
where ifnull(spm.nodoc,'') between '' and 'z'
and spm.date >= pdatea and spm.date< adddate(pdatez,1)
and spm.sub between Psuba and PsubZ
union all
select ifnull(sjr.nopo,'') as jenis,ifnull(sjr.doc,'') as nodoc,ifnull(date_format(sjr.bcdate,'%d-%m-%Y'),'') as datedoc,
sjr.sjr as sjh, ifnull(sjr.tgl_bc,sjr.date) as sjrdate,sjrd.qty as qty, sjrd.inv,sjrd.remark,sjrd.qty1,sjrd.unit,(select if(left(sjr.sjr,3)='SJT',0,ifnull(ind.val,0)) from ind where jurnal=sjr.sjr and inv=sjrd.inv limit 1)  as val,
sub.name as supplier, '' as form,sjrd.loc,sub.sub
from sjr left outer join sjrd on sjr.sjr=sjrd.sjr
left outer join sub on sjr.sub=sub.sub
where ifnull(sjr.doc,'') between '' and 'z'
and sjr.date >= pdatea and sjr.date< adddate(pdatez,1)
and sjr.sub between Psuba and PsubZ and (left(sjr.sjr,3)='SJT' or left(sjr.sjr,3)='SJR')
) as x
where jenis between Pjnsa and Pjnsz and sjh<>'' and inv between Pinva and PinvZ
and trim(nodoc) between trim(Pdoca) and trim(PdocZ) and trim(nodoc)<>'' 
order by sjhdate,nodoc,sjh;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_BC_masukWeB
DROP PROCEDURE IF EXISTS `sp_BC_masukWeB`;
DELIMITER //
CREATE PROCEDURE `sp_BC_masukWeB`(pdatea datetime,pdatez datetime,Psuba char(15),PsubZ char(15),Pinva char(15),PinvZ char(15),Pdoca char(15),PdocZ char(15),Pjnsa char(15),Pjnsz char(15))
BEGIN
replace into bcmasuk
select * from (
select ifnull(docpd.jnsp,'') as jenis,ifnull(docpd.no_bc,spb.nodoc) as nodoc,ifnull(date_format(datedoc,'%d-%m-%Y'),'') as datedoc,lpd.lph as lpb, ifnull(spb.tgl_bc,lpd.date) lpbdate,
sub.name as supplier,lpd.inv,lpd.remark,lpd.qty1 as qty,lpd.unit,(omd.price)*lpd.qty*oms.kurs as val,sub.sub
from (select lpd.*,lph.oms,lph.date,lph.spb,lph.sub,lph.doc from lpd,lph where lpd.lph=lph.lph and lph.date  >= pdatea and lph.date< adddate(pdatez,1)  and lph.sub between Psuba and PsubZ and lpd.inv between Pinva and PinvZ and lph.`delete`=0) lpd
left outer join spb on lpd.spb=spb.spb
left outer join (select docpd.*,docp.jnsp,docp.oms from docpd,docp where docp.docp=docpd.docp and docpd.nodoc<>'') as docpd on trim(spb.nodoc)=trim(docpd.nodoc) and spb.oms=docpd.oms
left outer join sub on lpd.sub=sub.sub
left outer join (select * from oms_in) omd on lpd.oms=omd.oms and omd.inv=lpd.inv and omd.remark=lpd.remark
left outer join oms on omd.oms=oms.oms
where ifnull(spb.nodoc,'') between '' and 'z'
and if(trim(pjnsa)='' and trim(pjnsz)='ZZZZZZZ',1,ifnull(docpd.jnsp,'') between Pjnsa and Pjnsz )
and lpd.sub between Psuba and PsubZ and left(lph,3)='LPB'
union all
select ifnull(lpd.spb,'') as jenis,ifnull(doc,'') as nodoc,ifnull(date_format(lpd.duedate,'%d-%m-%Y'),'') as datedoc,lpd.lph as lpb, ifnull(lpd.tgl_bc,lpd.date) lpbdate,
sub.name as supplier,lpd.inv,lpd.remark,lpd.qty1 as qty,lpd.unit,(omd.val/omd.qty)*lpd.qty*oms.kurs as val,sub.sub
from (select lpd.*,lph.tgl_bc,lph.oms,lph.date,lph.duedate, lph.spb,lph.sub,lph.doc from lpd,lph where lpd.lph=lph.lph and lph.tgl_bc  >= pdatea and lph.tgl_bc< adddate(pdatez,1)  and lph.sub between Psuba and PsubZ and lpd.inv between Pinva and PinvZ and lph.`delete`=0) lpd
left outer join spb on lpd.spb=spb.spb
left outer join sub on lpd.sub=sub.sub
left outer join omd on lpd.oms=omd.oms and omd.inv=lpd.inv and omd.remark=lpd.remark
left outer join oms on omd.oms=oms.oms
where ifnull(spb.nodoc,'') between '' and 'z'
and if(trim(pjnsa)='' and trim(pjnsz)='ZZZZZZZ',1,lpd.spb between Pjnsa and Pjnsz)
and lpd.sub between Psuba and PsubZ and left(lph,3)='LPJ'
union all
select ifnull(rka.jnsdoc,'') as jenis,ifnull(rka.doc,'') as nodoc,ifnull(date_format(rka.duedate,'%d-%m-%Y'),'') as datedoc,rka.rka as lpb, ifnull(rka.tgl_bc,rka.date) lpbdate,
sub.name as supplier,rkb.inv,rkb.remark,rkb.qty1 as qty,rkb.unit,(select ifnull(price,0) from sjd where sjh=rka.rsm and price>0)*rkb.qty1 as val,sub.sub
from rka left outer join rkb on rkb.rka=rka.rka
left outer join sub on rka.sub=sub.sub
where ifnull(rka.doc,'') between '' and 'z'
and if(trim(pjnsa)='' and trim(pjnsz)='ZZZZZZZ',1,rka.jnsdoc between Pjnsa and Pjnsz)
and rka.sub between Psuba and PsubZ
and rka.tgl_bc >= pdatea and rka.tgl_bc < adddate(pdatez,1)  and rka.`delete`=0 and rka.date < 20160201
union all
select ifnull(rka.jnsdoc,'') as jenis,ifnull(rka.doc,'') as nodoc,ifnull(date_format(rka.duedate,'%d-%m-%Y'),'') as datedoc,rka.rka as lpb, ifnull(rka.tgl_bc,rka.date) lpbdate,
sub.name as supplier,rkb.inv,rkb.remark,rkb.qty1 as qty,rkb.unit,(select ifnull(price,0)*if(rsm.kurs=0,1,ifnull(rsm.kurs,1)) from rsmd left outer join rsm on rsmd.rsm=rsm.rsm
 where rsmd.rsm=rka.rsm and price>0 and rsmd.inv=rkb.inv)*rkb.qty1 as val , sub.sub
from rka left outer join rkb on rkb.rka=rka.rka
left outer join sub on rka.sub=sub.sub
where ifnull(rka.doc,'') between '' and 'z'
and if(trim(pjnsa)='' and trim(pjnsz)='ZZZZZZZ',1,rka.jnsdoc between Pjnsa and Pjnsz)
and rka.sub between Psuba and PsubZ
and rka.tgl_bc >= pdatea and rka.tgl_bc < adddate(pdatez,1)  and rka.`delete`=0 and rka.date >= 20160201
) as x where inv between Pinva and PinvZ and trim(nodoc) between trim(Pdoca) and trim(PdocZ) and trim(nodoc)<>''
order by lpbdate,nodoc,lpb;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_BC_penerimaan
DROP PROCEDURE IF EXISTS `sp_BC_penerimaan`;
DELIMITER //
CREATE PROCEDURE `sp_BC_penerimaan`(
	IN `pdatea` datetime,
	IN `pdatez` datetime,
	IN `Psuba` char(15),
	IN `PsubZ` char(15),
	IN `Pinva` char(15),
	IN `PinvZ` char(15),
	IN `Pdoca` CHAR(50),
	IN `PdocZ` CHAR(50),
	IN `Pjnsa` char(15),
	IN `Pjnsz` char(15)
)
BEGIN
select * from (
select ifnull(docpd.jnsp,'') as jenis,ifnull(docpd.no_bc,spb.nodoc) as nodoc,docpd.nopen as nopen,ifnull(cast(datedoc as char),'') as datedoc,lpd.spb as lpb, ifnull(spb.tgl_bc,lpd.date) lpbdate,
ifnull(spb.shipper,sub.name) as supplier,lpd.inv,lpd.remark,lpd.qty as qty,inv.unit,(omd.price)*lpd.qty*oms.kurs as val,omd.oms,lpd.lph as lpbnomor,lpd.date as lphdate,lpd.nodsg
from (select lpd.*,lph.oms,lph.date,lph.spb,lph.sub,lph.doc from lpd,lph where lpd.lph=lph.lph and lph.date  >= pdatea and lph.date< adddate(pdatez,1)  and lph.sub between Psuba and PsubZ and lpd.inv between Pinva and PinvZ and lph.`delete`=0) lpd
left outer join spb on lpd.spb=spb.spb
left outer join (select docpd.*,docp.jnsp,docp.oms from docpd,docp where docp.docp=docpd.docp and docpd.nodoc<>'' and docp.`delete`=0) as docpd on trim(spb.nodoc)=trim(docpd.nopen) and spb.oms=docpd.oms
left outer join sub on lpd.sub=sub.sub
left outer join (select * from oms_in) omd on lpd.oms=omd.oms and omd.inv=lpd.inv and omd.remark=lpd.remark
left outer join oms on omd.oms=oms.oms
left outer join inv on omd.inv=inv.inv
where ifnull(spb.nodoc,'') between '' and 'z'
and if(trim(pjnsa)='' and trim(pjnsz)='ZZZZZZZ',1,ifnull(docpd.jnsp,'') between Pjnsa and Pjnsz )
and lpd.sub between Psuba and PsubZ and left(lph,3)='LPB' and spb.`delete`=0
union all
select ifnull(lpd.spb,'') as jenis,ifnull(doc,'') as nodoc,'' as nopen,ifnull(cast(lpd.duedate as char),'') as datedoc,lpd.lph as lpb, ifnull(lpd.tgl_bc,lpd.date) lpbdate,
ifnull(spb.shipper,sub.name) as supplier,lpd.inv,lpd.remark,lpd.qty1 as qty,inv.unit,(omd.val/omd.qty)*lpd.qty*oms.kurs as val,omd.oms, lpd.lph as lpbnomor,lpd.date as lphdate,lpd.nodsg
from (select lpd.*,lph.tgl_bc,lph.oms,lph.date,lph.duedate, lph.spb,lph.sub,lph.doc from lpd,lph where lpd.lph=lph.lph and lph.tgl_bc  >= pdatea and lph.tgl_bc< adddate(pdatez,1)  and lph.sub between Psuba and PsubZ and lpd.inv between Pinva and PinvZ and lph.`delete`=0) lpd
left outer join spb on lpd.spb=spb.spb
left outer join sub on lpd.sub=sub.sub
left outer join omd on lpd.oms=omd.oms and omd.inv=lpd.inv and omd.remark=lpd.remark
left outer join inv on omd.inv = inv.inv
left outer join oms on omd.oms=oms.oms
where ifnull(spb.nodoc,'') between '' and 'z'
and if(trim(pjnsa)='' and trim(pjnsz)='ZZZZZZZ',1,lpd.spb between Pjnsa and Pjnsz)
and lpd.sub between Psuba and PsubZ and left(lph,3)='LPJ'
union all
select ifnull(rka.jnsdoc,'') as jenis,ifnull(rka.doc,'') as nodoc,'' as nopen,ifnull(cast(rka.duedate as char),'') as datedoc,rka.rka as lpb, ifnull(rka.tgl_bc,rka.date) lpbdate,
sub.name as supplier,rkb.inv,rkb.remark,rkb.qty1 as qty,rkb.unit,(select ifnull(price,0) from sjd where sjh=rka.rsm and price>0)*rkb.qty1 as val,'' oms, rkb.rka as lpbnomor,rka.date as lphdate,rkb.nodsg
from rka left outer join rkb on rkb.rka=rka.rka
left outer join sub on rka.sub=sub.sub
where ifnull(rka.doc,'') between '' and 'z'
and if(trim(pjnsa)='' and trim(pjnsz)='ZZZZZZZ',1,rka.jnsdoc between Pjnsa and Pjnsz)
and rka.sub between Psuba and PsubZ
and rka.tgl_bc >= pdatea and rka.tgl_bc < adddate(pdatez,1)  and rka.`delete`=0 and rka.date < 20160201
union all
select ifnull(rka.jnsdoc,'') as jenis,ifnull(rka.doc,'') as nodoc,'' as nopen,ifnull(cast(rka.duedate as char),'') as datedoc,rka.rka as lpb, ifnull(rka.tgl_bc,rka.date) lpbdate,
sub.name as supplier,rkb.inv,rkb.remark,rkb.qty1 as qty,rkb.unit,(select ifnull(price,0)*if(rsm.kurs=0,1,ifnull(rsm.kurs,1)) from rsmd left outer join
rsm on rsmd.rsm=rsm.rsm where rsmd.rsm=rka.rsm and price>0 and rsmd.inv=rkb.inv)*rkb.qty1 as val,'' oms, rkb.rka as lpbnomor,rka.date as lphdate,rkb.nodsg
from rka left outer join rkb on rkb.rka=rka.rka
left outer join sub on rka.sub=sub.sub
where ifnull(rka.doc,'') between '' and 'z'
and if(trim(pjnsa)='' and trim(pjnsz)='ZZZZZZZ',1,rka.jnsdoc between Pjnsa and Pjnsz)
and rka.sub between Psuba and PsubZ
and rka.tgl_bc >= pdatea and rka.tgl_bc < adddate(pdatez,1)  and rka.`delete`=0 and rka.date >= 20160201
) as x where inv between Pinva and PinvZ and left(inv,2) != 10 and left(inv,2) != 91 and trim(nodoc) between trim(Pdoca) and trim(PdocZ)
order by lpbdate,nodoc,lpb;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_BC_penerimaan1
DROP PROCEDURE IF EXISTS `sp_BC_penerimaan1`;
DELIMITER //
CREATE PROCEDURE `sp_BC_penerimaan1`(pdatea datetime,pdatez datetime,Psuba char(15),PsubZ char(15),Pinva char(15),PinvZ char(15),Pdoca char(15),PdocZ char(15),Pjnsa char(15),Pjnsz char(15))
BEGIN
select * from (
select ifnull(docpd.jnsp,'') as jenis,ifnull(docpd.no_bc,'') as nodoc,ifnull(date_format(datedoc,'%d-%m-%Y'),'') as datedoc,lpd.lph as lpb, date_format(lpd.date,'%d-%m-%Y') lpbdate,
sub.name as supplier,lpd.inv,lpd.remark,lpd.qty1 as qty,lpd.unit,(omd.val/omd.qty)*lpd.qty*oms.kurs as val
from (select lpd.*,lph.oms,lph.date,lph.spb,lph.sub,lph.doc from lpd,lph where lpd.lph=lph.lph and lph.date  >= pdatea and lph.date< adddate(pdatez,1)  and lph.sub between Psuba and PsubZ and lpd.inv between Pinva and PinvZ and lph.`delete`=0) lpd
left outer join spb on lpd.spb=spb.spb
left outer join (select docpd.*,docp.jnsp,docp.oms from docpd,docp where docp.docp=docpd.docp and docpd.nodoc<>'') as docpd on trim(spb.nodoc)=trim(docpd.nodoc) and spb.oms=docpd.oms
left outer join sub on lpd.sub=sub.sub
left outer join omd on lpd.oms=omd.oms and omd.inv=lpd.inv and omd.remark=lpd.remark
left outer join oms on omd.oms=oms.oms
where ifnull(spb.nodoc,'') between '' and 'z'
and if(trim(pjnsa)='' and trim(pjnsz)='ZZZZZZZ',1,docpd.jnsp between Pjnsa and Pjnsz )
and lpd.sub between Psuba and PsubZ and left(lph,3)='LPB'
union all
select ifnull(lpd.spb,'') as jenis,ifnull(doc,'') as nodoc,ifnull(date_format(lpd.duedate,'%d-%m-%Y'),'') as datedoc,lpd.lph as lpb, date_format(lpd.date,'%d-%m-%Y') lpbdate,
sub.name as supplier,lpd.inv,lpd.remark,lpd.qty1 as qty,lpd.unit,(omd.val/omd.qty)*lpd.qty*oms.kurs as val
from (select lpd.*,lph.oms,lph.date,lph.duedate, lph.spb,lph.sub,lph.doc from lpd,lph where lpd.lph=lph.lph and lph.duedate  >= pdatea and lph.duedate< adddate(pdatez,1)  and lph.sub between Psuba and PsubZ and lpd.inv between Pinva and PinvZ and lph.`delete`=0) lpd
left outer join spb on lpd.spb=spb.spb
left outer join sub on lpd.sub=sub.sub
left outer join omd on lpd.oms=omd.oms and omd.inv=lpd.inv and omd.remark=lpd.remark
left outer join oms on omd.oms=oms.oms
where ifnull(spb.nodoc,'') between '' and 'z'
and if(trim(pjnsa)='' and trim(pjnsz)='ZZZZZZZ',1,lpd.spb between Pjnsa and Pjnsz)
and lpd.sub between Psuba and PsubZ and left(lph,3)='LPJ'
union all
select ifnull(rka.jnsdoc,'') as jenis,ifnull(rka.doc,'') as nodoc,ifnull(date_format(rka.date,'%d-%m-%Y'),'') as datedoc,rka.rka as lpb, date_format(rka.date,'%d-%m-%Y') lpbdate,
sub.name as supplier,rkb.inv,rkb.remark,rkb.qty1 as qty,rkb.unit,(select ifnull(price,0) from sjd where sjh=rka.rsm and price>0)*rkb.qty1 as val
from rka left outer join rkb on rkb.rka=rka.rka
left outer join sub on rka.sub=sub.sub
where ifnull(rka.doc,'') between '' and 'z'
and if(trim(pjnsa)='' and trim(pjnsz)='ZZZZZZZ',1,rka.jnsdoc between Pjnsa and Pjnsz)
and rka.sub between Psuba and PsubZ
and rka.duedate >= pdatea and rka.duedate < adddate(pdatez,1)  and rka.`delete`=0 and rka.date < 20160201
union all
select ifnull(rka.jnsdoc,'') as jenis,ifnull(rka.doc,'') as nodoc,ifnull(date_format(rka.date,'%d-%m-%Y'),'') as datedoc,rka.rka as lpb, date_format(rka.date,'%d-%m-%Y') lpbdate,
sub.name as supplier,rkb.inv,rkb.remark,rkb.qty1 as qty,rkb.unit,(select ifnull(price,0) from rsmd where rsm=rka.rsm and price>0 and rsmd.inv=rkb.inv limit 1)*rkb.qty1 as val
from rka left outer join rkb on rkb.rka=rka.rka
left outer join sub on rka.sub=sub.sub
where ifnull(rka.doc,'') between '' and 'z'
and if(trim(pjnsa)='' and trim(pjnsz)='ZZZZZZZ',1,rka.jnsdoc between Pjnsa and Pjnsz)
and rka.sub between Psuba and PsubZ
and rka.duedate >= pdatea and rka.duedate < adddate(pdatez,1)  and rka.`delete`=0 and rka.date >= 20160201
) as x where inv between Pinva and PinvZ and trim(nodoc) between trim(Pdoca) and trim(PdocZ)
order by jenis,nodoc,lpb;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_BC_penerimaanWeB
DROP PROCEDURE IF EXISTS `sp_BC_penerimaanWeB`;
DELIMITER //
CREATE PROCEDURE `sp_BC_penerimaanWeB`(
	IN `pdatea` datetime,
	IN `pdatez` datetime,
	IN `Psuba` char(15),
	IN `PsubZ` char(15),
	IN `Pinva` char(15),
	IN `PinvZ` char(15),
	IN `Pdoca` CHAR(50),
	IN `PdocZ` CHAR(50),
	IN `Pjnsa` char(15),
	IN `Pjnsz` char(15)
)
BEGIN
select  `jenis`,`nodoc`,`datedoc`, `lpb`,date_format(lpbdate,'%d-%m-%Y') as lpbdate , `qty`, `inv` , `remark`, `qty`,`unit`,`val`,`supplier` ,`sub` from bcmasuk where lpbdate >= pdatea and lpbdate < adddate(pdatez,1) and
bcmasuk.sub between psuba and PsubZ and bcmasuk.nodoc between Pdoca and PdocZ and bcmasuk.jenis between PjnsA and PjnsZ
and bcmasuk.inv between Pinva and PinvZ order by date(lpbdate),lpb;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_BC_pengeluaran
DROP PROCEDURE IF EXISTS `sp_BC_pengeluaran`;
DELIMITER //
CREATE PROCEDURE `sp_BC_pengeluaran`(
	IN `pdatea` datetime,
	IN `pdatez` datetime,
	IN `Psuba` char(15),
	IN `PsubZ` char(15),
	IN `Pinva` char(15),
	IN `PinvZ` char(15),
	IN `Pdoca` CHAR(50),
	IN `PdocZ` CHAR(50),
	IN `Pjnsa` char(15),
	IN `Pjnsz` char(15)
)
BEGIN
if (Pjnsa = 'BC 3.0') then
select bckeluar.*, sjh.spm as spm, cast(date_format(ifnull(spm.tgl_bc,sjh.date), '%d-%m-%Y') AS char) spmdate,sjh.sjh as sjl, cast(date_format(sjh.date, '%d-%m-%Y') AS CHAR) as sjldate
from bckeluar
left join sjh on sjh.spm=bckeluar.sjh
left join spm on spm.spm=sjh.spm
where jenis = 'BC 3.0' and datedoc >= pdatea and datedoc < adddate(pdatez,1) and jenis between Pjnsa and Pjnsz and bckeluar.sjh<>'' and bckeluar.inv between Pinva and PinvZ
and trim(bckeluar.nodoc) between trim(Pdoca) and trim(PdocZ)
order by spmdate;
end if;
if (Pjnsa != 'BC 3.0') then
select * from (
select ifnull(docpd.jnsp,'') as jenis,
ifnull(docpd.no_bc,spm.nodoc) as nodoc,
docpd.nopen as nopen,
cast(date_format(ifnull(docpd.datedoc,NOW()), '%d-%m-%Y') AS CHAR) as datedoc,
sjh.spm as spm, 
cast(date_format(ifnull(spm.tgl_bc,sjh.date), '%d-%m-%Y') AS char) spmdate, 
sjd.sjh as sjl, 
cast(date_format(sjh.date, '%d-%m-%Y') AS CHAR) as sjldate,
sjd.nodsg as kodebatch,
sum(sjd.qty) as qty,
sjd.inv,
sjd.remark,
sum(sjd.qty1) AS qty1,
inv.unit,
sum(Ifnull(sjd.val,0)*ifnull(okl.kurs,1)) as val,
sub.name as supplier,
sjd.loc
from spm 
inner join sjh on spm.spm=sjh.spm 
left outer join sjd on sjh.sjh=sjd.sjh
left outer join inv on sjd.inv=inv.inv
left outer join (select docp.docp,docp.jnsp,docp.oms,docpd.nodoc,docpd.datedoc,docpd.no_bc,docp.form,docpd.nopen from docpd,docp where docp.docp=docpd.docp and docp.`delete`=0 GROUP BY docp.docp) docpd on docpd.nopen=spm.nodoc and sjd.okl=docpd.oms
left outer join okl on sjd.okl=okl.okl 
left outer join sub on sjh.sub=sub.sub
where ifnull(spm.nodoc,'') between '' and 'z'
and spm.tgl_bc >= Pdatea and spm.tgl_bc< ADDDATE(Pdatez,1)
and spm.sub BETWEEN Psuba AND Psubz and sjh.`delete`=0
GROUP BY docpd.nodoc,sjd.inv,sjd.nodsg
UNION ALL
SELECT
docp.jnsp as jenis,
ifnull(docpd.no_bc,spm.nodoc) as nodoc,
docpd.nopen as nopen,
ifnull(docpd.datedoc,now()) as datedoc,
sjr.spm as spm, 
ifnull(spm.tgl_bc,spm.date) sjrdate,
sjr.sjr as sjl,
sjr.date as sjldate,
sjrd.nodsg as kodebatch,
sjrd.qty as qty,
sjrd.inv,
sjrd.remark,
sjrd.qty1,
sjrd.unit,
(select if(left(sjr.sjr,3)='SJT',0,ifnull(ind.val,0)) 
from ind
where jurnal=sjr.sjr and inv=sjrd.inv limit 1)  as val,
sub.name as supplier,
sjrd.loc
from sjr 
left outer join sjrd on sjr.sjr=sjrd.sjr
left outer join sub on sjr.sub=sub.sub
LEFT OUTER JOIN spm ON sjr.spm=spm.spm
left outer join docpd on docpd.nopen=spm.nodoc
LEFT OUTER JOIN docp ON docpd.docp=docp.docp
where ifnull(sjr.doc,'') between '' and 'z'
and sjr.tgl_bc >= Pdatea and sjr.tgl_bc< ADDDATE(Pdatez,1) 
and (left(sjr.sjr,3)='SJT' or left(sjr.sjr,3)='SJR')
) as X
where jenis between Pjnsa and Pjnsz and spm<>'' and inv between Pinva and PinvZ
and trim(nodoc) between trim(Pdoca) and trim(PdocZ)
group by spm,inv,kodebatch
order by spmdate,nodoc,spm;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_BC_pengeluaranWeB
DROP PROCEDURE IF EXISTS `sp_BC_pengeluaranWeB`;
DELIMITER //
CREATE PROCEDURE `sp_BC_pengeluaranWeB`(
	IN `pdatea` datetime,
	IN `pdatez` datetime,
	IN `Psuba` char(15),
	IN `PsubZ` char(15),
	IN `Pinva` char(15),
	IN `PinvZ` char(15),
	IN `Pdoca` CHAR(50),
	IN `PdocZ` CHAR(50),
	IN `Pjnsa` char(15),
	IN `Pjnsz` char(15)
)
BEGIN
select `jenis`,`nodoc`,cast(DATE_FORMAT(datedoc, '%d-%m-%Y') AS CHAR) AS datedoc, `sjh`,cast(date_format(sjhdate,'%d-%m-%Y') AS CHAR) sjhdate , `qty`, `inv` , `remark`, `qty1`,`unit`,`val`,`supplier`,`form`,`loc`,`sub` from bckeluar where sjhdate >= pdatea and sjhdate < adddate(pdatez,1) and
bckeluar.sub between psuba and PsubZ and bckeluar.nodoc between Pdoca and PdocZ and bckeluar.jenis between PjnsA and PjnsZ
and bckeluar.inv between Pinva and PinvZ  order by date(sjhdate),sjh;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_BC_scrap
DROP PROCEDURE IF EXISTS `sp_BC_scrap`;
DELIMITER //
CREATE PROCEDURE `sp_BC_scrap`(
	IN `pdatea` datetime,
	IN `pdatez` datetime,
	IN `Psuba` char(15),
	IN `PsubZ` char(15),
	IN `Pinva` char(15),
	IN `PinvZ` char(15),
	IN `Pdoca` char(15),
	IN `PdocZ` char(15),
	IN `Pjnsa` char(15),
	IN `Pjnsz` char(15)
)
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
SELECT @num := @num + 1 AS no,temp.* from (select invname,inv,date,jurnal,'' rem, sum(s_awal) s_awal, sum(qdebet) qdebet, sum(qkredit) qkredit, sum(qadjust) qadjust, sum(ifnull(qopn,0)) selisih, max(unit) unit,  sum(s_awal) + sum(qdebet) - sum(qkredit) +  sum(qadjust) as sakhir, if(sum(ifnull(round(qopn,2),0)) <> 0 , sum(s_awal) + sum(qdebet) - sum(qkredit) +  sum(qadjust) + sum(ifnull(qopn,0)),0) as opname, '-' as ket from 
(
select name as invname,inv,convert('' using latin1) as loc, date(pdatea) as `date`, convert('' using latin1) as jurnal, convert('BALANCE' using latin1) as rem, sum(qlast) as s_awal,  0 as qdebet, 0 as qkredit, 0 as qadjust, 0  as qopn,  convert(' ' using latin1) as dk,unit,1 as urut,nodsg from
(
select rin.inv,inv.name, rin.qlast, rin.vlast,rin.nodsg,inv.unit2,inv.unit
from rin left outer join inv on rin.inv=inv.inv
where rin.period=Pperiod and left(rin.inv,1) = '7'
union all
select bckeluar.inv,bckeluar.remark, bckeluar.qty as qlast , bckeluar.val as vlast, '',inv.unit2,inv.unit 
from bckeluar left outer join inv on bckeluar.inv=inv.inv
 where sjhdate < pdatea and month(sjhdate)=month(pdatea) and year(sjhdate)=year(pdatea) and left(bckeluar.inv,1) = '7'
 ) as oawal
 where (inv BETWEEN Pinva and PinvZ)
 group by inv
 union all
 select inv.name as invname, ind.inv, convert('' using latin1) as loc, ind.date as date, ind.jurnal as jurnal, ifnull(ind.rem,'') as rem, 0 as s_awal,
 if (ind.dk='D' and ind.subjurnal not in ('OPN','JIN','BPP','RKA') , ind.qty , 0) as qdebet, 
if (ind.dk='K' and ind.subjurnal not in ('OPN','JIN','BPP','RKA') , ind.qty , 0) as qkredit, 
if (ind.subjurnal in ('JIN','BPP','RKA') ,if(ind.dk='K', -ind.qty , ind.qty),0) as qadjust, 
if (ind.dk='D' and ind.subjurnal='OPN', ind.qty ,if (ind.dk='K' and ind.subjurnal='OPN',-ind.qty,0)) as qopn, 
ind.dk as dk, inv.unit, if (ind.subjurnal='OPN' , 2 , 1)  as urut,ind.nodsg 
from ind
left outer join inv on ind.inv=inv.inv 
where left(ind.inv,1) = '7' and (ind.date>=pdatea and ind.date<adddate(pdatez,1)) AND (ind.inv BETWEEN Pinva and PinvZ) and left(ind.jurnal,3) in ('LHP','OPN','JIN','BPP','SJL','LPR','LPB')
) as x group by inv 
order by  inv ) as temp left outer JOIN (SELECT @num :=0) AS n ON 1=1;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_BOP
DROP PROCEDURE IF EXISTS `sp_BOP`;
DELIMITER //
CREATE PROCEDURE `sp_BOP`(pperiod varchar(4),ppil integer)
BEGIN
declare pembagi integer;
declare refinery integer;
declare fraksinasi integer;
declare plastik integer;
declare kemasan integer;
declare generalSP double;
if (pperiod<'1411') then
drop temporary table if exists valpercct;
create temporary table valpercct as
 select acc,name,sum(TotNS) as TotNS,sum(TotSD) as TotSD, sum(`111101a`) as `111101 REFINERY`, sum(`111102a`) as `111102 FRAKSINASI`,
 sum(`111103a`) as `111103 KEMASAN`,sum(`111104a`) as `111104 PLASTIK`,sum(`121101a`) as `1211101 R&D_QC`,sum(`121102a`) as `121102 ENGINERING & MAINTENANCE`,
 sum(`121103a`) as `121103 UTILITY`,sum(`121104a`) as `121104 BOILER STEAM`,sum(`121105a`) as `121105 GD BAHAN KEMASAN & SPAREPART`,sum(`121106a`) as `121106 PPIC`,sum(`121199a`) as `121199 SUPPORT PRODUKSI UMUM`
from (
  select acd.acc,acc.name,acd.val*if(acd.dk='D',1,-1) as TotNS,if(left(cct,2)<='12',
  if(acd.cct='' or acd.cct is null,0,acd.val)*if(acd.dk='D',1,-1),0) as TotSD, if(acd.cct=111101,acd.val*if(acd.dk='D',1,-1),0) as `111101a`
  ,if(acd.cct=111102,acd.val*if(acd.dk='D',1,-1),0) as `111102a`
  ,if(acd.cct=111103,acd.val*if(acd.dk='D',1,-1),0) as `111103a`
  ,if(acd.cct=111104,acd.val*if(acd.dk='D',1,-1),0) as `111104a`
  ,if(acd.cct=121101,acd.val*if(acd.dk='D',1,-1),0) as `121101a`
  ,if(acd.cct=121102,acd.val*if(acd.dk='D',1,-1),0) as `121102a`
  ,if(acd.cct=121103,acd.val*if(acd.dk='D',1,-1),0) as `121103a`
  ,if(acd.cct=121104,acd.val*if(acd.dk='D',1,-1),0) as `121104a`
  ,if(acd.cct=121105,acd.val*if(acd.dk='D',1,-1),0) as `121105a`
  ,if(acd.cct=121106,acd.val*if(acd.dk='D',1,-1),0) as `121106a`
  ,if(acd.cct=121199,acd.val*if(acd.dk='D',1,-1),0) as `121199a`
  from acd left outer join acc on acd.acc=acc.acc where period=pperiod and
  left(acd.acc,4)='5208' and left(cct,2)<='12'
) as xtmp group by acc;
set refinery  =(select if(round(sum(`111101 REFINERY`),2)>10,1,0) from valpercct );
set fraksinasi=(select if(round(sum(`111102 FRAKSINASI`),2)>10,1,0) from valpercct );
set kemasan   =(select if(round(sum(`111103 KEMASAN`),2)>10,1,0) from valpercct );
set plastik   =(select if(round(sum(`111104 PLASTIK`),2)>10,1,0) from valpercct );
set pembagi   = refinery + fraksinasi + kemasan + plastik ;
 drop temporary table if exists prosenMaintenance;
 create temporary table prosenMaintenance as
 select (sum(`111101 REFINERY`)/(sum(`111101 REFINERY`)+sum(`111102 FRAKSINASI`)+sum(`111103 KEMASAN`)+sum(`111104 PLASTIK`)))*100 as `REFINERY`,
 (sum(`111102 FRAKSINASI`)/(sum(`111101 REFINERY`)+sum(`111102 FRAKSINASI`)+sum(`111103 KEMASAN`)+sum(`111104 PLASTIK`)))*100 as `FRAKSINASI`,
 (sum(`111103 KEMASAN`)/(sum(`111101 REFINERY`)+sum(`111102 FRAKSINASI`)+sum(`111103 KEMASAN`)+sum(`111104 PLASTIK`)))*100 as `KEMASAN`,
 (sum(`111104 PLASTIK`)/(sum(`111101 REFINERY`)+sum(`111102 FRAKSINASI`)+sum(`111103 KEMASAN`)+sum(`111104 PLASTIK`)))*100 as `PLASTIK` from valpercct
 where left(valpercct.acc,7)='5208100' ;
drop temporary table if exists prosenLHP;
if (pperiod>'1106') then
 create temporary table prosenLHP as
 select (sum(`REFINERY1`)/sum(qty))*100 as `REFINERY` ,(sum(`FRAKSINASI1`)/sum(qty))*100 as `FRAKSINASI`, (sum(`KEMASAN1`)/sum(qty))*100 as `KEMASAN`, (sum(`PLASTIK1`)/sum(qty))*100 as `PLASTIK` from
 (select if(lhp.cct=111101 or lhp.cct=111105 or lhp.cct=111106,qty,0) as `REFINERY1` ,if(lhp.cct=111102,qty,0) as `FRAKSINASI1` ,if(lhp.cct=111103,qty,0) as `KEMASAN1`, if(lhp.cct=111104,qty,0) as `PLASTIK1`,lhd.qty
 from lhp,lhd where period=pperiod and lhp.lhp=lhd.lhp and lhp.cct in('111101','111102','111103','111104','111105','111106') ) as tlhp ;
end if;
if (pperiod='1106') then
 create temporary table prosenLHP as
  select 55.90 as `REFINERY` ,44.10 as `FRAKSINASI`, 0 as `KEMASAN`, 0 as `PLASTIK` ;
end if;
if (pperiod='1105') then
 create temporary table prosenLHP as
  select 59 as `REFINERY` ,41 as `FRAKSINASI`, 0 as `KEMASAN`, 0 as `PLASTIK` ;
end if;
 drop temporary table if exists temQC;
 create temporary table temQC as
  select '1' as qc1,'QUALITY CONTROL' as qc2,0 as qc3,0 as qc4,if(refinery=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc5 ,if(fraksinasi=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc6,
  if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc7,if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc8,sum(acd.val*if(acd.dk='D',1,-1))*-1  as qc9,0 as qc10,0 as qc11,0 as qc12,0 as qc13,0 as qc14,0 as qc15 from acd where left(acd.acc,1)=5
  and period=pperiod and trim(cct)='121101';
 drop temporary table if exists temMaintenance;
 create temporary table temMaintenance as
  select '2' as qc1,'MAINTENANCE' as qc2,0 as qc3,0 as qc4,sum(`121102 ENGINERING & MAINTENANCE`)* a.`REFINERY`/100 as qc5 ,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`FRAKSINASI`/100  as qc6,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`KEMASAN`/100 as qc7,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`PLASTIK`/100 as qc8,
  0 as qc9, sum(`121102 ENGINERING & MAINTENANCE`)*-1 as qc10,0 as qc11,0 as qc12,0 as qc13,0 as qc14,0 as qc15 from valpercct,prosenMaintenance as a;
drop temporary table if exists temUtility;
 create temporary table temUtility as
  select '3' as qc1,' UTILITY DILUAR LISTRIK (BERDASAR BEBAN LISTRIK)' as qc2,0 as qc3,0 as qc4,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111101' and nama='listrik' )/100 as qc5 ,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111102' and nama='listrik')/100 as qc6,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 as qc7,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik')/100 as qc8,
  0 as qc9,0 as qc10,sum(acd.val*if(acd.dk='D',1,-1))*-1 as qc11,0 as qc12,0 as qc13,0 as qc14,0 as qc15
  from acd where left(acd.acc,1)=5 and acd.acc<>'52080402' and acd.period=pperiod and trim(acd.cct)='121103';
  drop temporary table if exists temUtility1;
 create temporary table temUtility1 as
  select '4' as qc1,' UTILITY KHUSUS LISTRIK (BERDASAR BEBAN LISTRIK)' as qc2,0 as qc3,0 as qc4,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111101' and nama='listrik' )/100 as qc5 ,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111102' and nama='listrik')/100 as qc6,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 as qc7,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik')/100 as qc8,
  0 as qc9,0 as qc10,sum(acd.val*if(acd.dk='D',1,-1))*-1 as qc11,0 as qc12,0 as qc13,0 as qc14,0 as qc15
  from acd where acd.acc='52080402' and acd.period=pperiod and trim(acd.cct)='121103';
if (pperiod<'1306') then
drop temporary table if exists temrawmaterial;
create temporary table temrawmaterial as
  select '5' as qc1,'RAW MATERIAL, PACKAGING & FACTORY SUPPLIES WAREHOUSE' as qc2,0 as qc3,0 as qc4,ifnull(if(refinery=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0),0) as qc5 ,ifnull(if(fraksinasi=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0),0) as qc6,
  if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc7, if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc8,0 as qc9,0 as qc10,0 as qc11,0 as qc12,ifnull(sum(acd.val*if(acd.dk='D',1,-1))*-1,0) as qc13,0 as qc14,0 as qc15 from acd where
  period=pperiod and trim(cct)='121105' and left(acd.acc,4)='5208';
else
drop temporary table if exists temrawmaterial;
create temporary table temrawmaterial as
  select '5' as qc1,'RAW MATERIAL, PACKAGING & FACTORY SUPPLIES WAREHOUSE' as qc2,0 as qc3,0 as qc4,ifnull(if(refinery=1,sum(acd.val*if(acd.dk='D',1,-1))*35/100,0),0) as qc5 ,ifnull(if(fraksinasi=1,sum(acd.val*if(acd.dk='D',1,-1))*35/100,0),0) as qc6,
  if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))*15/100,0) as qc7, if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))*15/100,0) as qc8,0 as qc9,0 as qc10,0 as qc11,0 as qc12,ifnull(sum(acd.val*if(acd.dk='D',1,-1))*-1,0) as qc13,0 as qc14,0 as qc15 from acd where
  period=pperiod and trim(cct)='121105' and left(acd.acc,4)='5208';
end if;
drop temporary table if exists temppic;
create temporary table temppic as
  select '6' as qc1,' PRODUCT PLANNING INVENTORY CONTROL' as qc2,0 as qc3,0 as qc4,ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc5 ,ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc6,
  ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc7, ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc8,0 as qc9, 0 as qc10,0 as qc11,0 as qc12,0 as qc13, ifnull(sum(acd.val*if(acd.dk='D',1,-1))*-1,0) as qc14,0 as qc15 from acd where left(acd.acc,1)=5
  and period=pperiod and trim(cct)='121106';
drop temporary table if exists temBoiler;
 create temporary table temBoiler as
  select '7' as qc1,' BOILER & STEAM' as qc2,0 as qc3,0 as qc4,ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`REFINERY`/100,0) as qc5 ,ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`FRAKSINASI`/100,0) as qc6,
  ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`KEMASAN`/100,0) + ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`PLASTIK`/100,0) as qc7, 0 as q8,0 as qc9,0 as qc10,0 as qc11,ifnull(sum(acd.val*if(acd.dk='D',1,-1))*-1,0) as qc12,0 as qc13,0 AS qc14,0 as qc15
  from acd,prosenLHP a where
  period=pperiod and trim(cct)='121104';
drop temporary table if exists temGeneralSupport2;
 create temporary table temGeneralSupport2 as
  select '9' as qc1,'GENERAL SUPPORT PRODUCTION (GAJI STAFF)' as qc2,0 as qc3,0 as qc4,sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111101' and nama='karyawan')/100  as qc5 ,
  sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111102' and nama='karyawan')/100  as qc6,
  sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')/100 as qc7,
  sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan')/100 as qc8,
  0 as qc9,0 as qc10,0 as qc11,0 as qc12,0 as qc13,0 as qc14, sum(`121199 SUPPORT PRODUKSI UMUM`)*-1 as qc15 from valpercct
  where (trim(valpercct.acc) between '52081401' and '52081414') or (trim(valpercct.acc) between '52080101' and '52080215') or trim(valpercct.acc)='52081605';
drop temporary table if exists temGeneralSupport3;
 create temporary table temGeneralSupport3 as
  select '10' as qc1,'GENERAL SUPPORT PRODUCTION (SECURITY)' as qc2,0 as qc3,0 as qc4,if(refinery=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)/pembagi,0)  as qc5 ,
  if(fraksinasi=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)/pembagi,0) as qc6,
  if(kemasan=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)/pembagi,0) as qc7,
  if(plastik=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)/pembagi,0) as qc8,
  0 as qc9,0 as qc10,0 as qc11,0 as qc12,0 as qc13,0 as qc14, ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`)*-1,0) as qc15 from valpercct
  where (trim(valpercct.acc) between '52081812' and '52081812');
set generalSP = (select qc15 from temGeneralSupport2)+(select qc15 from temGeneralSupport3);
drop temporary table if exists temGeneralSupport1;
 create temporary table temGeneralSupport1 as
  select '8' as qc1,'GENERAL SUPPORT PRODUCTION (PRODUCTION)' as qc2,0 as qc3,0 as qc4,(sum(acd.val*if(acd.dk='D',1,-1))+ generalSP )* a.`REFINERY`/100 as qc5 ,(sum(acd.val*if(acd.dk='D',1,-1))+generalSP) * a.`FRAKSINASI`/100 as qc6,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`KEMASAN`/100 as qc7, (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`PLASTIK`/100 as qc8,0 as qc9,0 as qc10,0 as qc11,0 as qc12, 0 as qc13,0 AS qc14,round((sum(acd.val*if(acd.dk='D',1,-1))*-1) - generalSP,2) as qc15
  from acd,prosenLHP a where
  period=pperiod and trim(cct)='121199';
if (ppil=1) then
select *,'BIAYA OVERHEAD PABRIK' as group_ from valpercct
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temqc
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temmaintenance
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temutility
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temutility1
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temrawmaterial
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temppic
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temBoiler
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport1
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport2
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport3
;
end if;
if (ppil=2) then
select sum(`111101 REFINERY`) as refinery,sum(`111102 FRAKSINASI`) as fraksinasi,sum(`111104 PLASTIK`) as plastik,sum(`111103 KEMASAN`) as kemasan from
(
select *,'BIAYA OVERHEAD PABRIK' as group_ from valpercct
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temqc
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temmaintenance
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temutility
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temutility1
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temrawmaterial
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temppic
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temBoiler
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport1
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport2
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport3
) as xtmp;
end if;
end if;
if (pperiod>='1411' and pperiod<='1502') then
   Call SP_BOP1(pperiod,ppil);
end if;
if (pperiod>'1502' and pperiod<='1509') then
   Call SP_BOP2(pperiod,ppil);
end if;
if (pperiod>'1509'and pperiod<='1510') then
   Call SP_BOP3(pperiod,ppil);
end if;
if (pperiod>'1510') then
   Call SP_BOP4(pperiod,ppil);
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_BOP1
DROP PROCEDURE IF EXISTS `sp_BOP1`;
DELIMITER //
CREATE PROCEDURE `sp_BOP1`(pperiod varchar(4),ppil integer)
BEGIN
declare pembagi integer;
declare refinery integer;
declare fraksinasi integer;
declare plastik integer;
declare kemasan integer;
declare margarine integer;
declare generalSP double;
drop temporary table if exists valpercct;
create temporary table valpercct as
 select acc,name,sum(TotNS) as TotNS,sum(TotSD) as TotSD, sum(`111101a`) as `111101 REFINERY`, sum(`111102a`) as `111102 FRAKSINASI`,
 sum(`111103a`) as `111103 KEMASAN`,sum(`111104a`) as `111104 PLASTIK`,sum(`111107a`) as `111107 MARGARINE`,sum(`121101a`) as `1211101 R&D_QC`,sum(`121102a`) as `121102 ENGINERING & MAINTENANCE`,
 sum(`121103a`) as `121103 UTILITY`,sum(`121104a`) as `121104 BOILER STEAM`,sum(`121105a`) as `121105 GD BAHAN KEMASAN & SPAREPART`,sum(`121106a`) as `121106 PPIC`,sum(`121199a`) as `121199 SUPPORT PRODUKSI UMUM`
from (
  select acd.acc,acc.name,acd.val*if(acd.dk='D',1,-1) as TotNS,if(left(cct,2)<='12',
  if(acd.cct='' or acd.cct is null,0,acd.val)*if(acd.dk='D',1,-1),0) as TotSD, if(acd.cct=111101,acd.val*if(acd.dk='D',1,-1),0) as `111101a`
  ,if(acd.cct=111102,acd.val*if(acd.dk='D',1,-1),0) as `111102a`
  ,if(acd.cct=111103,acd.val*if(acd.dk='D',1,-1),0) as `111103a`
  ,if(acd.cct=111104,acd.val*if(acd.dk='D',1,-1),0) as `111104a`
  ,if(acd.cct=111107 or acd.cct=111110,acd.val*if(acd.dk='D',1,-1),0) as `111107a`
  ,if(acd.cct=121101,acd.val*if(acd.dk='D',1,-1),0) as `121101a`
  ,if(acd.cct=121102,acd.val*if(acd.dk='D',1,-1),0) as `121102a`
  ,if(acd.cct=121103,acd.val*if(acd.dk='D',1,-1),0) as `121103a`
  ,if(acd.cct=121104,acd.val*if(acd.dk='D',1,-1),0) as `121104a`
  ,if(acd.cct=121105,acd.val*if(acd.dk='D',1,-1),0) as `121105a`
  ,if(acd.cct=121106,acd.val*if(acd.dk='D',1,-1),0) as `121106a`
  ,if(acd.cct=121199,acd.val*if(acd.dk='D',1,-1),0) as `121199a`
  from acd left outer join acc on acd.acc=acc.acc where period=pperiod and
  left(acd.acc,4)='5208' and left(cct,2)<='12'
) as xtmp group by acc;
set refinery  =(select if(round(sum(`111101 REFINERY`),2)>10,1,0) from valpercct );
set fraksinasi=(select if(round(sum(`111102 FRAKSINASI`),2)>10,1,0) from valpercct );
set kemasan   =(select if(round(sum(`111103 KEMASAN`),2)>10,1,0) from valpercct );
set plastik   =(select if(round(sum(`111104 PLASTIK`),2)>10,1,0) from valpercct );
set margarine   =(select if(round(sum(`111107 MARGARINE`),2)>10,1,0) from valpercct );
set pembagi   = refinery + fraksinasi + kemasan + plastik + margarine ;
 drop temporary table if exists prosenMaintenance;
 create temporary table prosenMaintenance as
 select (sum(`111101 REFINERY`)/(sum(`111101 REFINERY`)+sum(`111102 FRAKSINASI`)+sum(`111103 KEMASAN`)+sum(`111104 PLASTIK`)+ifnull(sum(`111107 MARGARINE`),0)))*100 as `REFINERY`,
 (sum(`111102 FRAKSINASI`)/(sum(`111101 REFINERY`)+sum(`111102 FRAKSINASI`)+sum(`111103 KEMASAN`)+sum(`111104 PLASTIK`)+ifnull(sum(`111107 MARGARINE`),0)))*100 as `FRAKSINASI`,
 (sum(`111103 KEMASAN`)/(sum(`111101 REFINERY`)+sum(`111102 FRAKSINASI`)+sum(`111103 KEMASAN`)+sum(`111104 PLASTIK`)+ifnull(sum(`111107 MARGARINE`),0)))*100 as `KEMASAN`,
 (sum(`111104 PLASTIK`)/(sum(`111101 REFINERY`)+sum(`111102 FRAKSINASI`)+sum(`111103 KEMASAN`)+sum(`111104 PLASTIK`)+ifnull(sum(`111107 MARGARINE`),0)))*100 as `PLASTIK`,
 (sum(`111107 MARGARINE`)/(sum(`111101 REFINERY`)+sum(`111102 FRAKSINASI`)+sum(`111103 KEMASAN`)+sum(`111104 PLASTIK`)+ifnull(sum(`111107 MARGARINE`),0)))*100 as `MARGARINE`
  from valpercct
 where left(valpercct.acc,7)='5208100' ;
drop temporary table if exists prosenLHP;
if (pperiod>'1106') then
 create temporary table prosenLHP as
 select (sum(`REFINERY1`)/sum(qty))*100 as `REFINERY` ,(sum(`FRAKSINASI1`)/sum(qty))*100 as `FRAKSINASI`, (sum(`KEMASAN1`)/sum(qty))*100 as `KEMASAN`, (sum(`PLASTIK1`)/sum(qty))*100 as `PLASTIK`,(sum(`MARGARINE1`)/sum(qty))*100 as `MARGARINE` from
 (select if(lhp.cct=111101 or lhp.cct=111105 or lhp.cct=111106,qty,0) as `REFINERY1` ,if(lhp.cct=111102,qty,0) as `FRAKSINASI1` ,if(lhp.cct=111103,qty,0) as `KEMASAN1`, if(lhp.cct=111104,qty,0) as `PLASTIK1`,if(lhp.cct=111107 or lhp.cct=111110 ,qty,0) as `MARGARINE1`,lhd.qty
 from lhp,lhd where period=pperiod and lhp.lhp=lhd.lhp and lhp.cct in('111101','111102','111103','111104','111105','111106','111107','111110') ) as tlhp ;
end if;
if (pperiod='1106') then
 create temporary table prosenLHP as
  select 55.90 as `REFINERY` ,44.10 as `FRAKSINASI`, 0 as `KEMASAN`, 0 as `PLASTIK`, 0 as `MARGARINE` ;
end if;
if (pperiod='1105') then
 create temporary table prosenLHP as
  select 59 as `REFINERY` ,41 as `FRAKSINASI`, 0 as `KEMASAN`, 0 as `PLASTIK`,0 as `MARGARINE` ;
end if;
 drop temporary table if exists temQC;
 create temporary table temQC as
  select '1' as qc1,'QUALITY CONTROL' as qc2,0 as qc3,0 as qc4,if(refinery=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc5 ,if(fraksinasi=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc6,
  if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc7,if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc8,if(margarine=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc16 ,sum(acd.val*if(acd.dk='D',1,-1))*-1  as qc9,0 as qc10,0 as qc11,0 as qc12,0 as qc13,0 as qc14,0 as qc15
  from acd where left(acd.acc,1)=5
  and period=pperiod and trim(cct)='121101';
 drop temporary table if exists temMaintenance;
 create temporary table temMaintenance as
  select '2' as qc1,'MAINTENANCE' as qc2,0 as qc3,0 as qc4,sum(`121102 ENGINERING & MAINTENANCE`)* a.`REFINERY`/100 as qc5 ,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`FRAKSINASI`/100  as qc6,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`KEMASAN`/100 as qc7,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`PLASTIK`/100 as qc8,sum(`121102 ENGINERING & MAINTENANCE`)* a.`MARGARINE`/100 as qc16,
  0 as qc9, sum(`121102 ENGINERING & MAINTENANCE`)*-1 as qc10,0 as qc11,0 as qc12,0 as qc13,0 as qc14,0 as qc15 from valpercct,prosenMaintenance as a;
drop temporary table if exists temUtility;
 create temporary table temUtility as
  select '3' as qc1,' UTILITY DILUAR LISTRIK (BERDASAR BEBAN LISTRIK)' as qc2,0 as qc3,0 as qc4,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111101' and nama='listrik' )/100 as qc5 ,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111102' and nama='listrik')/100 as qc6,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 as qc7,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik')/100 as qc8,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111107' and nama='listrik')/100 as qc16,
  0 as qc9,0 as qc10,sum(acd.val*if(acd.dk='D',1,-1))*-1 as qc11,0 as qc12,0 as qc13,0 as qc14,0 as qc15
  from acd where left(acd.acc,1)=5 and acd.acc<>'52080402' and acd.period=pperiod and trim(acd.cct)='121103';
  drop temporary table if exists temUtility1;
 create temporary table temUtility1 as
  select '4' as qc1,' UTILITY KHUSUS LISTRIK (BERDASAR BEBAN LISTRIK)' as qc2,0 as qc3,0 as qc4,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111101' and nama='listrik' )/100 as qc5 ,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111102' and nama='listrik')/100 as qc6,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 as qc7,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik')/100 as qc8,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111107' and nama='listrik')/100 as qc16,
  0 as qc9,0 as qc10,sum(acd.val*if(acd.dk='D',1,-1))*-1 as qc11,0 as qc12,0 as qc13,0 as qc14,0 as qc15
  from acd where acd.acc='52080402' and acd.period=pperiod and trim(acd.cct)='121103';
if (pperiod<'1306') then
drop temporary table if exists temrawmaterial;
create temporary table temrawmaterial as
  select '5' as qc1,'RAW MATERIAL, PACKAGING & FACTORY SUPPLIES WAREHOUSE' as qc2,0 as qc3,0 as qc4,ifnull(if(refinery=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0),0) as qc5 ,ifnull(if(fraksinasi=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0),0) as qc6,
  if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc7, if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc8, if(margarine=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc16,0 as qc9,0 as qc10,0 as qc11,0 as qc12,ifnull(sum(acd.val*if(acd.dk='D',1,-1))*-1,0) as qc13,0 as qc14,0 as qc15 from acd where
  period=pperiod and trim(cct)='121105' and left(acd.acc,4)='5208';
else
drop temporary table if exists temrawmaterial;
create temporary table temrawmaterial as
  select '5' as qc1,'RAW MATERIAL, PACKAGING & FACTORY SUPPLIES WAREHOUSE' as qc2,0 as qc3,0 as qc4,ifnull(if(refinery=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111101' and nama='karyawan')/100,0),0) as qc5 ,ifnull(if(fraksinasi=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111102' and nama='karyawan')/100,0),0) as qc6,
  if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')/100,0) as qc7, if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan')/100,0) as qc8,if(margarine=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111107' and nama='karyawan')/100,0) as qc16,0 as qc9,0 as qc10,0 as qc11,0 as qc12,ifnull(sum(acd.val*if(acd.dk='D',1,-1))*-1,0) as qc13,0 as qc14,0 as qc15 from acd where
  period=pperiod and trim(cct)='121105' and left(acd.acc,4)='5208';
end if;
drop temporary table if exists temppic;
create temporary table temppic as
  select '6' as qc1,' PRODUCT PLANNING INVENTORY CONTROL' as qc2,0 as qc3,0 as qc4,ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc5 ,ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc6,
  ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc7, ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc8,ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc16, 0 as qc9, 0 as qc10,0 as qc11,0 as qc12,0 as qc13, ifnull(sum(acd.val*if(acd.dk='D',1,-1))*-1,0) as qc14,0 as qc15 from acd where left(acd.acc,1)=5
  and period=pperiod and trim(cct)='121106';
drop temporary table if exists temBoiler;
 create temporary table temBoiler as
  select '7' as qc1,' BOILER & STEAM' as qc2,0 as qc3,0 as qc4,ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`REFINERY`/100,0) as qc5 ,ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`FRAKSINASI`/100,0) as qc6,
  ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`KEMASAN`/100,0) + ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`PLASTIK`/100,0) as qc7, 0 as q8,ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`MARGARINE`/100,0) as qc16, 0 as qc9,0 as qc10,0 as qc11,ifnull(sum(acd.val*if(acd.dk='D',1,-1))*-1,0) as qc12,0 as qc13,0 AS qc14,0 as qc15
  from acd,prosenLHP a where
  period=pperiod and trim(cct)='121104';
drop temporary table if exists temGeneralSupport2;
 create temporary table temGeneralSupport2 as
  select '9' as qc1,'GENERAL SUPPORT PRODUCTION (GAJI STAFF)' as qc2,0 as qc3,0 as qc4,sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111101' and nama='karyawan')/100  as qc5 ,
  sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111102' and nama='karyawan')/100  as qc6,
  sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')/100 as qc7,
  sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan')/100 as qc8,
  sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111107' and nama='karyawan')/100 as qc16,
  0 as qc9,0 as qc10,0 as qc11,0 as qc12,0 as qc13,0 as qc14, sum(`121199 SUPPORT PRODUKSI UMUM`)*-1 as qc15 from valpercct
  where (trim(valpercct.acc) between '52081401' and '52081414') or (trim(valpercct.acc) between '52080101' and '52080215') or trim(valpercct.acc)='52081605';
drop temporary table if exists temGeneralSupport3;
 create temporary table temGeneralSupport3 as
  select '10' as qc1,'GENERAL SUPPORT PRODUCTION (SECURITY)' as qc2,0 as qc3,0 as qc4,if(refinery=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)/pembagi,0)  as qc5 ,
  if(fraksinasi=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)/pembagi,0) as qc6,
  if(kemasan=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)/pembagi,0) as qc7,
  if(plastik=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)/pembagi,0) as qc8,
  if(margarine=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)/pembagi,0) as qc16,
  0 as qc9,0 as qc10,0 as qc11,0 as qc12,0 as qc13,0 as qc14, ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`)*-1,0) as qc15 from valpercct
  where (trim(valpercct.acc) between '52081812' and '52081812');
set generalSP = (select qc15 from temGeneralSupport2)+(select qc15 from temGeneralSupport3);
drop temporary table if exists temGeneralSupport1;
 create temporary table temGeneralSupport1 as
  select '8' as qc1,'GENERAL SUPPORT PRODUCTION (PRODUCTION)' as qc2,0 as qc3,0 as qc4,(sum(acd.val*if(acd.dk='D',1,-1))+ generalSP )* a.`REFINERY`/100 as qc5 ,(sum(acd.val*if(acd.dk='D',1,-1))+generalSP) * a.`FRAKSINASI`/100 as qc6,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`KEMASAN`/100 as qc7, (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`PLASTIK`/100 as qc8,(sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`MARGARINE`/100 as qc16, 0 as qc9,0 as qc10,0 as qc11,0 as qc12, 0 as qc13,0 AS qc14,round((sum(acd.val*if(acd.dk='D',1,-1))*-1) - generalSP,2) as qc15
  from acd,prosenLHP a where
  period=pperiod and trim(cct)='121199';
if (ppil=1) then
select *,'BIAYA OVERHEAD PABRIK' as group_ from valpercct
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temqc
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temmaintenance
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temutility
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temutility1
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temrawmaterial
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temppic
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temBoiler
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport1
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport2
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport3
;
end if;
if (ppil=2) then
select sum(`111101 REFINERY`) as refinery,sum(`111102 FRAKSINASI`) as fraksinasi,sum(`111104 PLASTIK`) as plastik,sum(`111103 KEMASAN`) as kemasan,sum(`111107 MARGARINE`) as margarine from
(
select *,'BIAYA OVERHEAD PABRIK' as group_ from valpercct
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temqc
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temmaintenance
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temutility
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temutility1
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temrawmaterial
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temppic
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temBoiler
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport1
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport2
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport3
) as xtmp;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_BOP2
DROP PROCEDURE IF EXISTS `sp_BOP2`;
DELIMITER //
CREATE PROCEDURE `sp_BOP2`(pperiod varchar(4),ppil integer)
BEGIN
declare pembagi integer;
declare refinery integer;
declare fraksinasi integer;
declare plastik integer;
declare kemasan integer;
declare marsho integer;
declare generalSP double;
declare kemasanJerigen double;
declare kemasanBotol double;
declare kemasanPouch double;
declare stretch integer;
declare plastikinjection double;
declare plastikstrech double;
declare plastikblow double;
 set kemasanJerigen = (select prosen/100 as prosent from prosenbop where cct='111112' and period= pperiod and nama='foh_kemasan');
 set kemasanBotol = (select prosen/100 as prosent from prosenbop where cct='111113' and period= pperiod and nama='foh_kemasan');
 set kemasanPouch = (select prosen/100 as prosent from prosenbop where cct='111114' and period= pperiod and nama='foh_kemasan');
 set plastikinjection = (select prosen/100 as prosent from prosenbop where cct='111116' and period= pperiod and nama='foh_plastik');
 set plastikstrech = (select prosen/100 as prosent from prosenbop where cct='111117' and period= pperiod and nama='foh_plastik');
 set plastikblow= (select prosen/100 as prosent from prosenbop where cct='111118' and period= pperiod and nama='foh_plastik');
drop temporary table if exists valpercct;
create temporary table valpercct as
 select acc,name,sum(TotNS) as TotNS,sum(TotSD) as TotSD, sum(`111101a`) as `111101 REFINERY`, sum(`111102a`) as `111102 FRAKSINASI`,
 sum(`111103a`) as `111103 KEMASAN`,sum(`111104a`) as `111104 PLASTIK`,sum(`111115a`) as `111115 MARSHO`,sum(`111116a`) as `111116 INJECTON`,sum(`111117a`) as `111117 STRETCH BLOW`,sum(`111118a`) as `111118 BLOW MOULDING`,
 sum(`111112a`) as `111112 KEMASAN JERIGEN`, sum(`111113a`) as `111113 KEMASAN BOTOL`, sum(`111114a`) as `111114 KEMASAN POUCH & PILLOW`, sum(`121101a`) as `1211101 R&D_QC`, sum(`121102a`) as `121102 ENGINERING & MAINTENANCE`,
 sum(`121103a`) as `121103 UTILITY`,sum(`121104a`) as `121104 BOILER STEAM`,sum(`121105a`) as `121105 GD BAHAN KEMASAN & SPAREPART`,sum(`121106a`) as `121106 PPIC`,sum(`121199a`) as `121199 SUPPORT PRODUKSI UMUM`
from (
  select acd.acc,acc.name,acd.val*if(acd.dk='D',1,-1) as TotNS,if(left(cct,2)<='12',
  acd.val*if(acd.dk='D',1,-1),0) as TotSD, if(acd.cct=111101,acd.val*if(acd.dk='D',1,-1),0) as `111101a`
  ,if(acd.cct=111102,acd.val*if(acd.dk='D',1,-1),0) as `111102a`
  ,if(acd.cct=111103,acd.val*if(acd.dk='D',1,-1),0) as `111103a`
  ,if(acd.cct=111104,acd.val*if(acd.dk='D',1,-1),0) as `111104a`
  ,if(acd.cct=111115,acd.val*if(acd.dk='D',1,-1),0) as `111115a`
  ,if(acd.cct=111104,acd.val*plastikinjection * if(acd.dk='D',1,-1),0) as `111116a`
  ,if(acd.cct=111104,acd.val*plastikstrech * if(acd.dk='D',1,-1),0) as `111117a`
  ,if(acd.cct=111104,acd.val*plastikblow * if(acd.dk='D',1,-1),0) as `111118a`
  ,if(acd.cct=111103,acd.val*kemasanJerigen*if(acd.dk='D',1,-1),0) as `111112a`
  ,if(acd.cct=111103,acd.val*kemasanBotol*if(acd.dk='D',1,-1),0) as `111113a`
  ,if(acd.cct=111103,acd.val*kemasanPouch*if(acd.dk='D',1,-1),0) as `111114a`
  ,if(acd.cct=121101,acd.val*if(acd.dk='D',1,-1),0) as `121101a`
  ,if(acd.cct=121102,acd.val*if(acd.dk='D',1,-1),0) as `121102a`
  ,if(acd.cct=121103,acd.val*if(acd.dk='D',1,-1),0) as `121103a`
  ,if(acd.cct=121104,acd.val*if(acd.dk='D',1,-1),0) as `121104a`
  ,if(acd.cct=121105,acd.val*if(acd.dk='D',1,-1),0) as `121105a`
  ,if(acd.cct=121106,acd.val*if(acd.dk='D',1,-1),0) as `121106a`
  ,if(acd.cct=121199,acd.val*if(acd.dk='D',1,-1),0) as `121199a`
  from acd left outer join acc on acd.acc=acc.acc where period=pperiod and
  left(acd.acc,4)='5208' and left(cct,2)<='12'
) as xtmp group by acc;
set refinery  =(select if(round(sum(`111101 REFINERY`),2)>10,1,0) from valpercct );
set fraksinasi=(select if(round(sum(`111102 FRAKSINASI`),2)>10,1,0) from valpercct );
set kemasan   =(select if(round(sum(`111103 KEMASAN`),2)>10,1,0) from valpercct );
set plastik   =(select if(round(sum(`111104 PLASTIK`),2)>10,1,0) from valpercct );
set marsho   =(select if(round(sum(`111115 MARSHO`),2)>10,1,0) from valpercct );
set pembagi   = refinery + fraksinasi + kemasan + plastik + marsho ;
 drop temporary table if exists prosenMaintenance;
 create temporary table prosenMaintenance as
 select (sum(`111101 REFINERY`)/(sum(`111101 REFINERY`)+sum(`111102 FRAKSINASI`)+sum(`111103 KEMASAN`)+sum(`111104 PLASTIK`)+ifnull(sum(`111115 MARSHO`),0)))*100 as `REFINERY`,
 (sum(`111102 FRAKSINASI`)/(sum(`111101 REFINERY`)+sum(`111102 FRAKSINASI`)+sum(`111103 KEMASAN`)+sum(`111104 PLASTIK`)+ifnull(sum(`111115 MARSHO`),0)))*100 as `FRAKSINASI`,
 (sum(`111103 KEMASAN`)/(sum(`111101 REFINERY`)+sum(`111102 FRAKSINASI`)+sum(`111103 KEMASAN`)+sum(`111104 PLASTIK`)+ifnull(sum(`111115 MARSHO`),0)))*100 as `KEMASAN`,
 (sum(`111104 PLASTIK`)/(sum(`111101 REFINERY`)+sum(`111102 FRAKSINASI`)+sum(`111103 KEMASAN`)+sum(`111104 PLASTIK`)+ifnull(sum(`111115 MARSHO`),0)))*100 as `PLASTIK`,
 (sum(`111115 MARSHO`)/(sum(`111101 REFINERY`)+sum(`111102 FRAKSINASI`)+sum(`111103 KEMASAN`)+sum(`111104 PLASTIK`)+ifnull(sum(`111115 MARSHO`),0)))*100 as `MARSHO`
 
  from valpercct
 where left(valpercct.acc,7)='5208100' ;
drop temporary table if exists prosenLHP;
if (pperiod>'1106') then
 create temporary table prosenLHP as
 select (sum(`REFINERY1`)/sum(qty))*100 as `REFINERY` ,(sum(`FRAKSINASI1`)/sum(qty))*100 as `FRAKSINASI`, (sum(`KEMASAN1`)/sum(qty))*100 as `KEMASAN`, (sum(`PLASTIK1`)/sum(qty))*100 as `PLASTIK`,(sum(`MARSHO1`)/sum(qty))*100 as `MARSHO` from
 (select if(lhp.cct=111101 or lhp.cct=111105 or lhp.cct=111106,qty,0) as `REFINERY1` ,if(lhp.cct=111102,qty,0) as `FRAKSINASI1` ,if(lhp.cct=111103 or lhp.cct=111112 or lhp.cct=111113 or lhp.cct=111114,qty,0) as `KEMASAN1`,  if(lhp.cct = 111104  or lhp.cct = 111116 or lhp.cct = 111117 or lhp.cct = 111118 ,qty,0) as `PLASTIK1`,if(lhp.cct=111107 or lhp.cct=111110 ,qty,0) as `MARSHO1`,lhd.qty
 from lhp,lhd where period=pperiod and lhp.lhp=lhd.lhp and lhp.cct in('111101','111102','111103','111104','111105','111106','111107','111110','111112','111113','111114','111117') ) as tlhp ;
end if;
 drop temporary table if exists temQC;
 create temporary table temQC as
  select '1' as qc1,'QUALITY CONTROL' as qc2,0 as qc3,0 as qc4,if(refinery=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc5 ,if(fraksinasi=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc6,
  if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc7,if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc8,if(marsho=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc16 ,
  if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0)*plastikinjection as qc20,
  if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0)*plastikstrech as qc21,
  if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0)*plastikblow as qc22,
  if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))*kemasanJerigen/pembagi,0) as qc17 ,if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))*kemasanBotol/pembagi,0) as qc18 ,if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))*kemasanPouch/pembagi,0) as qc19 ,
  sum(acd.val*if(acd.dk='D',1,-1))*-1  as qc9,0 as qc10,0 as qc11,0 as qc12,0 as qc13,0 as qc14,0 as qc15
  from acd where left(acd.acc,1)=5
  and period=pperiod and trim(cct)='121101';
 drop temporary table if exists temMaintenance;
 create temporary table temMaintenance as
  select '2' as qc1,'MAINTENANCE' as qc2,0 as qc3,0 as qc4,sum(`121102 ENGINERING & MAINTENANCE`)* a.`REFINERY`/100 as qc5 ,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`FRAKSINASI`/100  as qc6,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`KEMASAN`/100 as qc7,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`PLASTIK`/100 as qc8,sum(`121102 ENGINERING & MAINTENANCE`)* a.`MARSHO`/100 as qc16,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`PLASTIK`*plastikinjection/100 as qc20,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`PLASTIK`*plastikstrech/100 as qc21,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`PLASTIK`*plastikblow/100 as qc22,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`KEMASAN`* kemasanJerigen/100 as qc17,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`KEMASAN`*kemasanBotol/100 as qc18,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`KEMASAN`*kemasanPouch/100 as qc19,
  0 as qc9, sum(`121102 ENGINERING & MAINTENANCE`)*-1 as qc10,0 as qc11,0 as qc12,0 as qc13,0 as qc14,0 as qc15  from valpercct,prosenMaintenance as a ;
drop temporary table if exists temUtility;
 create temporary table temUtility as
  select '3' as qc1,' UTILITY DILUAR LISTRIK (BERDASAR BEBAN LISTRIK)' as qc2,0 as qc3,0 as qc4,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111101' and nama='listrik' )/100 as qc5 ,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111102' and nama='listrik')/100 as qc6,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 as qc7,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik')/100 as qc8,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111115' and nama='listrik'),0)/100 as qc16,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik'),0)/100 * plastikinjection as qc20,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik'),0)/100 * plastikstrech as qc21,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik'),0)/100 * plastikblow as qc22,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 * kemasanJerigen as qc17,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 * kemasanBotol as qc18,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 * kemasanPouch  as qc19,
  0 as qc9,0 as qc10,sum(acd.val*if(acd.dk='D',1,-1))*-1 as qc11,0 as qc12,0 as qc13,0 as qc14,0 as qc15
  from acd where left(acd.acc,1)=5 and acd.acc<>'52080402' and acd.period=pperiod and trim(acd.cct)='121103';
  drop temporary table if exists temUtility1;
 create temporary table temUtility1 as
  select '4' as qc1,' UTILITY KHUSUS LISTRIK (BERDASAR BEBAN LISTRIK)' as qc2,0 as qc3,0 as qc4,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111101' and nama='listrik' )/100 as qc5 ,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111102' and nama='listrik')/100 as qc6,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 as qc7,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik')/100 as qc8,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111115' and nama='listrik'),0)/100 as qc16,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik'),0)/100 * plastikinjection as qc20,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik'),0)/100 * plastikstrech as qc21,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik'),0)/100 * plastikblow as qc22,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 * kemasanJerigen as qc17,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 * kemasanBotol as qc18,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 * kemasanPouch as qc19,
  0 as qc9,0 as qc10,sum(acd.val*if(acd.dk='D',1,-1))*-1 as qc11,0 as qc12,0 as qc13,0 as qc14,0 as qc15
  from acd where acd.acc='52080402' and acd.period=pperiod and trim(acd.cct)='121103';
drop temporary table if exists temrawmaterial;
create temporary table temrawmaterial as
  select '5' as qc1,'RAW MATERIAL, PACKAGING & FACTORY SUPPLIES WAREHOUSE' as qc2,0 as qc3,0 as qc4,ifnull(if(refinery=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111101' and nama='karyawan')/100,0),0) as qc5 ,ifnull(if(fraksinasi=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111102' and nama='karyawan')/100,0),0) as qc6,
  if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')/100,0) as qc7, if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan')/100,0) as qc8,
  if(marsho=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111115' and nama='karyawan')/100,0) as qc16,
  if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan')/100,0) * plastikinjection as qc20,
  if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan')/100,0) * plastikstrech as qc21,
  if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan')/100,0) * plastikblow as qc22,
  if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')* kemasanJerigen/100,0) as qc17,
  if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')* kemasanBotol/100,0) as qc18,
  if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')* kemasanPouch/100,0) as qc19,
  0 as qc9,0 as qc10,0 as qc11,0 as qc12,ifnull(sum(acd.val*if(acd.dk='D',1,-1))*-1,0) as qc13,0 as qc14,0 as qc15 from acd where
  period=pperiod and trim(cct)='121105' and left(acd.acc,4)='5208';
drop temporary table if exists temppic;
create temporary table temppic as
  select '6' as qc1,' PRODUCT PLANNING INVENTORY CONTROL' as qc2,0 as qc3,0 as qc4,ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc5 ,ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc6,
  ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc7, ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc8,ifnull(if(marsho=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0),0) as qc16,
  ifnull(if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi * plastikinjection,0),0) as qc20,
  ifnull(if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi * plastikstrech,0),0) as qc21,
  ifnull(if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi * plastikblow,0),0) as qc22,
  ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi * kemasanJerigen,0) as qc17,
  ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi * kemasanBotol,0) as qc18,
  ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi * kemasanPouch,0) as qc19,
  0 as qc9, 0 as qc10,0 as qc11,0 as qc12,0 as qc13, ifnull(sum(acd.val*if(acd.dk='D',1,-1))*-1,0) as qc14,0 as qc15 from acd where left(acd.acc,1)=5
  and period=pperiod and trim(cct)='121106';
drop temporary table if exists temBoiler;
 create temporary table temBoiler as
  select '7' as qc1,' BOILER & STEAM' as qc2,0 as qc3,0 as qc4,ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`REFINERY`/100,0) as qc5 ,ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`FRAKSINASI`/100,0) as qc6,
  ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`KEMASAN`/100,0) + ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`PLASTIK`/100,0) as qc7, 0 as q8,ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`MARSHO`/100,0) as qc16 ,
  0 as qc20,
  0 as qc21,
  0 as qc22,
  (ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`KEMASAN`/100,0) + ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`PLASTIK`/100,0))* kemasanJerigen as qc17,
  (ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`KEMASAN`/100,0) + ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`PLASTIK`/100,0))* kemasanBotol as qc18,
  (ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`KEMASAN`/100,0) + ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`PLASTIK`/100,0))* kemasanPouch as qc19,
  0 as qc9,0 as qc10,0 as qc11,ifnull(sum(acd.val*if(acd.dk='D',1,-1))*-1,0) as qc12,0 as qc13,0 AS qc14,0 as qc15
  from acd,prosenLHP a where
  period=pperiod and trim(cct)='121104';
drop temporary table if exists temGeneralSupport2;
 create temporary table temGeneralSupport2 as
  select '9' as qc1,'GENERAL SUPPORT PRODUCTION (GAJI STAFF)' as qc2,0 as qc3,0 as qc4,sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111101' and nama='karyawan')/100  as qc5 ,
  sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111102' and nama='karyawan')/100  as qc6,
  sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')/100 as qc7,
  sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan')/100 as qc8,
  ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111115' and nama='karyawan'),0)/100 as qc16,
  ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan'),0)* plastikinjection/100 as qc20,
  ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan'),0)* plastikstrech/100 as qc21,
  ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan'),0)* plastikblow/100 as qc22,
  sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')* kemasanJerigen/100 as qc17,
  sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')* kemasanBotol/100 as qc18,
  sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')* kemasanPouch/100 as qc19,
  0 as qc9,0 as qc10,0 as qc11,0 as qc12,0 as qc13,0 as qc14, sum(`121199 SUPPORT PRODUKSI UMUM`)*-1 as qc15 from valpercct
  where (trim(valpercct.acc) between '52081401' and '52081414') or (trim(valpercct.acc) between '52080101' and '52080215') or trim(valpercct.acc)='52081605';
drop temporary table if exists temGeneralSupport3;
 create temporary table temGeneralSupport3 as
  select '10' as qc1,'GENERAL SUPPORT PRODUCTION (SECURITY)' as qc2,0 as qc3,0 as qc4,if(refinery=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)/pembagi,0)  as qc5 ,
  if(fraksinasi=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)/pembagi,0) as qc6,
  if(kemasan=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)/pembagi,0) as qc7,
  if(plastik=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)/pembagi,0) as qc8,
  if(marsho=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)/pembagi,0) as qc16,
  if(plastik=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)* plastikinjection/pembagi,0) as qc20,
  if(plastik=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)* plastikstrech/pembagi,0) as qc21,
  if(plastik=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)* plastikblow/pembagi,0) as qc22,
  if(kemasan=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)* kemasanJerigen /pembagi,0) as qc17,
  if(kemasan=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)* kemasanBotol /pembagi,0) as qc18,
  if(kemasan=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)* kemasanPouch /pembagi,0) as qc19,
  0 as qc9,0 as qc10,0 as qc11,0 as qc12,0 as qc13,0 as qc14, ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`)*-1,0) as qc15 from valpercct
  where (trim(valpercct.acc) between '52081812' and '52081812');
set generalSP = (select qc15 from temGeneralSupport2)+(select qc15 from temGeneralSupport3);
drop temporary table if exists temGeneralSupport1;
 create temporary table temGeneralSupport1 as
  select '8' as qc1,'GENERAL SUPPORT PRODUCTION (PRODUCTION)' as qc2,0 as qc3,0 as qc4,(sum(acd.val*if(acd.dk='D',1,-1))+ generalSP )* a.`REFINERY`/100 as qc5 ,(sum(acd.val*if(acd.dk='D',1,-1))+generalSP) * a.`FRAKSINASI`/100 as qc6,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`KEMASAN`/100 as qc7, (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`PLASTIK`/100 as qc8,(sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`MARSHO`/100 as qc16,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`PLASTIK`* plastikinjection/100 as qc20,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`PLASTIK`* plastikstrech/100 as qc21,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`PLASTIK`* plastikblow/100 as qc22,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`KEMASAN`* kemasanJerigen/100 as qc17,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`KEMASAN`* kemasanBotol/100 as qc18,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`KEMASAN`* kemasanPouch/100 as qc19,
  0 as qc9,0 as qc10,0 as qc11,0 as qc12, 0 as qc13,0 AS qc14,round((sum(acd.val*if(acd.dk='D',1,-1))*-1) - generalSP,2) as qc15
  from acd,prosenLHP a where
  period=pperiod and trim(cct)='121199';
if (ppil=1) then
select *,'BIAYA OVERHEAD PABRIK' as group_ from valpercct
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temqc
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temmaintenance
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temutility
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temutility1
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temrawmaterial
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temppic
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temBoiler
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport1
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport2
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport3
;
end if;
if (ppil=2) then
select sum(`111101 REFINERY`) as refinery,sum(`111102 FRAKSINASI`) as fraksinasi,sum(`111104 PLASTIK`) as plastik,sum(`111103 KEMASAN`) as kemasan,sum(`111115 MARSHO`) as marsho from
(
select *,'BIAYA OVERHEAD PABRIK' as group_ from valpercct
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temqc
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temmaintenance
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temutility
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temutility1
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temrawmaterial
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temppic
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temBoiler
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport1
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport2
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport3
) as xtmp;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_BOP3
DROP PROCEDURE IF EXISTS `sp_BOP3`;
DELIMITER //
CREATE PROCEDURE `sp_BOP3`(pperiod varchar(4),ppil integer)
BEGIN
declare pembagi integer;
declare refinery integer;
declare fraksinasi integer;
declare plastik integer;
declare kemasan integer;
declare marsho integer;
declare generalSP double;
declare kemasanJerigen double;
declare kemasanBotol double;
declare kemasanPouch double;
declare stretch integer;
declare plastikinjection double;
declare plastikinjectionpreform double;
declare plastikstrech double;
declare plastikblow double;
 set kemasanJerigen = (select prosen/100 as prosent from prosenbop where cct='111112' and period= pperiod and nama='foh_kemasan');
 set kemasanBotol = (select prosen/100 as prosent from prosenbop where cct='111113' and period= pperiod and nama='foh_kemasan');
 set kemasanPouch = (select prosen/100 as prosent from prosenbop where cct='111114' and period= pperiod and nama='foh_kemasan');
 set plastikinjection = (select prosen/100 as prosent from prosenbop where cct='111116' and period= pperiod and nama='foh_plastik');
 set plastikstrech = (select prosen/100 as prosent from prosenbop where cct='111117' and period= pperiod and nama='foh_plastik');
 set plastikblow= (select prosen/100 as prosent from prosenbop where cct='111118' and period= pperiod and nama='foh_plastik');
 set plastikinjectionpreform = (select prosen/100 as prosent from prosenbop where cct='111119' and period= pperiod and nama='foh_plastik');
drop temporary table if exists valpercct;
create temporary table valpercct as
 select acc,name,sum(TotNS) as TotNS,sum(TotSD) as TotSD, sum(`111101a`) as `111101 REFINERY`, sum(`111102a`) as `111102 FRAKSINASI`,
 sum(`111103a`) as `111103 KEMASAN`,sum(`111104a`) as `111104 PLASTIK`,sum(`111115a`) as `111115 MARSHO`,sum(`111116a`) as `111116 INJECTON TUTUP`,sum(`111119a`) as `111119 INJECTON PREFORM`,sum(`111117a`) as `111117 STRETCH BLOW`,sum(`111118a`) as `111118 BLOW MOULDING`,
 sum(`111112a`) as `111112 KEMASAN JERIGEN`, sum(`111113a`) as `111113 KEMASAN BOTOL`, sum(`111114a`) as `111114 KEMASAN POUCH & PILLOW`, sum(`121101a`) as `1211101 R&D_QC`, sum(`121102a`) as `121102 ENGINERING & MAINTENANCE`,
 sum(`121103a`) as `121103 UTILITY`,sum(`121104a`) as `121104 BOILER STEAM`,sum(`121105a`) as `121105 GD BAHAN KEMASAN & SPAREPART`,sum(`121106a`) as `121106 PPIC`,sum(`121199a`) as `121199 SUPPORT PRODUKSI UMUM`
from (
  select acd.acc,acc.name,acd.val*if(acd.dk='D',1,-1) as TotNS,if(left(cct,2)<='12',
  acd.val*if(acd.dk='D',1,-1),0) as TotSD, if(acd.cct=111101,acd.val*if(acd.dk='D',1,-1),0) as `111101a`
  ,if(acd.cct=111102,acd.val*if(acd.dk='D',1,-1),0) as `111102a`
  ,if(acd.cct=111103,acd.val*if(acd.dk='D',1,-1),0) as `111103a`
  ,if(acd.cct=111104,acd.val*if(acd.dk='D',1,-1),0) as `111104a`
  ,if(acd.cct=111115,acd.val*if(acd.dk='D',1,-1),0) as `111115a`
  ,if(acd.cct=111104,acd.val*plastikinjection * if(acd.dk='D',1,-1),0) as `111116a`
  ,if(acd.cct=111104,acd.val*plastikinjectionpreform * if(acd.dk='D',1,-1),0) as `111119a`
  ,if(acd.cct=111104,acd.val*plastikstrech * if(acd.dk='D',1,-1),0) as `111117a`
  ,if(acd.cct=111104,acd.val*plastikblow * if(acd.dk='D',1,-1),0) as `111118a`
  ,if(acd.cct=111103,acd.val*kemasanJerigen*if(acd.dk='D',1,-1),0) as `111112a`
  ,if(acd.cct=111103,acd.val*kemasanBotol*if(acd.dk='D',1,-1),0) as `111113a`
  ,if(acd.cct=111103,acd.val*kemasanPouch*if(acd.dk='D',1,-1),0) as `111114a`
  ,if(acd.cct=121101,acd.val*if(acd.dk='D',1,-1),0) as `121101a`
  ,if(acd.cct=121102,acd.val*if(acd.dk='D',1,-1),0) as `121102a`
  ,if(acd.cct=121103,acd.val*if(acd.dk='D',1,-1),0) as `121103a`
  ,if(acd.cct=121104,acd.val*if(acd.dk='D',1,-1),0) as `121104a`
  ,if(acd.cct=121105,acd.val*if(acd.dk='D',1,-1),0) as `121105a`
  ,if(acd.cct=121106,acd.val*if(acd.dk='D',1,-1),0) as `121106a`
  ,if(acd.cct=121199,acd.val*if(acd.dk='D',1,-1),0) as `121199a`
  from acd left outer join acc on acd.acc=acc.acc where period=pperiod and
  left(acd.acc,4)='5208' and left(cct,2)<='12'
) as xtmp group by acc;
set refinery  =(select if(round(sum(`111101 REFINERY`),2)>10,1,0) from valpercct );
set fraksinasi=(select if(round(sum(`111102 FRAKSINASI`),2)>10,1,0) from valpercct );
set kemasan   =(select if(round(sum(`111103 KEMASAN`),2)>10,1,0) from valpercct );
set plastik   =(select if(round(sum(`111104 PLASTIK`),2)>10,1,0) from valpercct );
set marsho   =(select if(round(sum(`111115 MARSHO`),2)>10,1,0) from valpercct );
set pembagi   = refinery + fraksinasi + kemasan + plastik + marsho ;
 drop temporary table if exists prosenMaintenance;
 create temporary table prosenMaintenance as
 select (sum(`111101 REFINERY`)/(sum(`111101 REFINERY`)+sum(`111102 FRAKSINASI`)+sum(`111103 KEMASAN`)+sum(`111104 PLASTIK`)+ifnull(sum(`111115 MARSHO`),0)))*100 as `REFINERY`,
 (sum(`111102 FRAKSINASI`)/(sum(`111101 REFINERY`)+sum(`111102 FRAKSINASI`)+sum(`111103 KEMASAN`)+sum(`111104 PLASTIK`)+ifnull(sum(`111115 MARSHO`),0)))*100 as `FRAKSINASI`,
 (sum(`111103 KEMASAN`)/(sum(`111101 REFINERY`)+sum(`111102 FRAKSINASI`)+sum(`111103 KEMASAN`)+sum(`111104 PLASTIK`)+ifnull(sum(`111115 MARSHO`),0)))*100 as `KEMASAN`,
 (sum(`111104 PLASTIK`)/(sum(`111101 REFINERY`)+sum(`111102 FRAKSINASI`)+sum(`111103 KEMASAN`)+sum(`111104 PLASTIK`)+ifnull(sum(`111115 MARSHO`),0)))*100 as `PLASTIK`,
 (sum(`111115 MARSHO`)/(sum(`111101 REFINERY`)+sum(`111102 FRAKSINASI`)+sum(`111103 KEMASAN`)+sum(`111104 PLASTIK`)+ifnull(sum(`111115 MARSHO`),0)))*100 as `MARSHO`
 
  from valpercct
 where left(valpercct.acc,7)='5208100' ;
drop temporary table if exists prosenLHP;
if (pperiod>'1106') then
 create temporary table prosenLHP as
 select (sum(`REFINERY1`)/sum(qty))*100 as `REFINERY` ,(sum(`FRAKSINASI1`)/sum(qty))*100 as `FRAKSINASI`, (sum(`KEMASAN1`)/sum(qty))*100 as `KEMASAN`, (sum(`PLASTIK1`)/sum(qty))*100 as `PLASTIK`,(sum(`MARSHO1`)/sum(qty))*100 as `MARSHO` from
 (select if(lhp.cct=111101 or lhp.cct=111105 or lhp.cct=111106,qty,0) as `REFINERY1` ,if(lhp.cct=111102,qty,0) as `FRAKSINASI1` ,if(lhp.cct=111103 or lhp.cct=111112 or lhp.cct=111113 or lhp.cct=111114,qty,0) as `KEMASAN1`,  if(lhp.cct = 111104  or lhp.cct = 111116 or lhp.cct = 111117 or lhp.cct = 111118 ,qty,0) as `PLASTIK1`,if(lhp.cct=111107 or lhp.cct=111110 ,qty,0) as `MARSHO1`,lhd.qty
 from lhp,lhd where period=pperiod and lhp.lhp=lhd.lhp and lhp.cct in('111101','111102','111103','111104','111105','111106','111107','111110','111112','111113','111114','111117') ) as tlhp ;
end if;
 drop temporary table if exists temQC;
 create temporary table temQC as
  select '1' as qc1,'QUALITY CONTROL' as qc2,0 as qc3,0 as qc4,if(refinery=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc5 ,if(fraksinasi=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc6,
  if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc7,if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc8,if(marsho=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc16 ,
  if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0)*plastikinjection as qc20,
  if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0)*plastikinjectionpreform as qc23,
  if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0)*plastikstrech as qc21,
  if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0)*plastikblow as qc22,
  if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))*kemasanJerigen/pembagi,0) as qc17 ,if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))*kemasanBotol/pembagi,0) as qc18 ,if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))*kemasanPouch/pembagi,0) as qc19 ,
  sum(acd.val*if(acd.dk='D',1,-1))*-1  as qc9,0 as qc10,0 as qc11,0 as qc12,0 as qc13,0 as qc14,0 as qc15
  from acd where left(acd.acc,1)=5
  and period=pperiod and trim(cct)='121101';
 drop temporary table if exists temMaintenance;
 create temporary table temMaintenance as
  select '2' as qc1,'MAINTENANCE' as qc2,0 as qc3,0 as qc4,sum(`121102 ENGINERING & MAINTENANCE`)* a.`REFINERY`/100 as qc5 ,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`FRAKSINASI`/100  as qc6,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`KEMASAN`/100 as qc7,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`PLASTIK`/100 as qc8,sum(`121102 ENGINERING & MAINTENANCE`)* a.`MARSHO`/100 as qc16,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`PLASTIK`*plastikinjection/100 as qc20,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`PLASTIK`*plastikinjectionpreform/100 as qc23,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`PLASTIK`*plastikstrech/100 as qc21,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`PLASTIK`*plastikblow/100 as qc22,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`KEMASAN`* kemasanJerigen/100 as qc17,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`KEMASAN`*kemasanBotol/100 as qc18,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`KEMASAN`*kemasanPouch/100 as qc19,
  0 as qc9, sum(`121102 ENGINERING & MAINTENANCE`)*-1 as qc10,0 as qc11,0 as qc12,0 as qc13,0 as qc14,0 as qc15  from valpercct,prosenMaintenance as a ;
drop temporary table if exists temUtility;
 create temporary table temUtility as
  select '3' as qc1,' UTILITY DILUAR LISTRIK (BERDASAR BEBAN LISTRIK)' as qc2,0 as qc3,0 as qc4,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111101' and nama='listrik' )/100 as qc5 ,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111102' and nama='listrik')/100 as qc6,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 as qc7,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik')/100 as qc8,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111115' and nama='listrik'),0)/100 as qc16,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik'),0)/100 * plastikinjection as qc20,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik'),0)/100 * plastikinjectionpreform as qc23,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik'),0)/100 * plastikstrech as qc21,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik'),0)/100 * plastikblow as qc22,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 * kemasanJerigen as qc17,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 * kemasanBotol as qc18,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 * kemasanPouch  as qc19,
  0 as qc9,0 as qc10,sum(acd.val*if(acd.dk='D',1,-1))*-1 as qc11,0 as qc12,0 as qc13,0 as qc14,0 as qc15
  from acd where left(acd.acc,1)=5 and acd.acc<>'52080402' and acd.period=pperiod and trim(acd.cct)='121103';
  drop temporary table if exists temUtility1;
 create temporary table temUtility1 as
  select '4' as qc1,' UTILITY KHUSUS LISTRIK (BERDASAR BEBAN LISTRIK)' as qc2,0 as qc3,0 as qc4,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111101' and nama='listrik' )/100 as qc5 ,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111102' and nama='listrik')/100 as qc6,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 as qc7,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik')/100 as qc8,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111115' and nama='listrik'),0)/100 as qc16,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik'),0)/100 * plastikinjection as qc20,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik'),0)/100 * plastikinjectionpreform as qc23,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik'),0)/100 * plastikstrech as qc21,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik'),0)/100 * plastikblow as qc22,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 * kemasanJerigen as qc17,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 * kemasanBotol as qc18,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 * kemasanPouch as qc19,
  0 as qc9,0 as qc10,sum(acd.val*if(acd.dk='D',1,-1))*-1 as qc11,0 as qc12,0 as qc13,0 as qc14,0 as qc15
  from acd where acd.acc='52080402' and acd.period=pperiod and trim(acd.cct)='121103';
drop temporary table if exists temrawmaterial;
create temporary table temrawmaterial as
  select '5' as qc1,'RAW MATERIAL, PACKAGING & FACTORY SUPPLIES WAREHOUSE' as qc2,0 as qc3,0 as qc4,ifnull(if(refinery=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111101' and nama='karyawan')/100,0),0) as qc5 ,ifnull(if(fraksinasi=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111102' and nama='karyawan')/100,0),0) as qc6,
  if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')/100,0) as qc7, if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan')/100,0) as qc8,
  if(marsho=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111115' and nama='karyawan')/100,0) as qc16,
  if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan')/100,0) * plastikinjection as qc20,
  if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan')/100,0) * plastikinjectionpreform as qc23,
  if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan')/100,0) * plastikstrech as qc21,
  if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan')/100,0) * plastikblow as qc22,
  if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')* kemasanJerigen/100,0) as qc17,
  if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')* kemasanBotol/100,0) as qc18,
  if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')* kemasanPouch/100,0) as qc19,
  0 as qc9,0 as qc10,0 as qc11,0 as qc12,ifnull(sum(acd.val*if(acd.dk='D',1,-1))*-1,0) as qc13,0 as qc14,0 as qc15 from acd where
  period=pperiod and trim(cct)='121105' and left(acd.acc,4)='5208';
drop temporary table if exists temppic;
create temporary table temppic as
  select '6' as qc1,' PRODUCT PLANNING INVENTORY CONTROL' as qc2,0 as qc3,0 as qc4,ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc5 ,ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc6,
  ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc7, ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc8,ifnull(if(marsho=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0),0) as qc16,
  ifnull(if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi * plastikinjection,0),0) as qc20,
  ifnull(if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi * plastikinjectionpreform,0),0) as qc23,
  ifnull(if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi * plastikstrech,0),0) as qc21,
  ifnull(if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi * plastikblow,0),0) as qc22,
  ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi * kemasanJerigen,0) as qc17,
  ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi * kemasanBotol,0) as qc18,
  ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi * kemasanPouch,0) as qc19,
  0 as qc9, 0 as qc10,0 as qc11,0 as qc12,0 as qc13, ifnull(sum(acd.val*if(acd.dk='D',1,-1))*-1,0) as qc14,0 as qc15 from acd where left(acd.acc,1)=5
  and period=pperiod and trim(cct)='121106';
drop temporary table if exists temBoiler;
 create temporary table temBoiler as
  select '7' as qc1,' BOILER & STEAM' as qc2,0 as qc3,0 as qc4,ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`REFINERY`/100,0) as qc5 ,ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`FRAKSINASI`/100,0) as qc6,
  ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`KEMASAN`/100,0) + ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`PLASTIK`/100,0) as qc7, 0 as q8,ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`MARSHO`/100,0) as qc16 ,
  0 as qc20,
  0 as qc23,
  0 as qc21,
  0 as qc22,
  (ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`KEMASAN`/100,0) + ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`PLASTIK`/100,0))* kemasanJerigen as qc17,
  (ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`KEMASAN`/100,0) + ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`PLASTIK`/100,0))* kemasanBotol as qc18,
  (ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`KEMASAN`/100,0) + ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`PLASTIK`/100,0))* kemasanPouch as qc19,
  0 as qc9,0 as qc10,0 as qc11,ifnull(sum(acd.val*if(acd.dk='D',1,-1))*-1,0) as qc12,0 as qc13,0 AS qc14,0 as qc15
  from acd,prosenLHP a where
  period=pperiod and trim(cct)='121104';
drop temporary table if exists temGeneralSupport2;
 create temporary table temGeneralSupport2 as
  select '9' as qc1,'GENERAL SUPPORT PRODUCTION (GAJI STAFF)' as qc2,0 as qc3,0 as qc4,sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111101' and nama='karyawan')/100  as qc5 ,
  sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111102' and nama='karyawan')/100  as qc6,
  sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')/100 as qc7,
  sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan')/100 as qc8,
  ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111115' and nama='karyawan'),0)/100 as qc16,
  ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan'),0)* plastikinjection/100 as qc20,
  ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan'),0)* plastikinjectionpreform/100 as qc23,
  ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan'),0)* plastikstrech/100 as qc21,
  ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan'),0)* plastikblow/100 as qc22,
  sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')* kemasanJerigen/100 as qc17,
  sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')* kemasanBotol/100 as qc18,
  sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')* kemasanPouch/100 as qc19,
  0 as qc9,0 as qc10,0 as qc11,0 as qc12,0 as qc13,0 as qc14, sum(`121199 SUPPORT PRODUKSI UMUM`)*-1 as qc15 from valpercct
  where (trim(valpercct.acc) between '52081401' and '52081414') or (trim(valpercct.acc) between '52080101' and '52080215') or trim(valpercct.acc)='52081605';
drop temporary table if exists temGeneralSupport3;
 create temporary table temGeneralSupport3 as
  select '10' as qc1,'GENERAL SUPPORT PRODUCTION (SECURITY)' as qc2,0 as qc3,0 as qc4,if(refinery=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)/pembagi,0)  as qc5 ,
  if(fraksinasi=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)/pembagi,0) as qc6,
  if(kemasan=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)/pembagi,0) as qc7,
  if(plastik=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)/pembagi,0) as qc8,
  if(marsho=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)/pembagi,0) as qc16,
  if(plastik=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)* plastikinjection/pembagi,0) as qc20,
  if(plastik=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)* plastikinjectionpreform/pembagi,0) as qc23,
  if(plastik=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)* plastikstrech/pembagi,0) as qc21,
  if(plastik=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)* plastikblow/pembagi,0) as qc22,
  if(kemasan=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)* kemasanJerigen /pembagi,0) as qc17,
  if(kemasan=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)* kemasanBotol /pembagi,0) as qc18,
  if(kemasan=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)* kemasanPouch /pembagi,0) as qc19,
  0 as qc9,0 as qc10,0 as qc11,0 as qc12,0 as qc13,0 as qc14, ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`)*-1,0) as qc15 from valpercct
  where (trim(valpercct.acc) between '52081812' and '52081812');
set generalSP = (select qc15 from temGeneralSupport2)+(select qc15 from temGeneralSupport3);
drop temporary table if exists temGeneralSupport1;
 create temporary table temGeneralSupport1 as
  select '8' as qc1,'GENERAL SUPPORT PRODUCTION (PRODUCTION)' as qc2,0 as qc3,0 as qc4,(sum(acd.val*if(acd.dk='D',1,-1))+ generalSP )* a.`REFINERY`/100 as qc5 ,(sum(acd.val*if(acd.dk='D',1,-1))+generalSP) * a.`FRAKSINASI`/100 as qc6,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`KEMASAN`/100 as qc7, (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`PLASTIK`/100 as qc8,(sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`MARSHO`/100 as qc16,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`PLASTIK`* plastikinjection/100 as qc20,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`PLASTIK`* plastikinjectionpreform/100 as qc23,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`PLASTIK`* plastikstrech/100 as qc21,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`PLASTIK`* plastikblow/100 as qc22,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`KEMASAN`* kemasanJerigen/100 as qc17,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`KEMASAN`* kemasanBotol/100 as qc18,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`KEMASAN`* kemasanPouch/100 as qc19,
  0 as qc9,0 as qc10,0 as qc11,0 as qc12, 0 as qc13,0 AS qc14,round((sum(acd.val*if(acd.dk='D',1,-1))*-1) - generalSP,2) as qc15
  from acd,prosenLHP a where
  period=pperiod and trim(cct)='121199';
if (ppil=1) then
select *,'BIAYA OVERHEAD PABRIK' as group_ from valpercct
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temqc
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temmaintenance
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temutility
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temutility1
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temrawmaterial
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temppic
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temBoiler
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport1
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport2
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport3
;
end if;
if (ppil=2) then
select sum(`111101 REFINERY`) as refinery,sum(`111102 FRAKSINASI`) as fraksinasi,sum(`111104 PLASTIK`) as plastik,sum(`111103 KEMASAN`) as kemasan,sum(`111115 MARSHO`) as marsho from
(
select *,'BIAYA OVERHEAD PABRIK' as group_ from valpercct
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temqc
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temmaintenance
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temutility
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temutility1
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temrawmaterial
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temppic
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temBoiler
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport1
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport2
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport3
) as xtmp;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_BOP4
DROP PROCEDURE IF EXISTS `sp_BOP4`;
DELIMITER //
CREATE PROCEDURE `sp_BOP4`(pperiod varchar(4),ppil integer)
BEGIN
declare pembagi integer;
declare refinery integer;
declare fraksinasi integer;
declare plastik integer;
declare kemasan integer;
declare marsho integer;
declare generalSP double;
declare kemasanJerigen double;
declare kemasanBotol double;
declare kemasanPouch double;
declare stretch integer;
declare plastikinjection double;
declare plastikinjectioninner double;
declare plastikinjectionouter double;
declare plastikinjectionpreform double;
declare plastikstrech double;
declare plastikblow double;
 set kemasanJerigen = (select prosen/100 as prosent from prosenbop where cct='111112' and period= pperiod and nama='foh_kemasan');
 set kemasanBotol = (select prosen/100 as prosent from prosenbop where cct='111113' and period= pperiod and nama='foh_kemasan');
 set kemasanPouch = (select prosen/100 as prosent from prosenbop where cct='111114' and period= pperiod and nama='foh_kemasan');
 set plastikinjection = (select prosen/100 as prosent from prosenbop where cct='111116' and period= pperiod and nama='foh_plastik');
 set plastikstrech = (select prosen/100 as prosent from prosenbop where cct='111117' and period= pperiod and nama='foh_plastik');
 set plastikblow= (select prosen/100 as prosent from prosenbop where cct='111118' and period= pperiod and nama='foh_plastik');
 set plastikinjectionpreform = (select prosen/100 as prosent from prosenbop where cct='111119' and period= pperiod and nama='foh_plastik');
 set plastikinjectionouter = (select prosen/100 as prosent from prosenbop where cct='111120' and period= pperiod and nama='foh_plastik');
 set plastikinjectioninner = (select prosen/100 as prosent from prosenbop where cct='111121' and period= pperiod and nama='foh_plastik');
drop temporary table if exists valpercct;
create temporary table valpercct as
 select acc,name,sum(TotNS) as TotNS,sum(TotSD) as TotSD, sum(`111101a`) as `111101 REFINERY`, sum(`111102a`) as `111102 FRAKSINASI`,
 sum(`111103a`) as `111103 KEMASAN`,sum(`111104a`) as `111104 PLASTIK`,sum(`111115a`) as `111115 MARSHO`,sum(`111116a`) as `111116 INJECTON TUTUP`,sum(`111119a`) as `111119 INJECTON PREFORM`,sum(`111117a`) as `111117 STRETCH BLOW`,sum(`111118a`) as `111118 BLOW MOULDING`,
 sum(`111120a`) as `111120 INJECTON OUTER`,sum(`111121a`) as `111121 INJECTON INNER`,
 sum(`111112a`) as `111112 KEMASAN JERIGEN`, sum(`111113a`) as `111113 KEMASAN BOTOL`, sum(`111114a`) as `111114 KEMASAN POUCH & PILLOW`, sum(`121101a`) as `1211101 R&D_QC`, sum(`121102a`) as `121102 ENGINERING & MAINTENANCE`,
 sum(`121103a`) as `121103 UTILITY`,sum(`121104a`) as `121104 BOILER STEAM`,sum(`121105a`) as `121105 GD BAHAN KEMASAN & SPAREPART`,sum(`121106a`) as `121106 PPIC`,sum(`121199a`) as `121199 SUPPORT PRODUKSI UMUM`
from (
  select acd.acc,acc.name,acd.val*if(acd.dk='D',1,-1) as TotNS,if(left(cct,2)<='12',
  acd.val*if(acd.dk='D',1,-1),0) as TotSD, if(acd.cct=111101,acd.val*if(acd.dk='D',1,-1),0) as `111101a`
  ,if(acd.cct=111102,acd.val*if(acd.dk='D',1,-1),0) as `111102a`
  ,if(acd.cct=111103,acd.val*if(acd.dk='D',1,-1),0) as `111103a`
  ,if(acd.cct=111104,acd.val*if(acd.dk='D',1,-1),0) as `111104a`
  ,if(acd.cct=111115,acd.val*if(acd.dk='D',1,-1),0) as `111115a`
  ,if(acd.cct=111104,acd.val*plastikinjection * if(acd.dk='D',1,-1),0) as `111116a`
  ,if(acd.cct=111104,acd.val*plastikinjectionpreform * if(acd.dk='D',1,-1),0) as `111119a`
  ,if(acd.cct=111104,acd.val*plastikinjectionouter * if(acd.dk='D',1,-1),0) as `111120a`
  ,if(acd.cct=111104,acd.val*plastikinjectioninner * if(acd.dk='D',1,-1),0) as `111121a`
  ,if(acd.cct=111104,acd.val*plastikstrech * if(acd.dk='D',1,-1),0) as `111117a`
  ,if(acd.cct=111104,acd.val*plastikblow * if(acd.dk='D',1,-1),0) as `111118a`
  ,if(acd.cct=111103,acd.val*kemasanJerigen*if(acd.dk='D',1,-1),0) as `111112a`
  ,if(acd.cct=111103,acd.val*kemasanBotol*if(acd.dk='D',1,-1),0) as `111113a`
  ,if(acd.cct=111103,acd.val*kemasanPouch*if(acd.dk='D',1,-1),0) as `111114a`
  ,if(acd.cct=121101,acd.val*if(acd.dk='D',1,-1),0) as `121101a`
  ,if(acd.cct=121102,acd.val*if(acd.dk='D',1,-1),0) as `121102a`
  ,if(acd.cct=121103,acd.val*if(acd.dk='D',1,-1),0) as `121103a`
  ,if(acd.cct=121104,acd.val*if(acd.dk='D',1,-1),0) as `121104a`
  ,if(acd.cct=121105,acd.val*if(acd.dk='D',1,-1),0) as `121105a`
  ,if(acd.cct=121106,acd.val*if(acd.dk='D',1,-1),0) as `121106a`
  ,if(acd.cct=121199,acd.val*if(acd.dk='D',1,-1),0) as `121199a`
  from acd left outer join acc on acd.acc=acc.acc where period=pperiod and
  left(acd.acc,4)='5208' and left(cct,2)<='12'
) as xtmp group by acc;
set refinery  =(select if(round(sum(`111101 REFINERY`),2)>10,1,0) from valpercct );
set fraksinasi=(select if(round(sum(`111102 FRAKSINASI`),2)>10,1,0) from valpercct );
set kemasan   =(select if(round(sum(`111103 KEMASAN`),2)>10,1,0) from valpercct );
set plastik   =(select if(round(sum(`111104 PLASTIK`),2)>10,1,0) from valpercct );
set marsho   =(select if(round(sum(`111115 MARSHO`),2)>10,1,0) from valpercct );
set pembagi   = refinery + fraksinasi + kemasan + plastik + marsho ;
 drop temporary table if exists prosenMaintenance;
 create temporary table prosenMaintenance as
 select (sum(`111101 REFINERY`)/(sum(`111101 REFINERY`)+sum(`111102 FRAKSINASI`)+sum(`111103 KEMASAN`)+sum(`111104 PLASTIK`)+ifnull(sum(`111115 MARSHO`),0)))*100 as `REFINERY`,
 (sum(`111102 FRAKSINASI`)/(sum(`111101 REFINERY`)+sum(`111102 FRAKSINASI`)+sum(`111103 KEMASAN`)+sum(`111104 PLASTIK`)+ifnull(sum(`111115 MARSHO`),0)))*100 as `FRAKSINASI`,
 (sum(`111103 KEMASAN`)/(sum(`111101 REFINERY`)+sum(`111102 FRAKSINASI`)+sum(`111103 KEMASAN`)+sum(`111104 PLASTIK`)+ifnull(sum(`111115 MARSHO`),0)))*100 as `KEMASAN`,
 (sum(`111104 PLASTIK`)/(sum(`111101 REFINERY`)+sum(`111102 FRAKSINASI`)+sum(`111103 KEMASAN`)+sum(`111104 PLASTIK`)+ifnull(sum(`111115 MARSHO`),0)))*100 as `PLASTIK`,
 (sum(`111115 MARSHO`)/(sum(`111101 REFINERY`)+sum(`111102 FRAKSINASI`)+sum(`111103 KEMASAN`)+sum(`111104 PLASTIK`)+ifnull(sum(`111115 MARSHO`),0)))*100 as `MARSHO`
 
  from valpercct
 where left(valpercct.acc,7)='5208100' ;
drop temporary table if exists prosenLHP;
if (pperiod>'1106') then
 create temporary table prosenLHP as
 select (sum(`REFINERY1`)/sum(qty))*100 as `REFINERY` ,(sum(`FRAKSINASI1`)/sum(qty))*100 as `FRAKSINASI`, (sum(`KEMASAN1`)/sum(qty))*100 as `KEMASAN`, (sum(`PLASTIK1`)/sum(qty))*100 as `PLASTIK`,(sum(`MARSHO1`)/sum(qty))*100 as `MARSHO` from
 (select if(lhp.cct=111101 or lhp.cct=111105 or lhp.cct=111106,qty,0) as `REFINERY1` ,if(lhp.cct=111102,qty,0) as `FRAKSINASI1` ,if(lhp.cct=111103 or lhp.cct=111112 or lhp.cct=111113 or lhp.cct=111114,qty,0) as `KEMASAN1`,  if(lhp.cct = 111104  or lhp.cct = 111116 or lhp.cct = 111117 or lhp.cct = 111118 ,qty,0) as `PLASTIK1`,if(lhp.cct=111107 or lhp.cct=111110 ,qty,0) as `MARSHO1`,lhd.qty
 from lhp,lhd where period=pperiod and lhp.lhp not in ('LHP-1602-000340','LHP-1602-000391') and lhp.lhp=lhd.lhp and lhp.cct in('111101','111102','111103','111104','111105','111106','111107','111110','111112','111113','111114','111117') ) as tlhp ;
end if;
 drop temporary table if exists temQC;
 create temporary table temQC as
  select '1' as qc1,'QUALITY CONTROL' as qc2,0 as qc3,0 as qc4,if(refinery=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc5 ,if(fraksinasi=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc6,
  if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc7,if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc8,if(marsho=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc16 ,
  if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0)*plastikinjection as qc20,
  if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0)*plastikinjectionpreform as qc23,
  if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0)*plastikstrech as qc21,
  if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0)*plastikblow as qc22,
  if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0)*plastikinjectionouter as qc24,
  if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0)*plastikinjectioninner as qc25,
  if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))*kemasanJerigen/pembagi,0) as qc17 ,if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))*kemasanBotol/pembagi,0) as qc18 ,if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))*kemasanPouch/pembagi,0) as qc19 ,
  sum(acd.val*if(acd.dk='D',1,-1))*-1  as qc9,0 as qc10,0 as qc11,0 as qc12,0 as qc13,0 as qc14,0 as qc15
  from acd where left(acd.acc,1)=5
  and period=pperiod and trim(cct)='121101';
 drop temporary table if exists temMaintenance;
 create temporary table temMaintenance as
  select '2' as qc1,'MAINTENANCE' as qc2,0 as qc3,0 as qc4,sum(`121102 ENGINERING & MAINTENANCE`)* a.`REFINERY`/100 as qc5 ,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`FRAKSINASI`/100  as qc6,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`KEMASAN`/100 as qc7,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`PLASTIK`/100 as qc8,sum(`121102 ENGINERING & MAINTENANCE`)* a.`MARSHO`/100 as qc16,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`PLASTIK`*plastikinjection/100 as qc20,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`PLASTIK`*plastikinjectionpreform/100 as qc23,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`PLASTIK`*plastikstrech/100 as qc21,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`PLASTIK`*plastikblow/100 as qc22,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`PLASTIK`*plastikinjectionouter/100 as qc24,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`PLASTIK`*plastikinjectioninner/100 as qc25,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`KEMASAN`* kemasanJerigen/100 as qc17,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`KEMASAN`*kemasanBotol/100 as qc18,
  sum(`121102 ENGINERING & MAINTENANCE`)* a.`KEMASAN`*kemasanPouch/100 as qc19,
  0 as qc9, sum(`121102 ENGINERING & MAINTENANCE`)*-1 as qc10,0 as qc11,0 as qc12,0 as qc13,0 as qc14,0 as qc15  from valpercct,prosenMaintenance as a ;
drop temporary table if exists temUtility;
 create temporary table temUtility as
  select '3' as qc1,' UTILITY DILUAR LISTRIK (BERDASAR BEBAN LISTRIK)' as qc2,0 as qc3,0 as qc4,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111101' and nama='listrik' )/100 as qc5 ,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111102' and nama='listrik')/100 as qc6,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 as qc7,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik')/100 as qc8,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111115' and nama='listrik'),0)/100 as qc16,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik'),0)/100 * plastikinjection as qc20,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik'),0)/100 * plastikinjectionpreform as qc23,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik'),0)/100 * plastikstrech as qc21,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik'),0)/100 * plastikblow as qc22,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik'),0)/100 * plastikinjectionouter as qc24,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik'),0)/100 * plastikinjectioninner as qc25,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 * kemasanJerigen as qc17,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 * kemasanBotol as qc18,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 * kemasanPouch  as qc19,
  0 as qc9,0 as qc10,sum(acd.val*if(acd.dk='D',1,-1))*-1 as qc11,0 as qc12,0 as qc13,0 as qc14,0 as qc15
  from acd where left(acd.acc,1)=5 and acd.acc<>'52080402' and acd.period=pperiod and trim(acd.cct)='121103';
  drop temporary table if exists temUtility1;
 create temporary table temUtility1 as
  select '4' as qc1,' UTILITY KHUSUS LISTRIK (BERDASAR BEBAN LISTRIK)' as qc2,0 as qc3,0 as qc4,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111101' and nama='listrik' )/100 as qc5 ,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111102' and nama='listrik')/100 as qc6,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 as qc7,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik')/100 as qc8,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111115' and nama='listrik'),0)/100 as qc16,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik'),0)/100 * plastikinjection as qc20,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik'),0)/100 * plastikinjectionpreform as qc23,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik'),0)/100 * plastikstrech as qc21,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik'),0)/100 * plastikblow as qc22,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik'),0)/100 * plastikinjectionouter as qc24,
  sum(acd.val*if(acd.dk='D',1,-1))*ifnull((select prosen from prosenbop where period=pperiod and cct='111104' and nama='listrik'),0)/100 * plastikinjectioninner as qc25,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 * kemasanJerigen as qc17,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 * kemasanBotol as qc18,
  sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='listrik')/100 * kemasanPouch as qc19,
  0 as qc9,0 as qc10,sum(acd.val*if(acd.dk='D',1,-1))*-1 as qc11,0 as qc12,0 as qc13,0 as qc14,0 as qc15
  from acd where acd.acc='52080402' and acd.period=pperiod and trim(acd.cct)='121103';
drop temporary table if exists temrawmaterial;
create temporary table temrawmaterial as
  select '5' as qc1,'RAW MATERIAL, PACKAGING & FACTORY SUPPLIES WAREHOUSE' as qc2,0 as qc3,0 as qc4,ifnull(if(refinery=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111101' and nama='karyawan')/100,0),0) as qc5 ,ifnull(if(fraksinasi=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111102' and nama='karyawan')/100,0),0) as qc6,
  if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')/100,0) as qc7, if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan')/100,0) as qc8,
  if(marsho=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111115' and nama='karyawan')/100,0) as qc16,
  if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan')/100,0) * plastikinjection as qc20,
  if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan')/100,0) * plastikinjectionpreform as qc23,
  if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan')/100,0) * plastikstrech as qc21,
  if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan')/100,0) * plastikblow as qc22,
  if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan')/100,0) * plastikinjectionouter as qc24,
  if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan')/100,0) * plastikinjectioninner as qc25,
  if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')* kemasanJerigen/100,0) as qc17,
  if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')* kemasanBotol/100,0) as qc18,
  if(kemasan=1,sum(acd.val*if(acd.dk='D',1,-1))*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')* kemasanPouch/100,0) as qc19,
  0 as qc9,0 as qc10,0 as qc11,0 as qc12,ifnull(sum(acd.val*if(acd.dk='D',1,-1))*-1,0) as qc13,0 as qc14,0 as qc15 from acd where
  period=pperiod and trim(cct)='121105' and left(acd.acc,4)='5208';
drop temporary table if exists temppic;
create temporary table temppic as
  select '6' as qc1,' PRODUCT PLANNING INVENTORY CONTROL' as qc2,0 as qc3,0 as qc4,ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc5 ,ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc6,
  ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc7, ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0) as qc8,ifnull(if(marsho=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi,0),0) as qc16,
  ifnull(if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi * plastikinjection,0),0) as qc20,
  ifnull(if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi * plastikinjectionpreform,0),0) as qc23,
  ifnull(if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi * plastikstrech,0),0) as qc21,
  ifnull(if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi * plastikblow,0),0) as qc22,
  ifnull(if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi * plastikinjectionouter,0),0) as qc24,
  ifnull(if(plastik=1,sum(acd.val*if(acd.dk='D',1,-1))/pembagi * plastikinjectioninner,0),0) as qc25,
  ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi * kemasanJerigen,0) as qc17,
  ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi * kemasanBotol,0) as qc18,
  ifnull(sum(acd.val*if(acd.dk='D',1,-1))/pembagi * kemasanPouch,0) as qc19,
  0 as qc9, 0 as qc10,0 as qc11,0 as qc12,0 as qc13, ifnull(sum(acd.val*if(acd.dk='D',1,-1))*-1,0) as qc14,0 as qc15 from acd where left(acd.acc,1)=5
  and period=pperiod and trim(cct)='121106';
drop temporary table if exists temBoiler;
 create temporary table temBoiler as
  select '7' as qc1,' BOILER & STEAM' as qc2,0 as qc3,0 as qc4,ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`REFINERY`/100,0) as qc5 ,ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`FRAKSINASI`/100,0) as qc6,
  ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`KEMASAN`/100,0) + ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`PLASTIK`/100,0) as qc7, 0 as q8,ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`MARSHO`/100,0) as qc16 ,
  0 as qc20,
  0 as qc23,
  0 as qc21,
  0 as qc22,
  0 as qc24,
  0 as qc25,
  (ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`KEMASAN`/100,0) + ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`PLASTIK`/100,0))* kemasanJerigen as qc17,
  (ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`KEMASAN`/100,0) + ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`PLASTIK`/100,0))* kemasanBotol as qc18,
  (ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`KEMASAN`/100,0) + ifnull(sum(acd.val*if(acd.dk='D',1,-1))* a.`PLASTIK`/100,0))* kemasanPouch as qc19,
  0 as qc9,0 as qc10,0 as qc11,ifnull(sum(acd.val*if(acd.dk='D',1,-1))*-1,0) as qc12,0 as qc13,0 AS qc14,0 as qc15
  from acd,prosenLHP a where
  period=pperiod and trim(cct)='121104';
drop temporary table if exists temGeneralSupport2;
 create temporary table temGeneralSupport2 as
  select '9' as qc1,'GENERAL SUPPORT PRODUCTION (GAJI STAFF)' as qc2,0 as qc3,0 as qc4,sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111101' and nama='karyawan')/100  as qc5 ,
  sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111102' and nama='karyawan')/100  as qc6,
  sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')/100 as qc7,
  sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan')/100 as qc8,
  ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111115' and nama='karyawan'),0)/100 as qc16,
  ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan'),0)* plastikinjection/100 as qc20,
  ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan'),0)* plastikinjectionpreform/100 as qc23,
  ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan'),0)* plastikstrech/100 as qc21,
  ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan'),0)* plastikblow/100 as qc22,
  ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan'),0)* plastikinjectionouter/100 as qc24,
  ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111104' and nama='karyawan'),0)* plastikinjectioninner/100 as qc25,
  sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')* kemasanJerigen/100 as qc17,
  sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')* kemasanBotol/100 as qc18,
  sum(`121199 SUPPORT PRODUKSI UMUM`)*(select prosen from prosenbop where period=pperiod and cct='111103' and nama='karyawan')* kemasanPouch/100 as qc19,
  0 as qc9,0 as qc10,0 as qc11,0 as qc12,0 as qc13,0 as qc14, sum(`121199 SUPPORT PRODUKSI UMUM`)*-1 as qc15 from valpercct
  where (trim(valpercct.acc) between '52081401' and '52081414') or (trim(valpercct.acc) between '52080101' and '52080215') or trim(valpercct.acc)='52081605';
drop temporary table if exists temGeneralSupport3;
 create temporary table temGeneralSupport3 as
  select '10' as qc1,'GENERAL SUPPORT PRODUCTION (SECURITY)' as qc2,0 as qc3,0 as qc4,if(refinery=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)/pembagi,0)  as qc5 ,
  if(fraksinasi=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)/pembagi,0) as qc6,
  if(kemasan=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)/pembagi,0) as qc7,
  if(plastik=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)/pembagi,0) as qc8,
  if(marsho=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)/pembagi,0) as qc16,
  if(plastik=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)* plastikinjection/pembagi,0) as qc20,
  if(plastik=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)* plastikinjectionpreform/pembagi,0) as qc23,
  if(plastik=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)* plastikstrech/pembagi,0) as qc21,
  if(plastik=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)* plastikblow/pembagi,0) as qc22,
  if(plastik=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)* plastikinjectionouter/pembagi,0) as qc24,
  if(plastik=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)* plastikinjectioninner/pembagi,0) as qc25,
  if(kemasan=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)* kemasanJerigen /pembagi,0) as qc17,
  if(kemasan=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)* kemasanBotol /pembagi,0) as qc18,
  if(kemasan=1,ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`),0)* kemasanPouch /pembagi,0) as qc19,
  0 as qc9,0 as qc10,0 as qc11,0 as qc12,0 as qc13,0 as qc14, ifnull(sum(`121199 SUPPORT PRODUKSI UMUM`)*-1,0) as qc15 from valpercct
  where (trim(valpercct.acc) between '52081812' and '52081812');
set generalSP = (select qc15 from temGeneralSupport2)+(select qc15 from temGeneralSupport3);
drop temporary table if exists temGeneralSupport1;
 create temporary table temGeneralSupport1 as
  select '8' as qc1,'GENERAL SUPPORT PRODUCTION (PRODUCTION)' as qc2,0 as qc3,0 as qc4,(sum(acd.val*if(acd.dk='D',1,-1))+ generalSP )* a.`REFINERY`/100 as qc5 ,(sum(acd.val*if(acd.dk='D',1,-1))+generalSP) * a.`FRAKSINASI`/100 as qc6,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`KEMASAN`/100 as qc7, (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`PLASTIK`/100 as qc8,(sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`MARSHO`/100 as qc16,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`PLASTIK`* plastikinjection/100 as qc20,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`PLASTIK`* plastikinjectionpreform/100 as qc23,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`PLASTIK`* plastikstrech/100 as qc21,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`PLASTIK`* plastikblow/100 as qc22,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`PLASTIK`* plastikinjectionouter/100 as qc24,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`PLASTIK`* plastikinjectioninner/100 as qc25,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`KEMASAN`* kemasanJerigen/100 as qc17,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`KEMASAN`* kemasanBotol/100 as qc18,
  (sum(acd.val*if(acd.dk='D',1,-1))+generalSP)* a.`KEMASAN`* kemasanPouch/100 as qc19,
  0 as qc9,0 as qc10,0 as qc11,0 as qc12, 0 as qc13,0 AS qc14,round((sum(acd.val*if(acd.dk='D',1,-1))*-1) - generalSP,2) as qc15
  from acd,prosenLHP a where
  period=pperiod and trim(cct)='121199';
if (ppil=1) then
select *,'BIAYA OVERHEAD PABRIK' as group_ from valpercct
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temqc
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temmaintenance
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temutility
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temutility1
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temrawmaterial
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temppic
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temBoiler
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport1
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport2
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport3
;
end if;
if (ppil=2) then
select sum(`111101 REFINERY`) as refinery,sum(`111102 FRAKSINASI`) as fraksinasi,sum(`111104 PLASTIK`) as plastik,sum(`111103 KEMASAN`) as kemasan,sum(`111115 MARSHO`) as marsho from
(
select *,'BIAYA OVERHEAD PABRIK' as group_ from valpercct
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temqc
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temmaintenance
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temutility
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temutility1
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temrawmaterial
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temppic
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temBoiler
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport1
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport2
union all
select *,'DISTRIBUSI BIAYA OVERHEAD PABRIK' from temGeneralSupport3
) as xtmp;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_BPPB
DROP PROCEDURE IF EXISTS `SP_BPPB`;
DELIMITER //
CREATE PROCEDURE `SP_BPPB`()
BEGIN
    select `No BPPB`, `Gudang`, `Total` - ifnull(l.qty,0) as  `Total Qty`, `Unit` from
      (select n.jin as `No BPPB`, n.loc as Gudang, sum(d.qty) as `Total`, i.unit  as Unit from jid d,jin n, inv i
      WHERE d.inv = i.inv and d.jin=n.jin and n.group_=2 and sperpart=0 and n.loc != 'gdpt' AND n.loc != 'gdmk' AND n.loc != 'gdch' group by n.jin) as j
    left join
      (select lhc.jin, sum(lhc.qty) as qty from lhc group by lhc.jin) l
    on `No BPPB` = l.jin where round(`Total` - ifnull(l.qty,0),2) > 0;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_BPPB1
DROP PROCEDURE IF EXISTS `SP_BPPB1`;
DELIMITER //
CREATE PROCEDURE `SP_BPPB1`()
BEGIN
    select concat(substring(`No BPPB`,5,4),right(`No BPPB`,6)) as `No.Ref_Central`,`No BPPB`, `Gudang`, `Total` - ifnull(l.qty,0) as  `Total Qty`, `Unit` as `Unit BPPB` from
      (select n.jin as `No BPPB`, n.loc as Gudang, sum(d.qty) as `Total`, d.unit  as Unit from jid d,jin n
      where d.jin=n.jin and n.group_=2 and sperpart=0 and n.date >= adddate(now(),-90) group by n.jin) as j 
    left join
      (select lhc.jin, sum(lhc.qty) as qty from lhc group by lhc.jin) l
    on `No BPPB` = l.jin where `Total` - ifnull(l.qty,0) > 0;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_BppbGetStockBatch
DROP PROCEDURE IF EXISTS `Sp_BppbGetStockBatch`;
DELIMITER //
CREATE PROCEDURE `Sp_BppbGetStockBatch`(
	IN `Ptanggal` DATE
,
	IN `Pinv` VARCHAR(50)
)
BEGIN
 select inv as `Kode Barang`,spesifikasi as Spesifikasi,nodsg as `No Batch`,loc,sum(qlast) as qty,expired
 from
 (
   
   select rin.inv, rin.loc, rin.qlast, rin.vlast,rin.nodsg,rin.expired,'' as spesifikasi
       from rin as rin
       where rin.period=(select Fdate2period(Ptanggal)) and rin.inv = Pinv
   union all
   select ind.inv, ind.loc, sum(ifnull(ind.qty,0)*if(dk='D',1,-1)) as qlast, sum(ifnull(val,0)*if(dk='D',1,-1)) as vlast, ind.nodsg,ind.expired,ind.spesifikasi
      from ind as ind
      where ind.period=(SELECT Fdate2period(Ptanggal)) and ind.date < adddate(Ptanggal,1) and ind.inv = Pinv
      group by ind.inv,ind.loc,ind.nodsg
   
 ) as oawal where qlast != 0 group by inv,loc,nodsg
 having round(qty,3) > 0;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_BppbLocGetStockBatch
DROP PROCEDURE IF EXISTS `Sp_BppbLocGetStockBatch`;
DELIMITER //
CREATE PROCEDURE `Sp_BppbLocGetStockBatch`(
	IN `Ptanggal` DATE,
	IN `Pinv` VARCHAR(50),
	IN `Ploc` VARCHAR(50)
)
BEGIN
 select inv as `Kode Barang`,spesifikasi as Spesifikasi,nodsg as `No Batch`,loc,sum(qlast) as qty,expired
 from
 (
   
   select rin.inv, rin.loc, rin.qlast, rin.vlast,rin.nodsg,rin.expired,'' as spesifikasi
       from rin as rin
       where rin.period=(select Fdate2period(Ptanggal)) and rin.inv = Pinv and rin.loc = Ploc
   union all
   select ind.inv, ind.loc, sum(ifnull(ind.qty,0)*if(dk='D',1,-1)) as qlast, sum(ifnull(val,0)*if(dk='D',1,-1)) as vlast, ind.nodsg,ind.expired,ind.spesifikasi
      from ind as ind
      where ind.period=(SELECT Fdate2period(Ptanggal)) and ind.date < adddate(Ptanggal,1) and ind.inv = Pinv and ind.loc = Ploc
      group by ind.inv,ind.loc,ind.nodsg
   
 ) as oawal where qlast != 0 group by inv,loc,nodsg
 having round(qty,3) > 0;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_Browse
DROP PROCEDURE IF EXISTS `SP_Browse`;
DELIMITER //
CREATE PROCEDURE `SP_Browse`(
	IN `Pform` varchar(50),
	IN `Pperiod` varchar(4)
)
BEGIN
if (Pform='Transaction.FrmTPrq') then
  select prq.prq as `PR`, prd.inv as "Kode Barang", prd.remark as "Nama Barang", prq.date as "Tgl Dibutuhkan",aprov as `Approve`, close as `Closed`, withPO as `With PO`, prq.remark AS `Keterangan`, prd.qty AS `Quantity`, cct.name AS `Cost Center`
    from prq
    LEFT JOIN prd ON prq.prq = prd.prq
    LEFT JOIN cct ON prd.cct = cct.cct
   where period=Pperiod; 
elseif (Pform='Transaction.FrmTPrj') then
  select rma.rma as `PR Jasa`, rmb.inv as "Kode Barang", rmb.remark as "Nama Barang", rma.date as "Tgl Dibutuhkan",
         aprov as `Approve`, close as `Closed`
    from rma,rmb
   where rma.rma=rmb.rma and period=Pperiod; 
elseif (Pform='Transaction.FrmTOrderbeli') then
	select oms.oms as `PO`, sub.name as "Nama Supplier",omd.prq as `PR Number`, omd.inv as "Kode Barang", omd.remark as "Nama Barang", omd.qty AS `Quantity`, omd.unit AS `Satuan`, omd.price AS `Harga Satuan`, omd.val AS `Total Per Barang`, oms.val AS `Sub Total`, oms.date as "Tanggal", aprov as `Approve`, close as `Closed`, oms.remark as `Keterangan`
    from omd, oms, sub
   where omd.oms=oms.oms and oms.sub=sub.sub and period=Pperiod and oms.group_=3;
elseif (Pform='Transaction.FrmTOrderbeli_im') then
  select oms.oms as `PO`, sub.name as "Nama Supplier", omd.inv as "Kode Barang", omd.remark as "Nama Barang",
         oms.date as "Tanggal", aprov as `Approve`, close as `Closed`, oms.remark as `Keterangan`
    from omd, oms, sub
   where omd.oms=oms.oms and oms.sub=sub.sub and period=Pperiod and oms.group_=1;
elseif (Pform='Transaction.FrmTSpb') then
  select spb.spb as `SPB`,spb.nodoc as `No Daftar BC`, sub.name as "Nama Supplier", spbd.inv as "Kode Barang", spbd.remark as "Nama Barang",
         spb.date as "Tanggal",spb.remark as Keterangan
    from spbd, spb, sub
   where spbd.spb=spb.spb and spb.sub=sub.sub and period=Pperiod; 
elseif (Pform='Transaction.FrmTLpb') then
  select lph.lph as `LPB`,lph.oms as `Purchase Order`,lph.spb as "SPB", sub.name as "Nama Supplier", lpd.inv as "Kode Barang",
         lpd.remark as "Nama Barang",lpd.qty as Qty,lpd.unit as Unit,lpd.nodsg as `No Batch`, lph.date as "Tanggal", lpd.etd AS "Keterangan"
    from lpd, lph, sub
   where lpd.lph=lph.lph and lph.sub=sub.sub and period=Pperiod and left(lph.lph,3)='LPB';
elseif (Pform='Transaction.FrmTLpbJasa') then
  select lph.lph as `LPB`,lph.spb as "SPB",lph.nodoc as `No Daftar BC`, sub.name as "Nama Supplier", lpd.inv as "Kode Barang",
         lpd.remark as "Nama Barang", lph.date as "Tanggal"
    from lpd, lph, sub
   where lpd.lph=lph.lph and lph.sub=sub.sub and period=Pperiod and left(lph.lph,3)='LPJ';
elseif (Pform='Transaction.FrmTMsk') then
 select msk.msk as `Invoice Pembelian`, msk.date as "Tanggal",sub.name as "Nama Supplier",inv.NAME AS `Nama Barang`, msd.oms AS `Purchase Order`, lph.lph AS `Penerimaan Barang`
    from msk,sub,msd left outer join omd on omd.oms = msd.oms left outer join lph on omd.oms = lph.oms left outer join inv on omd.inv = inv.inv
   where msk.msk = msd.msk and msk.sub=sub.sub and msk.group_ = 1 and msk.period=Pperiod GROUP BY msk.msk,msd.no;
elseif (Pform='Transaction.FrmTMsk_im') then
 select msk.msk as `Invoice Pembelian`, msk.date as "Tanggal",sub.name as "Nama Supplier",inv.NAME AS `Nama Barang`, msd.oms AS `Purchase Order`, lph.lph AS `Penerimaan Barang`
    from msk,sub,msd left outer join omd on omd.oms = msd.oms left outer join lph on omd.oms = lph.oms left outer join inv on omd.inv = inv.inv
   where msk.msk = msd.msk and msk.sub=sub.sub and msk.group_ = 2 and msk.period=Pperiod GROUP BY msk.msk,msd.no;
elseif (Pform='Transaction.FrmTRma') then
  select rma.rma as `PR Retur`, sub.name as "Nama Supplier", rmb.inv as "Kode Barang", rmb.remark as "Nama Barang",
         rma.date as "Tanggal"
    from rma, rmb, sub
   where rma.sub=sub.sub and rma.rma=rmb.rma and period=Pperiod; 
elseif (Pform='Transaction.FrmTRms') then
  select rms.rms as `PO Retur`, sub.name as "Nama Supplier", rmd.inv as "Kode Barang", rmd.remark as "Nama Barang",
         rms.date as "Tanggal"
    from rms, rmd, sub
   where rms.sub=sub.sub and rms.rms=rmd.rms and period=Pperiod; 
elseif (Pform='Transaction.FrmTRsk') then
  select rsk.rsk as `Invoice Retur`, sub.name as "Nama Supplier", rmd.inv as "Kode Barang", rmd.remark as "Nama Barang",
         rsk.date as "Tanggal"
    from rsk, rsd, rms, rmd, sub
   where rsk.sub=sub.sub and rsk.rsk=rsd.rsk and rms.rms = rsd.rms and rms.rms = rmd.rms and rsk.period=Pperiod; 
	 elseif (Pform='Transaction.FrmTOrderjual') then
  select okl.okl as `SO`, sub.name as "Nama Customer", okd.inv as "Kode Barang", okd.remark as "Nama Barang",
         okd.dateneed as "Tgl Dibutuhkan", okl.nopoc as `No PO Customer`,okl.close as Closed
    from okl, okd, sub
   where okl.okl=okd.okl and period=Pperiod and okl.sub=sub.sub and okl.group_=2;
elseif (Pform='Transaction.FrmTOrderjualM') then
  select okl.okl as `SO`, sub.name as "Nama Customer", okd.inv as "Kode Barang", okd.remark as "Nama Barang",
         okd.dateneed as "Tgl Dibutuhkan", okl.nopoc as `No PO Customer`,okl.close as Closed
    from okl, okd, sub
   where okl.okl=okd.okl and period=Pperiod and okl.sub=sub.sub and okl.group_=2; 
elseif (Pform='Transaction.FrmTOrderjualO') then
  select okl.okl as `SO`, sub.name as "Nama Customer", okd.inv as "Kode Barang", okd.remark as "Nama Barang",
         okd.dateneed as "Tgl Dibutuhkan", okl.nopoc as `No PO Customer`,okl.close as Closed
    from okl, okd, sub
   where okl.okl=okd.okl and period=Pperiod and okl.sub=sub.sub and okl.group_=2 and okl.sync = '1'; 
	 
elseif (Pform='Transaction.FrmTOrderjualex') then
  select okl.okl as `SO`, sub.name as "Nama Customer", okd.inv as "Kode Barang", okd.remark as "Nama Barang",
         okd.dateneed as "Tgl Dibutuhkan", okl.nopoc as `No PO Customer`,okl.close as Closed
    from okl, okd, sub
   where okl.okl=okd.okl and period=Pperiod and okl.sub=sub.sub and okl.group_=1; 
elseif (Pform='Transaction.FrmTSJJual') then
  select sjh.sjh as `SJ Penjualan`, sjh.date as "Tanggal", sub.name as "Nama Customer", sjd.inv as "Kode Barang", sjd.remark as "Nama Barang",sjd.okl as `Sales Order`,sjh.spm as `SPM`,sjd.qty as Qty,sjd.unit as Unit,sjd.nodsg as `No Batch`,
         sjh.remark as Keterangan
    from sjh, sjd, sub where sjh.sjh=sjd.sjh and period=Pperiod and sub.sub=sjh.sub; 
elseif (Pform='Transaction.FrmTSJRetur') then
  select sjr.sjr as `SJ Retur`, sub.name as "Nama Customer", sjrd.inv as "Kode Barang", sjrd.remark as "Nama Barang",
         sjr.date as "Tanggal"
    from sjrd, sjr, sub
   where sjrd.sjr=sjr.sjr and period=Pperiod and sub.sub=sjr.sub; 
elseif (Pform='Transaction.FrmTSpm') then
  select spm.spm as `SPM Retur`,spm.nodoc as `No Daftar BC`, sub.name as "Nama Supplier", spd.inv as "Kode Barang", spd.remark as "Nama Barang",
         spm.date as "Tanggal"
    from spm, spd, sub
   where spm.sub = sub.sub and spm.spm=spd.spm and (spm.group_=2 or spm.group_=3) and period=Pperiod;
elseif (Pform='Transaction.FrmTSpmJual') then
  select spm.spm as `SPM Penjualan`,spm.nodoc as `No Daftar BC`, sub.name as "Nama Supplier", spd.inv as "Kode Barang", spd.remark as "Nama Barang",
         spm.date as "Tanggal",spm.remark as Keterangan
    from spm, spd, sub
   where spm.sub=sub.sub and spm.spm=spd.spm and spm.group_=1 and period=Pperiod order by spm.spm;
elseif (Pform='Transaction.FrmTKlr') then
  select klr.klr as `Invoce Penjualan`,klr.date as "Tanggal",sub.name as "Nama Customer", ifnull(printed.tot,0) as printed
    from klr left outer join sub on sub.sub=klr.sub
    left outer join (select jurnal, count(jurnal) as tot from printed where left(jurnal,3)='IJL' group by jurnal) as printed on klr.klr=printed.jurnal
   where klr.period=Pperiod ;
elseif (Pform='Transaction.FrmTKlrImport') then
  select klri.klri as `Invoce Penjualan`, klri.pnv as `Proforma Numb`, klri.date as "Tanggal",sub.name as "Nama Customer", ifnull(printed.tot,0) as printed
    from klri left outer join sub on sub.sub=klri.sub
    left outer join (select jurnal, count(jurnal) as tot from printed where left(jurnal,3)='IJR' group by jurnal) as printed on klri.klri=printed.jurnal
   where klri.period=Pperiod ;
elseif (Pform='Transaction.FrmTUmh') then
  select * from umh  where umh.period=Pperiod;
elseif (Pform='Transaction.FrmTJin') then
  select jin.jin as `Kode Koreksi Persediaan`,jin.date as `Tanggal Koreksi Persediaan`,loc.name as `Lokasi`,jin.remark as `Keterangan`
  from jin left outer join loc on jin.loc=loc.loc where jin.group_=1 and jin.period=Pperiod;
elseif (Pform='FA') then
  select jin.jin as `Kode Koreksi Persediaan`,jin.date as `Tanggal Koreksi Persediaan`,jin.remark as `Keterangan`
  from jin where jin.group_=5 and jin.period=Pperiod;
elseif (Pform='FAC') then
  select jin.jin as `Kode Koreksi Persediaan`,jin.date as `Tanggal Koreksi Persediaan`,jin.remark as `Keterangan`
  from jin where jin.group_=4 and jin.period=Pperiod;
elseif (Pform='Transaction.FrmTBppb') then
select jin.jin as `Kode BPPB`,jid.inv as `Kode Barang`, jid.remark AS `Nama Barang`,jid.qty as Qty,jid.unit as Unit,jid.nodsg as `No Batch`,jin.date as `Tanggal Pengeluaran Pemakaian Bahan`,ifnull(acc.name,' ') as `Perkiraan`,cct.name as `Cost Center`,loc.name as `Lokasi`,jin.remark as `Keterangan`
  from jin left join loc on jin.loc=loc.loc left join cct on jin.cct=cct.cct left join acc on jin.acc=acc.acc, jid
 WHERE jin.jin = jid.jin and jin.group_=2 and jin.period=Pperiod order by jin.jin;
elseif (Pform='Transaction.FrmTBppbR') then
  select jin.jin as `Kode BPPBR`,jin.bppb as `Kode BPPB`,group_concat(jid.remark) AS `Nama Barang`,jin.date as `Tanggal Pengeluaran Pemakaian Bahan`,ifnull(acc.name,' ') as `Perkiraan`,cct.name as `Cost Center`,loc.name as `Lokasi`,jin.remark as `Keterangan`
  from jin left join loc on jin.loc=loc.loc left join cct on jin.cct=cct.cct left join acc on jin.acc=acc.acc, jid
 WHERE jin.jin = jid.jin and jin.group_=7 and jin.period=Pperiod GROUP BY jin.jin order by jin.jin;
elseif (Pform='Transaction.FrmTMor') then
  select mor.mor as `Kode Manufactur Order`,mor.okl as `Kode SO`,sub.name as `Nama Customer`,inv.name as `Nama Barang`,mor.nodsg as `Kode Design`
  from mor,okl,inv,sub
  where mor.okl=okl.okl and okl.sub=sub.sub and mor.inv=inv.inv and mor.period=Pperiod;
elseif (Pform='Transaction.FrmTCgr') then
  select cgr.cgr as `Kode Pencairan Giro`,ifnull(sub.name,'') as `Nama Supplier`,cgr.nobg as `Nomor Giro`,cgr.bank as `Bank`,cgr.date as `Tgl Pencairan Giro`, kag.val as `Nilai Giro`
  from cgr,kag,kas left outer join sub on kas.sub=sub.sub
  where cgr.nobg=kag.nobg and kag.kas=kas.kas and cgr.period=Pperiod;
elseif (Pform='Transaction.FrmTTlk') then
  select tlk.tlk as `Kode Penolakan Giro`,sub.name as`Nama Supplier`,tlk.nobg as `Nomor Giro`,tlk.bank as `Bank`,tlk.date as `Tgl Penolakan Giro`, kag.val as `Nilai Giro`
  from tlk,kag,kas,sub
  where tlk.nobg=kag.nobg and kag.kas=kas.kas and kas.sub=sub.sub and tlk.period=Pperiod;
elseif (Pform='Transaction.FrmTPHutang') then
  select kas.kas as `Kode Pelunasan Hutang`, kas.date as `Tanggal Pelunasan Hutang`, sub.name as `Nama Supplier`, kas.cur as `Currency`,kas.val as `Nilai`
  from kas left outer join sub on kas.sub=sub.sub where kas.group_=1 and kas.period=Pperiod;
elseif (Pform='Transaction.FrmTPPiutang') then
  select kas.kas as `Kode Pelunasan Piutang`, kas.date as `Tanggal Pelunasan Piutang`, sub.name as `Nama Customer`, kas.cur as `Currency`,kas.val as `Nilai`
  from kas left outer join sub on kas.sub=sub.sub where kas.group_=2 and kas.period=Pperiod;
elseif (Pform='Transaction.FrmTKBK') then
  select kas.kas as `Kode Kas Keluar`, kas.date as `Tanggal Kas Keluar`, kas.remark as `Keterangan`,acc.name as `Nama Akun`, kas.cur as `Currency`, kas.val as `Akumulasi Nilai`
  from kas,acc where kas.group_=3 and kas.acc=acc.acc and kas.period=Pperiod;
elseif (Pform='Transaction.FrmTKBM') then
  select kas.kas as `Kode Kas Masuk`, kas.date as `Tanggal Kas Masuk`, kas.remark as `Keterangan`,acc.name as `Nama Akun`, kas.cur as `Currency`, kas.val as `Akumulasi Nilai`
  from kas,acc where kas.group_=4 and kas.acc=acc.acc and kas.period=Pperiod;
elseif (Pform='Transaction.FrmTStr') then
  select str.str as `Kode Setoran Giro`, str.date as `Tanggal Penyetoran Giro`, acc.name as `Nama Akun`, std.nobg as `No. BG`, std.bank as `Bank`, std.acbank as `AC Bank`, std.date as `Tanggal Giro`,std.duedate as `Tanggal Jatuh Tempo`, std.val as `Nilai Giro`
  from str,std,acc where str.acc=acc.acc and std.str=str.str and str.period=Pperiod;
elseif (Pform='Transaction.FrmTSORetur') then
  select rsm.rsm as `Kode SO Retur`,rsm.date as `Tanggal SO Retur`,rsm.duedate as `Tanggal Jatuh Tempo`,sub.name as `Nama Customer`,rsm.remark as `Keterangan`,rsm.val as `Nilai SO Retur`,rsm.nopoc as `PO Cust`
  from rsm,sub where rsm.sub=sub.sub and rsm.period=Pperiod;
elseif (Pform='Transaction.FrmTSpbRetur') then
  select spr.spr as `Kode SPB Retur`,spr.date as `Tanggal SPB Retur`,spr.rsm as`Kode SO Retur`,sub.name as `Nama Customer`,spr.remark as `Keterangan`,spr.nosj as `No. Surat Jalan`,spr.nopol as `Nopol. Kendaraan`
  from spr,sub where spr.sub=sub.sub and spr.period=Pperiod;
elseif (Pform='Transaction.FrmTLpbRetur') then
  select rka.rka as `Kode LPB Retur`, rka.date as `Tanggal LPB Retur`,rka.spr as `Kode SPB Retur`,rka.rsm as `Kode SO Retur`,sub.name as `Nama Customer`,rka.remark as `Keterangan`,rka.nopol as `Nopol. Kendaraan`
  from rka,sub where rka.sub=sub.sub and rka.period=Pperiod;
elseif (Pform='Transaction.FrmTRkl') then
  select rkl.rkl as `Kode Retur Penjualan`,rkl.date as `Tanggal Retur Penjualan`,rkl.duedate as `Tanggal Jatuh Tempo`,sub.name as `Nama Customer`,rkl.val as `Nilai Retur Penjualan`
  from rkl,sub where rkl.sub=sub.sub and rkl.period=Pperiod;
elseif (Pform='Transaction.FrmTOpname') then
  select * from opn
  where opn.period=Pperiod;
elseif (Pform='Transaction.FrmTLhp') then
  select lhp.lhp as `Kode Laporan Hasil Produksi`,lhp.date as `Tanggal`,loc.name as `Lokasi`,lhp.remark as `Keterangan`
  from lhp,loc where loc.loc=lhp.loc and lhp.period=Pperiod order by lhp.lhp;
elseif (Pform='Transaction.FrmTTrm') then
	select trm.trm as `Kode Pemindahan Barang`,trm.lhp as `Dokumen Hasil Produksi`,trm.date as `Tanggal Pemindahan Barang`,a.name as `Lokasi Asal`,b.name as `Lokasi Tujuan`,trm.remark as `Keterangan`, trd.inv AS `Kode Barang`, trd.remark AS `Nama Barang`, trd.qty1 AS `Quantity`, trd.unit AS `Satuan`, trd.nodsg AS `No Batch`
  from trm,trd,loc as a,loc as b where trm.lock=a.loc and trm.locd=b.loc and trm.period=Pperiod AND trm.trm = trd.trm order by trm.trm;
elseif (Pform='Transaction.FrmTHPP') then
  select hpro.hpro as `Kode HPP`,hpro.date as `Tanggal Awal`,hpro.datez as `Tanggal Akhir`,
         hpro.remark as `Keterangan`,inv.name as `Nama Barang`
  from hpro,hprod,inv
  where hpro.hpro=hprod.hpro and hprod.inv=inv.inv and hpro.period=Pperiod;
elseif (Pform='Transaction.FrmTJsu') then
  select jsu.jsu as `Jurnal Memo`,jsu.date as `Tanggal`,jsu.sub as suppcust,sub.name as subname,jsu.remark as `Keterangan`,jsu.val as nilai
  from jsu,sub
  where jsu.period=Pperiod and jsu.sub=sub.sub;
elseif (Pform='Transaction.FrmRFP') then
  select rfp.rfp as `No RFP.`,rfp.date as `Tanggal`,sub.name as suppcust,rfp.remark as `Keterangan`
  from rfp,sub
  where rfp.sub = sub.sub and rfp.period=Pperiod;
elseif (Pform='Transaction.FrmTDO') then
  select doh.doh as `No DO.`,doh.aprov as Aprove,doh.date as `Tanggal`,doh.sub as customer,sub.name as NamaCustomer,doh.okl as no_order,doh.remark as `Keterangan`
  from doh,sub
  where doh.period=Pperiod and doh.`delete`=0 and doh.sub=sub.sub;
elseif (Pform='Transaction.FrmTKwitansi') then
  select kwt.kwt as `No Kwitansi.`,kwt.date as `Tanggal`,kwd.jurnal as invoice,sub.name as customer,kwt.remark as `Keterangan`
  from kwt,kwd,sub
  where kwt.period=Pperiod and kwt.sub=sub.sub and kwt.`delete`=0 and kwt.kwt=kwd.kwt;
elseif (Pform='Transaction.FrmTFpjUM') then
  select fpjumk.fpjumk as `FPJUMK`,sub.name as `Customer Name`,fpjumk.nofpj as `NOFPJ`,fpjumk.date as `Tanggal`,fpjumk.fpjdate as `FPJ Date`,
  fpjumd.remark,fpjumd.qty,fpjumd.price,fpjumd.val as nilai
  from fpjumk left outer join sub on fpjumk.sub=sub.sub left outer join fpjumd on fpjumd.fpjumk=fpjumk.fpjumk
  where fpjumk.period=Pperiod ;
elseif (Pform='SPM Transfer') then
  select spm.spm as `SPM Retur`,spm.nodoc as `No Daftar BC`, sub.name as "Nama Supplier", spd.inv as "Kode Barang", spd.remark as "Nama Barang",
         spm.date as "Tanggal"
    from spm, spd, sub
   where spm.sub = sub.sub and spm.spm=spd.spm and spm.group_=3 and period=Pperiod;
elseif (Pform='Transaction.FrmDocPelabuhan') then
  select docp.docp `nomor internal`,docpd.datedoc,jnsp as Jenis,docpd.no_bc,oms as No_order,docp.remmark
    from docp,docpd where docp.docp=docpd.docp and docp.period=Pperiod ;
elseif (Pform='Transaction.FrmTTtf') then
   select ttf as No_TTF,ttf.date,ttf.sub,sub.name,unsub as SupOneTime,
   if(jnsbyr=0,'GIRO',if(jnsbyr=1,'CEK',if(jnsbyr=2,'TUNAI','TRANSFER'))) as Pembayaran,
    ttf.cur1,jml as Nilai,cur2,jml2 from ttf left outer join sub on ttf.sub=sub.sub where ttf.`delete` = 0 and ttf.period=Pperiod;
elseif (Pform='Transaction.FrmTCsi') then
  select csi,date,oms as no_order from csi where period=Pperiod;
elseif (Pform='Transaction.FrmTCad') then
  select cad as `CAD`, date as `Tanggal`,remark as `Keterangan`,period as `Periode`, sub as `Customer/Supplier`, cur as `Curency`,kurs as `Kurs`
  from cad
  where cad.period=Pperiod;
elseif (Pform='Transaction.FrmTMPR') then
  select mpr.mpr,mpr.date tglMemoPr,mpr.aprov,mpd.remark,mpd.dateneed as tgl_dibutuhkan,mpd.dept as Departemen,mpr.usrpr as Nama_Peminta,prq.prq Nomor_PR, prq.Aprov1 ,Prq.Aprov as aprov2  from MPR left outer join mpd on mpr.mpr=mpd.mpr left outer join prq on mpr.mpr=prq.mpr where mpr.period=Pperiod;
elseif (Pform='Transaction.FrmTProforma') then
  select * from pnv,pnd where pnv.pnv = pnd.pnv and pnv.period = Pperiod and group_ = 1;
elseif (Pform='Transaction.FrmTProformaPeb') then
  select * from pnv,pnd where pnv.pnv = pnd.pnv and pnv.period = Pperiod and group_ = 2;
elseif (Pform='Transaction.FrmTProformaLokal') then
  select * from pnv,pnd where pnv.pnv = pnd.pnv and pnv.period = Pperiod and group_ = 3;
elseif (Pform='Transaction.FrmTProformaCons') then
  select * from pnv,pnd where pnv.pnv = pnd.pnv and pnv.period = Pperiod and group_ = 4;
elseif (Pform='Transaction.FrmTPor') then
  select por.por,por.sub,sub.name,por.date,pord.inv,pord.remark,pord.qty,pord.unit,pord.price,pord.val from por,pord,sub where por.por = pord.por and por.sub = sub.sub and por.period = Pperiod and por.group_ = 2;
elseif (Pform='Transaction.FrmTPoj') then
  select por.por,por.sub,sub.name,por.date,pord.inv,pord.remark,pord.qty,pord.unit,pord.price,pord.val from por,pord,sub where por.por = pord.por and por.sub = sub.sub and por.period = Pperiod and por.group_ = 1;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_BrowseHBL
DROP PROCEDURE IF EXISTS `SP_BrowseHBL`;
DELIMITER //
CREATE PROCEDURE `SP_BrowseHBL`(tinv varchar(15))
BEGIN
  select * from hbl where inv = tinv order by tanggal desc limit 50;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_BrowseHJL
DROP PROCEDURE IF EXISTS `SP_BrowseHJL`;
DELIMITER //
CREATE PROCEDURE `SP_BrowseHJL`(tinv varchar(15))
BEGIN
  select * from hjl where inv = tinv order by tanggal desc limit 50;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_BrowseM
DROP PROCEDURE IF EXISTS `SP_BrowseM`;
DELIMITER //
CREATE PROCEDURE `SP_BrowseM`(
	IN `Pform` varchar(50)
)
BEGIN
if (Pform='Master.FrmMasterAcc') then
  select acc as `Nomor Akun`, name as "Nama Akun" from acc; 
elseif (Pform='Master.FrmMasterCct') then
  select cct as `Cost Center`, name as "Nama" from cct;
elseif (Pform='Master.FrmMasterUsrP') then
  select * from usrp;
elseif (Pform='Master.FrmUserLoc') then
  select * from usr;
elseif (Pform='Master.FrmMasterCur') then
  select cur as `Currency`, name as "Nama" from cur; 
elseif (Pform='Master.FrmMasterCustomer') then
  select sub as `Kode Customer`, name as "Nama Customer", person as "Contact Person", address as "Alamat",
         city as "Kota", phone as "No Telp"
    from sub
   where group_=2;
elseif (Pform='Master.FrmMasterGroup') then
  select grp.grp as "Kode Group", grp.grpname as "Nama Group", ifnull(acc.name,'') as "Nama Akun"
    from grp left outer join acc
     on grp.acc=acc.acc;
elseif (Pform='Master.FrmMasterInv') then
  select inv as "Kode Barang", oldinv as `Kode Lama`, inv.name as "Nama Barang",inv.spesifikasi as Spesifikasi, jenis.name as `Jenis`, inv.unit2 AS `Satuan Besar`, inv.unit AS `Satuan Kecil`, inv.remark as `Keterangan`, oldname as `Nama Lama`
    from inv left outer join jenis on inv.jenis=jenis.jenis;
elseif (Pform='Master.FrmMasterDesign') then
  select nodsg as `No Design`, inv.inv as `Kode Barang`, abrev as `Nama Singkat`, inv.name as `Nama Barang`,
         inv.oldinv as `Old Kode`, inv.oldname as `Old Nama`,
         grppt as `Group PT`, aktif as Aktif
    from dsg, inv
   where dsg.inv=inv.inv;
elseif (Pform='Master.FrmMasterJenis') then
  
   select jenis.jenis as "Kode Jenis", jenis.name as "Nama Jenis", jenis.remark as "Keterangan",
         acc.name as "Nama Akun",mtp.name as "Material Type"
    from jenis left join acc on jenis.acc=acc.acc
               left join mtp on jenis.mtp=mtp.mtp;
elseif (Pform='Master.FrmMasterKdtrans') then
  select kode.kode as `Kode Transaksi`, kode.name as `Nama Transaksi`, acc.name as `Nama Akun`
    from acc,kode
   where kode.acc = acc.acc;
elseif (Pform='Master.FrmMasterKwalitet') then
  select kode as `Kode Kwalitet`, lapis as `SW/DW`, `group` as `Group`, kelompok as `Kelompok`
    from kwalitet;
elseif (Pform='Master.FrmMasterLoc') then
  select loc as `Kode Lokasi`, name as `Nama Lokasi`, remark as `Keterangan`
    from loc;
elseif (Pform='Master.FrmMasterMtp') then
  select mtp as `Material Type`, name as `Nama Material`
    from mtp;
elseif (Pform='Master.FrmMasterSales') then
  select sales as `Kode Sales`, name as "Nama Sales", address as "Alamat", city as "Kota", phone as "No Telp"
    from sales; 
elseif (Pform='Master.FrmMasterSupplier') then
  select sub as `Kode Supplier`, name as "Nama Supplier", person as "Contact Person", address as "Alamat",
         city as "Kota", phone as "No Telp"
    from sub
    where group_=1; 
elseif (Pform='Master.FrmMasterSupplierTemp') then
  select sub as `Kode Supplier`, name as "Nama Supplier", person as "Contact Person", address as "Alamat",
         city as "Kota", phone as "No Telp"
    from subtemp; 
elseif (Pform='Master.FrmKAS') then
  select acc as `Nomor Akun`, name as "Nama Akun"
    from acc where detil='1' and (name like 'KAS%' or name like 'BANK%'); 
elseif (Pform='Master.FrmMasterModul') then
  select noseri as `Nomor Seri`, menuid as `Menu ID`, remark as `Keterangan`
    from modul;
elseif (Pform='Fungsi.FrmUserGroup') then
  select role as `Role`, name as `Name` from usrlevel;
elseif (Pform='Master.FrmMasterAktiva') then
  select akt.akt as Aktiva, akt.name as Nama, acc.name as `Nama Akun`,akt.tglbeli as TGLBELI,harga as Price,akd.cct `Cost Center`,akd.remark `Cost Center Name`,akd.prosent
    from akt left outer join acc on akt.acc=acc.acc left outer join akd on akt.akt=akd.akt;
elseif (Pform='Master.FrmMHargaDasar') or (Pform='Master.FrmMHrgGroup') then
  select hrgdasar.kode as Kode, hrgdasar.tglawal as `Tgl Awal`, hrgdasar.tglakhir as `Tgl Akhir`,
         grphrgdasar.nama as `Group`, hrgdasar.aktif as Aktif
    from hrgdasar
    left join grphrgdasar on hrgdasar.grp=grphrgdasar.kode;
elseif (Pform='Master.FrmMasterNoPjks') then
  select sub.sub,sub.name as `Supplier`
    from sub
    where group_=1;
elseif (Pform='Master.FrmMasterUsrPr') then
 select * from usrpr;
elseif (Pform='Master.FrmMasterDpt') then
 select * from dept;
elseif (Pform='Master.FrmMasterSpec') then
  select * from mspec ;
elseif (Pform='REKENINGVENDOR') then
  select sub,no_rek,namavendor,bank,gironame from accbank where group_=2 order by sub,no_rek;
elseif (Pform='Master.FrmMasterShipper') then
  select * from m_shipper order by kode_shipper;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_Budgeting
DROP PROCEDURE IF EXISTS `sp_Budgeting`;
DELIMITER //
CREATE PROCEDURE `sp_Budgeting`(
	IN `Pcct` VARCHAR(50),
	IN `Poms` VARCHAR(50),
	IN `Pperiod` VARCHAR(50),
	IN `Pgroup` VARCHAR(50)
)
if (Pgroup = 1) THEN
	SELECT SUM(omd.val) AS total,cct.budget
	FROM cct
	LEFT JOIN omd ON omd.cct = cct.cct
	LEFT JOIN oms ON oms.oms=omd.oms
	WHERE
	LEFT(omd.inv,2) NOT IN (11,41,51) AND (oms.cmv = 0 OR oms.cmv IS NULL) AND oms.delete = 0 AND oms.period = Pperiod AND omd.cct = Pcct
	GROUP BY cct.cct UNION
	SELECT 0,cct.budget
	FROM cct
	WHERE cct = Pcct
	LIMIT 1; 
ELSE
	SELECT SUM(omd.val) AS total, cct.budget
	FROM cct
	LEFT JOIN omd ON omd.cct = cct.cct
	LEFT JOIN oms ON oms.oms=omd.oms
	WHERE
	LEFT(omd.inv,2) NOT IN (11,41,51) AND (oms.cmv = 0 OR oms.cmv IS NULL) AND oms.delete = 0 AND oms.period = Pperiod AND oms.oms <> Poms AND omd.cct = Pcct
	GROUP BY cct.cct UNION
	SELECT 0,cct.budget
	FROM cct
	WHERE cct = Pcct; 
END if//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_BuktiMuat
DROP PROCEDURE IF EXISTS `Sp_BuktiMuat`;
DELIMITER //
CREATE PROCEDURE `Sp_BuktiMuat`(pdatea datetime,pdatez datetime,panga varchar(15), pangz varchar(15), psuba varchar(15), psubz varchar(15))
BEGIN
select nodoc,sjdate,sub,subname,shiptoname,shiptoaddress,nopol,angkutan,angkutanname from
(
(select sjh.sjh as Nodoc,sjh.date as sjdate,sjh.sub,sub.name as subname,sjh.shiptoname,sjh.shiptoaddress,ifnull(angk.name,'') as angkutanname,sjh.angkutan,sjh.nopol
from sjh,sub as angk,sub
where sjh.sub=sub.sub and sjh.angkutan=angk.sub and sjh.delete=false)
union all
(select sjr.sjr as Nodoc,sjr.date as sjdate,sjr.sub,sub.name as subname,sjr.shiptoname,sjr.shiptoaddress,ifnull(angk.name,'') as angkutanname,sjr.angkutan,sjr.nopol
from sjr,sub as angk,sub
where sjr.sub=sub.sub and sjr.delete=false and sjr.angkutan=angk.sub)
) as buktimuat
where if(psuba<>'' and psubz<>'', sub between psuba and psubz, 1)
     and if(panga<>'' and pangz<>'', angkutan between panga and pangz, 1)
     and sjdate>=pdatea and sjdate<adddate(pdatez,1)
order by sjdate;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_carijurnalprq
DROP PROCEDURE IF EXISTS `SP_carijurnalprq`;
DELIMITER //
CREATE PROCEDURE `SP_carijurnalprq`(Plpb varchar(15))
BEGIN
select p.cct,kode.acc,kode.name,p.kurs from
(
select lpd.lph,lpd.inv,prd.acc,prd.remark,prd.cct,oms.kurs from lpd,lph,omd,prd,oms where lpd.lph=lph.lph and lph.oms=omd.oms and lpd.inv=omd.inv and lpd.cct=omd.cct and lpd.remark=omd.remark
and omd.prq=prd.prq and omd.inv=prd.inv and omd.no=prd.no and prd.cct<>'' and lpd.lph=plpb and omd.oms=oms.oms
union all
select distinct lpd.lph,lpd.inv,prd.acc,prd.remark,prd.cct,1 as kurs from lpd,lph,prd where lph.oms=prd.prq and lpd.lph=lph.lph and lpd.inv=prd.inv and lpd.cct=prd.cct and lpd.remark=prd.remark
and prd.cct<>'' and lpd.lph=plpb
) as p left outer join kode on p.acc=kode.kode  ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_CekBudgetPemakaian
DROP PROCEDURE IF EXISTS `SP_CekBudgetPemakaian`;
DELIMITER //
CREATE PROCEDURE `SP_CekBudgetPemakaian`()
SELECT acc,val
FROM (
 SELECT ind.jurnal, ind.period, if (jin.sperpart=0, jenis.accmt, jin.acc) as acc, ind.date,
 sum(ind.val) as val, trim(jin.cct) as cct, max(ind.rem) as remark,convert('' using latin1) as dk,
 '' as  subjurnal, 0 as adj
 FROM ind
	left outer join inv on ind.inv=inv.inv
	left outer join jenis on inv.jenis=jenis.jenis
  left outer join jin on ind.jurnal=jin.jin
	WHERE ind.period='1911' AND ind.subjurnal = 'BPP' AND left(inv.inv,2) != 11 and left(inv.inv,2) != 41 and left(inv.inv,2) != 51
	GROUP BY jin.cct,jenis.acc
	UNION all
	SELECT ind.jurnal, ind.period, if (jin.sperpart=0, jenis.accmt, jin.acc) as acc, ind.date,
 -sum(ind.val) as val, trim(jin.cct) as cct, max(ind.rem) as remark,convert('' using latin1) as dk,
 '' as  subjurnal, 0 as adj
 FROM ind
	left outer join inv on ind.inv=inv.inv
	left outer join jenis on inv.jenis=jenis.jenis
  left outer join jin on ind.jurnal=jin.jin
	WHERE ind.period='1911' AND ind.subjurnal = 'BPR' and left(inv.inv,2) != 11 and left(inv.inv,2) != 41 and left(inv.inv,2) != 51
	GROUP BY jin.cct,jenis.acc
	) AS xacd
	WHERE cct = 370000
	GROUP BY acc//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_CekBudgetPiutang
DROP PROCEDURE IF EXISTS `SP_CekBudgetPiutang`;
DELIMITER //
CREATE PROCEDURE `SP_CekBudgetPiutang`(
	IN `Psub` VARCHAR(15)
)
BEGIN
SELECT SUM(okl.val) AS totalval, MAX(budget) AS limitpiutang
FROM okl 
left outer JOIN sub ON okl.sub=sub.sub
WHERE okl.sub = Psub AND okl NOT IN (SELECT okl FROM kld,klr WHERE kld.klr=klr.klr AND klr.sub =Psub);
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_CekBudgetPiutang1
DROP PROCEDURE IF EXISTS `SP_CekBudgetPiutang1`;
DELIMITER //
CREATE PROCEDURE `SP_CekBudgetPiutang1`(
	IN `Psub` VARCHAR(50)
)
SELECT SUM(totalval) AS totalval,budget
FROM
(
SELECT ifnull(sum(kas.val),0) AS totalval,0 as budget
FROM kas,kad
WHERE kas.kas = kad.kas AND period >= 1911 AND kas.sub = Psub
UNION all
SELECT ifnull(-SUM(okl.val),0) AS totalval,(SELECT budget FROM sub WHERE sub = Psub) as budget
FROM okd,okl left outer join sub on okl.sub = sub.sub
WHERE okl.okl = okd.okl AND okl.period >= 1911 AND okl.sub = Psub
) AS x
group by budget//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_cek_ino
DROP PROCEDURE IF EXISTS `SP_cek_ino`;
DELIMITER //
CREATE PROCEDURE `SP_cek_ino`()
BEGIN
select distinct acd.jurnal,acd.date,acd.acc,acd.dk,acd.val,x.ino,x.val
from acd left outer join
(
select umd.ino,ino.acc jenis,umh.umh as jurnal,umh.date,umd.acc,umh.remark as rem,umd.dk,umd.val,0 as `no` from
umd left outer join umh on umd.umh=umh.umh left outer join ino on umd.ino=ino.ino
where left(umh.period,2)='11' and umd.ino<>''
union all
select msx.ino,ino.acc,msx.msk,msk.date,msx.acc,msx.remark,convert('D' using latin1),msx.val,0 from
msx left outer join msk on msx.msk=msk.msk  left outer join ino on msx.ino=ino.ino
where left(msk.period,2)='11' and msx.ino<>''
union all
select jsd.ino,ino.acc,jsu.jsu,jsu.date,jsd.acc,jsu.remark,jsd.dk,jsd.val,0 from
jsd left outer join jsu on jsd.jsu=jsu.jsu  left outer join ino on jsd.ino=ino.ino
where jsd.ino<>'' and left(jsu.jsu,2)='10'
) as x
on acd.jurnal=x.jurnal and acd.acc=x.acc and acd.val=x.val
where acd.period>'1102' and acd.acc like '1203011%';
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_closemonth_org
DROP PROCEDURE IF EXISTS `sp_closemonth_org`;
DELIMITER //
CREATE PROCEDURE `sp_closemonth_org`(IN `pdatea` datetime,
	IN `pdatez` datetime)
BEGIN
declare nextperiod char(4);
declare pperiod char(4);
declare totRL double;
declare nilai double ;
set pperiod=fdate2period(pdatea);
set nextperiod=fdate2period(adddate(pdatez,1));
CALL SP_SAVERAC1(pperiod);
call Sp_SaveRac ('0',concat('AUTO_PEMBUL',pperiod));
delete from acd where subjurnal='AUT' and period=pperiod;
set nilai = (select sum(ifnull(rac.vlast,0)) from rac,acc where period=pperiod and rac.acc=acc.acc and acc.detil=1)+(select sum(val*if(dk='d',1,-1)) from acd where period=pperiod) ;
if (nilai < 1) then
insert into acd
select concat('AUTO_PEMBUL',pperiod),pperiod,'71990300',pdatez,nilai,'','Auto pembulatan sls kurs NS','K','AUT',0,'';
end if;
 delete from rin where period=nextperiod;
 insert into rin
 select inv,loc,nextperiod as period, sum(vlast) as vlast ,sum(vdebet) as vd,sum(vkredit) as vk,sum(qlast) as qlast,sum(qdebet) as qd,sum(qkredit) as qk,nodsg,expired from
 (
  select inv,loc,qlast ,vlast,nodsg,0.0000 vdebet,0.0000 vkredit,0.0000 qdebet, 0.0000 qkredit, rin.expired from rin where period=pperiod
  union all
  select inv,loc,sum(case when dk='D' then qty else -qty end) as qty,
  sum(case when dk='D' then val else -val end) as val,nodsg,0,0,0,0,ind.expired
  from ind where period=pperiod and inv<>''
  group by inv,loc,nodsg
 )
 as xrin group by inv,loc,trim(nodsg) ;
 delete from rsb where period=nextperiod;
 insert into rsb
 select nextperiod,jurnal as jurnal,date,sub,xrsb.acc,dk,sum(xrsb.val-ifnull(a.val,0.000)) as val,payment,duedate,subjurnal,ifnull(remark,'') as remark,valasli,xrsb.invoice,kurs as kurs
  from
  (
   select nextperiod as period,jurnal,date,sub,acc,dk,val,payment,duedate,subjurnal,remark,0 as valasli,trim(invoice) as invoice,kurs
    from rsb where period=Pperiod
   union all
   select nextperiod as period,rhp.jurnal,rhp.date,rhp.sub,rhp.acc,rhp.dk,rhp.val as val,
   rhp.payment,rhp.duedate,rhp.subjurnal,rhp.remark,0 as valasli,trim(rhp.invoice),rhp.kurs
    from rhp where rhp.period=Pperiod
  )
  as xrsb
  left outer join (select reff,payhp.acc,trim(payhp.invoice) as invoice,sum(val) as val from payhp where period=Pperiod group by reff,payhp.acc,payhp.invoice) as a on xrsb.jurnal=a.reff and xrsb.acc=a.acc and trim(xrsb.invoice)=trim(a.invoice)
  group by jurnal,sub,xrsb.acc,xrsb.invoice;
 delete from rpo where period=nextperiod;
 insert into rpo
  select nextperiod,oms,(select date from oms where oms=xrpo.oms), sub,inv,loc,sum(qty) as qty, qtyout,remark from
  (
   select oms,sub,inv,loc,qty,qtyout,remark from rpo where period=pperiod
   union all
   select oms_in.oms,oms.sub as sub,inv,oms_in.loc,qty,qty,oms_in.remark from oms_in,oms
    where oms_in.oms=oms.oms and (select `delete` from oms where oms=oms_in.oms)=0 and oms.period=pperiod
   union all
   select lph.oms,lph.sub,lpd.inv,lpd.loc,-lpd.qty as qty,0,lpd.remark from lpd,lph,oms
    where lpd.lph=lph.lph and lph.oms=oms.oms and lph.delete=0 and lph.oms<>'' and lph.period=pperiod
  ) as xrpo group by oms,inv,remark ;
  delete from rpo where qty<=0 and period= nextperiod;
call sp_saverac1(pperiod);
update rac set vlast=0 where period=nextperiod;
insert into rac (rac.period, rac.acc, rac.vlast, rac.vdebet, rac.vkredit)
   select nextperiod,temprac.acc,ifnull(temprac.vlast,0)+ifnull(temprac.vdebet,0)-ifnull(temprac.vkredit,0),0,0
   FROM rac temprac
   WHERE temprac.period=pperiod and (ifnull(temprac.vlast,0)+ifnull(temprac.vdebet,0)-ifnull(temprac.vkredit,0))<>0
   and temprac.acc not in (select acc from rac where period=nextperiod);
update rac,(select ifnull(vlast,0)+ifnull(vdebet,0)-ifnull(vkredit,0) as val,acc from rac where period=pperiod) temp set rac.vlast=temp.val
where rac.period=nextperiod and rac.acc=temp.acc and temp.val<>0;
set totRL=(select sum(ifnull(vlast,0)+vdebet-vkredit) as val from rac,acc where rac.acc=acc.acc and period=pperiod and acc.detil=1 and acc.group_>3);
if (select right(pperiod,2))= '12' then
  update rac,acc set vlast=0 where rac.acc=acc.acc and acc.group_>3 and rac.period=nextperiod;
  update rac,acc set vlast=0 where rac.acc=acc.acc and trim(acc.acc) in ('32030101','32030100','32030000')  and rac.period=nextperiod ;
  update rac set vlast=rac.vlast + totRL where rac.acc in ('32010101','32010100','32010000','32000000') and rac.period=nextperiod;
end if;
   END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_closeofmonth
DROP PROCEDURE IF EXISTS `sp_closeofmonth`;
DELIMITER //
CREATE PROCEDURE `sp_closeofmonth`(
	IN `pdatea` datetime,
	IN `pdatez` datetime
)
BEGIN
declare nextperiod char(4);
declare pperiod char(4);
declare totRL double;
declare nilai double ;
set pperiod=fdate2period(pdatea);
set nextperiod=fdate2period(adddate(pdatez,1));
CALL SP_SAVERAC1(pperiod);
call Sp_SaveRac ('0',concat('AUTO_PEMBUL',pperiod));
delete from acd where subjurnal='AUT' and period=pperiod;
set nilai = (select sum(ifnull(rac.vlast,0)) from rac,acc where period=pperiod and rac.acc=acc.acc and acc.detil=1)+(select sum(val*if(dk='d',1,-1)) from acd where period=pperiod) ;
if (nilai < 1) then
insert into acd
select concat('AUTO_PEMBUL',pperiod),pperiod,'71990300',pdatez,nilai,'','Auto pembulatan sls kurs NS','K','AUT',0,'';
end if;
 delete from rin where period=nextperiod;
 insert into rin
 select inv,loc,nextperiod as period, sum(vlast) as vlast ,sum(vdebet) as vd,sum(vkredit) as vk,sum(qlast) as qlast,sum(qdebet) as qd,sum(qkredit) as qk,nodsg,expired from
 (
  select inv,loc,qlast ,vlast,nodsg,0.0000 vdebet,0.0000 vkredit,0.0000 qdebet, 0.0000 qkredit, rin.expired from rin where period=pperiod
  union all
  select inv,loc,sum(case when dk='D' then qty else -qty end) as qty,
  sum(case when dk='D' then val else -val end) as val,nodsg,0,0,0,0,ind.expired
  from ind where period=pperiod and inv<>''
  group by inv,loc,nodsg
 )
 as xrin group by inv,loc,trim(nodsg) ;
 delete from rsb where period=nextperiod;
 insert into rsb
 select nextperiod,jurnal as jurnal,date,sub,xrsb.acc,dk,sum(xrsb.val-ifnull(a.val,0.000)) as val,payment,duedate,subjurnal,ifnull(remark,'') as remark,valasli,xrsb.invoice,kurs as kurs
  from
  (
   select nextperiod as period,jurnal,date,sub,acc,dk,val,payment,duedate,subjurnal,remark,0 as valasli,trim(invoice) as invoice,kurs
    from rsb where period=Pperiod and val<>0
   union all
   select nextperiod as period,rhp.jurnal,rhp.date,rhp.sub,rhp.acc,rhp.dk,rhp.val as val,
   rhp.payment,rhp.duedate,rhp.subjurnal,rhp.remark,0 as valasli,trim(rhp.invoice),rhp.kurs
    from rhp where rhp.period=Pperiod and val<>0
  )
  as xrsb
  left outer join (select reff,payhp.acc,trim(payhp.invoice) as invoice,sum(val) as val from payhp where period=Pperiod group by reff,payhp.acc,payhp.invoice) as a on xrsb.jurnal=a.reff and xrsb.acc=a.acc and trim(xrsb.invoice)=trim(a.invoice)
  group by jurnal,sub,xrsb.acc,xrsb.invoice;
 delete from rpo where period=nextperiod;
 insert into rpo
  select nextperiod,oms,(select date from oms where oms=xrpo.oms), sub,inv,loc,sum(qty) as qty, qtyout,remark from
  (
   select oms,sub,inv,loc,qty,qtyout,remark from rpo where period=pperiod
   union all
   select oms_in.oms,oms.sub as sub,inv,oms_in.loc,qty,qty,oms_in.remark from oms_in,oms
    where oms_in.oms=oms.oms and (select `delete` from oms where oms=oms_in.oms)=0 and oms.period=pperiod
   union all
   select lph.oms,lph.sub,lpd.inv,lpd.loc,-lpd.qty as qty,0,lpd.remark from lpd,lph,oms
    where lpd.lph=lph.lph and lph.oms=oms.oms and lph.delete=0 and lph.oms<>'' and lph.period=pperiod
  ) as xrpo group by oms,inv,remark ;
  delete from rpo where qty<=0 and period= nextperiod;
call sp_saverac1(pperiod);
update rac set vlast=0 where period=nextperiod;
insert into rac (rac.period, rac.acc, rac.vlast, rac.vdebet, rac.vkredit)
   select nextperiod,temprac.acc,ifnull(temprac.vlast,0)+ifnull(temprac.vdebet,0)-ifnull(temprac.vkredit,0),0,0
   FROM rac temprac
   WHERE temprac.period=pperiod and (ifnull(temprac.vlast,0)+ifnull(temprac.vdebet,0)-ifnull(temprac.vkredit,0))<>0
   and temprac.acc not in (select acc from rac where period=nextperiod);
update rac,(select ifnull(vlast,0)+ifnull(vdebet,0)-ifnull(vkredit,0) as val,acc from rac where period=pperiod) temp set rac.vlast=temp.val
where rac.period=nextperiod and rac.acc=temp.acc and temp.val<>0;
set totRL=(select sum(ifnull(vlast,0)+vdebet-vkredit) as val from rac,acc where rac.acc=acc.acc and period=pperiod and acc.detil=1 AND (acc.group_>3 OR rac.acc ='32030101'));
if (select right(pperiod,2))= '12' then
  update rac,acc set vlast=0 where rac.acc=acc.acc and acc.group_>3 and rac.period=nextperiod;
  update rac,acc set vlast=0 where rac.acc=acc.acc and trim(acc.acc) in ('32030101','32030100','32030000')  and rac.period=nextperiod ;
    update rac set vlast=rac.vlast + totRL where rac.acc in ('32010101','32010100','32010000','30000000') and rac.period=nextperiod;
end if;
   END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_ClosePOitemonLPB
DROP PROCEDURE IF EXISTS `SP_ClosePOitemonLPB`;
DELIMITER //
CREATE PROCEDURE `SP_ClosePOitemonLPB`(Pjurnal varchar(15))
BEGIN
select 0;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_ClosePOToleransiQty
DROP PROCEDURE IF EXISTS `SP_ClosePOToleransiQty`;
DELIMITER //
CREATE PROCEDURE `SP_ClosePOToleransiQty`(Pjurnal varchar(15))
BEGIN
update openpo,
   ( select oms,inv,remark,sum(qty) qty from
    (
      select convert(q.oms using latin1) oms,convert( d.inv using latin1) inv, (d.qty*-1) as qty, convert(d.remark using latin1) as remark
        from spbd d, spb q
        where d.spb = q.spb and q.oms=Pjurnal and q.`delete`=0
      union all
      select convert(ms.oms using latin1) oms,convert(inv using latin1), ms.qtypo+(ms.qtypo*ms.tol/100) as qty , convert(ms.remark using latin1) as remark
        from openpo ms
        where ms.oms=Pjurnal
    ) as t group by inv,remark having sum(t.qty)<=0 )  z
set openpo.close=1
where openpo.oms=z.oms and openpo.inv=z.inv and openpo.remark=z.remark and openpo.oms=Pjurnal;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_coba_kolom_jadi_baris
DROP PROCEDURE IF EXISTS `sp_coba_kolom_jadi_baris`;
DELIMITER //
CREATE PROCEDURE `sp_coba_kolom_jadi_baris`(Lcperiod varchar(4))
BEGIN
DECLARE DONe INT DEFAULT 0;
DECLARE i INT;
declare stringcct VARCHAR(2000);
declare lc,ln varchar(15);
DECLARE kolomcct CURSOR FOR
        SELECT  cct,left(name,15) as cctname FROM cct where detil=1 and left(cct,2)<='12' ;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONe = 1;
set stringcct='select acd.acc,acc.name,sum(acd.val*if(acd.dk=''D'',1,-1)) as TotNS,sum(if(left(cct,2)<=''12'',acd.val*if(acd.dk=''D'',1,-1),0)) as TotSD, ';
open kolomcct;
    REPEAT
      FETCH kolomcct INTO lc,ln;
          
        if (done=0) then
          set stringcct= concat(stringcct,'if(acd.cct=',lc,',sum(acd.val*if(acd.dk=''D'',1,-1)),0) as `',lc,' ',ln,'`,');
        end if;
    UNTIL DONe=1  END REPEAT;
  CLOSE kolomcct;
  set stringcct= concat(left(stringcct,LENGTH(stringcct)-1),' from acd left outer join acc on acd.acc=acc.acc where period=',Lcperiod,' and left(acd.acc,1)=5 and left(cct,2)<=''12'' group by acd.acc ');
select (stringcct);
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_Cogs
DROP PROCEDURE IF EXISTS `Sp_Cogs`;
DELIMITER //
CREATE PROCEDURE `Sp_Cogs`(Pperiod char(4))
BEGIN
select * from
(
      select hpro as jurnal,date,'HPP' as subjurnal,6 as prior from hpro where hpro.period=Pperiod and hpro.delete=0
      union all
      select lhp as jurnal,date,'LHP' as subjurnal,7 as prior from lhp where lhp.period=Pperiod and lhp.delete=0
      union all
      select sjr as jurnal,date, 'SJR' as subjurnal,8 as prior from sjr where sjr.period=Pperiod and sjr.delete=0
			union all
      select rsk as jurnal,date, 'RSK' as subjurnal,9 as prior from rsk where rsk.period=Pperiod and rsk.delete=0
			union all
      select sjh as jurnal,date, 'SJL' as subjurnal,10 as prior from sjh where sjh.period=Pperiod and sjh.delete=0
			union all
			select klr as jurnal,date, 'KLR' as subjurnal,11 as prior from klr where klr.period=Pperiod and klr.delete=0
			union all
	  	select jin as jurnal,date, 'JIN' as subjurnal,13 as prior from jin where jin.period=Pperiod and group_=1 and jin.delete=0
			union all
			select jin as jurnal,date, 'BPP' as subjurnal,14 as prior from jin where jin.period=Pperiod and group_=2 and jin.delete=0
			union all
			select trm as jurnal,date, 'TRM' as subjurnal,15 as prior from trm where trm.period=Pperiod and trm.delete=0
	    union all
		  select opn as jurnal,date, 'OPN' as subjurnal,18 as prior from opn where opn.period=Pperiod and opn.delete=0
) as xrep
      order by 2,4,1;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_cost_analisys
DROP PROCEDURE IF EXISTS `sp_cost_analisys`;
DELIMITER //
CREATE PROCEDURE `sp_cost_analisys`(Pperiod varchar(4),Pcct varchar(15))
BEGIN
  select 'Rawmaterial' as hppr,ifnull(round(sum(val),2),0) as val from acd,jin where acd.jurnal=jin.jin and (left(jin.loc,1)='T' or left(jin.loc,3)='GPP') and acd.acc in ('52010100','52100001','52100001','52100002','52040100','52040200') and acd.cct=Pcct and acd.period=Pperiod and acd.dk='D'
  union all
  select 'Packaging',ifnull(round(sum(val),2),0) as val from acd where acc in ('52020100','52020200') and cct=Pcct and period=Pperiod and dk='D'
  union all
  select 'Promosi',ifnull(round(sum(val),2),0) as val from acd where acc='52090100' and cct=Pcct and period=Pperiod and dk='D'
  union all
  select 'Direclabor',ifnull(round(sum(val),2),0) as val from acd where if(pcct='111101',acc='52050100',if(pcct='111102',acc='52050200',acc='52050300')) and period=Pperiod and dk='D'
  union all
  select 'Overhead',ifnull(round(sum(val),2),0) as val from acd where if(Pcct='111101',acc='52060100',if(Pcct='111102',acc='52060200',acc='52060300')) and period=Pperiod and dk='D'
  union all
  select 'Rawmaterialadd' as hppr,ifnull(round(sum(val),2),0) as val from acd,jin where  acd.jurnal=jin.jin and (acd.acc='52010100' or acd.acc='52020100') and acd.cct=Pcct and acd.period=Pperiod and acd.dk='D' and left(jin.loc,1)='G';
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_CreatePr
DROP PROCEDURE IF EXISTS `SP_CreatePr`;
DELIMITER //
CREATE PROCEDURE `SP_CreatePr`(Pinva char(15), Pinvz char(15))
BEGIN
declare Pperiod varchar(4);
declare stockQty double;
set Pperiod=(select Fdate2period(now()));
drop temporary table if exists tqty ;
CREATE TEMPORARY TABLE tqty
select inv,sum(qlast) qlast
 from
(
select ind.inv, sum(ifnull(qty,0)*if(dk='D',1,-1)) as qlast
      from ind,inv
      where ind.inv=inv.inv and ind.period=Pperiod and ind.date < adddate(now(),1) and inv.mrp=1
      group by ind.inv
UNION ALL
select inv.inv, ifnull(rin.qlast,0) qlast
       from (select * from rin where period=Pperiod) rin right join inv on rin.inv=inv.inv
       where inv.mrp=1
) as oawal group by inv;
drop temporary table if exists toutPR ;
CREATE TEMPORARY TABLE toutPR
select (0) as approv,prd.inv,prd.remark,prd.qty qtyPR,ifnull(omd.qty,0) as qtyPO,(prd.qty-ifnull(omd.qty,0)) as qty_ostPR
from prd inner join inv on prd.inv=inv.inv inner join prq on prd.prq=prq.prq
left outer join (select omd.prq,omd.inv,omd.noprd,omd.remark,sum(omd.qty) qty from omd
where omd.prq in (select prq from prq where prq.`delete`=0 and prq.`close`=0 ) group by omd.prq,omd.inv,omd.noprd) as omd
 on omd.inv=prd.inv and omd.prq=prd.prq and prd.`no`=omd.noprd
where prq.`delete`=0 and prq.`close`=0  and inv.mrp=1;
drop temporary table if exists toutPO ;
CREATE TEMPORARY TABLE toutPO
select omd.inv,omd.remark,omd.qty qtyPO,ifnull(lpd.qty,0) as qtyLPB,(omd.qty-ifnull(lpd.qty,0)) as qty_ostPO
from oms_in omd inner join inv on omd.inv=inv.inv inner join oms on omd.oms=oms.oms
left outer join (select lph.oms,lpd.inv,lpd.remark,sum(lpd.qty) qty from lpd,lph
where lpd.lph=lph.lph and lph.`delete`=0 and lph.oms in (select oms from oms where oms.`delete`=0 and oms.`close`=0) group by lph.oms,lpd.inv,lpd.remark) lpd on lpd.oms=omd.oms and omd.inv=lpd.inv and omd.remark=lpd.remark
where oms.`delete`=0 and oms.`close`=0 and inv.mrp=1;
select * from (
select approv,inv,name,loc,qtymin,sum(qlast) qlast,sum(outpr) outpr,sum(outpo) outpo,ifnull(lotsz,0) lotsz,ifnull(grpmat,'') grpmat,ifnull(leadtm,0) leadtm  from
(
select 0 as approv, tqty.inv, inv.name,inv.loc, inv.qtymin, qlast, 0 as outpr, 0 as outpo,inv.lotsz,inv.grpmat,inv.leadtm from tqty
left outer join inv on tqty.inv=inv.inv
  union all
select 0 as approv, toutpr.inv, inv.name,inv.loc, inv.qtymin,0 qtylast, qty_ostPR as outpr, 0 as outpo,inv.lotsz,inv.grpmat,inv.leadtm from toutpr
left outer join inv on toutPR.inv=inv.inv
  union all
select 0 as approv, toutpo.inv, inv.name,inv.loc, inv.qtymin,0 qtylast, 0 as outpr, toutpo.qty_ostPO as outpo,inv.lotsz,inv.grpmat,inv.leadtm from toutpo
left outer join inv on toutPO.inv=inv.inv
) as x group by inv) as Tmp
where (qlast+outpr+outpo)<= qtymin;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_CreatePr1
DROP PROCEDURE IF EXISTS `SP_CreatePr1`;
DELIMITER //
CREATE PROCEDURE `SP_CreatePr1`(Pusr char(25),Pnotrac char(15))
BEGIN
declare Pperiod varchar(4);
declare nopr varchar(15);
set Pperiod=(select Fdate2period(now()));
drop temporary table if exists tgrp ;
CREATE TEMPORARY TABLE tgrp
select (@num:=@num+1) as rownum, x.* from
(select distinct grpmat from mrppr  where grpmat<>'' and notrac=Pnotrac and app=1 order by grpmat) as x,(select @num:=0) as y;
set nopr= (select ifnull(max(prq),concat('PRQ-',Pperiod,'-000000')) from prq where period=Pperiod);
drop temporary table if exists tprq ;
CREATE TEMPORARY TABLE tprq
select concat(substr(nopr,1,9),lpad(right(nopr,6) + tgrp.rownum,6,'0')) as noprq ,mrppr.* ,inv.unit as unit
from mrppr left outer join tgrp on mrppr.grpmat=tgrp.grpmat left outer join inv on mrppr.inv=inv.inv
where mrppr.grpmat<>'' and notrac=Pnotrac and app=1 ;
insert into prq
select distinct noprq,tgl_proses,0 as app,'' as remark,trim(date_format(now(),'%d/%m/%Y %h:%i')) as chtime, Pusr as chuser,Pperiod,'' as loc,'MRP' as cct,0 as `close`,1 as withPO,0 as `delete`,0,0,' ',0, trim(date_format(now(),'%d/%m/%Y %h:%i')) as apdate
from tprq;
insert into prd
select noprq,inv,ifnull(loc,'GSP1') loc,remark,qty,rownumber,unit,lotsz,dateneed,cct,etd,acc,'' as dept,0 as nompr from (
SELECT o.inv,o.loc as loc,invname as remark,if(CEILING((o.qtymin-o.qtynow-o.prout-o.poout)/o.lotsz)=0,o.lotsz,CEILING((o.qtymin-o.qtynow-o.prout-o.poout)/o.lotsz)*o.lotsz)  as qty,@row_num := IF(@prev_value=o.noprq,@row_num+1,1) AS RowNumber
      ,o.unit
      ,if(CEILING((o.qtymin-o.qtynow-o.prout-o.poout)/o.lotsz)=0,o.lotsz,CEILING((o.qtymin-o.qtynow-o.prout-o.poout)/o.lotsz)*o.lotsz) as lotsz
     
     ,date_add(o.tgl_proses,interval o.leadtm day) as dateneed
       ,'' as cct,'' as etd,'' as acc
      ,@prev_value := o.noprq as noprq
  FROM tprq o,
      (SELECT @row_num := 1) x,
      (SELECT @prev_value := '') y
  ORDER BY o.noprq
 ) as x;
update mrppr,tprq set mrppr.no_pr=tprq.noprq where mrppr.notrac=tprq.notrac and mrppr.notrac=Pnotrac and mrppr.inv=tprq.inv;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_CSIreff
DROP PROCEDURE IF EXISTS `sp_CSIreff`;
DELIMITER //
CREATE PROCEDURE `sp_CSIreff`(Poms varchar(15),pdatea datetime)
BEGIN
select Poms as `No. Invoice`,jurnal `No. Reference`,rem as `Keterangan`,max(date) Tanggal, sum(nilai) as `Nilai Invoice` from
(
select jurnal,date,acd.rem,val as nilai from acd where acc='11050701' and period>='1407' and dk='D'
union all
select  csa.reff,csi.date,'' ,-csa.val from csa,csi where csa.csi=csi.csi and csi.period>='1407'
union all
select  csb.invo,csi.date,'',-csb.val from csb,csi where csb.csi=csi.csi and csi.period>='1407'
) as x where round(x.nilai,2)>0 group by jurnal
;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_DaftarAkt
DROP PROCEDURE IF EXISTS `SP_DaftarAkt`;
DELIMITER //
CREATE PROCEDURE `SP_DaftarAkt`(
	IN `datez` datetime
)
BEGIN
   drop temporary table if exists tmpAkt;
  create temporary table tmpAkt (accKode varchar(15),accName varchar(70),
                                 aktKode varchar(15),aktName varchar(100),
                                 aktAcc varchar(15),tglBeli datetime,jml smallint(5),
                                 ph float,ttgl1 int,ttgl2 int,tglStop datetime,tglJual datetime,
                                 kelompok varchar(5),hrgAwal double,tbhKrg double );
  insert into tmpAkt
  (
  select a.acc as accKode,a.name as accName,b.akt as aktKode,b.name as aktName,
           b.acc as aktAcc,b.tglbeli as tglBeli,b.jumlah as jml,b.prosentase as ph,
           if ((PERIOD_DIFF(DATE_FORMAT(datez,'%y%m'),DATE_FORMAT(b.tglbeli,'%y%m'))+1)>1200/b.prosentase,1200/b.prosentase,
           if(year(datez)=year(tglbeli),0,
           if(datez>=tglstop,(PERIOD_DIFF(DATE_FORMAT(tglstop,'%y%m'),DATE_FORMAT(b.tglbeli,'%y%m'))),
           (PERIOD_DIFF(DATE_FORMAT(datez,'%y%m'),DATE_FORMAT(b.tglbeli,'%y%m')))))) as ttgl1,
           if(year(datez)=year(tglBeli),(PERIOD_DIFF(DATE_FORMAT(datez,'%y%m'),DATE_FORMAT(b.tglbeli,'%y%m'))+1),
           if ((PERIOD_DIFF(DATE_FORMAT(datez,'%y%m'),DATE_FORMAT(b.tglbeli,'%y%m'))+1)>1200/b.prosentase,
           0,
           (PERIOD_DIFF(DATE_FORMAT(datez,'%y%m'),concat(DATE_FORMAT(datez,'%y'),'01'))+1))) as ttgl2,
           b.tglstop as tglStop,
			  (CASE WHEN b.tglJual = '0000-00-00 00:00:00' THEN '1970-01-01 00:00:00' ELSE b.tglJual END) as tglJual,
           (CASE b.prosentase WHEN 0 THEN 'P' WHEN 5 THEN 'P'
            WHEN 6.25 THEN 'III' WHEN 25 THEN 'I' WHEN 12.5 THEN 'II'
            ELSE 'IV' END) as kelompok,
           if(year(b.tglbeli) < year(datez),b.harga,0.00) as hrgAwal,
            
           if((b.tglbeli<b.tgljual) and (b.tgljual<=datez) and (year(b.tgljual)=year(b.tglbeli)),-b.harga,
            
           if((b.tglbeli<b.tgljual) and (b.tgljual<=datez) and (year(b.tgljual)>=year(b.tglbeli)),-b.harga,
           if(year(b.tglbeli) = year(datez),b.harga,0))) as tbhKrg
    from acc a, akt b
    where a.acc = b.acc
    and b.tglbeli <= datez
  );
select datez,a.*,(a.hrgAwal+tbhKrg) as HrgAkh,(a.hrgAwal+a.tbhKrg) as dsrPeny,(a.hrgAwal+a.tbhKrg)*a.ph/1200 as penyusutan,
if(datez>=tglstop,(a.hrgAwal+a.tbhKrg),if(year(datez)>=year(tglbeli),0,(a.hrgAwal+a.tbhKrg)*a.ph/1200*(ttgl1-ttgl2))) as peny_last,(a.hrgAwal+a.tbhKrg)*a.ph/1200*(ttgl2) as peny_now,
(a.hrgAwal+a.tbhKrg)*a.ph/1200*(ttgl1) as peny_sd_now,round((a.hrgAwal+tbhKrg)-(a.hrgAwal+a.tbhKrg)*a.ph/1200*(ttgl1),2) as nilai_buku,if(year(datez)<=year(tglbeli),0,ttgl2-1) as tgl3
from tmpAkt a;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_dataerror
DROP PROCEDURE IF EXISTS `sp_dataerror`;
DELIMITER //
CREATE PROCEDURE `sp_dataerror`(
	IN `pperiod` varchar(4)
)
BEGIN
 select period,jurnal,date,keterangan,dk,round(val,2) as val,note from
 (
  select period,jurnal,max(date) as date ,'Jurnal Tidak Imbang' as keterangan,convert('' using latin1) as dk,sum(val*if(dk='D',1,-1)) as val,'Tolong Cek Nilai Transaksi' as note
  from acd where period=pperiod group by period,jurnal
 ) as Nbal where round(val,2)<>0
union all
 select period,jurnal,date ,'Master Account Tidak ada',dk,val ,'Tolong Cek Transaksi atau Master Konfigurasi'
 from acd where period=pperiod and acc not in (select acc from acc where detil=1)
union all
 select period,jurnal,date ,'Master Lokasi Tidak Ada',dk,val ,'Tolong Cek Lokasi Transaksi'
 from ind where period=pperiod and loc not in (select loc from loc)
union all
 select period,cgr.cgr,date ,'Nomer Giro tidak ada dalam Pelunasan','',bgval ,'Tolong Cek Pelunasan Kas&Bank'
 from cgr where period=pperiod and cgr.nobg not in (select nobg from kag) and `delete`<>1
union all
 select period,jurnal,date ,'Master Supplier/Customer Tidak ada',dk,val ,'Tolong Cek Transaksi'
 from rhp where period=pperiod and ((sub is null or sub='') or sub not in (select sub from sub))
union all
 select klr.period,kll.klr,klr.date,'Error hpp belum difakturkan','D',kll.val,'cek tanggal document dengan SJL' from klr,kll where kll.klr=klr.klr and klr.period=period=pperiod
 and date(klr.date)<date(kll.date)
union all
 select klr.period,kll.klr,klr.date,'Error hpp belum difakturkan','D',kll.val,'cek tanggal document dengan SJL' from klr,kll where kll.klr=klr.klr and klr.period=period=pperiod
 and date(klr.date)<date(kll.date)
union all
 select period,jurnal,date ,'Cek Nilai LPB',dk,val,'abaikan jika memang nol' from acd where (val=0 or val is null) and period=pperiod and dk='D' and subjurnal = 'LPH'
union all
 select period,klr.klr,klr.date ,'Cek Nilai IJL','',kll.val,'abaikan jika memang nol' from kll,klr where kll.klr=klr.klr and date(kll.date)>date(klr.date) and klr.period=pperiod
union all
 select period,msk.msk,msk.date ,'Cek Nilai IBL','',msl.val,'abaikan jika memang nol' from msl,msk where msl.msk=msk.msk and date(msl.date)>date(msk.date) and msk.period=pperiod
;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_DelDetailInvoicePemb
DROP PROCEDURE IF EXISTS `Sp_DelDetailInvoicePemb`;
DELIMITER //
CREATE PROCEDURE `Sp_DelDetailInvoicePemb`(Pjurnal varchar(15))
BEGIN
  start transaction;
  delete from msl where msk=Pjurnal;
  delete from msd where msk=Pjurnal;
  delete from msx where msk=Pjurnal;
  commit;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_Delete
DROP PROCEDURE IF EXISTS `Sp_Delete`;
DELIMITER //
CREATE PROCEDURE `Sp_Delete`(
	IN `Psubjurnal` VARCHAR(50),
	IN `Pjurnal` varchar(15)
)
BEGIN
if (Psubjurnal='OMS') then
   delete from oms_in where oms=Pjurnal;
end if;
if (Psubjurnal='LPH') then
   delete from ind where jurnal=Pjurnal;
   delete from acd where jurnal=Pjurnal;
end if;
if (Psubjurnal='LPJ') then
   delete from ind where jurnal=Pjurnal;
   delete from acd where jurnal=Pjurnal;
end if;
if (Psubjurnal='MSK') then
   
   delete from acd where jurnal=Pjurnal;
   delete from rhp where jurnal=Pjurnal;
   delete from payhp where jurnal=Pjurnal;
end if;
if (Psubjurnal='SJR') then
   delete from ind where jurnal=Pjurnal;
   delete from acd where jurnal=Pjurnal;
end if;
if (Psubjurnal='RSK') then
   delete from acd where jurnal=Pjurnal;
   delete from rhp where jurnal=Pjurnal;
end if;
if (Psubjurnal='SJL') then
   delete from ind where jurnal=Pjurnal;
   delete from acd where jurnal=Pjurnal;
end if;
if (Psubjurnal='SJT') then
   delete from ind where jurnal=Pjurnal;
   delete from acd where jurnal=Pjurnal;
end if;
if (Psubjurnal='RKA') then
   delete from ind where jurnal=Pjurnal;
   delete from acd where jurnal=Pjurnal;
end if;
if (Psubjurnal='KLR') then
   delete from acd where jurnal=Pjurnal;
   delete from rhp where jurnal=Pjurnal;
   delete from payhp where jurnal=Pjurnal;
end if;
if (Psubjurnal='KLE') then
   delete from acd where jurnal=Pjurnal;
   delete from rhp where jurnal=Pjurnal;
   delete from payhp where jurnal=Pjurnal;
end if;
if (Psubjurnal='RKL') then
   delete from acd where jurnal=Pjurnal;
   delete from rhp where jurnal=Pjurnal;
end if;
if (Psubjurnal='UMH') then
   delete from acd where jurnal=Pjurnal;
 delete from rhp where jurnal=Pjurnal;
   delete from payhp where jurnal=Pjurnal;
end if;
if (Psubjurnal='CAD') then
   delete from acd where jurnal=Pjurnal;
end if;
if (Psubjurnal='JIN') then
   delete from acd where jurnal=Pjurnal;
   delete from ind where jurnal=Pjurnal;
end if;
if (Psubjurnal='BPP') then
   delete from acd where jurnal=Pjurnal;
   delete from ind where jurnal=Pjurnal;
end if;
if (Psubjurnal='BPR') then
   delete from acd where jurnal=Pjurnal;
   delete from ind where jurnal=Pjurnal;
end if;
if (Psubjurnal='LHP') then
   delete from acd where jurnal=Pjurnal;
   delete from ind where jurnal=Pjurnal;
end if;
if (Psubjurnal='OPN') then
   delete from acd where jurnal=Pjurnal;
   delete from ind where jurnal=Pjurnal;
end if;
if (Psubjurnal='TRM') then
   delete from acd where jurnal=Pjurnal;
   delete from ind where jurnal=Pjurnal;
end if;
if (Psubjurnal='MMO') then
   delete from acd where jurnal=Pjurnal;
   delete from rhp where jurnal=Pjurnal and subjurnal='MMO';
end if;
if (Psubjurnal='KBK') or (Psubjurnal='KBM') then
   delete from rhp  where jurnal=Pjurnal;
   delete from acd where jurnal=Pjurnal;
   delete from payhp where jurnal=Pjurnal;
end if;
if (Psubjurnal='KKP') then
   delete from rhp  where jurnal=Pjurnal;
   delete from acd  where jurnal=Pjurnal;
   delete from payhp where jurnal=Pjurnal;
end if;
if (Psubjurnal='KPH') then
   delete from rhp where jurnal=Pjurnal;
   delete from acd where jurnal=Pjurnal;
   delete from payhp where jurnal=Pjurnal;
end if;
if (Psubjurnal='CGR') then
   delete from acd where jurnal=Pjurnal;
end if;
if (Psubjurnal='AKT') then
   delete from acd where jurnal=Pjurnal;
end if;
if (Psubjurnal='INO') then
   delete from acd where jurnal=Pjurnal;
end if;
if (Psubjurnal='KLRI') then
   delete from acd where jurnal=Pjurnal;
   delete from rhp where jurnal=Pjurnal;
end if;
call Sp_SaveRac ('0',Pjurnal);
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_Delete2
DROP PROCEDURE IF EXISTS `Sp_Delete2`;
DELIMITER //
CREATE PROCEDURE `Sp_Delete2`(Psubjurnal Varchar(3),Pjurnal varchar(15))
BEGIN
if (Psubjurnal='OMS') then
   delete from oms_in where oms=Pjurnal;
end if;
if (Psubjurnal='LPH') then
   delete from ind where jurnal=Pjurnal;
   delete from acd where jurnal=Pjurnal;
end if;
if (Psubjurnal='LPJ') then
   delete from ind where jurnal=Pjurnal;
end if;
if (Psubjurnal='MSK') then
   
   delete from acd where jurnal=Pjurnal;
end if;
if (Psubjurnal='SJR') then
   delete from ind where jurnal=Pjurnal;
   delete from acd where jurnal=Pjurnal;
end if;
if (Psubjurnal='RSK') then
   delete from acd where jurnal=Pjurnal;
end if;
if (Psubjurnal='SJL') then
   delete from ind where jurnal=Pjurnal;
   delete from acd where jurnal=Pjurnal;
end if;
if (Psubjurnal='SJT') then
   delete from ind where jurnal=Pjurnal;
   delete from acd where jurnal=Pjurnal;
end if;
if (Psubjurnal='RKA') then
   delete from ind where jurnal=Pjurnal;
   delete from acd where jurnal=Pjurnal;
end if;
if (Psubjurnal='KLR') then
   delete from acd where jurnal=Pjurnal;
end if;
if (Psubjurnal='RKL') then
   delete from acd where jurnal=Pjurnal;
end if;
if (Psubjurnal='UMH') then
   delete from acd where jurnal=Pjurnal;
end if;
if (Psubjurnal='CAD') then
   delete from acd where jurnal=Pjurnal;
end if;
if (Psubjurnal='JIN') then
   delete from acd where jurnal=Pjurnal;
   delete from ind where jurnal=Pjurnal;
end if;
if (Psubjurnal='BPP') then
   delete from acd where jurnal=Pjurnal;
   delete from ind where jurnal=Pjurnal;
end if;
if (Psubjurnal='LHP') then
   delete from acd where jurnal=Pjurnal;
   delete from ind where jurnal=Pjurnal;
end if;
if (Psubjurnal='OPN') then
   delete from acd where jurnal=Pjurnal;
   delete from ind where jurnal=Pjurnal;
end if;
if (Psubjurnal='TRM') then
   delete from acd where jurnal=Pjurnal;
   delete from ind where jurnal=Pjurnal;
end if;
if (Psubjurnal='MMO') then
   delete from acd where jurnal=Pjurnal;
end if;
if (Psubjurnal='KBK') or (Psubjurnal='KBM') then
   delete from acd where jurnal=Pjurnal;
end if;
if (Psubjurnal='KKP') then
   delete from acd  where jurnal=Pjurnal;
end if;
if (Psubjurnal='KPH') then
    delete from acd where jurnal=Pjurnal;
end if;
if (Psubjurnal='CGR') then
   delete from acd where jurnal=Pjurnal;
end if;
if (Psubjurnal='AKT') then
   delete from acd where jurnal=Pjurnal;
end if;
call Sp_SaveRac ('0',Pjurnal);
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_Delete3
DROP PROCEDURE IF EXISTS `Sp_Delete3`;
DELIMITER //
CREATE PROCEDURE `Sp_Delete3`(Psubjurnal Varchar(3),Pjurnal varchar(15))
BEGIN
if (Psubjurnal='MSK') then
   delete from rhp where jurnal=Pjurnal;
   delete from payhp where jurnal=Pjurnal;
end if;
if (Psubjurnal='RSK') then
   delete from rhp where jurnal=Pjurnal;
end if;
if (Psubjurnal='KLR') then
   delete from rhp where jurnal=Pjurnal;
   delete from payhp where jurnal=Pjurnal;
end if;
if (Psubjurnal='RKL') then                  
   delete from rhp where jurnal=Pjurnal;
end if;
if (Psubjurnal='UMH') then
 delete from rhp where jurnal=Pjurnal;
   delete from payhp where jurnal=Pjurnal;
end if;
if (Psubjurnal='MMO') then
   delete from rhp where jurnal=Pjurnal and subjurnal='MMO';
end if;
if (Psubjurnal='KBK') or (Psubjurnal='KBM') then
   delete from rhp  where jurnal=Pjurnal;
   delete from payhp where jurnal=Pjurnal;
end if;
if (Psubjurnal='KKP') then
   delete from rhp  where jurnal=Pjurnal;
   delete from payhp where jurnal=Pjurnal;
end if;
if (Psubjurnal='KPH') then
   delete from rhp where jurnal=Pjurnal;
 delete from payhp where jurnal=Pjurnal;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_DeleteDetail
DROP PROCEDURE IF EXISTS `Sp_DeleteDetail`;
DELIMITER //
CREATE PROCEDURE `Sp_DeleteDetail`(Psubjurnal Varchar(3),Pjurnal varchar(15))
BEGIN
if (Psubjurnal='OMS') then
   delete from oms_in where oms=Pjurnal;
end if;
if (Psubjurnal='LPH') then
   delete from Ind where Jurnal=Pjurnal;
   delete from Acd where Jurnal=Pjurnal;
end if;
if (Psubjurnal='MSK') then
   delete from Acd where Jurnal=Pjurnal;
   delete from rhp where Jurnal=Pjurnal;
end if;
if (Psubjurnal='SJR') then
   delete from Ind where Jurnal=PJurnal;
   delete from Acd where Jurnal=PJurnal;
end if;
if (Psubjurnal='RSK') then
   delete from Acd where Jurnal=Pjurnal;
   delete from rhp where Jurnal=Pjurnal;
end if;
if (Psubjurnal='SJL') then
   delete from Ind where Jurnal=PJurnal;
   delete from Acd where Jurnal=PJurnal;
end if;
if (Psubjurnal='KLR') then
   delete from Acd where Jurnal=Pjurnal;
   delete from rhp where Jurnal=Pjurnal;
end if;
if (Psubjurnal='UMH') then
   delete from Acd where Jurnal=PJurnal;
end if;
call Sp_SaveRac ('0',Pjurnal);
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_DeleteXAcd
DROP PROCEDURE IF EXISTS `Sp_DeleteXAcd`;
DELIMITER //
CREATE PROCEDURE `Sp_DeleteXAcd`(Psubjurnal Varchar(3),Pjurnal varchar(15))
BEGIN
if (Psubjurnal='OMS') then
   delete from oms_in where oms=Pjurnal;
end if;
if (Psubjurnal='LPH') then
   delete from Ind where Jurnal=Pjurnal;
end if;
if (Psubjurnal='MSK') then
   delete from rhp where Jurnal=Pjurnal;
   delete from payhp where Jurnal=Pjurnal;
end if;
if (Psubjurnal='SJR') then
   delete from Ind where Jurnal=PJurnal;
end if;
if (Psubjurnal='RSK') then
   delete from rhp where Jurnal=Pjurnal;
end if;
if (Psubjurnal='SJL') then
   delete from Ind where Jurnal=PJurnal;
end if;
if (Psubjurnal='SJT') then
   delete from Ind where Jurnal=PJurnal;
end if;
if (Psubjurnal='RKA') then
   delete from Ind where Jurnal=PJurnal;
end if;
if (Psubjurnal='KLR') then
   delete from rhp where Jurnal=Pjurnal;
   delete from payhp where Jurnal=Pjurnal;
end if;
if (Psubjurnal='RKL') then
   delete from rhp where Jurnal=Pjurnal;
end if;
if (Psubjurnal='JIN') then
   delete from Ind where Jurnal=PJurnal;
end if;
if (Psubjurnal='BPP') then
   delete from Ind where Jurnal=PJurnal;
end if;
if (Psubjurnal='LHP') then
   delete from Ind where Jurnal=PJurnal;
end if;
if (Psubjurnal='OPN') then
   delete from Ind where Jurnal=PJurnal;
end if;
if (Psubjurnal='TRM') then
 
   delete from Ind where Jurnal=PJurnal;
end if;
if (Psubjurnal='MMO') then
 
   delete from rhp where Jurnal=Pjurnal and subjurnal='MMO';
end if;
if (Psubjurnal='KKP') then
   delete from rhp  where Jurnal=Pjurnal;
   delete from payhp where Jurnal=Pjurnal;
end if;
if (Psubjurnal='KPH') then
   delete from rhp where Jurnal=Pjurnal;
   delete from payhp where Jurnal=Pjurnal;
end if;
if (Psubjurnal='CGR') then
   delete from Acd where Jurnal=Pjurnal;
end if;
update acd set adj=1 where acd.jurnal=Pjurnal;
insert into acd
 SELECT acd.jurnal, acd.period, acd.acc as acc, acd.date,
 acd.val as val, acd.cct as cct, acd.rem, if(acd.dk='K',convert('D' using latin1),convert('K' using latin1)) as dk,Psubjurnal as  subjurnal, 1 as adj
 from acd where acd.jurnal=Pjurnal and acd.adj=1 ;
call Sp_SaveRac ('1',Pjurnal);
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_desaincor
DROP PROCEDURE IF EXISTS `SP_desaincor`;
DELIMITER //
CREATE PROCEDURE `SP_desaincor`(Pinva char(15),Pinvz char(15),pjenisa char(15), pjenisz char(15),pdatea datetime,pdatez datetime,Pstage int)
BEGIN
if (Pstage=1 ) then
select '' as vendor,ind.jurnal, jenis.name as matgroup,ind.date lpbdate,inv.inv,inv.name,mspec.spec as specification,inv.unit,0 as konversi,inv.unit2 as unitbesar,mspec.prodesc inbox,fcode,
mspec.weight,ind.qty,ind.val/ind.qty as price,mspec.wnocore,ind.qty*mspec.weight qtykg,
sum(if(dk='K',qty,0))/TIMESTAMPDIFF(MONTH,pdatea ,adddate(pdatez,1)) as qtypakai, sum(if(dk='D',qty,0)) as qtyin,sum(if(dk='D',round(val,2),0)) as val
from inv left outer join (select * from ind where date(ind.date) between pdatea and pdatez and ind.inv between Pinva and Pinvz) ind on ind.inv=inv.inv inner join jenis on inv.jenis=jenis.jenis
left outer join mspec on inv.inv=mspec.inv
where  inv.jenis between pjenisa and pjenisz and inv.inv between Pinva and Pinvz and left(inv.inv,1) in ('1','2','3','6') group by ind.inv;
end if;
if (Pstage=2) then
select sub.name as vendor,oms,jenis.name as matgroup,lpbdate,inv.inv as material,inv.name as matname,mspec.spec as specification,mspec.prodesc inbox,fcode,
mspec.weight,lpb.qty,lpb.unit,lpb.price,lpb.qty*lpb.price as lpbnilai,mspec.wnocore,lpb.qty*mspec.weight qtykg
from (select inv.inv,inv.name,inv.jenis from inv where inv.inv between Pinva and Pinvz and inv.jenis between pjenisa and pjenisz) as inv left outer join jenis on inv.jenis=jenis.jenis
left outer join mspec on inv.inv=mspec.inv left outer join sub on mspec.sub=sub.sub
left outer join
(select lph.sub,sub.name,lph.oms,lpd.inv,lpd.remark,max(lph.date) lpbdate,sum(lpd.qty1) qty,lpd.unit,omd.price from lpd inner join lph on lpd.lph=lph.lph left outer join omd on lph.oms=omd.oms and lpd.inv=omd.inv and lpd.remark=omd.remark
left outer join sub on lph.sub=sub.sub
where lph.date>=Pdatea and lph.date < Pdatez and lpd.inv between Pinva and Pinvz group by lpd.inv,lpd.unit) lpb on trim(inv.inv)=trim(lpb.inv) and lpb.sub=mspec.sub
group by inv.inv,mspec.sub,lpb.oms;
end if;
if (Pstage=3) then
select sub.name as vendor,omd.oms,jenis.name as matgroup,omsdate,inv.inv as material,inv.name as matname,mspec.spec as specification,mspec.prodesc inbox,fcode,
mspec.weight,omd.qty,omd.unit,omd.price,omd.qty*omd.price as lpbnilai,round(omd.price/mspec.weight,2) as pricekg
from (select inv.inv,inv.name,inv.jenis from inv where inv.inv between Pinva and Pinvz and inv.jenis between pjenisa and pjenisz) as inv left outer join jenis on inv.jenis=jenis.jenis
left outer join mspec on inv.inv=mspec.inv left outer join sub on mspec.sub=sub.sub left outer join
(select sub.name as vendor,oms.sub,omd.oms,omd.inv,omd.remark,max(oms.date) omsdate,sum(omd.qty1) qty,omd.unit,omd.price from oms inner join omd on oms.oms=omd.oms
left outer join sub on oms.sub=sub.sub
where oms.date>=Pdatea and oms.date < pdatez and omd.inv between Pinva and Pinvz group by omd.oms,omd.inv,omd.unit) omd on inv.inv=omd.inv and mspec.sub=omd.sub ;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_DocFlow
DROP PROCEDURE IF EXISTS `SP_DocFlow`;
DELIMITER //
CREATE PROCEDURE `SP_DocFlow`(
	IN `Pjurnal` varchar(15)
)
BEGIN
DECLARE Psubjurnal varchar(3);
DECLARE PwithMO bit(1);
set Psubjurnal = left(Pjurnal, 3);
if (Psubjurnal = 'IJL' or Psubjurnal = 'IBL' or Psubjurnal = 'IBI' or Psubjurnal = 'RSK' or Psubjurnal = 'RKL') then
  select kas.kas as `No Bukti`,kas.date as `Tgl Bukti`,sub.name as `Supplier`,kas.remark as `Keterangan`,kad.val as `Total`
    from kas,kad,sub where kas.sub=sub.sub and kad.kas=kas.kas and kad.jurnal=Pjurnal and kas.delete=false
  union all
  select kwd.kwt,kwt.date,kwt.sub,kwt.remark,kwd.valsubtotal from kwt,kwd where kwt.kwt=kwd.kwt and kwd.jurnal=Pjurnal
  union all
  select umh.umh,umh.date,umh.sub,umh.remark,umd.val from umd,umh where umd.umh=umh.umh and umd.jurnal=Pjurnal;
elseif (Psubjurnal = 'PRQ') then
  select omd.oms as OMS, omd.inv as `Kode Barang`, omd.remark as `Keterangan`,omd.dateneed as `Tgl Dibutuhkan`, omd.qty1 as `Qty`, omd.unit as `Unit`,oms.sub as `Kode`, sub.name as `Supplier/Customer`
    from oms, omd,sub
   where oms.oms=omd.oms and oms.`delete`=0 and omd.prq=Pjurnal and oms.sub=sub.sub;
elseif (Psubjurnal = 'POL' ) then
  select spbd.spb as SPB, spbd.inv as `Kode Barang`, spbd.remark as `Keterangan`, spbd.qtygd as `Qty Diterima`, spbd.qty1 as `Qty SJ`,
         spbd.unitgd as `Unit`
    from spb left outer join spbd on spbd.spb=spb.spb
   where spb.oms=Pjurnal and spb.`delete`=0;
elseif (Psubjurnal = 'POS') then
  select spbd.spb as SPB_MMO, spbd.inv as `Kode Barang`, spbd.remark as `Keterangan`, spbd.qtygd as `Qty Diterima`,
         spbd.unitgd as `Unit`,0 as nilai
    from spb left outer join spbd on spbd.spb=spb.spb
   where spb.oms=Pjurnal and spb.`delete`=0
    union all
    select jsd.jsu,'',jsd.remark,0,'',jsd.val as nilai from jsd where jsd.okl<>'' and jsd.okl=Pjurnal ;
elseif (Psubjurnal = 'SPB') then
  select lpd.lph as LPB, lpd.inv as `Kode Barang`, lpd.remark as `Keterangan`, lpd.qty1 as `Qty`, lpd.unit as `Unit`
    from lph left outer join lpd on lph.lph=lpd.lph where lph.spb=Pjurnal and lph.`delete`=0;
elseif (Psubjurnal = 'LPB') then
  select msl.msk as MSK, msl.date as Tanggal, msl.oms as `PO/PR`, msl.val as Total, msl.remark as Keterangan
    from msl,msk where msl.lph=Pjurnal and msl.msk=msk.msk and msk.`delete`=0;
elseif (Psubjurnal = 'SOL' or Psubjurnal = 'SOE') then
  select doh.DOH,sub.name Customer,doh.date Tanggal,doh.remark from doh,sub where doh.sub=sub.sub and doh.okl=Pjurnal;
elseif (Psubjurnal = 'TDO') then
  select spd.spm as SPM, spd.nodsg as `No Design`, spd.inv as `Kode Barang`, spd.remark as `Keterangan`, spd.loc as `Loc`, spd.qty1 as `Qty SJ`,
           spd.unit as `Unit SJ`, spd.qtygudang as `Qty Dikirim`, spd.unitgudang as `Unit Dikirim`
      from spd, spm where okl_rms=Pjurnal and spm.`delete`=0 and spd.spm=spm.spm
  union all
  select sprd.spr,sprd.nodsg,sprd.inv,sprd.remark,sprd.loc,-sprd.qty1,sprd.unit,-sprd.qty,sprd.unit
      from spr,sprd,sjh,spm,doh where sprd.spr=spr.spr and spr.rsm=sjh.sjh and sjh.spm=spm.spm and spm.okl_rms=doh.doh and okl_rms=Pjurnal ;
elseif (Psubjurnal = 'MOR') then
  select spd.spm as SPM, spd.nodsg as `No Design`, spd.inv as `Kode Barang`, spd.remark as `Keterangan`,
         spd.loc as `Loc`, spd.qty1 as `Qty SJ`, spd.unit as `Unit SJ`, spd.qtygudang as `Qty Dikirim`,
         spd.unitgudang as `Unit Dikirim`
    from spd,spm where mor=Pjurnal and spd.spm=spm.spm and spm.`delete`=0;
elseif (Psubjurnal = 'SPM') then
  select sjh.sjh as SJH, sjd.inv as `Kode Barang`, sjd.remark as Keterangan, sjd.qty1 as Qty, sjd.unit as Unit
    from sjh, sjd where sjh.sjh=sjd.sjh and sjh.spm=Pjurnal and sjh.`delete`=0;
elseif (Psubjurnal = 'BBK') then
    select cgr.* from cgr,kag where cgr.nobg=kag.nobg and kag.kas=Pjurnal;
elseif (Psubjurnal = 'SJL') then
  select kll.klr as KLR, kll.date as Tanggal, kll.okl as `SO/MOR`, kll.val as Total, kll.remark as Keterangan
    from kll,klr where kll.sjh=Pjurnal and kll.klr=klr.klr and klr.`delete`=0;
elseif (Psubjurnal = 'PRR') then
  select rms.rms as RBL, rmd.inv as `Kode Barang`, rmd.remark as `Keterangan`, rmd.qty1 as `Qty`, rmd.unit as `Unit`
    from rms, rmd where rms.rma=Pjurnal and rms.rms = rmd.rms and rms.`delete`=0;
elseif (Psubjurnal = 'POR') then
  select spm.spm as SPM, spd.inv as `Kode Barang`, spd.remark as Keterangan, spd.loc as `Loc`, spd.qty1 as `Qty SPM`,
         spd.unit as `Unit SJ`, spd.qtygudang as `Qty Dikirim`, spd.unitgudang as `Unit Dikirim`
    from spd, spm where spm.okl_rms=Pjurnal and spd.spm=spm.spm and spm.`delete`=0;
elseif (Psubjurnal = 'SMR') then
  select sjr.sjr as SJR, sjrd.inv as `Kode Barang`, sjrd.remark as Keterangan, sjrd.qty1 as Qty, sjrd.unit as Unit
    from sjr, sjrd where sjr.sjr=sjrd.sjr and sjr.spm=Pjurnal and sjr.`delete`=0;
elseif (Psubjurnal = 'SJR') then
select rms,date,remark,fpj from rms where rma= Pjurnal;
elseif (Psubjurnal = 'SOR') then
  select spr.spr as SPR, spr.date as Tanggal, sprd.nodsg as `No Design`,
         sprd.inv as `Kode Barang`, sprd.remark as Keterangan, sprd.qty1 as Qty, sprd.unit as Unit
    from spr, sprd where spr.spr = sprd.spr and spr.`delete`=0 and spr.rsm=Pjurnal;
elseif (Psubjurnal = 'RFP') then
  select kad.kas,kad.jurnal,kad.remark,kad.val  from kad,kas,rfd where kad.jurnal =rfd.nodoc and kad.kas=kas.kas and rfd.rfp=Pjurnal and kas.`delete`=0;
elseif (Psubjurnal = 'KON') then
  select oms.oms,oms.date,oms.remark,omd.inv,omd.qty1,omd.unit,omd.qty  from oms,omd where oms.oms=omd.oms and oms.no_kon=Pjurnal and oms.`delete`=0;
elseif (Psubjurnal = 'CAD') then
  select msk as `Jurnal`, acc as `No Perkiraan`,val as `Nilai`, remark as `Keterangan`,
dk as `D/B`, cct as `Cost Center`, kurs as `Kurs`
 from msx where trim(cad)=Pjurnal
union all
select jsd.jsu as `Jurnal`, jsd.acc as `No Perkiraan`,jsd.val as `Nilai`, jsd.remark as `Keterangan`,
jsd.dk as `D/B`, jsd.cct as `Cost Center`, jsu.kurs as `Kurs`
 from jsd,jsu where jsu.jsu=jsd.jsu and trim(jsd.cad)=Pjurnal
union all
select umh.umh as `Jurnal`, umd.acc as `No Perkiraan`,umd.val as `Nilai`, umd.remark as `Keterangan`,
umd.dk as `D/B`, umd.cct as `Cost Center`, umh.kurs as `Kurs`
 from umd,umh where umh.umh=umd.umh and trim(umd.cad)=Pjurnal;
elseif (Psubjurnal = 'MPR') then
  select prq.prq,prq.date,prq.aprov1,prq.aprov as aprov2,prd.inv,prd.remark as Nama_Barang from prq,prd where prq.prq=prd.prq and prq.mpr=Pjurnal;
elseif (Psubjurnal='MMO') then
    select kas.kas as `Kode Trans`,kas.date as `Tanggal`,kas.sub as `Kode Sup/Cust`,sub.name as `Nama Sub/Cust`,kas.remark as `Keterangan`,kad.dk as `D/K`,kad.val as `Nilai` from kas,kad,sub
    where kad.kas=kas.kas and kas.sub=sub.sub and kad.jurnal=Pjurnal
    UNION
select umk.klr as `Kode Trans`,klr.date as `Tanggal`,klr.sub as `Kode Sup/Cust`,sub.name as `Nama Sub/Cust`,umk.remark as `Keterangan`,umk.dk as `D/K`,umk.val as `Nilai` from umk,klr,sub
    where klr.klr=umk.klr and sub.sub=klr.sub and umk.jurnal=Pjurnal
    UNION
    select umkp.msk as `Kode Trans`,msk.date as `Tanggal`,msk.sub as `Kode Sup/Cust`,sub.name as `Nama Sub/Cust`,umkp.remark as `Keterangan`,umkp.dk as `D/K`,umkp.val as `Nilai` from umkp,msk,sub
    where umkp.msk=msk.msk and sub.sub=msk.sub and umkp.jurnal=Pjurnal
UNION
    select umh.umh as `Kode Trans`,umh.date as `Tanggal`,umh.sub as `Kode Sup/Cust`,sub.name as `Nama Sub/Cust`,umh.remark as `Keterangan`,umd.dk as `D/K`,umd.val as `Nilai` from umh,umd,sub
    where umh.umh=umd.umh and sub.sub=umh.sub and umd.jurnal=Pjurnal;
elseif (Psubjurnal = 'BPP') then
  select lhc.* from lhc,lhp where lhc.lhp = lhp.lhp and lhp.`delete` = 0 and lhc.jin = Pjurnal;
elseif (Psubjurnal = 'LHP') then
  select trm.lhp,trd.* from lhp,trm,trd where lhp.lhp = trm.lhp and trm.trm = trd.trm and trm.`delete` = 0 and trm.lhp = Pjurnal;
elseif (Psubjurnal = 'PRJ') then
  select por.por as `PO Jasa`,pord.inv as `Kode Barang`,pord.remark as `Barang`,por.duedate as `Tgl Dibutuhkan`,pord.qty as Qty,pord.unit as Unit from por,pord where por.por = pord.por and por.`delete` = 0 and pord.rma = Pjurnal;
elseif (Psubjurnal = 'POJ') then
  select spm.spm as SPM,spd.nodsg as `No Batch`,spd.inv as `Kode Barang`,spd.remark as Barang,spd.loc as Lokasi,spd.qty as Qty,spd.unit as Unit,spd.qty1 as `Qty Dikirim`,spd.unitgudang as `Unit Dikirim` from spm,spd where spm.spm = spd.spm and spm.`delete` = 0 and spm.okl_rms = Pjurnal;
elseif (Psubjurnal = 'SMT') then
  select sjr.sjr as `Surat Jalan`,sjrd.inv as `Kode Barang`,sjrd.remark as `Barang`,sjrd.qty as Qty,sjrd.unit as Unit from sjr,sjrd where sjr.sjr = sjrd.sjr and sjr.`delete` = 0 and sjr.spm = Pjurnal;
elseif (Psubjurnal = 'SJT') then
  select lph.lph as LPJ,lpd.inv as `Kode Barang`,lpd.remark as Barang,lpd.qty as Qty,lpd.unit as Unit,lpd.nodsg as `No Batch` from lph,lpd where lph.lph = lpd.lph and lph.`delete` = 0 and lph.oms = (select okl from sjrd where sjr = Pjurnal);
elseif (Psubjurnal = 'SBR') then
  select rka.rka,rka.date,rka.sub,sub.name from rka,sub where rka.sub=sub.sub and rka.spr = Pjurnal;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_ext_KartuStock
DROP PROCEDURE IF EXISTS `Sp_ext_KartuStock`;
DELIMITER //
CREATE PROCEDURE `Sp_ext_KartuStock`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Pjenisa` varchar(15),
	IN `Pjenisz` varchar(15),
	IN `Pinva` varchar(15),
	IN `Pinvz` varchar(15),
	IN `Ploca` varchar(15),
	IN `Plocz` varchar(15),
	IN `Pnodsga` VARCHAR(50),
	IN `Pnodsgz` VARCHAR(50)
)
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists TempAwal ;
create temporary table TempAwal (inv varchar(15),loc varchar(15),qlast double, vlast double,nodsg varchar(50));
insert into TempAwal
(
 select inv,loc, sum(qlast) as qlast, sum(vlast) as vlast,'' as nodsg
 from
 (
   select rin.inv, rin.loc, rin.qlast, rin.vlast,'' as nodsg
       from rin
       where rin.period=Pperiod and if(Pinva<>'' and Pinvz<>'', rin.inv between Pinva and Pinvz, 1)
         and if(Ploca<>'' and Plocz<>'', rin.loc between Ploca and Plocz, 1)
         and if(Pnodsga<>'' and Pnodsgz<>'', rin.nodsg between Pnodsga and Pnodsgz, 1)
   union all
   select ind.inv, ind.loc, sum(qty*if(dk='D',1,-1)) as qlast , sum(val*if(dk='D',1,-1)) as vlast,''
      from ind
      where ind.period=Pperiod and ind.date < Pdatea
        and if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1)
        and if(Ploca<>'' and Plocz<>'', ind.loc between Ploca and Plocz, 1)
        and if(Pnodsga<>'' and Pnodsgz<>'', ind.nodsg between Pnodsga and Pnodsgz, 1)
      group by ind.inv, ind.loc,trim(ind.nodsg)
 ) as oawal where left(inv,1)<>'9' group by inv,loc
);
select trim(inv.name) as invname, trim(TempAwal.inv) inv, loc.name as locname, trim(TempAwal.loc) loc,
       STR_TO_DATE(Pdatea, '%Y/%m/%d') as date, convert('' using latin1) as jurnal,convert('BALANCE' using latin1) as rem,
       if(TempAwal.qlast >= 0 , TempAwal.qlast , 0) as qdebet,
    
       if(TempAwal.qlast < 0 , TempAwal.qlast , 0) * -1 as qkredit,
    
    
       inv.unit
    
       from TempAwal
       left outer join inv on TempAwal.inv=inv.inv
       left outer join loc on TempAwal.loc=loc.loc
       where if(Pjenisa<>'' and Pjenisz<>'', inv.jenis between Pjenisa and Pjenisz, 1)
union all
select trim(inv.name) as invname, trim(ind.inv), loc.name as locname, trim(ind.loc) loc,
       if(ind.subjurnal='LHP',date(ind.date),ind.date) as date, ind.jurnal as jurnal, ifnull(ind.rem,'') as rem,
       if (ind.dk='D' , ind.qty , 0) as qdebet,
       if (ind.dk='K' , ind.qty , 0) as qkredit,
        inv.unit
       from ind
       left outer join inv on ind.inv=inv.inv
       left outer join loc on ind.loc=loc.loc
       where (ind.date>=Pdatea and ind.date<Pdatez) and
       if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1) and
       if(Pnodsga<>'' and Pnodsgz<>'', ind.nodsg between Pnodsga and Pnodsgz, 1) and
       if(Ploca<>'' and Plocz<>'', ind.loc between Ploca and Plocz, 1) and
       if(Pjenisa<>'' and Pjenisz<>'', inv.jenis between Pjenisa and Pjenisz, 1) and  left(ind.inv,1)<>'9'
order by  2,4,date;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_getBPPB
DROP PROCEDURE IF EXISTS `sp_getBPPB`;
DELIMITER //
CREATE PROCEDURE `sp_getBPPB`(pdatea datetime)
BEGIN
select jin.jin as nodocument,jin.`date`,jin.loc,jid.inv,jid.qty,inv.unit as uom,jin.chtime,trim(inv.name) as productname,
       trim(ifnull(
       (select qop_name from  wis_inventory.m_qop_loc where wis_inventory.m_qop_loc.date<=wis_inventory.jin.`date` and  wis_inventory.m_qop_loc.loc=wis_inventory.jin.loc order by wis_inventory.jin.date desc limit 1)
       ,'')) as qop,jin.`delete`,jid.mor as no_reff
from wis_inventory.jin jin left outer join wis_inventory.jid jid on jin.jin=jid.jin  left outer join wis_inventory.inv inv on jid.inv=inv.inv
where TIMESTAMP(STR_TO_DATE(left(jin.chtime,10),'%d/%m/%Y '),time(substr(jin.chtime,11,5)))>= pdatea and jin.group_=2 and (jin.sperpart=0 or left(jid.inv,1)='4') ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_GetDocPeb
DROP PROCEDURE IF EXISTS `Sp_GetDocPeb`;
DELIMITER //
CREATE PROCEDURE `Sp_GetDocPeb`(
	IN `pdate` DATE
)
select h.CAR as `No. Document Pelabuhan`,h.NODAFT as `No. Pendaftaran`,h.NAMABELI,cast(date_format(h.TGDAFT,'%Y-%m-%d') as char) as `Tanggal Doc`,d.URBRG1 as Barang,d.JMKOLI as `Satuan Besar`,d.JNKOLI as `Unit Besar`,d.JMSATUAN as `Satuan Kecil`,d.JNSATUAN as `Unit Kecil`
from peb.tblpebhdr h
left join peb.tblpebdtl d on h.CAR = d.CAR
where h.TGDAFT = DATE(pdate) and h.NamaEks like '%PT. BARAMUDA BAHARI%'//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_GetDocTpb
DROP PROCEDURE IF EXISTS `Sp_GetDocTpb`;
DELIMITER //
CREATE PROCEDURE `Sp_GetDocTpb`(
	IN `pdate` DATETIME
)
SELECT d.NOMOR_DOKUMEN as `No. reff doc`,r.NOMOR_AJU as `No. Document Pelabuhan`,r.NOMOR_DAFTAR as `No. Pendaftaran`,r.TANGGAL_DAFTAR as `Tanggal Doc`,d.TIPE_DOKUMEN from tpbdb.tpb_dokumen d, tpbdb.tpb_header r WHERE d.ID_HEADER = r.ID AND r.TANGGAL_DAFTAR = DATE(pdate) and r.NOMOR_AJU is not null GROUP BY d.ID order by d.TANGGAL_DOKUMEN//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_GetDocTpb2
DROP PROCEDURE IF EXISTS `Sp_GetDocTpb2`;
DELIMITER //
CREATE PROCEDURE `Sp_GetDocTpb2`(
	IN `Poms` VARCHAR(50)
)
SELECT lph.lph,lpd.inv,lpd.remark,lpd.qty,lpd.unit,omd.price,(lpd.qty * omd.price) AS Total
FROM lph, lpd, omd
WHERE lph.lph = lpd.lph AND lph.oms = omd.oms AND lph.oms = Poms AND lpd.status_bc = 0
GROUP BY lpd.`no`//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_getLHP
DROP PROCEDURE IF EXISTS `sp_getLHP`;
DELIMITER //
CREATE PROCEDURE `sp_getLHP`(pdatea datetime)
BEGIN
select lhp.lhp as nodocument,lhp.`date`,lhp.loc,lhd.inv,lhd.qty,lhd.unit as uom,lhp.chtime,
       trim(inv.name) as productname,trim(ifnull(
       (select qop_name from  wis_inventory.m_qop_loc where wis_inventory.m_qop_loc.date<=wis_inventory.lhp.`date` and  wis_inventory.m_qop_loc.loc=wis_inventory.lhp.loc order by wis_inventory.lhp.date desc limit 1)
       ,'')) as qop,lhp.loc,lhp.`delete`
from wis_inventory.lhp lhp,wis_inventory.lhd,wis_inventory.inv
where lhp.lhp=lhd.lhp and lhd.inv=inv.inv
and TIMESTAMP(STR_TO_DATE(left(lhp.chtime,10),'%d/%m/%Y '),time(substr(lhp.chtime,11,5)))>= pdatea;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_getOpenAR
DROP PROCEDURE IF EXISTS `sp_getOpenAR`;
DELIMITER //
CREATE PROCEDURE `sp_getOpenAR`(pdatea datetime)
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(pdatea));
select * from (
select rsb.period,klr.date as SOdate,klr.okl SOnumber,delivery_from,delivery_to,rsb.jurnal InvNum, rsb.date invdate,rsb.duedate,sub.sub as cust_code, sub.name as cust_name,rsb.val amount,cur as currency,kurs,ifnull(payhp.jurnal,'') as paynumber,ifnull(payhp.val,0) as payval
from (select rsb.period,rsb.jurnal,rsb.date,rsb.duedate,rsb.sub, rsb.val ,kurs
      from wis_inventory.rsb where period=Pperiod and subjurnal='KLR' and round(val,2)>0
      union all
      select rhp.period,rhp.jurnal,rhp.date,rhp.duedate, rhp.sub,rhp.val,rhp.kurs
      from wis_inventory.rhp where subjurnal='KLR' and period=Pperiod and rhp.date<=pdatea and val>0) rsb
      left outer join (select * from wis_inventory.payhp where date<pdatea) payhp on rsb.jurnal=payhp.reff left outer join wis_inventory.sub on rsb.sub=sub.sub
      left outer join (select distinct klr,okl.cur,okl.date,okl.okl,okl.delivery_to,okl.delivery_from from wis_inventory.kld,wis_inventory.okl where kld.okl=okl.okl) klr on rsb.jurnal=klr.klr
) as tempar where amount-payval>0;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_getOPN
DROP PROCEDURE IF EXISTS `sp_getOPN`;
DELIMITER //
CREATE PROCEDURE `sp_getOPN`(pdatea datetime)
BEGIN
select nodocument DocNo,`date` DocDate, chtime `Chtime`, inv `Material Code`, productname `Material Name`, UOM, qty,`delete` from
(
select ind.jurnal as nodocument,ind.`date`,ind.loc,ind.inv,ind.qty * if(ind.dk='D',1,-1) qty,inv.unit as uom,ind.date,trim(inv.name) as productname,
       trim(ifnull(
       (select qop_name from  wis_inventory.m_qop_loc where wis_inventory.m_qop_loc.date<=wis_inventory.ind.`date` and  wis_inventory.m_qop_loc.loc=wis_inventory.ind.loc order by wis_inventory.ind.date desc limit 1)
       ,'')) as qop,0 as `delete`
from wis_inventory.ind ind left outer join wis_inventory.inv inv on ind.inv=inv.inv
where TIMESTAMP(STR_TO_DATE(left(ind.opn,10),'%d/%m/%Y '),time(substr(ind.date,11,5)))>= date(pdatea) ) as x ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_GetStock
DROP PROCEDURE IF EXISTS `Sp_GetStock`;
DELIMITER //
CREATE PROCEDURE `Sp_GetStock`()
BEGIN
 select x.inv as productcode,concat(trim(inv.name),' ',trim(ifnull(z.qop_name,''))) as productname,x.loc,if (x.loc='WINGS','WINGS',(select name from cas_trial.loc where loc=x.loc)) as locname,x.qty,inv.unit from
 (
 select inv,loc,sum(qlast) as qty
 from
 (
   
   select rin.inv, rin.loc, rin.qlast, rin.vlast
       from cas_trial.rin as rin
       where rin.period=(select cas_trial.Fdate2period(Now()))
   union all
   select ind.inv, ind.loc, sum(ifnull(qty,0)*if(dk='D',1,-1)) as qlast, sum(ifnull(val,0)*if(dk='D',1,-1)) as vlast
      from cas_trial.ind as ind
      where ind.period=(select cas_trial.Fdate2period(Now())) and ind.date < adddate(Now(),1)
      group by ind.inv, ind.loc
   union all
   
   select inv,'WINGS' as loc,
   (qty-
   (select ifnull(sum(qty),0) from saleswings where saleswings.inv=stockwings.inv and date(saleswings.`date`)= date(now())) +
   (select ifnull(sum(qty),0) from cas_trial.sjd,cas_trial.sjh where sjd.sjh=sjh.sjh and sub='1120001' and sjd.inv=stockwings.inv  and date(sjh.`date`)=date(now()))
   ) as qty,0 as vlast
   from stockwings where date(stockwings.`date`)=date(now())
 ) as oawal group by inv,loc) as x left outer join
   (select * from (select * from m_qop_loc1 order by date desc)x group by loc) as z on trim(x.loc)=trim(z.loc),cas_trial.inv as inv
 where x.inv=inv.inv;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_GetStockBatch
DROP PROCEDURE IF EXISTS `Sp_GetStockBatch`;
DELIMITER //
CREATE PROCEDURE `Sp_GetStockBatch`(
	IN `Ptanggal` DATE,
	IN `Pinv` VARCHAR(15)
)
BEGIN
 select inv as `Kode Barang`,nodsg as `No Batch`,loc,sum(qlast) as `Qty Base`,expired
 from
 (
   
   select rin.inv, rin.loc, rin.qlast, rin.vlast,rin.nodsg,rin.expired
       from rin as rin
       where rin.period=(select Fdate2period(Ptanggal)) and rin.inv = Pinv
   union all
   select ind.inv, ind.loc, sum(ifnull(ind.qty,0)*if(dk='D',1,-1)) as qlast, sum(ifnull(val,0)*if(dk='D',1,-1)) as vlast, ind.nodsg,ind.expired
      from ind as ind
      where ind.period=(SELECT Fdate2period(Ptanggal)) and ind.date < adddate(Ptanggal,1) and ind.inv = Pinv
      group by ind.inv,ind.loc,ind.nodsg
   
 ) as oawal where qlast > 0 group by inv,loc,nodsg;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_GetStockBydate
DROP PROCEDURE IF EXISTS `Sp_GetStockBydate`;
DELIMITER //
CREATE PROCEDURE `Sp_GetStockBydate`(Pdatea datetime,Pjenisa varchar(15),Pjenisz varchar(15),Pinva varchar(15),Pinvz varchar(15),Ploca varchar(15),Plocz varchar(15))
BEGIN
 select adddate(pdatea,-1) as tanggal,inv,loc,name,(select name from wis_inventory.loc where loc=oawal.loc) as locname,sum(qlast) as qty,sum(vlast) val,unit
 from
 (
   
   select rin.inv,inv.name, rin.loc, rin.qlast, rin.vlast,inv.unit
       from rin,inv
       where rin.inv=inv.inv and rin.period=(select wis_inventory.Fdate2period(Pdatea)) and left(rin.inv,1)<'7' and
             if(Pjenisa<>'' and Pjenisz<>'', inv.jenis between Pjenisa and Pjenisz, 1) and
              if(Pinva<>'' and Pinvz<>'', rin.inv between Pinva and Pinvz, 1) and
              if(Ploca<>'' and Plocz<>'', rin.loc between Ploca and Plocz, 1)
   union all
   select ind.inv,inv.name, ind.loc, sum(ifnull(qty,0)*if(dk='D',1,-1)) as qlast, sum(ifnull(val,0)*if(dk='D',1,-1)) as vlast,inv.unit
      from ind,inv
      where ind.period=(select wis_inventory.Fdate2period(Pdatea)) and ind.date < adddate(Pdatea,1) and
      ind.inv=inv.inv and left(ind.inv,1) < '7' and
      if(Pjenisa<>'' and Pjenisz<>'', inv.jenis between Pjenisa and Pjenisz, 1) and
      if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1) and
      if(Ploca<>'' and Plocz<>'', ind.loc between Ploca and Plocz, 1)
      group by ind.inv, ind.loc
 ) as oawal group by inv,loc order by loc,inv;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_HistorySub
DROP PROCEDURE IF EXISTS `Sp_HistorySub`;
DELIMITER //
CREATE PROCEDURE `Sp_HistorySub`(PdateA datetime, PdateZ datetime, PsubA varchar(15), PsubZ varchar(15), group_ int (1), PaccA varchar (15), PaccZ varchar (15))
BEGIN
select * from (
    select r.acc,acc.name as accname,r.jurnal as `No Doc`,r.invoice, s.name as `Nama Supplier`, ifnull(r.val*r.kurs,0) as `Hutang`,msd.kurs as KURS,ifnull(msd.dpp*msd.kurs,0) as DPP,ifnull(umkp.val,0) as UMK,
        ifnull(msd.ppn,0) as `PPN`, ifnull(msd.nofp,'') as `No FP`, msd.tglfp ,p.jurnal as `Pelunasan`, p.val*r.kurs as `Val Pelunasan`,kag.nobg,ifnull(cgr.date,p.date) as date
        from rhp r
        left outer join payhp p on r.jurnal = p.reff and trim(r.invoice)=trim(p.invoice)
        left outer join (select msd.msk,msd.val,msd.nofp,msd.tglfp,msd.kurs,msd.dpp,msd.ppn,msd.invo from msd
                         union all
                         select kld.klr,sum(kld.val) val,kld.nofp,kld.tglfp,kld.kurs,sum(kld.dpp),sum(kld.ppn),'' from kld where substring(klr,5,4) >'1205' group by klr
                         union all
                         select kld.klr,sum(kld.val) val,kld.nofp,kld.tglfp,kld.kurs,sum(kld.dpp),(sum(kld.dpp)-(select ifnull(sum(val),0) from umk where klr=kld.klr))*0.1 as ppn,''
                         from kld where substring(klr,5,4)<='1205' group by klr) msd on r.jurnal=msd.msk and trim(r.invoice)=trim(msd.invo)
        left outer join (select umkp.msk,sum(umkp.val*umkp.kurs) val,umkp.invoice from umkp group by umkp.msk,umkp.invoice
                         union all
                         select umk.klr,sum(umk.val*umk.kurs) val,'' as invoice from umk group by umk.klr
                 ) umkp on msd.msk=umkp.msk and trim(msd.invo)=trim(umkp.invoice)
        left outer join acc on r.acc=acc.acc
        inner join sub s on r.sub = s.sub
        left outer join kag on p.jurnal=kag.kas
        left outer join cgr on kag.nobg=cgr.nobg
        where r.`date` >= PdateA and r.`date` < adddate(Pdatez,1)
          and r.sub between PsubA and PsubZ
          and r.acc between PaccA and PaccZ
     union all
     select grp.acc,acc.name,fpjumd.oms,'',sub.name,0,1,0,0,fpjumd.val*0.1,fpjumd.nofpj,fpjumk.fpjdate,'',0,'',fpjumk.date from fpjumk
        inner join fpjumd on fpjumk.fpjumk=fpjumd.fpjumk left outer join sub on fpjumk.sub=sub.sub
        left outer join grp  on left(fpjumk.sub,3)=grp.grp inner join acc on grp.acc=acc.acc where fpganti=0
        and fpjumk.`fpjdate` >= PdateA and fpjumk.`date` < adddate(Pdatez,1) and fpjumk.sub between PsubA and PsubZ
        and grp.acc between PaccA and PaccZ
) as xtmp order by acc,`Nama Supplier`,`No Doc`,`No Fp`;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_HistorySubPajak
DROP PROCEDURE IF EXISTS `Sp_HistorySubPajak`;
DELIMITER //
CREATE PROCEDURE `Sp_HistorySubPajak`(PdateA datetime, PdateZ datetime, PsubA varchar(15), PsubZ varchar(15), group_ int (1), PaccA varchar (15), PaccZ varchar (15))
BEGIN
select * from (
select r.acc,'' as accname,r.jurnal as `No Doc`,r.invoice,r.sub, (select name from sub where sub=r.sub) as `Nama Supplier`, round(ifnull(r.val*r.kurs,0),2) as `Hutang`,msd.kurs as KURS,ifnull(msd.dpp*msd.kurs,0) as DPP,ifnull(umkp.val,0) as UMK,
        ifnull(msd.ppn,0) as `PPN`, ifnull(msd.nofp,'') as `No FP`, msd.tglfp ,p.jurnal as `Pelunasan`, p.val*r.kurs as `Val Pelunasan`,r.date as date,r.remark , msd.oms
        from rhp r
        left outer join payhp p on r.jurnal = p.reff and trim(r.invoice)=trim(p.invoice)
        left outer join (select msd.msk,msd.val,msd.nofp,msd.tglfp,msd.kurs,msd.dpp,msd.ppn,msd.invo,msd.oms from msd) msd on r.jurnal=msd.msk and msd.invo=r.invoice
        left outer join (select umkp.msk,sum(umkp.val*umkp.kurs) val,umkp.invoice from umkp group by umkp.msk,umkp.invoice) umkp
                         on msd.msk=umkp.msk and trim(msd.invo)=trim(umkp.invoice)
        where r.period between Fdate2period(Pdatea) and Fdate2period(Pdatez) and r.acc between PaccA and PaccZ
          and r.sub between PsubA and PsubZ
          and r.acc between PaccA and PaccZ
   
) as xtmp order by acc,`Nama Supplier`,`No Doc`,`No Fp`;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_HistorySubPajak1
DROP PROCEDURE IF EXISTS `Sp_HistorySubPajak1`;
DELIMITER //
CREATE PROCEDURE `Sp_HistorySubPajak1`(PdateA datetime, PdateZ datetime, PsubA varchar(15), PsubZ varchar(15), group_ int (1), PaccA varchar (15), PaccZ varchar (15))
BEGIN
select * from (
    select r.acc,acc.name as accname,r.jurnal as `No Doc`,r.invoice,s.sub, s.name as `Nama Supplier`, round(ifnull(r.val*r.kurs,0),2) as `Hutang`,msd.kurs as KURS,ifnull(msd.dpp*msd.kurs,0) as DPP,ifnull(umkp.val,0) as UMK,
        ifnull(msd.ppn,0) as `PPN`, ifnull(msd.nofp,'') as `No FP`, msd.tglfp ,p.jurnal as `Pelunasan`, p.val*r.kurs as `Val Pelunasan`,kag.nobg,r.date as date,r.remark
        from rhp r
        left outer join payhp p on r.jurnal = p.reff and trim(r.invoice)=trim(p.invoice)
        left outer join (select msd.msk,msd.val,msd.nofp,msd.tglfp,msd.kurs,msd.dpp,msd.ppn,msd.invo from msd
                         union all
                         select kld.klr,sum(kld.val) val,kld.nofp,kld.tglfp,kld.kurs,sum(kld.dpp),sum(kld.ppn),'' from kld where substring(klr,5,4) >'1205' group by klr
                         union all
                         select kld.klr,sum(kld.val) val,kld.nofp,kld.tglfp,kld.kurs,sum(kld.dpp),(sum(kld.dpp)-(select ifnull(sum(val),0) from umk where klr=kld.klr))*0.1 as ppn,''
                         from kld where substring(klr,5,4)<='1205' group by klr) msd on r.jurnal=msd.msk and trim(r.invoice)=trim(msd.invo)
        left outer join (select umkp.msk,sum(umkp.val*umkp.kurs) val,umkp.invoice from umkp group by umkp.msk,umkp.invoice
                         union all
                         select umk.klr,sum(umk.val*umk.kurs) val,'' as invoice from umk group by umk.klr
                 ) umkp on msd.msk=umkp.msk and trim(msd.invo)=trim(umkp.invoice)
        left outer join acc on r.acc=acc.acc
        inner join sub s on r.sub = s.sub
        left outer join kag on p.jurnal=kag.kas
        left outer join cgr on kag.nobg=cgr.nobg
        where r.`date` >= PdateA and r.`date` < adddate(Pdatez,1)
          and r.sub between PsubA and PsubZ
          and r.acc between PaccA and PaccZ
) as xtmp order by acc,`Nama Supplier`,`No Doc`,`No Fp`;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_Hpiutang
DROP PROCEDURE IF EXISTS `SP_Hpiutang`;
DELIMITER //
CREATE PROCEDURE `SP_Hpiutang`(perioda varchar(4),periodez varchar(4),psuba varchar(15),psubz varchar(15),pacca varchar(15),paccz varchar(15))
BEGIN
select sub,name,acc,valawal,valrpawal,okl,dateokl,klr,invo,nofp,tglfp,`date`,val,valrp,kurs,sjh,datesjl,datepel,jurnal,valpel,valpelrp,valrpawal+valrp-valpelrp as saldorp,valawal+val-valpel as saldousd from
(
select klr.sub,rhp.acc,sub.name,round(ifnull(if(kld.no=1,rhp.val,0),0),2) valawal,round(ifnull(if(kld.no=1,rhp.val*rhp.kurs,0),0),2) valrpawal,if(kld.no=1,kld.okl,'') as okl,okl.date as dateokl,kld.klr,if(kld.no=1,kld.invo,'') invo,kld.nofp,kld.tglfp,klr.date `date`,0.00 val,0.00 valrp,ifnull(rhp.kurs,0) as kurs, kll.sjh,
kll.date as datesjl ,payhp.date as datepel, if(kld.no=1,payhp.jurnal,'') jurnal, if(kld.no=1,ifnull(payhp.val,0),0) as valpel, if(kld.no=1,ifnull(payhp.val*klr.kurs,0),0) as valpelrp
from  (select rhp.jurnal,rhp.acc,rhp.val,rhp.kurs, 1 as `no` from rsb as rhp
where rhp.period = perioda and subjurnal='KLR' and round(rhp.val,2)>1.1) rhp left outer join kld on kld.klr = rhp.jurnal
left outer join klr on kld.klr=klr.klr
left outer join kll on kld.no=kll.no and kld.klr=kll.klr  left outer join okl on kld.okl=okl.okl
left outer join (select payhp.jurnal,payhp.date,payhp.reff,sum(val) val from payhp  where payhp.period >= perioda  and payhp.period <= periodez group by payhp.reff) payhp on rhp.jurnal=payhp.reff
left outer join sub on klr.sub=sub.sub
where substring(kld.klr,5,4) <perioda and klr.`delete`=0 and klr.kurs>1
union all
select klr.sub,rhp.acc,sub.name,0.00 as val,0.00 as valrp,kld.okl,okl.date as dateokl,kld.klr,if(kld.no=1,kld.invo,'') invo,kld.nofp,kld.tglfp,klr.date,round(ifnull(if(kld.no=1,rhp.val,0),0),2) val,round(ifnull(if(kld.no=1,rhp.val*rhp.kurs,0),0),2) valrp,ifnull(rhp.kurs,0) as kurs, kll.sjh,
kll.date as datesjl ,payhp.date as datepel, if(kld.no=1,payhp.jurnal,'') jurnal, ifnull(payhp.val,0) as valpel, ifnull(payhp.val*klr.kurs,0) as valpelrp
from kld
left outer join klr on kld.klr=klr.klr
left outer join kll on kld.no=kll.no and kld.klr=kll.klr  left outer join okl on kld.okl=okl.okl
left outer join (select rhp.jurnal,rhp.acc,rhp.val,rhp.kurs, 1 as `no` from rhp where rhp.period between perioda and periodez) rhp on kld.klr = rhp.jurnal and kld.no=rhp.no
left outer join (select payhp.jurnal,payhp.date,payhp.reff,sum(val) val from payhp where payhp.period >= perioda  and payhp.period <= periodez group by payhp.reff) payhp on rhp.jurnal=payhp.reff
left outer join sub on klr.sub=sub.sub
where substring(kld.klr,5,4) between perioda and periodez and klr.`delete`=0 and klr.kurs>1
) as xrhp where sub between psuba and psubz and acc between pacca and paccz  order by sub,klr, invo desc;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_invlaba4
DROP PROCEDURE IF EXISTS `SP_invlaba4`;
DELIMITER //
CREATE PROCEDURE `SP_invlaba4`(Pinva char(15), Pinvz char(15), Psuba char(15), Psubz char(15), Pdatea datetime, Pdatez datetime)
BEGIN
if(Psuba='' and Psubz='') then
  set Psuba='00000000';
  set Psubz='99999999';
end if;
if(Psuba<>'' and Psubz='') then
  set Psubz=Psuba;
end if;
if(Psuba='' and Psubz<>'') then
  set Psuba=Psubz;
end if;
if(Pinva='') then
  set Pinva='00000000';
end if;
if(Pinvz='') then
  set Pinvz='99999999';
end if;
select * from (
select ' ' as grup, a.sjh,sjh.date,a.sub,a.inv,a.loc,a.qty,a.unit,ifnull(ind.val,0)/a.qty as HPP, a.valjual/a.qty as Harga,a.valjual,ifnull(ind.val/ind.qty,0)*a.qtykll*ifnull(konversi.konversi,1) as valhpp,ifnull(a.valjual,0)-ifnull(ind.val,0) as laba, sub.name,inv.name name1,dppusd from sub,inv,sjh,
(select kll.sjh,klr.sub,sjd.inv,sjd.loc,sjd.nodsg,ifnull(kld.dpp*klr.kurs,0)as valjual,kld.qty,sjd.unit,kll.qty qtykll,if(klr.kurs>1,kld.dpp,0) as dppusd
from kll inner join klr on kll.klr=klr.klr
left join sjd on kll.sjh=sjd.sjh left outer join kld on kll.`no`=kld.`no` and kll.klr=kld.klr
left outer join mor on kll.okl=mor.mor
left join okd on mor.okl=okd.okl
where klr.delete=false 
and kll.val<>0 and klr.date>=Pdatea and klr.date<adddate(Pdatez,1)) as a
left join ind on a.sjh =ind.jurnal and trim(a.loc)=trim(ind.loc) and a.inv=ind.inv and ifnull(a.nodsg,'')=ifnull(ind.nodsg,'')
left outer join konversi on a.inv=konversi.inv and a.unit=konversi.unit
where a.inv between Pinva and Pinvz 
      and a.sub between Psuba and Psubz
      and a.inv = inv.inv and a.sub=sub.sub
      and sjh.sjh=a.sjh and sjh.delete = false and a.sub not in ('1110001','1110003','1110002',if(pdatea<20160401,'','1110004'))
union all
select ' ' as grup, a.sjh,sjh.date,a.sub,a.inv,a.loc,a.qty,a.unit,ifnull(ind.val,0)/a.qty as HPP, a.valjual/a.qty as Harga,a.valjual,ifnull(ind.val/ind.qty,0)*a.qtykll*ifnull(konversi.konversi,1) as valhpp,ifnull(a.valjual,0)-ifnull(ind.val,0) as laba, sub.name,inv.name name1,dppusd from sub,inv,sjh,
(select kll.sjh,klr.sub,sjd.inv,sjd.loc,sjd.nodsg,ifnull(kld.dpp*klr.kurs,0)as valjual,kld.qty,sjd.unit,kll.qty qtykll,if(klr.kurs>1,kld.dpp,0) as dppusd
from kll inner join klr on kll.klr=klr.klr
left join sjd on kll.sjh=sjd.sjh and sjd.inv=kll.inv
left outer join kld on kll.`no`=kld.`no` and kll.klr=kld.klr and kld.inv=kll.inv
where klr.delete=false 
and kll.val<>0 and klr.date>=Pdatea and klr.date<adddate(Pdatez,1)) as a
left join ind on a.sjh =ind.jurnal and trim(a.loc)=trim(ind.loc) and a.inv=ind.inv and ifnull(a.nodsg,'')=ifnull(ind.nodsg,'')
left outer join konversi on a.inv=konversi.inv and a.unit=konversi.unit
where a.inv between Pinva and Pinvz 
      and a.sub between Psuba and Psubz
      and a.inv = inv.inv and a.sub=sub.sub
      and sjh.sjh=a.sjh and sjh.delete = false  and a.sub in ('1110001','1110003','1110002',if(pdatea<20160401,'','1110004'))
union all
select ' ' as group_,jsu.jsu,jsu.date,jsu.sub,ind.inv,ind.loc as loc,if(jsu.dk='D',1,-1)*jsu.val1 as qty,inv.unit as unit,
(ind.val/ind.qty)*jsu.val1 as hpp,ifnull((jsu.val/if(acclawan1='',1,1.1))/jsu.val1,0) as harga,if(jsu.dk='D',1,-1)*(jsu.val/if(acclawan1='',1,1.1)*jsu.kurs) as valjual,0 as valhpp,
(jsu.val/if(acclawan1='',1,1.1))*if(jsu.dk='D',1,-1)*jsu.kurs as laba,sub.name as name, inv.name as name1,0 as dppusd
from jsu inner join ind on jsu.acclawan=ind.jurnal left outer join sub on jsu.sub=sub.sub
left outer join inv on ind.inv=inv.inv  where acclawan<>'' and jsu.sub between Psuba and Psubz
and ind.inv between Pinva and Pinvz and jsu.`delete`<>1 and jsu.date>=Pdatea and jsu.date<adddate(Pdatez,1)
union all
select ' ' as group_,rka.rka,rka.date,rka.sub,ind.inv,ind.loc as loc,-ind.qty as qty,inv.unit as unit,
(ind.val/ind.qty)*-1 as hpp,(umd.val*umh.kurs)/ind.qty as harga,-(umd.val*umh.kurs) as valjual,-(ind.val) as valhpp,
-(umd.val*umh.kurs) + ind.val as laba,sub.name as name, inv.name as name1,-umd.val as dppusd
from rka inner join ind on rka.rka=ind.jurnal left outer join sub on rka.sub=sub.sub
left outer join inv on ind.inv=inv.inv
inner join umd on umd.okl=rka.rka
inner join umh on umd.umh=umh.umh
 where rka.sub between Psuba and Psubz
and ind.inv between Pinva and Pinvz and rka.`delete`<>1 and rka.date>=Pdatea and rka.date<adddate(Pdatez,1)
union all
select ' ' as group_,rka.rka,rka.date,rka.sub,ind.inv,ind.loc as loc,-ind.qty as qty,inv.unit as unit,
(ind.val/ind.qty)*-1 as hpp,(rkd.dpp*rkd.kurs)/ind.qty as harga,-(rkd.dpp*rkd.kurs) as valjual,-(ind.val) as valhpp,
-(rkd.dpp*rkd.kurs) + ind.val as laba,sub.name as name, inv.name as name1,-rkd.dpp as dppusd
from rka
inner join rll on rll.rka=rka.rka
inner join rkd on  rkd.rkl=rll.rkl and rkd.no=rll.no and if(rka.period<='1601',1,rkd.inv=rll.inv)
inner join ind on rll.rka=ind.jurnal and if(rka.period<='1601',1,rll.inv=ind.inv)  left outer join sub on rka.sub=sub.sub
left outer join inv on ind.inv=inv.inv
 where rka.sub between Psuba and Psubz
and ind.inv between Pinva and Pinvz  and rka.`delete`<>1 and rka.date>=Pdatea and rka.date<adddate(Pdatez,1)
union all
select ' ' as group_,umh.umh,umh.date,umh.sub,ind.inv,ind.loc as loc,0 as qty,inv.unit as unit,
0 as hpp,0 as harga,if(umd.dk='K',(umd.val*umh.kurs),-(umd.val*umh.kurs)) as valjual,0 as valhpp,
if(umd.dk='K',(umd.val*umh.kurs),-(umd.val*umh.kurs)) as laba,sub.name as name, inv.name as name1,0 as dppusd
from umd inner join umh on umd.umh=umh.umh inner join ind on umd.okl=ind.jurnal left outer join sub on umh.sub=sub.sub
left outer join inv on ind.inv=inv.inv
 where umh.sub between Psuba and Psubz and left(umd.acc,1)='4' and umd.okl=''
and ind.inv between Pinva and Pinvz and umh.`delete`<>1 and umh.date>=Pdatea and umh.date<adddate(Pdatez,1)
union all
select 'REKAP' as grup,'',date,sub,inv,'',sum(qty) qty,unit,0,0,sum(valjual) valJual,sum(valhpp) valhpp,sum(valjual)-sum(valhpp) as laba,name,name1,sum(dppusd) dppusd from
(
select a.sjh,sjh.date,a.sub,a.inv,a.loc,a.qty,a.unit,ifnull(ind.val,0)/a.qty as HPP, a.valjual/a.qty as Harga,a.valjual,ifnull(ind.val/ind.qty,0)*a.qtykll * ifnull(konversi.konversi,1) as valhpp,ifnull(a.valjual,0)-ifnull(ind.val,0) as laba, sub.name,inv.name name1,dppusd  from sub,inv,sjh,
(select kll.sjh,klr.sub,sjd.inv,sjd.loc,sjd.nodsg,ifnull(kld.dpp*klr.kurs,0)as valjual,kld.qty,sjd.unit,kll.qty qtykll,if(klr.kurs>1,kld.dpp,0) as dppusd
from kll inner join klr on kll.klr=klr.klr
left join sjd on kll.sjh=sjd.sjh left outer join kld on kll.`no`=kld.`no` and kll.klr=kld.klr
left outer join mor on kll.okl=mor.mor
left join okd on mor.okl=okd.okl
where klr.delete=false 
and kll.val<>0 and klr.date>=Pdatea and klr.date<adddate(Pdatez,1)) as a
left join ind on a.sjh =ind.jurnal and trim(a.loc)=trim(ind.loc)  and a.inv=ind.inv and ifnull(a.nodsg,'')=ifnull(ind.nodsg,'')
left outer join konversi on a.inv=konversi.inv and a.unit=konversi.unit
where a.inv between Pinva and Pinvz 
      and a.sub between Psuba and Psubz
      and a.inv = inv.inv and a.sub=sub.sub
      and sjh.sjh=a.sjh and sjh.delete = false and a.sub not in ('1110001','1110003','1110002',if(pdatea<20160401,'','1110004'))
union all
select a.sjh,sjh.date,a.sub,a.inv,a.loc,a.qty,a.unit,ifnull(ind.val,0)/a.qty as HPP, a.valjual/a.qty as Harga,a.valjual,ifnull(ind.val/ind.qty,0)*a.qtykll * ifnull(konversi.konversi,1) as valhpp,ifnull(a.valjual,0)-ifnull(ind.val,0) as laba, sub.name,inv.name name1,dppusd  from sub,inv,sjh,
(select kll.sjh,klr.sub,sjd.inv,sjd.loc,sjd.nodsg,ifnull(kld.dpp*klr.kurs,0)as valjual,kld.qty,sjd.unit,kll.qty qtykll,if(klr.kurs>1,kld.dpp,0) as dppusd
from kll inner join klr on kll.klr=klr.klr
left join sjd on kll.sjh=sjd.sjh and kll.inv=sjd.inv
left outer join kld on kll.`no`=kld.`no` and kll.klr=kld.klr and kld.inv=kll.inv
left outer join mor on kll.okl=mor.mor
left join okd on mor.okl=okd.okl
where klr.delete=false 
and kll.val<>0 and klr.date>=Pdatea and klr.date<adddate(Pdatez,1)) as a
left join ind on a.sjh =ind.jurnal and trim(a.loc)=trim(ind.loc)  and a.inv=ind.inv and ifnull(a.nodsg,'')=ifnull(ind.nodsg,'')
left outer join konversi on a.inv=konversi.inv and a.unit=konversi.unit
where a.inv between Pinva and Pinvz 
      and a.sub between Psuba and Psubz
      and a.inv = inv.inv and a.sub=sub.sub
      and sjh.sjh=a.sjh and sjh.delete = false and a.sub in ('1110001','1110003','1110002',if(pdatea<20160401,'','1110004'))
union all
select jsu.jsu,jsu.date,jsu.sub,ind.inv,ind.loc as loc,if(jsu.dk='D',1,-1)*jsu.val1 as qty,inv.unit as unit,
(ind.val/ind.qty)*jsu.val1 as hpp,ifnull((jsu.val/if(acclawan1='',1,1.1))/jsu.val1,0) as harga,if(jsu.dk='D',1,-1)*(jsu.val/if(acclawan1='',1,1.1)*jsu.kurs) as valjual,0 as valhpp,
(jsu.val/if(acclawan1='',1,1.1))*if(jsu.dk='D',1,-1)*jsu.kurs as laba,sub.name as name, inv.name as name1,0 as dppusd
from jsu inner join ind on jsu.acclawan=ind.jurnal left outer join sub on jsu.sub=sub.sub
left outer join inv on ind.inv=inv.inv  where acclawan<>'' and jsu.sub between Psuba and Psubz
and ind.inv between Pinva and Pinvz and jsu.`delete`<>1 and jsu.date>=Pdatea and jsu.date<adddate(Pdatez,1)
union all
select rka.rka,rka.date,rka.sub,ind.inv,ind.loc as loc,-ind.qty as qty,inv.unit as unit,
(ind.val/ind.qty)*-1 as hpp,(umd.val*umh.kurs)/ind.qty as harga,-(umd.val*umh.kurs) as valjual,-(ind.val) as valhpp,
-(umd.val*umh.kurs) + ind.val as laba,sub.name as name, inv.name as name1,-umd.val as dppusd
from rka inner join ind on rka.rka=ind.jurnal left outer join sub on rka.sub=sub.sub
left outer join inv on ind.inv=inv.inv
inner join umd on umd.okl=rka.rka
inner join umh on umd.umh=umh.umh
 where rka.sub between Psuba and Psubz
and ind.inv between Pinva and Pinvz and rka.`delete`<>1 and rka.date>=Pdatea and rka.date<adddate(Pdatez,1)
union all
select rka.rka,rka.date,rka.sub,ind.inv,ind.loc as loc,-ind.qty as qty,inv.unit as unit,
(ind.val/ind.qty)*-1 as hpp,(rkd.dpp*rkd.kurs)/ind.qty as harga,-(rkd.dpp*rkd.kurs) as valjual,-(ind.val) as valhpp,
-(rkd.dpp*rkd.kurs) + ind.val as laba,sub.name as name, inv.name as name1,0 as dppusd
from rka
inner join rll on rll.rka=rka.rka
inner join rkd on  rkd.rkl=rll.rkl and rkd.no=rll.no and if(rka.period<='1601',1,rkd.inv=rll.inv)
inner join ind on rll.rka=ind.jurnal and if(rka.period<='1601',1,rll.inv=ind.inv)  left outer join sub on rka.sub=sub.sub
left outer join inv on ind.inv=inv.inv
 where rka.sub between Psuba and Psubz
and ind.inv between Pinva and Pinvz  and rka.`delete`<>1 and rka.date>=Pdatea and rka.date<adddate(Pdatez,1)
union all
select umh.umh,umh.date,umh.sub,ind.inv,ind.loc as loc,0 as qty,inv.unit as unit,
0 as hpp,0 as harga,if(umd.dk='K',(umd.val*umh.kurs),-(umd.val*umh.kurs)) as valjual,0 as valhpp,
if(umd.dk='K',(umd.val*umh.kurs),-(umd.val*umh.kurs)) as laba,sub.name as name, inv.name as name1,0 as dppusd
from umd inner join umh on umd.umh=umh.umh inner join ind on umd.okl=ind.jurnal left outer join sub on umh.sub=sub.sub
left outer join inv on ind.inv=inv.inv
 where umh.sub between Psuba and Psubz and left(umd.acc,1)='4' and umd.okl=''
and ind.inv between Pinva and Pinvz and umh.`delete`<>1 and umh.date>=Pdatea and umh.date<adddate(Pdatez,1)
) as xlaba group by sub,name1
) as xlaba1 order by grup,sub,inv,date,sjh;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_invlaba41
DROP PROCEDURE IF EXISTS `SP_invlaba41`;
DELIMITER //
CREATE PROCEDURE `SP_invlaba41`(Pinva char(15), Pinvz char(15), Psuba char(15), Psubz char(15), Pdatea datetime, Pdatez datetime)
BEGIN
if(Psuba='' and Psubz='') then
  set Psuba='00000000';
  set Psubz='99999999';
end if;
if(Psuba<>'' and Psubz='') then
  set Psubz=Psuba;
end if;
if(Psuba='' and Psubz<>'') then
  set Psuba=Psubz;
end if;
if(Pinva='') then
  set Pinva='00000000';
end if;
if(Pinvz='') then
  set Pinvz='99999999';
end if;
select grup,valhpp from (
select grup,valjual as valhpp from (
select a.klr as grup, a.sjh,sjh.date,a.sub,a.inv,a.loc,a.qty,a.unit,ifnull(ind.val,0)/a.qty as HPP, a.valjual/a.qty as Harga,a.valjual,ifnull(ind.val/ind.qty,0)*a.qtykll*ifnull(konversi.konversi,1) as valhpp,ifnull(a.valjual,0)-ifnull(ind.val,0) as laba, sub.name,inv.name name1,dppusd from sub,inv,sjh,
(select kll.klr,kll.sjh,klr.sub,sjd.inv,sjd.loc,sjd.nodsg,ifnull(kld.dpp*klr.kurs,0)as valjual,kld.qty,sjd.unit,kll.qty qtykll,if(klr.kurs>1,kld.dpp,0) as dppusd
from kll inner join klr on kll.klr=klr.klr
left join sjd on kll.sjh=sjd.sjh left outer join kld on kll.`no`=kld.`no` and kll.klr=kld.klr
left outer join mor on kll.okl=mor.mor
left join okd on mor.okl=okd.okl
where klr.delete=false 
and kll.val<>0 and klr.date>=Pdatea and klr.date<adddate(Pdatez,1)) as a
left join ind on a.sjh =ind.jurnal and trim(a.loc)=trim(ind.loc) and a.inv=ind.inv and ifnull(a.nodsg,'')=ifnull(ind.nodsg,'')
left outer join konversi on a.inv=konversi.inv and a.unit=konversi.unit
where a.inv between Pinva and Pinvz 
      and a.sub between Psuba and Psubz
      and a.inv = inv.inv and a.sub=sub.sub
      and sjh.sjh=a.sjh and sjh.delete = false and a.sub not in ('1110001','1110003')
union all
select a.klr as grup, a.sjh,sjh.date,a.sub,a.inv,a.loc,a.qty,a.unit,ifnull(ind.val,0)/a.qty as HPP, a.valjual/a.qty as Harga,a.valjual,ifnull(ind.val/ind.qty,0)*a.qtykll*ifnull(konversi.konversi,1) as valhpp,ifnull(a.valjual,0)-ifnull(ind.val,0) as laba, sub.name,inv.name name1,dppusd from sub,inv,sjh,
(select kll.klr,kll.sjh,klr.sub,sjd.inv,sjd.loc,sjd.nodsg,ifnull(kld.dpp*klr.kurs,0)as valjual,kld.qty,sjd.unit,kll.qty qtykll,if(klr.kurs>1,kld.dpp,0) as dppusd
from kll inner join klr on kll.klr=klr.klr
left join sjd on kll.sjh=sjd.sjh and sjd.inv=kll.inv
left outer join kld on kll.`no`=kld.`no` and kll.klr=kld.klr and kld.inv=kll.inv
where klr.delete=false 
and kll.val<>0 and klr.date>=Pdatea and klr.date<adddate(Pdatez,1)) as a
left join ind on a.sjh =ind.jurnal and trim(a.loc)=trim(ind.loc) and a.inv=ind.inv and ifnull(a.nodsg,'')=ifnull(ind.nodsg,'')
left outer join konversi on a.inv=konversi.inv and a.unit=konversi.unit
where a.inv between Pinva and Pinvz 
      and a.sub between Psuba and Psubz
      and a.inv = inv.inv and a.sub=sub.sub
      and sjh.sjh=a.sjh and sjh.delete = false and a.sub in ('1110001','1110003')
union all
select ' ' as group_,jsu.jsu,jsu.date,jsu.sub,ind.inv,ind.loc as loc,if(jsu.dk='D',1,-1)*jsu.val1 as qty,inv.unit as unit,
(ind.val/ind.qty)*jsu.val1 as hpp,ifnull((jsu.val/if(acclawan1='',1,1.1))/jsu.val1,0) as harga,if(jsu.dk='D',1,-1)*(jsu.val/if(acclawan1='',1,1.1)*jsu.kurs) as valjual,0 as valhpp,
(jsu.val/if(acclawan1='',1,1.1))*if(jsu.dk='D',1,-1)*jsu.kurs as laba,sub.name as name, inv.name as name1,0 as dppusd
from jsu inner join ind on jsu.acclawan=ind.jurnal left outer join sub on jsu.sub=sub.sub
left outer join inv on ind.inv=inv.inv  where acclawan<>'' and jsu.sub between Psuba and Psubz
and ind.inv between Pinva and Pinvz and jsu.`delete`<>1 and jsu.date>=Pdatea and jsu.date<adddate(Pdatez,1)
union all
select ' ' as group_,rka.rka,rka.date,rka.sub,ind.inv,ind.loc as loc,-ind.qty as qty,inv.unit as unit,
(ind.val/ind.qty)*-1 as hpp,(umd.val*umh.kurs)/ind.qty as harga,-(umd.val*umh.kurs) as valjual,-(ind.val) as valhpp,
-(umd.val*umh.kurs) + ind.val as laba,sub.name as name, inv.name as name1,-umd.val as dppusd
from rka inner join ind on rka.rka=ind.jurnal left outer join sub on rka.sub=sub.sub
left outer join inv on ind.inv=inv.inv
inner join umd on umd.okl=rka.rka
inner join umh on umd.umh=umh.umh
 where rka.sub between Psuba and Psubz
and ind.inv between Pinva and Pinvz and rka.`delete`<>1 and rka.date>=Pdatea and rka.date<adddate(Pdatez,1)
union all
select ' ' as group_,rka.rka,rka.date,rka.sub,ind.inv,ind.loc as loc,-ind.qty as qty,inv.unit as unit,
(ind.val/ind.qty)*-1 as hpp,(rkd.dpp*rkd.kurs)/ind.qty as harga,-(rkd.dpp*rkd.kurs) as valjual,-(ind.val) as valhpp,
-(rkd.dpp*rkd.kurs) + ind.val as laba,sub.name as name, inv.name as name1,-rkd.dpp as dppusd
from rka inner join ind on rka.rka=ind.jurnal left outer join sub on rka.sub=sub.sub
left outer join inv on ind.inv=inv.inv
inner join rll on rll.rka=rka.rka
inner join rkd on  rkd.rkl=rll.rkl and rkd.no=rll.no
 where rka.sub between Psuba and Psubz
and ind.inv between Pinva and Pinvz  and rka.`delete`<>1 and rka.date>=Pdatea and rka.date<adddate(Pdatez,1)
union all
select ' ' as group_,umh.umh,umh.date,umh.sub,ind.inv,ind.loc as loc,0 as qty,inv.unit as unit,
0 as hpp,0 as harga,if(umd.dk='K',(umd.val*umh.kurs),-(umd.val*umh.kurs)) as valjual,0 as valhpp,
if(umd.dk='K',(umd.val*umh.kurs),-(umd.val*umh.kurs)) as laba,sub.name as name, inv.name as name1,0 as dppusd
from umd inner join umh on umd.umh=umh.umh inner join ind on umd.okl=ind.jurnal left outer join sub on umh.sub=sub.sub
left outer join inv on ind.inv=inv.inv
 where umh.sub between Psuba and Psubz and left(umd.acc,1)='4' and umd.okl=''
and ind.inv between Pinva and Pinvz and umh.`delete`<>1 and umh.date>=Pdatea and umh.date<adddate(Pdatez,1)
) as xlaba1
) as x ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_JournalEntries
DROP PROCEDURE IF EXISTS `SP_JournalEntries`;
DELIMITER //
CREATE PROCEDURE `SP_JournalEntries`(Pperiod varchar(4),displ varchar(1))
BEGIN
drop temporary table if exists TempJE;
create temporary table TempJE as
select fmd.*,if(operator='D' and grouping='Penerapan Beban Overhead Pabrik',kkh.caovh2,0) as `D`,
    if(operator='K',if(acc='52010100' or acc='52100001',kkh.carm2+kkh.capack2,
    if(acc='52020100',if(kkh.cct='111103'or cct='111113' or cct='111114' or cct='111112' ,(select sum(val) from acd where period=Pperiod and acc='52020100' and (cct='111103' or cct='111114' or cct='111113' or cct='111112') and dk='D'),kkh.capack2),
    if(acc like '52050%',kkh.cadl2,
    if(acc='52020200' or acc like '52090%',if(kkh.cct='111103' or cct='111113' or cct='111112',(select sum(val) from acd where period=Pperiod and acc='52020200' and (cct='111103'or cct='111113' or cct='111112' or cct='111112') and dk='D'),capro2),
    if(acc='52070100',(select sum(kkh.caovh2) from kkh where period=Pperiod),
    if(acc='52040100' or acc= '52040200',if(cct='111110',(select sum(val) from acd where period=Pperiod and acd.acc = fmd.acc and dk='D' and cct='111110'),kkh.carm2),kkh.caovh2)))))),0) as `K`,
    kkh.cct
     from fml,fmd left outer join kkh on fmd.value=kkh.cct
    where fml.fml=fmd.fml and fml.fml='JE'  and kkh.period=Pperiod order by no_urut;
drop temporary table if exists TempsumJE;
create temporary table TempsumJE as
   select if(`value`='111101' or `value`='111105' or `value`='111106','11050201',
   if(`value`='111102','11050202',if (`value`='111104','11050204',
   if (`value`='111111','72990701',if (`value`='111107' or `value`='111110','11050205' ,
   if(`value`='111117' or `value`='111116' or `value`='111118' or `value`='111119' or cct='111120' or cct='111121','11050204','11050203')))))) as acc,
   `value`,sum(K) as `K` from TempJE where grouping='Transfer Hppr Dalam Proses' group by `value`;
drop temporary table if exists TempsumJE1;
create temporary table TempsumJE1 as
     select * from TempsumJE;
if displ="1" then
  select acc,name,`value` as cct,sum(D) as D,sum(K) as K, grouping from
  (
    select no_urut,acc,name,`value`,D,K,grouping from TempJE
    union all
    select 0,convert(acc using latin1),convert('' using latin1),`value`,K,0,convert('Transfer Hppr Dalam Proses' using latin1) from TempsumJE
  ) as x
  group by acc,`Value`,grouping order by no_urut;
end if;
if displ="2" then
  select acc,name,`value` as cct,D as D,K as K from
  (
    select 2 as no_urut,if(cct ='111101' or cct='111105' or cct='111106','11050201',
    if(cct='111102','11050202',if (cct='111104' or cct='111117'  or cct='111118' or cct='111120' or cct='111121','11050204',
    if(cct='111107' or cct='111110','11050205',
    if(cct='111116' or cct='111119' ,'11050204','11050203'))))) as acc,
    (select name from acc where acc= convert(if(cct ='111101' or cct='111105' or cct='111106','11050201',
    if(cct='111102','11050202',if (cct='111104'or cct='111117' or cct='111118' or cct='111120' or cct='111121','11050204',
    if(cct='111107' or cct='111110','11050205',
    if(cct='111116'or cct='111119','11050204','11050203'))))) using latin1)) as name,
    cct as `value`,0 as D,cfitf3 as K from kkh where period=Pperiod and cct<>'111111'
    union all
    select 1,if(cct ='111101' or cct='111105' or cct='111106','11050101',
    if(cct='111102','11050102',if(cct='111104'or cct='111117' or cct='111118' or cct='111120' or cct='111121'or cct='111116','11050402',
    if(cct='111107' or cct='111110','11050104',
    if(cct='111119','11051102','11050103'))))) as acc,
    (select name from acc where acc= convert(if(cct ='111101' or cct='111105' or cct='111106','11050101',
    if(cct='111102','11050102',if(cct='111104'or cct='111117' or cct='111118'or cct='111120' or cct='111121' or cct='111116','11050402',
    if(cct='111107' or cct='111110','11050104',
    if(cct='111119','11051102','11050203'))))) using latin1)) as name,
    cct,cfitf3 as D,0 as K from kkh where period=Pperiod and cct<>'111111'
  ) as x
  order by no_urut,acc;
end if;
if displ='3' then
   call Sp_SaveRac ('0',concat('ADJ-',pperiod,'-000001'));
   delete from acd where jurnal=concat('ADJ-',pperiod,'-000001');
    insert into acd
    select concat('ADJ-',pperiod,'-000001') as jurnal,pperiod,acc, last_day(DATE(concat('20',pperiod,'01'))) as period,abs((d-k)) as val,'' as cct,name as remark,
     if(D>=K,'D','K') as dk,'AJE' as subjurnal,0 as adj
    from (
      select acc,name,`value` as cct,sum(D) as D,sum(K) as K from
      (
      select no_urut,acc,name,`value`,D,K,grouping from TempJE
      union all
      select 0,convert(acc using latin1),convert('' using latin1),`value`,K,0,convert('Transfer Hppr Dalam Proses' using latin1) from TempsumJE1
      ) as z
      group by acc,`Value`,grouping order by no_urut
    ) as zz ;
    call Sp_SaveRac ('1',concat('ADJ-',pperiod,'-000001'));
   call Sp_SaveRac ('0',concat('ADJ-',pperiod,'-000002'));
   delete from acd where jurnal=concat('ADJ-',pperiod,'-000002');
    insert into acd
     select concat('ADJ-',pperiod,'-000002') as jurnal,pperiod,acc, last_day(DATE(concat('20',pperiod,'01'))) as period,abs((d-k)) as val,'' as cct,name as remark,
     if(D>=K,'D','K') as dk,'AJE' as subjurnal,0 as adj
    from (
      select acc,name,`value` as cct,D as D,K as K from
      (
    select 2 as no_urut,if(cct ='111101' or cct='111105' or cct='111106','11050201',
    if(cct='111102','11050202',if (cct='111104'or cct='111117' or cct='111118' or cct='111120' or cct='111121','11050204',if(cct='111107' or cct='111110','11050205',
    if(cct='111116'or cct='111119','11050204','11050203'))))) as acc,
    
     (select name from acc where acc= convert(if(cct ='111101' or cct='111105' or cct='111106','11050201',
    if(cct='111102','11050202',if (cct='111104'or cct='111117' or cct='111118' or cct='111120' or cct='111121','11050204',
    if(cct='111107' or cct='111110','11050205',
    if(cct='111116'or cct='111119','11050204','11050203'))))) using latin1)) as name,
    cct as `value`,0 as D,cfitf3 as K from kkh where period=Pperiod and cct<>'111111'
    union all
    select 1,if(cct ='111101' or cct='111105' or cct='111106','11050101', if(cct='111102','11050102',if(cct='111104'or cct='111117' or cct='111118'or cct='111120' or cct='111121' or cct='111116','11050402',if(cct='111107' or cct='111110','11050104',
    if( cct='111119','11051102','11050103'))))) as acc,(select name from acc where acc= convert(if(cct ='111101' or cct='111105' or cct='111106','11050101',
    if(cct='111102','11050102',if(cct='111104' or cct='111117' or cct='111118'or cct='111120' or cct='111121' or cct='111116','11050402',
    if( cct='111119','11051102','11050103')))) using latin1)) as name,
    cct,cfitf3 as D,0 as K from kkh where period=Pperiod and cct<>'111111'
    ) as x
    )as y;
    call Sp_SaveRac ('1',concat('ADJ-',pperiod,'-000002'));
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_KartuStock
DROP PROCEDURE IF EXISTS `Sp_KartuStock`;
DELIMITER //
CREATE PROCEDURE `Sp_KartuStock`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Pjenisa` varchar(15),
	IN `Pjenisz` varchar(15),
	IN `Pinva` varchar(15),
	IN `Pinvz` varchar(15),
	IN `Ploca` varchar(15),
	IN `Plocz` varchar(15),
	IN `Pnodsga` VARCHAR(50),
	IN `Pnodsgz` VARCHAR(50)
)
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists TempAwal ;
create temporary table TempAwal (inv varchar(15),loc varchar(15),qlast double, vlast double,nodsg varchar(50));
insert into TempAwal
(
 select inv,loc, sum(qlast) as qlast, sum(vlast) as vlast,nodsg as nodsg
 from
 (
   select rin.inv, rin.loc, rin.qlast, rin.vlast,rin.nodsg as nodsg
       from rin inner join inv on rin.inv = inv.inv
       where rin.period=Pperiod and inv.flag = 0 and 
			 if(Pinva<>'' and Pinvz<>'', rin.inv between Pinva and Pinvz, 1)
         and if(Ploca<>'' and Plocz<>'', rin.loc between Ploca and Plocz, 1)
         and if(Pnodsga<>'' and Pnodsgz<>'', trim(rin.nodsg) LIKE CONCAT('%', Pnodsga , '%'), 1)
   union all
   select ind.inv, ind.loc, sum(qty*if(dk='D',1,-1)) as qlast , sum(val*if(dk='D',1,-1)) as vlast,ind.nodsg as nodsg
      from ind inner join inv on ind.inv = inv.inv
      where ind.period=Pperiod and ind.date < Pdatea and inv.flag = 0
        and if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1)
        and if(Ploca<>'' and Plocz<>'', ind.loc between Ploca and Plocz, 1)
        and if(Pnodsga<>'' and Pnodsgz<>'', trim(ind.nodsg) LIKE CONCAT('%',Pnodsga , '%'), 1)
      group by ind.inv, ind.loc,trim(ind.nodsg)
 ) as oawal where left(inv,1)<>'9' group by inv,trim(loc),trim(nodsg)
);
select trim(inv.name) as invname, trim(TempAwal.inv) inv, loc.name as locname, trim(TempAwal.loc) loc,
       STR_TO_DATE(Pdatea, '%Y/%m/%d') as date, convert('' using latin1) as jurnal,convert('BALANCE' using latin1) as rem,
       if(TempAwal.qlast >= 0 , TempAwal.qlast , 0) as qdebet,
       if(TempAwal.vlast >= 0 , TempAwal.vlast , 0) as vdebet,
       if(TempAwal.qlast < 0 , TempAwal.qlast , 0) * -1 as qkredit,
       if(TempAwal.vlast < 0 , TempAwal.vlast , 0) * -1 as vkredit,
       convert(' ' using latin1) as dk, inv.unit, 1 as urut,trim(nodsg) as nodsg,convert (' ' using latin1) as subjurnal,grpmat,
       '' as spb,'' as spbdate,'' as spbnopen,'' as spm,'' as spmdate,'' as spmnopen
       from TempAwal
       left outer join inv on TempAwal.inv=inv.inv
       left outer join loc on TempAwal.loc=loc.loc
       where inv.flag=0 and if(Pjenisa<>'' and Pjenisz<>'', inv.jenis between Pjenisa and Pjenisz, 1)
union all
select trim(inv.name) as invname, trim(ind.inv), loc.name as locname, trim(ind.loc) loc,
       ind.date as date, ind.jurnal as jurnal, ifnull(ind.rem,'') as rem,
       if (ind.dk='D' , ind.qty , 0) as qdebet,
       if (ind.dk='D' , ind.val , 0) as vdebet,
       if (ind.dk='K' , ind.qty , 0) as qkredit,
       if (ind.dk='K' , ind.val , 0) as vkredit,
       ind.dk as dk, inv.unit, if (ind.subjurnal='OPN' , 2 ,if(ind.subjurnal='LHP',0,1))  as urut,trim(nodsg) as nodsg,convert (ind.subjurnal using latin1) as subjurnal,grpmat,spb.spb as spb,cast(DATE_FORMAT(spb.date,'%d/%m/%Y') as char) as spbdate,spb.nodoc as spbnopen,spm.spm as spm,cast(DATE_FORMAT(spm.date,'%d/%m/%Y') as char) as spmdate,spm.nodoc as spmnopen
       from ind
       left outer join inv on ind.inv=inv.inv
       left outer join loc on ind.loc=loc.loc
       left outer join lph on ind.jurnal = lph.lph
       left outer join spb on lph.spb = spb.spb
       left outer join sjh on ind.jurnal = sjh.sjh
       left outer join spm on sjh.spm = spm.spm
       where (ind.date>=Pdatea and ind.date<Pdatez) and inv.flag=0 and 
       if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1) and
       if(Pnodsga<>'' and Pnodsgz<>'', trim(ind.nodsg) LIKE CONCAT('%',Pnodsga , '%'), 1) and
       if(Ploca<>'' and Plocz<>'', ind.loc between Ploca and Plocz, 1) and
       if(Pjenisa<>'' and Pjenisz<>'', inv.jenis between Pjenisa and Pjenisz, 1) and  left(ind.inv,1)<>'9'
order by  2,4,trim(nodsg),date,15,12,14,6 ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_KartuStockbesar
DROP PROCEDURE IF EXISTS `Sp_KartuStockbesar`;
DELIMITER //
CREATE PROCEDURE `Sp_KartuStockbesar`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Pjenisa` varchar(15),
	IN `Pjenisz` varchar(15),
	IN `Pinva` varchar(15),
	IN `Pinvz` varchar(15),
	IN `Ploca` varchar(15),
	IN `Plocz` varchar(15),
	IN `Pnodsga` VARCHAR(50),
	IN `Pnodsgz` VARCHAR(50)
)
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists TempAwal ;
create temporary table TempAwal (inv varchar(15),loc varchar(15),qlast double, vlast double,nodsg varchar(50));
insert into TempAwal
(
 select inv,loc, sum(qlast) as qlast, sum(vlast) as vlast,nodsg
 from
 (
   select rin.inv, rin.loc, rin.qlast, rin.vlast,rin.nodsg
       from rin
       where rin.period=Pperiod and if(Pinva<>'' and Pinvz<>'', rin.inv between Pinva and Pinvz, 1)
         and if(Ploca<>'' and Plocz<>'', rin.loc between Ploca and Plocz, 1)
         and if(Pnodsga<>'' and Pnodsgz<>'', trim(rin.nodsg) between Pnodsga and Pnodsgz, 1)
   union all
   select ind.inv, ind.loc, sum(qty*if(dk='D',1,-1)) as qlast , sum(val*if(dk='D',1,-1)) as vlast,ind.nodsg
      from ind
      where ind.period=Pperiod and ind.date < Pdatea
        and if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1)
        and if(Ploca<>'' and Plocz<>'', ind.loc between Ploca and Plocz, 1)
        and if(Pnodsga<>'' and Pnodsgz<>'', trim(ind.nodsg) between Pnodsga and Pnodsgz, 1)
      group by ind.inv, ind.loc,trim(ind.nodsg)
 ) as oawal where left(inv,1)<>'9' group by inv,loc,trim(nodsg)
);
select invname,xstock.inv,locname,loc,date,jurnal,rem,qdebet/konversi as qdebet,vdebet,qkredit/konversi as qkredit,vkredit,dk,unit2 as unit,urut,nodsg,subjurnal
from
(
select inv.name as invname, trim(TempAwal.inv) inv, loc.name as locname, TempAwal.loc,inv.unit2,
       STR_TO_DATE(Pdatea, '%Y/%m/%d') as date, convert('' using latin1) as jurnal,convert('BALANCE' using latin1) as rem,
       if(TempAwal.qlast >= 0 , TempAwal.qlast , 0) as qdebet,
       if(TempAwal.vlast >= 0 , TempAwal.vlast , 0) as vdebet,
       if(TempAwal.qlast < 0 , TempAwal.qlast , 0) * -1 as qkredit,
       if(TempAwal.vlast < 0 , TempAwal.vlast , 0) * -1 as vkredit,
       convert(' ' using latin1) as dk, inv.unit, 1 as urut,trim(TempAwal.nodsg) as nodsg,convert (' ' using latin1) as subjurnal
       from TempAwal
       left outer join inv on TempAwal.inv=inv.inv
       left outer join loc on TempAwal.loc=loc.loc
       where if(Pjenisa<>'' and Pjenisz<>'', inv.jenis between Pjenisa and Pjenisz, 1)
union all
select inv.name as invname, trim(ind.inv), loc.name as locname, ind.loc,inv.unit2,
       ind.date as date, ind.jurnal as jurnal, ifnull(ind.rem,'') as rem,
       if (ind.dk='D' , ind.qty , 0) as qdebet,
       if (ind.dk='D' , ind.val , 0) as vdebet,
       if (ind.dk='K' , ind.qty , 0) as qkredit,
       if (ind.dk='K' , ind.val , 0) as vkredit,
       ind.dk as dk, inv.unit, if (ind.subjurnal='OPN' , 2 ,if(ind.subjurnal='LHP',0,1))  as urut,trim(ind.nodsg) as nodsg,convert (ind.subjurnal using latin1) as subjurnal
       from ind
       left outer join inv on ind.inv=inv.inv
       left outer join loc on ind.loc=loc.loc
       where (ind.date>=Pdatea and ind.date<Pdatez) and
       if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1) and
       if(Pnodsga<>'' and Pnodsgz<>'', trim(ind.nodsg) between Pnodsga and Pnodsgz, 1) and
       if(Ploca<>'' and Plocz<>'', ind.loc between Ploca and Plocz, 1) and
       if(Pjenisa<>'' and Pjenisz<>'', inv.jenis between Pjenisa and Pjenisz, 1) and left(ind.inv,1)<>'9'
) as xstock left outer join konversi on xstock.inv=konversi.inv and xstock.unit2=konversi.unit
order by  2,4,nodsg,date(date),qkredit,15,12,14,6 ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_KartuStockGlobal
DROP PROCEDURE IF EXISTS `Sp_KartuStockGlobal`;
DELIMITER //
CREATE PROCEDURE `Sp_KartuStockGlobal`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Pjenisa` varchar(15),
	IN `Pjenisz` varchar(15),
	IN `Pinva` varchar(15),
	IN `Pinvz` varchar(15),
	IN `Pnodsga` VARCHAR(50),
	IN `Pnodsgz` VARCHAR(50)
,
	IN `Ploca` VARCHAR(50)
)
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists TempAwal ;
create temporary table TempAwal (inv varchar(15),loc varchar(15),qlast double, vlast double,nodsg varchar(50));
insert into TempAwal
( 
  select inv,loc, sum(qlast) as qlast, sum(vlast) as vlast,'' as nodsg
  from
  (
     select rin.inv,rin.loc, rin.qlast, rin.vlast,rin.nodsg
       from rin
      where rin.period=Pperiod and if(Pinva<>'' and Pinvz<>'', rin.inv between Pinva and Pinvz, 1)
        and if(Pnodsga<>'' and Pnodsgz<>'', rin.nodsg between Pnodsga and Pnodsgz, 1) and
        rin.loc = Ploca
     union all
     select ind.inv,ind.loc, sum(qty*if(dk='D',1,-1)) as qlast , sum(val*if(dk='D',1,-1)) as vlast,ind.nodsg
       from ind
      where ind.period=Pperiod and ind.date < Pdatea
        and if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1)
        and if(Pnodsga<>'' and Pnodsgz<>'', ind.nodsg between Pnodsga and Pnodsgz, 1) and
        ind.loc = Ploca
      group by trim(ind.loc),ind.inv
  ) as oawal group by trim(loc),inv
);
select inv.name as invname, TempAwal.inv, loc.name as locname, trim(TempAwal.loc) loc,
       STR_TO_DATE(Pdatea, '%Y/%m/%d') as date, convert('' using latin1) as jurnal,
       convert('BALANCE' using latin1) as rem,
       if(TempAwal.qlast >= 0 , TempAwal.qlast , 0) as qdebet,
       if(TempAwal.vlast >= 0 , TempAwal.vlast , 0) as vdebet,
       if(TempAwal.qlast < 0 , TempAwal.qlast , 0) * -1 as qkredit,
       if(TempAwal.vlast < 0 , TempAwal.vlast , 0) * -1 as vkredit,
       convert(' ' using latin1) as dk, inv.unit, 1 as urut,'' as nodsg
       from TempAwal
       left outer join inv on TempAwal.inv=inv.inv
       left outer join loc on TempAwal.loc=loc.loc
       where if(Pjenisa<>'' and Pjenisz<>'', inv.jenis between Pjenisa and Pjenisz, 1) and
       loc.loc = Ploca
union all
select inv.name as invname, ind.inv, loc.name as locname, trim(ind.loc) loc,
       ind.date as date, ind.jurnal as jurnal, ifnull(ind.rem,'') as rem,
       if (ind.dk='D' , ind.qty , 0) as qdebet,
       if (ind.dk='D' , ind.val , 0) as vdebet,
       if (ind.dk='K' , ind.qty , 0) as qkredit,
       if (ind.dk='K' , ind.val , 0) as vkredit,
       ind.dk as dk, inv.unit, if (ind.subjurnal='OPN' , 2 , 1)  as urut,'' as nodsg
       from ind
       left outer join inv on ind.inv=inv.inv
       left outer join loc on ind.loc=loc.loc
       where (ind.date>=Pdatea and ind.date<Pdatez) and
       if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1) and
       if(Pnodsga<>'' and Pnodsgz<>'', ind.nodsg between Pnodsga and Pnodsgz, 1) and
       if(Pjenisa<>'' and Pjenisz<>'', inv.jenis between Pjenisa and Pjenisz, 1) and
       loc.loc = Ploca
order by  1,13,date,3,12,4 ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_KartuStockIT
DROP PROCEDURE IF EXISTS `Sp_KartuStockIT`;
DELIMITER //
CREATE PROCEDURE `Sp_KartuStockIT`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Pjenisa` varchar(15),
	IN `Pjenisz` varchar(15),
	IN `Pinva` varchar(15),
	IN `Pinvz` varchar(15),
	IN `Ploca` varchar(15),
	IN `Plocz` varchar(15),
	IN `Pnodsga` VARCHAR(50),
	IN `Pnodsgz` VARCHAR(50),
	IN `Pcat` varchar(15)
)
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists TempAwal ;
create temporary table TempAwal (inv varchar(15),loc varchar(15),qlast double, vlast double,nodsg varchar(50));
insert into TempAwal
(
 select inv,loc, sum(qlast) as qlast, sum(vlast) as vlast,'' as nodsg
 from
 (
   select rin.inv, rin.loc, rin.qlast, rin.vlast,'' as nodsg
       from rin
       where rin.period=Pperiod and if(Pinva<>'' and Pinvz<>'', rin.inv between Pinva and Pinvz, 1)
         and if(Ploca<>'' and Plocz<>'', rin.loc between Ploca and Plocz, 1)
         and if(Pnodsga<>'' and Pnodsgz<>'', rin.nodsg between Pnodsga and Pnodsgz, 1)
   union all
   select ind.inv, ind.loc, sum(qty*if(dk='D',1,-1)) as qlast , sum(val*if(dk='D',1,-1)) as vlast,''
      from ind
      where ind.period=Pperiod and ind.date < Pdatea
        and if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1)
        and if(Ploca<>'' and Plocz<>'', ind.loc between Ploca and Plocz, 1)
        and if(Pnodsga<>'' and Pnodsgz<>'', ind.nodsg between Pnodsga and Pnodsgz, 1)
      group by ind.inv, ind.loc,trim(ind.nodsg)
 ) as oawal where left(inv,1)<>'9' group by inv,trim(loc)
);
select trim(inv.name) as invname, trim(TempAwal.inv) inv, loc.name as locname, trim(TempAwal.loc) loc,
       STR_TO_DATE(Pdatea, '%Y/%m/%d') as date, convert('' using latin1) as jurnal,convert('BALANCE' using latin1) as rem,
       if(TempAwal.qlast >= 0 , TempAwal.qlast , 0) as qdebet,
       if(TempAwal.vlast >= 0 , TempAwal.vlast , 0) as vdebet,
       if(TempAwal.qlast < 0 , TempAwal.qlast , 0) * -1 as qkredit,
       if(TempAwal.vlast < 0 , TempAwal.vlast , 0) * -1 as vkredit,
       convert(' ' using latin1) as dk, inv.unit, 1 as urut,'' as nodsg,convert (' ' using latin1) as subjurnal,grpmat
       from TempAwal
       left outer join inv on TempAwal.inv=inv.inv
       left outer join loc on TempAwal.loc=loc.loc
       where if(Pjenisa<>'' and Pjenisz<>'', inv.jenis between Pjenisa and Pjenisz, 1) and if(pcat='',1,inv.grpmat=Pcat)
union all
select trim(inv.name) as invname, trim(ind.inv), loc.name as locname, trim(ind.loc) loc,
       if(ind.subjurnal='LHP',date(ind.date),ind.date) as date, ind.jurnal as jurnal, ifnull(ind.rem,'') as rem,
       if (ind.dk='D' , ind.qty , 0) as qdebet,
       if (ind.dk='D' , ind.val , 0) as vdebet,
       if (ind.dk='K' , ind.qty , 0) as qkredit,
       if (ind.dk='K' , ind.val , 0) as vkredit,
       ind.dk as dk, inv.unit, if (ind.subjurnal='OPN' , 2 ,if(ind.subjurnal='LHP',0,1))  as urut,'' as nodsg,convert (ind.subjurnal using latin1) as subjurnal,grpmat
       from ind
       left outer join inv on ind.inv=inv.inv
       left outer join loc on ind.loc=loc.loc
       where (ind.date>=Pdatea and ind.date<Pdatez) and
       if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1) and
       if(Pnodsga<>'' and Pnodsgz<>'', ind.nodsg between Pnodsga and Pnodsgz, 1) and
       if(Ploca<>'' and Plocz<>'', ind.loc between Ploca and Plocz, 1) and
       if(Pjenisa<>'' and Pjenisz<>'', inv.jenis between Pjenisa and Pjenisz, 1) and  left(ind.inv,1)<>'9' and
       if(pcat='',1,inv.grpmat=Pcat)
order by  2,4,date,15,12,14,6 ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_KartuStockSPM
DROP PROCEDURE IF EXISTS `Sp_KartuStockSPM`;
DELIMITER //
CREATE PROCEDURE `Sp_KartuStockSPM`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Pjenisa` varchar(15),
	IN `Pjenisz` varchar(15),
	IN `Pinva` varchar(15),
	IN `Pinvz` varchar(15),
	IN `Ploca` varchar(15),
	IN `Plocz` varchar(15),
	IN `Pnodsga` VARCHAR(50),
	IN `Pnodsgz` VARCHAR(50)
)
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists TempAwal ;
create temporary table TempAwal (inv varchar(15),loc varchar(15),qlast double, vlast double,nodsg varchar(50));
insert into TempAwal
(
 select inv,loc, sum(qlast) as qlast, sum(vlast) as vlast,nodsg as nodsg
 from
 (
   select rin.inv, rin.loc, rin.qlast, rin.vlast,rin.nodsg as nodsg
       from rin inner join inv on rin.inv = inv.inv
       where rin.period=Pperiod and inv.flag = 0 and 
			 if(Pinva<>'' and Pinvz<>'', rin.inv between Pinva and Pinvz, 1)
         and if(Ploca<>'' and Plocz<>'', rin.loc between Ploca and Plocz, 1)
         and if(Pnodsga<>'' and Pnodsgz<>'', trim(rin.nodsg) LIKE CONCAT('%', Pnodsga , '%'), 1)
   union all
   select ind.inv, ind.loc, sum(qty*if(dk='D',1,-1)) as qlast , sum(val*if(dk='D',1,-1)) as vlast,ind.nodsg as nodsg
      from ind inner join inv on ind.inv = inv.inv
      where ind.period=Pperiod and ind.date < Pdatea and inv.flag = 0
        and if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1)
        and if(Ploca<>'' and Plocz<>'', ind.loc between Ploca and Plocz, 1)
        and if(Pnodsga<>'' and Pnodsgz<>'', trim(ind.nodsg) LIKE CONCAT('%',Pnodsga , '%'), 1)
      group by ind.inv, ind.loc,trim(ind.nodsg)
 ) as oawal where left(inv,1)<>'9' group by inv,trim(loc),trim(nodsg)
);
select trim(inv.name) as invname, trim(TempAwal.inv) inv, loc.name as locname, trim(TempAwal.loc) loc,
       STR_TO_DATE(Pdatea, '%Y/%m/%d') as date, convert('' using latin1) as jurnal,convert('BALANCE' using latin1) as rem,
       if(TempAwal.qlast >= 0 , TempAwal.qlast , 0) as qdebet,
       if(TempAwal.vlast >= 0 , TempAwal.vlast , 0) as vdebet,
       if(TempAwal.qlast < 0 , TempAwal.qlast , 0) * -1 as qkredit,
       if(TempAwal.vlast < 0 , TempAwal.vlast , 0) * -1 as vkredit,
       convert(' ' using latin1) as dk, inv.unit, 1 as urut,trim(nodsg) as nodsg,convert (' ' using latin1) as subjurnal,grpmat,
       '' as spb,'' as spbdate,'' as spbnopen,'' as spm,'' as spmdate,'' as spmnopen
       from TempAwal
       left outer join inv on TempAwal.inv=inv.inv
       left outer join loc on TempAwal.loc=loc.loc
       where inv.flag=0 and if(Pjenisa<>'' and Pjenisz<>'', inv.jenis between Pjenisa and Pjenisz, 1)
union all
select trim(inv.name) as invname, trim(ind.inv), loc.name as locname, trim(ind.loc) loc,
       ind.date as date, ind.jurnal as jurnal, ifnull(ind.rem,'') as rem,
       if (ind.dk='D' , ind.qty , 0) as qdebet,
       if (ind.dk='D' , ind.val , 0) as vdebet,
       if (ind.dk='K' , ind.qty , 0) as qkredit,
       if (ind.dk='K' , ind.val , 0) as vkredit,
       ind.dk as dk, inv.unit, if (ind.subjurnal='OPN' , 2 ,if(ind.subjurnal='LHP',0,1))  as urut,trim(nodsg) as nodsg,convert (ind.subjurnal using latin1) as subjurnal,grpmat,spb.spb as spb,cast(DATE_FORMAT(spb.date,'%d/%m/%Y') as char) as spbdate,spb.nodoc as spbnopen,spm.spm as spm,cast(DATE_FORMAT(spm.date,'%d/%m/%Y') as char) as spmdate,spm.nodoc as spmnopen
       from ind
       left outer join inv on ind.inv=inv.inv
       left outer join loc on ind.loc=loc.loc
       left outer join lph on ind.jurnal = lph.lph
       left outer join spb on lph.spb = spb.spb
       left outer join sjh on ind.jurnal = sjh.sjh
       left outer join spm on sjh.spm = spm.spm
       where (ind.date>=Pdatea and ind.date<Pdatez) and inv.flag=0 and 
       if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1) and
       if(Pnodsga<>'' and Pnodsgz<>'', trim(ind.nodsg) LIKE CONCAT('%',Pnodsga , '%'), 1) and
       if(Ploca<>'' and Plocz<>'', ind.loc between Ploca and Plocz, 1) and
       if(Pjenisa<>'' and Pjenisz<>'', inv.jenis between Pjenisa and Pjenisz, 1) and  left(ind.inv,1)<>'9'
order by  2,4,trim(nodsg),date,15,12,14,6 ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_KasBUS
DROP PROCEDURE IF EXISTS `SP_KasBUS`;
DELIMITER //
CREATE PROCEDURE `SP_KasBUS`(
	IN `pdatea` datetime,
	IN `pdatez` datetime,
	IN `pacca` varchar(15),
	IN `paccz` varchar(15),
	IN `flag` varchar(1)
)
BEGIN
  declare tperiod char(4);
  declare nextperiod char(4);
  set nextperiod=fdate2period(adddate(pdatez,1));
  set tperiod = Fdate2period(pdatea);
  drop temporary table if exists ACDUS1;
  create temporary table ACDUS1 (jurnal varchar(15),val double,acc varchar(15),kurs double);
  drop temporary table if exists acdus;
  create temporary table acdus (jurnal varchar(15),val double,acc varchar(15),kurs double,period varchar(4),rem longtext,date datetime,dk varchar(1),valrp double);
  drop temporary table if exists saldoawal;
  create temporary table saldoawal (jurnal varchar(15),val double,acc varchar(15),kurs double,period varchar(4),rem longtext,date datetime,dk varchar(1),valrp double);
  insert into ACDUS1
  (
    select * from (
    select cgr.cgr as jurnal,round(kag.val,2),kas.acc,kas.kurs
    from cgr inner join kag on cgr.nobg=kag.nobg inner join kas on kag.kas=kas.kas
    where cgr.period=tperiod and kas.kurs>1 and kas.acc like '11013%'
    union all
    select umh,sum(val) val,acc,kurs from (
    select distinct umh.umh,umd.val val,umd.acc,umh.kurs
    from umh left outer join umd on umh.umh=umd.umh
    where umh.kurs>1 and umh.period=tperiod and umd.acc like '11013%' )
    as xx group by umh,acc
    union all
    select kas.kas,kas.val,kas.acc,kas.kurs from kas
    where kas.kurs>1 and period=tperiod and acc like '11013%' and kas.acc like '11013%' and kas.val<>0
    union all
    select kad.kas,kad.val,kad.acc,kas.kurs
    from kad left outer join kas on kad.kas=kas.kas
    where (kas.kurs>1 or kad.kurs>1) and kas.period=tperiod and kad.acc like '11013%'
    union all
    select kad.kas,kad.est,kad.acc,ifnull(kad.est,0)/kad.val
    from kad left outer join kas on kad.kas=kas.kas
    where kad.est<>0 and kas.period=tperiod and kad.acc like '11013%') A
  );
 insert into saldoawal
(
    select '' as jurnal,sum(val*if(dk='D',1,-1)) as val,acc,kurs,period,'Saldo Awal',`date`,if(sum(val*if(dk='D',1,-1))<0,'K','D') as dk,sum(valrp*if(dk='D',1,-1)) as valrp from (
    select ACDUS1.*,acd.period,acd.rem,pdatea as `date`,acd.dk,acd.val as valrp
    from ACDUS1 left outer join acd on ACDUS1.jurnal=acd.jurnal and ACDUS1.acc=acd.acc
    where acd.acc like '11013%' and period=tperiod and acd.date<pdatea
    union all
    select convert('' using latin1),ifnull(racus.val,0) val ,racus.acc,ifnull(racus.valrp,0)/ifnull(racus.val,1),
    racus.period,convert('Saldo Awal' using latin1),pdatea,case when racus.val<0 then convert('K' using latin1) else convert('D' using latin1) end,racus.valrp
    from racus where racus.period=tperiod and racus.acc like '11013%' ) C  group by acc );
   insert into acdus
  (
    select * from (
    select ACDUS1.*,acd.period,acd.rem,acd.`date`,acd.dk,acd.val as valrp
    from ACDUS1 left outer join (select acd.jurnal,acd.acc,acd.date,acd.period,acd.dk,acd.rem,sum(acd.val) val from acd group by acd.jurnal,acd.acc,acd.period,acd.acc,acd.dk) acd on ACDUS1.jurnal=acd.jurnal and ACDUS1.acc=acd.acc
    where acd.acc like '11013%' and period=tperiod and acd.date>=pdatea and acd.date<adddate(pdatez,1)
    union all
    select * from saldoawal ) B
  );
  if (flag = '0') then
    select *,(case when acdus.dk=convert('K' using latin1) then acdus.val else 0 end) as kredit,
    (case when acdus.dk=convert('D' using latin1) then acdus.val else 0 end) as debet,acc.name
    from acdus,acc where (acdus.acc between pacca and paccz) and acdus.acc = acc.acc
    order by acdus.acc,acdus.`date`,acdus.jurnal;
  elseif (flag = '1' and tperiod>='0910') then
 delete from racus where racus.period=nextperiod;
 insert into racus
   select * from (
      select nextperiod as period,acc,
      sum(case when acdus.dk=convert('D' using latin1) then acdus.val else 0 end) as debet,
      sum(case when acdus.dk=convert('K' using latin1) then acdus.val else 0 end) as kredit,
      sum(case when acdus.dk=convert('D' using latin1) then acdus.val else -acdus.val end) as val,
      sum(valrp) as valrp from acdus
      group by acdus.period,acdus.acc) as xacd;
 end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_KasBUStmp
DROP PROCEDURE IF EXISTS `SP_KasBUStmp`;
DELIMITER //
CREATE PROCEDURE `SP_KasBUStmp`(pdatea datetime,pdatez datetime,pacca varchar(15),paccz varchar(15),flag varchar(1))
BEGIN
 declare tperiod char(4);
  declare nextperiod char(4);
  set nextperiod=fdate2period(adddate(pdatez,1));
  set tperiod = Fdate2period(pdatea);
  drop temporary table if exists ACDUS1;
  create temporary table ACDUS1 (jurnal varchar(15),val double,acc varchar(15),kurs double);
  drop temporary table if exists acdus;
  create temporary table acdus (jurnal varchar(15),val double,acc varchar(15),kurs double,period varchar(4),rem longtext,date datetime,dk varchar(1),valrp double);
  drop temporary table if exists saldoawal;
  create temporary table saldoawal (jurnal varchar(15),val double,acc varchar(15),kurs double,period varchar(4),rem longtext,date datetime,dk varchar(1),valrp double);
  insert into ACDUS1
  (
    select * from (
    select cgr.cgr as jurnal,round(kag.val,2),kas.acc,kas.kurs,kas.sub,sub.name,kas.remark
    from cgr inner join kag on cgr.nobg=kag.nobg inner join kas on kag.kas=kas.kas inner join sub on kas.sub=sub.sub
    where cgr.period=tperiod and kas.kurs>1 and kas.acc like '1101%'
    union all
    select umh.umh,sum(umd.val) val,umd.acc,umh.kurs,umh.sub,sub.name,umh.remark
    from umh left outer join umd on umh.umh=umd.umh left outer join sub on umh.sub=sub.sub
    where umh.kurs>1 and umh.period=tperiod and umd.acc like '1101%' group by umh.umh,umd.acc
    union all
    select kas.kas,kas.val,kas.acc,kas.kurs,kas.sub,sub.name,kas.remark from kas left outer join sub on kas.sub=sub.sub
    where kas.kurs>1 and period=tperiod and acc like '1101%' and kas.acc like '1101%' and kas.val<>0
    union all
    select kad.kas,kad.val,kad.acc,kas.kurs,kas.sub,sub.name,kas.remark
    from kad left outer join kas on kad.kas=kas.kas left outer join sub on kas.sub=sub.sub
    where (kas.kurs>1 or kad.kurs>1) and kas.period=tperiod and kad.acc like '1101%'
    union all
    select jsu.jsu,jsu.val,jsu.acc,jsu.kurs,jsu.sub,sub.name,jsu.remark from jsu left outer join sub on jsu.sub=sub.sub
    where jsu.kurs>1 and period=tperiod and acc like '1101%' and jsu.acc like '1101%'
    union all
    select jsd.jsu,jsd.val,jsd.acc,jsu.kurs,jsu.sub,sub.name,jsu.remark
    from jsu left outer join jsd on jsu.jsu=jsd.jsu left outer join sub on jsu.sub=sub.sub
    where jsu.kurs>1 and jsu.period=tperiod and jsd.acc like '1101%'
    union all
    select kad.kas,kad.est,kad.acc,ifnull(kad.est,0)/kad.val,kas.sub,sub.name,kas.remark
    from kad left outer join kas on kad.kas=kas.kas left outer join sub on kas.sub=sub.sub
    where kad.est<>0 and kas.period=tperiod and kad.acc like '1101%') A
  );
 insert into saldoawal
(
    select '' as jurnal,sum(val*if(dk='D',1,-1)) as val,acc,kurs,period,'Saldo Awal',`date`,if(sum(val*if(dk='D',1,-1))<0,'K','D') as dk,sum(valrp*if(dk='D',1,-1)) as valrp from (
    select ACDUS1.*,acd.period,acd.rem,pdatea as `date`,acd.dk,acd.val as valrp
    from ACDUS1 left outer join acd on ACDUS1.jurnal=acd.jurnal and ACDUS1.acc=acd.acc
    where acd.acc like '1101%' and period=tperiod and acd.date<pdatea
    union all
    select convert('' using latin1),ifnull(racus.val,0) val ,racus.acc,ifnull(racus.valrp,0)/ifnull(racus.val,1),
    racus.period,convert('Saldo Awal' using latin1),pdatea,case when racus.val<0 then convert('K' using latin1) else convert('D' using latin1) end,racus.valrp
    from racus where racus.period=tperiod and racus.acc like '1101%' ) C  group by acc );
   insert into acdus
  (
    select * from (
    select ACDUS1.*,acd.period,acd.rem,acd.`date`,acd.dk,acd.val as valrp
    from ACDUS1 left outer join (select acd.jurnal,acd.acc,acd.date,acd.period,acd.dk,acd.rem,sum(acd.val) val from acd group by acd.jurnal,acd.acc,acd.period,acd.acc,acd.dk) acd on ACDUS1.jurnal=acd.jurnal and ACDUS1.acc=acd.acc
    where acd.acc like '1101%' and period=tperiod and acd.date>pdatea and acd.date<adddate(pdatez,1)
    union all
    select * from saldoawal ) B
  );
  if (flag = '0') then
    select *,(case when acdus.dk=convert('K' using latin1) then acdus.val else 0 end) as kredit,
    (case when acdus.dk=convert('D' using latin1) then acdus.val else 0 end) as debet,acc.name
    from acdus,acc where (acdus.acc between pacca and paccz) and acdus.acc = acc.acc
    order by acdus.acc,acdus.`date`,acdus.jurnal;
  elseif (flag = '1' and tperiod>='0910') then
delete from racus where racus.period=nextperiod;
insert into racus
select * from (
      select nextperiod as period,acc,
      sum(case when acdus.dk=convert('D' using latin1) then acdus.val else 0 end) as debet,
      sum(case when acdus.dk=convert('K' using latin1) then acdus.val else 0 end) as kredit,
      sum(case when acdus.dk=convert('D' using latin1) then acdus.val else -acdus.val end) as val,
      sum(valrp) as valrp from acdus
      group by acdus.period,acdus.acc ) as xacd;
  end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_kertaskerja
DROP PROCEDURE IF EXISTS `SP_kertaskerja`;
DELIMITER //
CREATE PROCEDURE `SP_kertaskerja`(Pcct varchar(15),Pperiod varchar(4))
BEGIN
  select kkh.*,ifnull(cct.name,'') as name,
  concat(monthname(concat('20',left(Pperiod,2),right(Pperiod,2),'01')),concat(' 20',left(Pperiod,2))) as periodename
  from kkh left outer join cct on trim(kkh.cct)=trim(cct.cct) where kkh.period=Pperiod  and  trim(kkh.cct)=trim(Pcct);
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_klrkwitansi
DROP PROCEDURE IF EXISTS `SP_klrkwitansi`;
DELIMITER //
CREATE PROCEDURE `SP_klrkwitansi`(psub varchar(15), pdate datetime)
BEGIN
select kld.klr as `Nomor Invoice`,kld.nofp as `Nomor Faktur Pajak`,kld.remark as Keterangan, kld.dpp-ifnull(kwd.valdpp,0) as `Nilai DPP`,
if(left(kld.nofp,1)='' or left(kld.nofp,3)='070',0,kld.ppn-ifnull(kwd.valppn,0) ) as `Nilai PPN`,kld.val-ifnull(kwd.valsubtotal,0) as `Nilai Subtotal`,kwd.jurnal
from klr inner join ( select klr,nofp,kld.remark, sum(kld.dpp) dpp, sum(kld.ppn) ppn,sum(kld.val) as val from kld group by klr) kld on kld.klr=klr.klr
left outer join (select jurnal,sum(kwd.valdpp) valdpp,sum(kwd.valppn) valppn,sum(kwd.valsubtotal) valsubtotal from kwd group by jurnal) kwd
on trim(kld.klr)=trim(kwd.jurnal) where klr.`delete`=0 and klr.sub=Psub and date(klr.date)<= pdate and klr.date > adddate(curdate(),interval -6 month) and round(kld.dpp,2)-ifnull(round(kwd.valdpp,2),0) >1
 union all
 select * from (select rkd.rkl as `Nomor Invoice`,rkd.nofp as `Nomor Faktur Pajak`,rkd.invo as Keterangan,
 -sum(rkd.dpp) as `Nilai DPP`,-if(left(rkd.nofp,3)='070',0,sum(rkd.ppn)) as `Nilai PPN`,if(left(rkd.nofp,3)='070',sum(rkd.dpp),sum(rkd.val)) as `Nilai Subtotal`,kwd.jurnal from rkl,
 rkd  left outer join kwd on rkd.rkl=kwd.jurnal and rkd.nofp=kwd.fpj  where rkl.`delete`=0 and rkl.rkl=rkd.rkl and rkl.sub=Psub and date(rkl.date) <= Pdate
 group by rkd.rkl,rkd.nofp) as tmp where tmp.jurnal is null
 union all
 select * from (select fpjumd.oms,fpjumd.nofpj,'' remark,fpjumd.val,if(left(fpjumd.nofpj,3)='070' or left(fpjumd.nofpj,1)=' ',0,fpjumd.val*0.1) as ppn,fpjumd.val*if(left(fpjumd.nofpj,3)='070' or left(fpjumd.nofpj,1)=' ',1,1.1) subtotal,kwd.jurnal from fpjumd
 left outer join kwd on kwd.jurnal=fpjumd.oms and kwd.fpj=fpjumd.nofpj ) as tmp2 where tmp2.jurnal is null ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_KlrOut
DROP PROCEDURE IF EXISTS `Sp_KlrOut`;
DELIMITER //
CREATE PROCEDURE `Sp_KlrOut`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Psuba` char(15),
	IN `Psubz` char(15),
	IN `Pinva` char(15),
	IN `PinvZ` char(15),
	IN `Pklra` char(15),
	IN `Pklrz` char(15),
	IN `Prkla` char(15),
	IN `Prklz` char(15),
	IN `Pjenis` char(1)
)
BEGIN
if(Psuba='') then
  set Psuba='00000000';
end if;
if(Psubz='') then
  set Psubz='99999999';
end if;
if (Pjenis='1') then
select temklr.*,inv.name invname from (
  select sum(kld.qty) qty,klr.klr,klr.date,sub.name,kld.klr kldklr,kld.invo,kld.nofp,klr.kurs,sum(ifnull(kld.dpp*klr.kurs,0)) as DPP,
  if(kld.ppn=0,0,(sum(ifnull(kld.DPP*klr.kurs,0)-ifnull(umk.val*klr.kurs,0))*0.1)) as PPN,
  sum(ifnull(kld.dpp*klr.kurs,0)-ifnull(umk.val*klr.kurs,0))*if(kld.ppn=0,1,1.1) as val,
  umk.jurnal,ifnull(umk.val*klr.kurs,0) as val1,
  (select sjd.inv from sjd,sjh,kll where sjd.sjh=sjh.sjh and sjh.sjh=kll.sjh and kll.klr=klr.klr  limit 1) as inv
  from
   (select klr,invo,nofp,kurs,sum(dpp) dpp,sum(val) val, sum(ppn) ppn,sum(kld.qty) qty from kld where kld.price>0 group by kld.klr) kld left outer join klr on kld.klr=klr.klr
   left outer join sub on sub.sub=klr.sub
   left outer join (select klr,jurnal,sum(umk.val) val,umk.kurs from umk group by klr) umk on umk.klr=klr.klr
   where klr.sub between Psuba and Psubz and klr.delete=0
   and klr.date>=Pdatea and klr.date<adddate(Pdatez,1) and klr.klr between Pklra and Pklrz
   group by klr.klr
union all
   select -jsu.val1,jsu.jsu,jsu.date,sub.name,jsd.jsu,jsu.acclawan,jsu.acclawan1,jsu.kurs,jsd.val*if(jsd.dk='D',-1,1)*jsu.kurs as dpp,
   if((select count(jsu) tot from jsd where jsd.jsu=jsu.jsu and jsd.acc ='21050101') >= 1,jsd.val*if(jsd.dk='D',-1,1)*jsu.kurs*0.1,0) as ppn,
     if((select count(jsu) tot from jsd where jsd.jsu=jsu.jsu and jsd.acc ='21050101') >= 1,jsd.val*if(jsd.dk='D',-1,1)*jsu.kurs*1.1,-jsd.val*jsu.kurs) as val,
     '' umkjurnal, 0 as umkval,
   (select inv from sjd where trim(sjh)=trim(jsu.acclawan)  limit 1) inv from jsd left outer join jsu on jsd.jsu=jsu.jsu
   left outer join sub on sub.sub=jsu.sub
    where
    jsu.date >=Pdatea and jsu.date<adddate(Pdatez,1) and jsu.sub between Psuba and Psubz
    and (jsd.acc like '41010%' or jsd.acc like '41020%')
    group by jsu.jsu
union all
    select 0 as qty,umd.umh as klr,umh.date,sub.name,umd.jurnal,'' as invo,'' nofp,umh.kurs,sum(ifnull(umd.val*umh.kurs*if(DK='D',-1,1),0)) as DPP,
    0 as PPN,sum(umd.val*umh.kurs*if(DK='D',-1,1)) as val,'',0 as val1,(select sjd.inv from sjd where sjd.sjh in (select kll.sjh from kll where kll.klr=klr.klr) limit 1) as inv
    from umd left outer join umh on umd.umh=umh.umh
    left outer join klr on umd.okl=klr.klr
    left outer join sub on sub.sub=klr.sub
    where umh.date>=Pdatea and umh.date<adddate(Pdatez,1) and umh.delete=0 and  left(umd.acc,2)='42'
    group by umd.umh
union all
    select 0 as qty,kad.kas as klr,kas.date,sub.name,kad.kas,'' as invo,'' nofp,kas.kurs,sum(ifnull(kad.val*kas.kurs*-1,0)) as DPP,
    0 as PPN,sum(kad.val*kas.kurs*-1) as val,'',0 as val1,(select sjd.inv from sjd where sjd.sjh in (select kll.sjh from kll where kll.klr=klr.klr) limit 1) as inv
    from kad left outer join kas on kad.kas=kas.kas
    left outer join klr on kad.okl=klr.klr
    left outer join sub on sub.sub=kas.sub
    where kas.date>=Pdatea and kas.date<adddate(Pdatez,1) and kas.delete=0 and  left(kad.acc,2)='42'
    group by kad.kas
union all
    select 0 as qty,umd.umh as klr,umh.date,sub.name,umd.jurnal,'' as invo,'' nofp,umh.kurs,sum(ifnull(umd.val*umh.kurs*if(umd.dk='K',1,-1),0)) as DPP,
    0 as PPN,sum(umd.val*umh.kurs*-1) as val,umh.umh,0 as val1,inv.inv
    from umd left outer join umh on umd.umh=umh.umh
    left outer join ind on umd.okl=ind.jurnal
    left outer join inv on ind.inv=inv.inv
    left outer join sub on sub.sub=umh.sub
    where umh.date>=Pdatea and umh.date<adddate(Pdatez,1) and umh.delete=0 and  left(umd.acc,2) = '41'
    group by umh.umh
) as temklr,inv where temklr.inv=inv.inv and inv.inv between Pinva and Pinvz;
end if;
if (Pjenis='2') then
select -sum(rkb.qty) as qty,umd.umh as fpjsederhana,umh.date,sub.name,umd.jurnal,'' as invo,'' nofp,umh.kurs,
sum(ifnull(umd.val*umh.kurs*-1,0)) as DPP,
0 as PPN,sum(umd.val*umh.kurs*-1) as val,umh.umh,0 as val1,rkb.inv as inv
from umd left outer join umh on umd.umh=umh.umh
left outer join sub on sub.sub=umh.sub
left outer join rkb on umd.okl=rkb.rka
where umh.date>=Pdatea and umh.date<adddate(Pdatez,1) and umh.delete=0 and  left(umd.acc,2)='43'
group by umh.umh
union all
select -sum(rkb.qty) as qty,rkd.rkl as fpjsederhana,rkl.date,sub.name,rkd.rkl,'' as invo,rkd.nofp nofp,rkd.kurs,
sum(ifnull(rkd.dpp*rkd.kurs*-1,0)) as DPP,
rkd.ppn*rkd.kurs*-1 as PPN,sum(rkd.val*rkd.kurs*-1) as val,'',0 as val1,rkb.inv
from rkd left outer join rll on rkd.rkl= rll.rkl and rkd.no=rll.no
inner join rkl on rkd.rkl=rkl.rkl
left outer join sub on sub.sub=rkl.sub
inner join rkb on rll.rka=rkb.rka and rkb.inv=rll.inv
where rkl.date>=Pdatea and rkl.date<adddate(Pdatez,1) and rkl.delete=0 and rkl.period>'1601'
group by rkl.rkl,rkd.inv
union all
select -sum(rkd.qty) as qty,rkd.rkl as fpjsederhana,rkl.date,sub.name,rkd.rkl,'' as invo,rkd.nofp nofp,rkd.kurs,
sum(ifnull(rkd.dpp*rkd.kurs*-1,0)) as DPP,
rkd.ppn*rkd.kurs*-1 as PPN,sum(rkd.val*rkd.kurs*-1) as val,'',0 as val1,(select inv from sjd where sjd.sjh=rkd.rsm limit 1)
from rkd inner join rkl on rkd.rkl=rkl.rkl
left outer join sub on sub.sub=rkl.sub
where rkl.date>=Pdatea and rkl.date<adddate(Pdatez,1) and rkl.delete=0 and rkl.period<='1601'
group by rkl.rkl,rkd.inv
;
end if;
if (Pjenis='3') then
select temklr.*,inv.name invname from (
select sum(kld.qty) qty,klr.klr,klr.date,sub.name,kld.klr kldklr,kld.invo,kld.nofp,klr.kurs,sum(ifnull(kld.dpp*klr.kurs,0)) as DPP,
  if(kld.ppn=0,0,(sum(ifnull(kld.DPP*klr.kurs,0)-ifnull(umk.val*klr.kurs,0))*0.1)) as PPN,
  sum(ifnull(kld.dpp*klr.kurs,0)-ifnull(umk.val*klr.kurs,0))*if(kld.ppn=0,1,1.1) as val,
  umk.jurnal,ifnull(umk.val*klr.kurs,0) as val1,
  (select sjd.inv from sjd,sjh,kll where sjd.sjh=sjh.sjh and sjh.sjh=kll.sjh and kll.klr=klr.klr  limit 1) as inv
  from
   (select klr,invo,nofp,kurs,sum(dpp) dpp,sum(val) val, sum(ppn) ppn,sum(kld.qty) qty from kld where kld.price>0 group by kld.klr) kld left outer join klr on kld.klr=klr.klr
   left outer join sub on sub.sub=klr.sub
   left outer join (select klr,jurnal,sum(umk.val) val,umk.kurs from umk group by klr) umk on umk.klr=klr.klr
   where klr.sub between Psuba and Psubz and klr.delete=0
   and klr.date>=Pdatea and klr.date<adddate(Pdatez,1) and klr.klr between Pklra and Pklrz
   group by klr.klr
union all
   select -jsu.val1,jsu.jsu,jsu.date,sub.name,jsd.jsu,jsu.acclawan,jsu.acclawan1,jsu.kurs,jsd.val*if(jsd.dk='D',-1,1)*jsu.kurs as dpp,
   if((select count(jsu) tot from jsd where jsd.jsu=jsu.jsu and jsd.acc ='21050101') >= 1,jsd.val*if(jsd.dk='D',-1,1)*jsu.kurs*0.1,0) as ppn,
     if((select count(jsu) tot from jsd where jsd.jsu=jsu.jsu and jsd.acc ='21050101') >= 1,jsd.val*if(jsd.dk='D',-1,1)*jsu.kurs*1.1,-jsd.val*jsu.kurs) as val,
     '' umkjurnal, 0 as umkval,
   (select inv from sjd where trim(sjh)=trim(jsu.acclawan)  limit 1) inv from jsd left outer join jsu on jsd.jsu=jsu.jsu
   left outer join sub on sub.sub=jsu.sub
    where
    jsu.date >=Pdatea and jsu.date<adddate(Pdatez,1) and jsu.sub between Psuba and Psubz
    and (jsd.acc like '41010%' or jsd.acc like '41020%')
    group by jsu.jsu
union all
    select 0 as qty,umd.umh as klr,umh.date,sub.name,umd.jurnal,'' as invo,'' nofp,umh.kurs,sum(ifnull(umd.val*umh.kurs*if(DK='D',-1,1),0)) as DPP,
    0 as PPN,sum(umd.val*umh.kurs*if(DK='D',-1,1)) as val,'',0 as val1,(select sjd.inv from sjd where sjd.sjh in (select kll.sjh from kll where kll.klr=klr.klr) limit 1) as inv
    from umd left outer join umh on umd.umh=umh.umh
    left outer join klr on umd.okl=klr.klr
    left outer join sub on sub.sub=klr.sub
    where umh.date>=Pdatea and umh.date<adddate(Pdatez,1) and umh.delete=0 and  left(umd.acc,2)='42'
    group by umd.umh
union all
    select 0 as qty,kad.kas as klr,kas.date,sub.name,kad.kas,'' as invo,'' nofp,kas.kurs,sum(ifnull(kad.val*kas.kurs*-1,0)) as DPP,
    0 as PPN,sum(kad.val*kas.kurs*-1) as val,'',0 as val1,(select sjd.inv from sjd where sjd.sjh in (select kll.sjh from kll where kll.klr=klr.klr) limit 1) as inv
    from kad left outer join kas on kad.kas=kas.kas
    left outer join klr on kad.okl=klr.klr
    left outer join sub on sub.sub=kas.sub
    where kas.date>=Pdatea and kas.date<adddate(Pdatez,1) and kas.delete=0 and  left(kad.acc,2)='42'
    group by kad.kas
union all
    select 0 as qty,umd.umh as klr,umh.date,sub.name,umd.jurnal,'' as invo,'' nofp,umh.kurs,sum(ifnull(umd.val*umh.kurs*if(umd.dk='K',1,-1),0)) as DPP,
    0 as PPN,sum(umd.val*umh.kurs*-1) as val,umh.umh,0 as val1,inv.inv
    from umd left outer join umh on umd.umh=umh.umh
    left outer join ind on umd.okl=ind.jurnal
    left outer join inv on ind.inv=inv.inv
    left outer join sub on sub.sub=umh.sub
    where umh.date>=Pdatea and umh.date<adddate(Pdatez,1) and umh.delete=0 and  left(umd.acc,2) = '41'
    group by umh.umh
union all
select -sum(rkb.qty) as qty,umd.umh as fpjsederhana,umh.date,sub.name,umd.jurnal,'' as invo,'' nofp,umh.kurs,
sum(ifnull(umd.val*umh.kurs*-1,0)) as DPP,
0 as PPN,sum(umd.val*umh.kurs*-1) as val,umh.umh,0 as val1,rkb.inv as inv
from umd left outer join umh on umd.umh=umh.umh
left outer join sub on sub.sub=umh.sub
left outer join rkb on umd.okl=rkb.rka
where umh.date>=Pdatea and umh.date<adddate(Pdatez,1) and umh.delete=0 and  left(umd.acc,2)='43'
group by umh.umh
union all
select -sum(rkb.qty) as qty,rkd.rkl as fpjsederhana,rkl.date,sub.name,rkd.rkl,'' as invo,rkd.nofp nofp,rkd.kurs,
sum(ifnull(rkd.dpp*rkd.kurs*-1,0)) as DPP,
rkd.ppn*rkd.kurs*-1 as PPN,sum(rkd.val*rkd.kurs*-1) as val,'',0 as val1,rkb.inv
from rkd left outer join rll on rkd.rkl= rll.rkl and rkd.no=rll.no
inner join rkl on rkd.rkl=rkl.rkl
left outer join sub on sub.sub=rkl.sub
inner join rkb on rll.rka=rkb.rka and rkb.inv=rll.inv
where rkl.date>=Pdatea and rkl.date<adddate(Pdatez,1) and rkl.delete=0 and rkl.period>'1601'
group by rkl.rkl,rkd.inv
union all
select -sum(rkd.qty) as qty,rkd.rkl as fpjsederhana,rkl.date,sub.name,rkd.rkl,'' as invo,rkd.nofp nofp,rkd.kurs,
sum(ifnull(rkd.dpp*rkd.kurs*-1,0)) as DPP,
rkd.ppn*rkd.kurs*-1 as PPN,sum(rkd.val*rkd.kurs*-1) as val,'',0 as val1,(select inv from sjd where sjd.sjh=rkd.rsm limit 1)
from rkd inner join rkl on rkd.rkl=rkl.rkl
left outer join sub on sub.sub=rkl.sub
where rkl.date>=Pdatea and rkl.date<adddate(Pdatez,1) and rkl.delete=0 and rkl.period<='1601'
group by rkl.rkl,rkd.inv
) as temklr,inv where temklr.inv=inv.inv and inv.inv between Pinva and Pinvz ;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_KlrOut2
DROP PROCEDURE IF EXISTS `Sp_KlrOut2`;
DELIMITER //
CREATE PROCEDURE `Sp_KlrOut2`(Pdatea datetime, Pdatez datetime, Psuba char(15), Psubz char(15), Pinva char(15), Pinvz char(15))
BEGIN
select a.sub,sub.name,a.date,a.klr,a.nofp,inv.name,a.kurs,if(a.kurs<>1,a.dpp*a.kurs,'') as `DPP(USD)`, a.dpp*a.kurs as `DPP(Rp)`,if(a.kurs<>1,a.ppn*a.kurs,'') as `PPN(USD)`, a.ppn*a.kurs as `PPN(Rp)`,if(a.kurs<>1,a.val*a.kurs,'') as `Nilai(USD)`, a.val*a.kurs as `Nilai(Rp)`
from inv,sub,
(
select klr.sub,klr.date,kld.klr,kld.nofp,okd.inv,kld.kurs,sjd.qty,okd.price,sjd.qty*okd.price as subtotal,
okd.disc/100*(okd.price*sjd.qty)*kld.kurs as disc,
(okd.val/okd.qty)*sjd.qty as val,
(okd.val/okd.qty)*sjd.qty*if(okl.ppn=true,1.1,1) as DPP,
if(okl.ppn=true,(okd.val/okd.qty)*sjd.qty/10,0) as PPN
from kld,mor,okd,kll,sjd,okl,klr
where kld.okl=mor.mor and mor.okl=okd.okl and kld.klr = kll.klr and kll.sjh=sjd.sjh and okd.okl=okl.okl and kld.klr=klr.klr
union all
select klr.sub,klr.date,kld.klr,kld.nofp,okd.inv,kld.kurs,sjd.qty,okd.price,sjd.qty*okd.price as subtotal,
okd.disc/100*(okd.price*sjd.qty)*kld.kurs as disc,
(okd.val/okd.qty)*sjd.qty*if(okl.ppn=true,1.1,1) as val,
(okd.val/okd.qty)*sjd.qty as DPP,
if(okl.ppn=true,(okd.val/okd.qty)*sjd.qty/10,0) as PPN
from kld,okd,kll,sjd,okl,klr
where kld.okl=okd.okl and kld.klr = kll.klr and kll.sjh=sjd.sjh and okd.okl=okl.okl and kld.klr=klr.klr) as a
where a.inv=inv.inv and a.sub=sub.sub
  and a.sub between Psuba and Psubz
  and a.inv between Pinva and Pinvz
  and a.date>=Pdatea and a.date<adddate(Pdatez,1);
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_KlrOut3
DROP PROCEDURE IF EXISTS `Sp_KlrOut3`;
DELIMITER //
CREATE PROCEDURE `Sp_KlrOut3`(Pdatea datetime, Pdatez datetime, Psuba char(15), Psubz char(15),Pinva char(15),PinvZ char(15),Pklra char(15), Pklrz char(15),Prkla char(15), Prklz char(15),Pjenis char(1))
BEGIN
if(Psuba='') then
  set Psuba='00000000';
end if;
if(Psubz='') then
  set Psubz='99999999';
end if;
if (Pjenis='1') then
select temklr.*,inv.name invname from (
  select sum(kld.qty) qty,klr.klr,klr.date,sub.name,kld.klr kldklr,kld.invo,kld.nofp,kld.kurs,sum(ifnull(kld.dpp*klr.kurs,0)) as DPP,
  if(kld.ppn=0,0,(sum(ifnull(kld.DPP*klr.kurs,0)-ifnull(umk.val*klr.kurs,0))*0.1)) as PPN,
  sum(ifnull(kld.dpp*klr.kurs,0)-ifnull(umk.val*klr.kurs,0))*if(kld.ppn=0,1,1.1) as val,umk.jurnal,ifnull(umk.val*klr.kurs,0) as val1,
  (select sjd.inv from sjd,sjh,kll where sjd.sjh=sjh.sjh and sjh.sjh=kll.sjh and kll.klr=klr.klr limit 1) as inv
  from (select klr,invo,nofp,kurs,sum(dpp) dpp,sum(val) val, sum(ppn) ppn,sum(kld.qty) qty from kld group by kld.klr) kld left outer join klr on kld.klr=klr.klr
  left outer join sub on sub.sub=klr.sub
  left outer join (select klr,jurnal,sum(umk.val) val,umk.kurs from umk group by klr) umk on umk.klr=klr.klr
  where klr.sub between Psuba and Psubz and klr.delete=0
  and klr.date>=Pdatea and klr.date<adddate(Pdatez,1) and klr.klr between Pklra and Pklrz
  group by klr.klr
) as temklr,inv where temklr.inv=inv.inv and inv.inv between Pinva and Pinvz;
end if;
if (Pjenis='2') then
select 0 as qty,convert('' using latin1) as fpjsederhana,umh.date,sub.name,umd.jurnal,'' as invo,'' nofp,umh.kurs,sum(ifnull(umd.val*umh.kurs*-1,0)) as DPP,
0 as PPN,sum(umd.val*umh.kurs*-1) as val,umh.umh,0 as val1,'' as invname
from umd left outer join umh on umd.umh=umh.umh
left outer join sub on sub.sub=umh.sub
where umh.date>=Pdatea and umh.date<adddate(Pdatez,1) and umh.delete=0 and  left(umd.acc,2)='43'
group by umh.umh;
end if;
if (Pjenis='3') then
select temklr.*,inv.name invname from (
select sum(kld.qty) qty,klr.klr,klr.date,sub.name,kld.klr kldklr,kld.invo,kld.nofp,kld.kurs,sum(ifnull(kld.dpp*klr.kurs,0)) as DPP,
if(kld.ppn=0,0,(sum(ifnull(kld.DPP*klr.kurs,0)-ifnull(umk.val*klr.kurs,0))*0.1)) as PPN,
sum(ifnull(kld.dpp*klr.kurs,0)-ifnull(umk.val*klr.kurs,0))*if(kld.ppn=0,1,1.1) as val,umk.jurnal,ifnull(umk.val*klr.kurs,0) as val1,
(select sjd.inv from sjd,sjh,kll where sjd.sjh=sjh.sjh and sjh.sjh=kll.sjh and kll.klr=klr.klr limit 1) as inv
from (select klr,invo,nofp,kurs,sum(dpp) dpp,sum(val) val, sum(ppn) ppn,sum(kld.qty) qty from kld group by kld.klr) kld left outer join klr on kld.klr=klr.klr
left outer join sub on sub.sub=klr.sub
left outer join (select klr,jurnal,sum(umk.val) val,umk.kurs from umk group by klr) umk on umk.klr=klr.klr
where klr.sub between Psuba and Psubz and klr.delete=0
  and klr.date>=Pdatea and klr.date<adddate(Pdatez,1) and klr.klr between Pklra and Pklrz
group by klr.klr
union all
select 0 as qty,convert('' using latin1) as fpjsederhana,umh.date,sub.name,umd.jurnal,'' as invo,'' nofp,umh.kurs,sum(ifnull(umd.val*umh.kurs*-1,0)) as DPP,
0 as PPN,sum(umd.val*umh.kurs*-1) as val,umh.umh,0 as val1,'' as invname
from umd left outer join umh on umd.umh=umh.umh
left outer join sub on sub.sub=umh.sub
where umh.date>=Pdatea and umh.date<adddate(Pdatez,1) and umh.delete=0 and  left(umd.acc,2)='43'
group by umh.umh
) as temklr,inv where temklr.inv=inv.inv and inv.inv between Pinva and Pinvz;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_KlrOutPajak
DROP PROCEDURE IF EXISTS `Sp_KlrOutPajak`;
DELIMITER //
CREATE PROCEDURE `Sp_KlrOutPajak`(Pdatea datetime, Pdatez datetime, Psuba char(15), Psubz char(15),Pinva char(15),PinvZ char(15),Pklra char(15), Pklrz char(15),Prkla char(15), Prklz char(15),Pjenis char(1))
BEGIN
if(Psuba='') then
  set Psuba='00000000';
end if;
if(Psubz='') then
  set Psubz='99999999';
end if;
if (Pjenis='1') then
select temklr.*,inv.unit,inv.name invname from (
  select sum(kld.qty) qty,klr.klr,klr.date,sub.sub,sub.name,kld.klr kldklr,kld.invo,kld.nofp,klr.kurs,sum(ifnull(kld.dpp*klr.kurs,0)) as DPP,
  if(kld.ppn=0 or trim(left(kld.nofp,2))='',0,(sum(ifnull(kld.DPP*klr.kurs,0)-ifnull(umk.val*klr.kurs,0))*0.1)) as PPN,
  sum(ifnull(kld.dpp*klr.kurs,0)-ifnull(umk.val*klr.kurs,0))*if(kld.ppn=0 or trim(left(kld.nofp,2))='',1,1.1) as val,
  umk.jurnal,ifnull(umk.val*klr.kurs,0) as val1,
  (select sjd.inv from sjd,sjh,kll where sjd.sjh=sjh.sjh and sjh.sjh=kll.sjh and kll.klr=klr.klr limit 1) as inv
  from
   (select klr,invo,nofp,kurs,sum(dpp) dpp,sum(val) val, sum(ppn) ppn,sum(kld.qty) qty from kld group by kld.klr) kld left outer join klr on kld.klr=klr.klr
   left outer join sub on sub.sub=klr.sub
   left outer join (select klr,jurnal,sum(umk.val) val,umk.kurs from umk group by klr) umk on umk.klr=klr.klr
   where klr.sub between Psuba and Psubz and klr.delete=0
   and klr.date>=Pdatea and klr.date<adddate(Pdatez,1) and klr.klr between Pklra and Pklrz
   group by klr.klr
union all
   select -jsu.val1,jsu.jsu,jsu.date,sub.sub,sub.name,jsd.jsu,jsu.acclawan,jsu.acclawan1,jsu.kurs,jsd.val*if(jsd.dk='D',-1,1)*jsu.kurs as dpp,
   if((select count(jsu) tot from jsd where jsd.jsu=jsu.jsu and jsd.acc ='21050101') >= 1,jsd.val*if(jsd.dk='D',-1,1)*jsu.kurs*0.1,0) as ppn,
     if((select count(jsu) tot from jsd where jsd.jsu=jsu.jsu and jsd.acc ='21050101') >= 1,jsd.val*if(jsd.dk='D',-1,1)*jsu.kurs*1.1,-jsd.val*jsu.kurs) as val,
     '' umkjurnal, 0 as umkval,
   (select inv from sjd where trim(sjh)=trim(jsu.acclawan) limit 1) inv from jsd left outer join jsu on jsd.jsu=jsu.jsu
   left outer join sub on sub.sub=jsu.sub
    where
    jsu.date >=Pdatea and jsu.date<adddate(Pdatez,1) and jsu.sub between Psuba and Psubz
    and (jsd.acc like '41010%' or jsd.acc like '41020%')
union all
    select 0 as qty,umd.umh as klr,umh.date,sub.sub,sub.name,umd.jurnal,'' as invo,'' nofp,umh.kurs,sum(ifnull(umd.val*umh.kurs*if(DK='D',-1,1),0)) as DPP,
    0 as PPN,sum(umd.val*umh.kurs*if(DK='D',-1,1)) as val,'',0 as val1,(select sjd.inv from sjd where sjd.sjh =umd.okl limit 1) as inv
    from umd left outer join umh on umd.umh=umh.umh
    left outer join sub on sub.sub=umh.sub
    where umh.date>=Pdatea and umh.date<adddate(Pdatez,1) and umh.delete=0 and  (left(umd.acc,2)='42' or left(umd.acc,2)='41')
union all
    select 0 as qty,umd.umh as klr,umh.date,sub.sub,sub.name,umd.jurnal,'' as invo,'' nofp,umh.kurs,sum(ifnull(umd.val*umh.kurs*if(DK='D',-1,1),0)) as DPP,
    0 as PPN,sum(umd.val*umh.kurs*if(DK='D',-1,1)) as val,'',0 as val1,(select sjd.inv from sjd where sjd.sjh in (select kll.sjh from kll where kll.klr=klr.klr) limit 1) as inv
    from umd left outer join umh on umd.umh=umh.umh
    left outer join klr on umd.okl=klr.klr
    left outer join sub on sub.sub=klr.sub
    where umh.date>=Pdatea and umh.date<adddate(Pdatez,1) and umh.delete=0 and  (left(umd.acc,2)='42' or left(umd.acc,2)='41')
union all
    select 0 as qty,kad.kas as klr,kas.date,sub.sub,sub.name,kad.kas,'' as invo,'' nofp,kas.kurs,sum(ifnull(kad.val*kas.kurs*-1,0)) as DPP,
    0 as PPN,sum(kad.val*kas.kurs*-1) as val,'',0 as val1,(select sjd.inv from sjd where sjd.sjh in (select kll.sjh from kll where kll.klr=klr.klr) limit 1) as inv
    from kad left outer join kas on kad.kas=kas.kas
    left outer join klr on kad.okl=klr.klr
    left outer join sub on sub.sub=kas.sub
    where kas.date>=Pdatea and kas.date<adddate(Pdatez,1) and kas.delete=0 and  (left(kad.acc,2)='42' or left(kad.acc,2)='41')
) as temklr,inv where temklr.inv=inv.inv and inv.inv between Pinva and Pinvz;
end if;
if (Pjenis='2') then
select -rkd.qty as qty,rkd.rkl as klr,rkl.date,sub.sub,sub.name,'' as jurnal,'' as invo,rkd.nofp,rkd.kurs,sum(ifnull(rkd.dpp*-1,0)) as DPP,
sum(ifnull(rkd.ppn*-1,0)) as PPN,sum(rkd.val*-1) as val,rkl.rkl,0 as val1,
(select remark from sjd where sjd.sjh=rkd.rsm limit 1) as invname,(select inv from sjd where sjd.sjh=rkd.rsm limit 1)  inv,rkd.unit  as unit
from rkd left outer join rkl on rkd.rkl=rkl.rkl
left outer join sub on sub.sub=rkl.sub
where rkl.date>=Pdatea and rkl.date<adddate(Pdatez,1) and rkl.delete=0 and rkl.rkl between Prkla and Prklz and rkl.period<='1601'
and rkl.sub between Psuba and Psubz
group by rkl.rkl
union all
select -rkd.qty as qty,rkd.rkl as klr,rkl.date,sub.sub,sub.name,'' as jurnal,'' as invo,rkd.nofp,rkd.kurs,sum(ifnull(rkd.dpp*-1,0)) as DPP,
sum(ifnull(rkd.ppn*-1,0)) as PPN,sum(rkd.val*-1) as val,rkl.rkl,0 as val1,
rkd.remark as invname,rkd.inv,rkd.unit  as unit
from rkd left outer join rkl on rkd.rkl=rkl.rkl
left outer join sub on sub.sub=rkl.sub
where rkl.date>=Pdatea and rkl.date<adddate(Pdatez,1) and rkl.delete=0 and rkl.rkl between Prkla and Prklz and rkl.period>'1601'
and rkl.sub between Psuba and Psubz
group by rkl.rkl
union all
select -sum(rkb.qty) as qty,umd.umh as klr,umh.date,sub.sub,sub.name,umd.jurnal,'' as invo,'' nofp,umh.kurs,
sum(ifnull(umd.val*umh.kurs*-1,0)) as DPP,
0 as PPN,sum(umd.val*umh.kurs*-1) as val,umh.umh,0 as val1,rkb.remark as invname,rkb.inv,inv.unit
from umd left outer join umh on umd.umh=umh.umh
left outer join sub on sub.sub=umh.sub
left outer join rkb on umd.okl=rkb.rka
left outer join inv on rkb.inv=inv.inv
where umh.date>=Pdatea and umh.date<adddate(Pdatez,1) and umh.delete=0 and  left(umd.acc,2)='43'
and umh.sub between Psuba and Psubz
group by umh.umh;
end if;
if (Pjenis='3') then
select temklr.*,inv.unit,inv.name invname from (
select sum(kld.qty) qty,klr.klr,klr.date,sub.sub,sub.name,kld.klr kldklr,kld.invo,kld.nofp,klr.kurs,sum(ifnull(kld.dpp*klr.kurs,0)) as DPP,
if(kld.ppn=0 or trim(left(kld.nofp,2))='',0,(sum(ifnull(kld.DPP*klr.kurs,0)-ifnull(umk.val*klr.kurs,0))*0.1)) as PPN,
sum(ifnull(kld.dpp*klr.kurs,0)-ifnull(umk.val*klr.kurs,0))*if(kld.ppn=0 or trim(left(kld.nofp,2))='',1,1.1) as val,umk.jurnal,ifnull(umk.val*klr.kurs,0) as val1,
(select sjd.inv from sjd,sjh,kll where sjd.sjh=sjh.sjh and sjh.sjh=kll.sjh and kll.klr=klr.klr limit 1) as inv
from (select klr,invo,nofp,kurs,sum(dpp) dpp,sum(val) val, sum(ppn) ppn,sum(kld.qty) qty from kld group by kld.klr) kld left outer join klr on kld.klr=klr.klr
left outer join sub on sub.sub=klr.sub
left outer join (select klr,jurnal,sum(umk.val) val,umk.kurs from umk group by klr) umk on umk.klr=klr.klr
where klr.sub between Psuba and Psubz and klr.delete=0
  and klr.date>=Pdatea and klr.date<adddate(Pdatez,1) and klr.klr between Pklra and Pklrz
group by klr.klr
union all
   select -jsu.val1,jsu.jsu,jsu.date,sub.sub,sub.name,jsd.jsu,jsu.acclawan,jsu.acclawan1,jsu.kurs,jsd.val*if(jsd.dk='D',-1,1)*jsu.kurs as dpp,
     if((select count(jsu) tot from jsd where jsd.jsu=jsu.jsu and jsd.acc ='21050101') >= 1,jsd.val*if(jsd.dk='D',-1,1)*jsu.kurs*0.1,0) as ppn,
    if((select count(jsu) tot from jsd where jsd.jsu=jsu.jsu and jsd.acc ='21050101') >=1,jsd.val*if(jsd.dk='D',-1,1)*jsu.kurs*1.1,jsd.val*if(jsd.dk='D',-1,1)*jsu.kurs) as val,
   '' umkjurnal, 0 as umkval,
   (select inv from sjd where trim(sjh)=trim(jsu.acclawan) limit 1) inv from jsd left outer join jsu on jsd.jsu=jsu.jsu
   left outer join sub on sub.sub=jsu.sub
    where
    jsu.date >=Pdatea and jsu.date<adddate(Pdatez,1) and jsu.sub between Psuba and Psubz
    and (jsd.acc like '41010%' or jsd.acc like '41020%')
union all
    select 0 as qty,umd.umh as klr,umh.date,sub.sub,sub.name,umd.jurnal,'' as invo,'' nofp,umh.kurs,sum(ifnull(umd.val*umh.kurs*if(DK='D',-1,1),0)) as DPP,
    0 as PPN,sum(umd.val*umh.kurs*if(DK='D',-1,1)) as val,'',0 as val1,(select sjd.inv from sjd where sjd.sjh =umd.okl limit 1) as inv
    from umd left outer join umh on umd.umh=umh.umh
    left outer join sub on sub.sub=umh.sub
    where umh.date>=Pdatea and umh.date<adddate(Pdatez,1) and umh.delete=0 and  (left(umd.acc,2)='42' or left(umd.acc,2)='41')
    union all
    select 0 as qty,umd.umh as klr,umh.date,sub.sub,sub.name,umd.jurnal,'' as invo,'' nofp,umh.kurs,sum(ifnull(umd.val*umh.kurs*if(DK='D',-1,1),0)) as DPP,
    0 as PPN,sum(umd.val*umh.kurs*-1) as val,'',0 as val1,(select sjd.inv from sjd where sjd.sjh in (select kll.sjh from kll where kll.klr=klr.klr) limit 1) as inv
    from umd left outer join umh on umd.umh=umh.umh
    left outer join klr on umd.okl=klr.klr
    left outer join sub on sub.sub=klr.sub
    where umh.date>=Pdatea and umh.date<adddate(Pdatez,1) and umh.delete=0 and  (left(umd.acc,2)='42' or left(umd.acc,2)='41')
    union all
    select 0 as qty,kad.kas as klr,kas.date,sub.sub,sub.name,kad.kas,'' as invo,'' nofp,kas.kurs,sum(ifnull(kad.val*kas.kurs*if(DK='D',-1,1),0)) as DPP,
    0 as PPN,sum(kad.val*kas.kurs*-1) as val,'',0 as val1,(select sjd.inv from sjd where sjd.sjh in (select kll.sjh from kll where kll.klr=klr.klr) limit 1) as inv
    from kad left outer join kas on kad.kas=kas.kas
    left outer join klr on kad.okl=klr.klr
    left outer join sub on sub.sub=kas.sub
    where kas.date>=Pdatea and kas.date<adddate(Pdatez,1) and kas.delete=0 and  (left(kad.acc,2)='42' or left(kad.acc,2)='41')
) as temklr left outer join inv on temklr.inv=inv.inv where temklr.inv between Pinva and Pinvz
union all
select -rkd.qty as qty,rkd.rkl as klr,rkl.date,sub.sub,sub.name,'' as jurnal,'' as invo,rkd.nofp,rkd.kurs,sum(ifnull(rkd.dpp*-1,0)) as DPP,
sum(ifnull(rkd.ppn*-1,0)) as PPN,sum(rkd.val*-1) as val,rkl.rkl,0 as val1,
(select remark from sjd where sjd.sjh=rkd.rsm limit 1) as invname,(select inv from sjd where sjd.sjh=rkd.rsm limit 1)  inv,rkd.unit  as unit
from rkd left outer join rkl on rkd.rkl=rkl.rkl
left outer join sub on sub.sub=rkl.sub
where rkl.date>=Pdatea and rkl.date<adddate(Pdatez,1) and rkl.delete=0 and rkl.rkl between Prkla and Prklz and rkl.period<='1601'
group by rkl.rkl
union all
select -rkd.qty as qty,rkd.rkl as klr,rkl.date,sub.sub,sub.name,'' as jurnal,'' as invo,rkd.nofp,rkd.kurs,sum(ifnull(rkd.dpp*-1,0)) as DPP,
sum(ifnull(rkd.ppn*-1,0)) as PPN,sum(rkd.val*-1) as val,rkl.rkl,0 as val1,
rkd.remark as invname,rkd.inv,rkd.unit  as unit
from rkd left outer join rkl on rkd.rkl=rkl.rkl
left outer join sub on sub.sub=rkl.sub
where rkl.date>=Pdatea and rkl.date<adddate(Pdatez,1) and rkl.delete=0 and rkl.rkl between Prkla and Prklz and rkl.period>'1601'
and rkl.sub between Psuba and Psubz
group by rkl.rkl
union all
select -sum(ifnull(rkb.qty,0)) as qty,umd.umh as klr,umh.date,sub.sub,sub.name,umd.jurnal,'' as invo,'' nofp,umh.kurs,
sum(ifnull(umd.val*umh.kurs*-1,0)) as DPP,
0 as PPN,sum(umd.val*umh.kurs*-1) as val,'',0 as val1,rkb.inv,'',''
from umd left outer join umh on umd.umh=umh.umh
left outer join sub on sub.sub=umh.sub
left outer join rkb on umd.okl=rkb.rka
where umh.date>=Pdatea and umh.date<adddate(Pdatez,1) and umh.delete=0 and  left(umd.acc,2)='43'
and umh.sub between Psuba and Psubz
group by umh.umh;
end if;
if (Pjenis='5') then
select klr.klr,klr.date,klr.sub,sub.name,sub.country,kld.inv,inv.remark, sum(kld.qty) as kwantitas,kld.price,klr.date
from kld
left outer join klr on kld.klr=klr.klr left outer join sub on klr.sub=sub.sub
left outer join inv on kld.inv=inv.inv
where klr.sub in ('1110001','1110002','1110003','1110004','1110009','1110008') and klr.date>=Pdatea and klr.date<adddate(Pdatez,1)
and klr.sub between Psuba and Psubz
group by klr.sub,klr.klr,kld.inv
order by klr.sub,klr.date,kld.inv;
end if ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_KlrOutPajak1
DROP PROCEDURE IF EXISTS `Sp_KlrOutPajak1`;
DELIMITER //
CREATE PROCEDURE `Sp_KlrOutPajak1`(Pdatea datetime, Pdatez datetime, Psuba char(15), Psubz char(15),Pinva char(15),PinvZ char(15),Pklra char(15), Pklrz char(15),Prkla char(15), Prklz char(15),Pjenis char(1))
BEGIN
if(Psuba='') then
  set Psuba='00000000';
end if;
if(Psubz='') then
  set Psubz='99999999';
end if;
if (Pjenis='1') then
select temklr.*,F_Concateinvklr(klr,5) as unit from (
select sum(kld.qty) qty,klr.klr,klr.date,sub.sub,sub.name,kld.klr kldklr,kld.okl as invo,kld.nofp,klr.kurs,sum(ifnull(kld.dpp*klr.kurs,0)) as DPP,
  if(kld.ppn=0 or trim(left(kld.nofp,2))='',0,(sum(ifnull(kld.DPP*klr.kurs,0)-ifnull(umk.val*klr.kurs,0))*0.1)) as PPN,
  sum(ifnull(kld.dpp*klr.kurs,0)-ifnull(umk.val*klr.kurs,0))*if(kld.ppn=0 or trim(left(kld.nofp,2))='',1,1.1) as val,
  umk.jurnal,ifnull(umk.val*klr.kurs,0) as val1,
  if(trim(kld.inv)='',F_Concateinvklr(klr.klr,0),F_Concateinvklr(klr.klr,1)) as inv,
  if(trim(kld.inv)='',F_Concateinvklr(klr.klr,21),F_Concateinvklr(klr.klr,2)) as invname,
  F_Concateinvklr(klr.klr,3) as PIB,
  F_Concateinvklr(klr.klr,4) as doc_payment ,
  F_getpelunasan(klr.klr,1,pdatea,pdatez)*klr.kurs as payment,
  F_getpelunasan(klr.klr,2,pdatea,pdatez)*klr.kurs as paynextyear,
  F_getpelunasan(klr.klr,3,pdatea,pdatez) as hpp
  from
   (select klr,okl,nofp,kurs,sum(dpp) dpp,sum(val) val, sum(ppn) ppn,sum(kld.qty) qty,ifnull(kld.inv,'') as inv from kld where kld.price>0 group by kld.klr) kld
   left outer join klr on kld.klr=klr.klr
   left outer join sub on sub.sub=klr.sub
   left outer join (select klr,jurnal,sum(umk.val) val,umk.kurs from umk group by klr) umk on umk.klr=klr.klr
 
   where klr.sub between psuba and psubz and klr.delete=0
   and klr.date>=pdatea and klr.date<adddate(pdatez,1) and klr.klr between Pklra and Pklrz and ifnull(dpp,0)>1
   group by klr.klr
union all
   select -jsu.val1,jsu.jsu,jsu.date,sub.sub,sub.name,jsd.jsu,'',jsu.acclawan1,jsu.kurs,jsd.val*if(jsd.dk='D',-1,1)*jsu.kurs as dpp,
   if((select count(jsu) tot from jsd where jsd.jsu=jsu.jsu and jsd.acc ='21050101') >= 1,jsd.val*if(jsd.dk='D',-1,1)*jsu.kurs*0.1,0) as ppn,
     if((select count(jsu) tot from jsd where jsd.jsu=jsu.jsu and jsd.acc ='21050101') >= 1,jsd.val*if(jsd.dk='D',-1,1)*jsu.kurs*1.1,-jsd.val*jsu.kurs) as val,
     '' umkjurnal, 0 as umkval,
   (select inv from sjd where trim(sjh)=trim(jsu.acclawan) limit 1) inv,
   (select remark from sjd where trim(sjh)=trim(jsu.acclawan) limit 1) as invname,
    '' as PIB,F_Concateinvklr(jsu.jsu,4) as doc_payment,F_getpelunasan(jsu.jsu,1,pdatea,pdatez)*jsu.kurs as payment,F_getpelunasan(jsu.jsu,2,pdatea,pdatez)*jsu.kurs as paynextyear,0 as hpp
   from jsd left outer join jsu on jsd.jsu=jsu.jsu
    left outer join sub on sub.sub=jsu.sub
    where
    jsu.date >=Pdatea and jsu.date<adddate(Pdatez,1) and jsu.sub between Psuba and Psubz
    and (jsd.acc like '41010%' or jsd.acc like '41020%') and jsu.`delete`=0
union all
    select 0 as qty,umd.umh as klr,umh.date,sub.sub,sub.name,umd.jurnal,'' as invo,'' nofp,umh.kurs,sum(ifnull(umd.val*umh.kurs*if(DK='D',-1,1),0)) as DPP,
    0 as PPN,sum(umd.val*umh.kurs*if(DK='D',-1,1)) as val,'',0 as val1,(select sjd.inv from sjd where sjd.sjh =umd.okl limit 1) as inv,
    (select sjd.remark from sjd where sjd.sjh =umd.okl limit 1) as invname,
    '' as PIB,'' as docpayment,0 as payment,0 as paynextyear,0 as hpp
    from umd left outer join umh on umd.umh=umh.umh
    left outer join sub on sub.sub=umh.sub
    where umh.date>=Pdatea and umh.date<adddate(Pdatez,1) and umh.delete=0 and  (left(umd.acc,2)='42' or left(umd.acc,2)='41')
union all
    select 0 as qty,umd.umh as klr,umh.date,sub.sub,sub.name,umd.jurnal,'' as invo,'' nofp,umh.kurs,sum(ifnull(umd.val*umh.kurs*if(DK='D',-1,1),0)) as DPP,
    0 as PPN,sum(umd.val*umh.kurs*if(DK='D',-1,1)) as val,'',0 as val1,(select sjd.inv from sjd where sjd.sjh in (select kll.sjh from kll where kll.klr=klr.klr) limit 1) as inv,
    (select sjd.remark from sjd where sjd.sjh in (select kll.sjh from kll where kll.klr=klr.klr) limit 1) as invname,
    '' as PIB,'' as docpayment,0 as payment,0 as paynextyear,0 as hpp
    from umd left outer join umh on umd.umh=umh.umh
    left outer join klr on umd.okl=klr.klr
    left outer join sub on sub.sub=klr.sub
    where umh.date>=Pdatea and umh.date<adddate(Pdatez,1) and umh.delete=0 and  (left(umd.acc,2)='42' or left(umd.acc,2)='41')
union all
    select 0 as qty,kad.kas as klr,kas.date,sub.sub,sub.name,kad.kas,'' as invo,'' nofp,kas.kurs,sum(ifnull(kad.val*kas.kurs*-1,0)) as DPP,
    0 as PPN,sum(kad.val*kas.kurs*-1) as val,'',0 as val1,(select sjd.inv from sjd where sjd.sjh in (select kll.sjh from kll where kll.klr=klr.klr) limit 1) as inv,
    (select sjd.remark from sjd where sjd.sjh in (select kll.sjh from kll where kll.klr=klr.klr) limit 1) as invname,
    '' as PIB,'' as docpayment,0 as payment,0 as paynextyear,0 as hpp
    from kad left outer join kas on kad.kas=kas.kas
    left outer join klr on kad.okl=klr.klr
    left outer join sub on sub.sub=kas.sub
    where kas.date>=Pdatea and kas.date<adddate(Pdatez,1) and kas.delete=0 and  (left(kad.acc,2)='42' or left(kad.acc,2)='41')
) as temklr where dpp is not null and inv<>'';
end if;
if (Pjenis='2') then
select -rkd.qty as qty,rkd.rkl as klr,rkl.date,sub.sub,sub.name,'' as jurnal,'' as invo,rkd.nofp,rkd.kurs,sum(ifnull(rkd.dpp*-1,0)) as DPP,
sum(ifnull(rkd.ppn*-1,0)) as PPN,sum(rkd.val*-1) as val,rkl.rkl,0 as val1,
(select remark from sjd where sjd.sjh=rkd.rsm limit 1) as invname,(select inv from sjd where sjd.sjh=rkd.rsm limit 1)  inv,rkd.unit  as unit,
  '' as PIB,F_Concateinvklr(rkl.rkl,4) as doc_payment,F_getpelunasan(rkl.rkl,1,pdatea,pdatez) as payment,F_getpelunasan(rkl.rkl,2,pdatea,pdatez) as paynextyear,0 as hpp
from rkd left outer join rkl on rkd.rkl=rkl.rkl
left outer join sub on sub.sub=rkl.sub
where rkl.date>=Pdatea and rkl.date<adddate(Pdatez,1) and rkl.delete=0 and rkl.rkl between Prkla and Prklz and rkl.period<='1601'
and rkl.sub between Psuba and Psubz
group by rkl.rkl
union all
select -rkd.qty as qty,rkd.rkl as klr,rkl.date,sub.sub,sub.name,'' as jurnal,'' as invo,rkd.nofp,rkd.kurs,sum(ifnull(rkd.dpp*-1,0)) as DPP,
sum(ifnull(rkd.ppn*-1,0)) as PPN,sum(rkd.val*-1) as val,rkl.rkl,0 as val1,
rkd.remark as invname,rkd.inv,rkd.unit  as unit,
  '' as PIB,F_Concateinvklr(rkl.rkl,4) as doc_payment,F_getpelunasan(rkl.rkl,1,pdatea,pdatez) as payment,F_getpelunasan(rkl.rkl,2,pdatea,pdatez) as paynextyear,F_getpelunasan(rkl.rkl,4,pdatea,pdatez) as hpp
from rkd left outer join rkl on rkd.rkl=rkl.rkl
left outer join sub on sub.sub=rkl.sub
where rkl.date>=Pdatea and rkl.date<adddate(Pdatez,1) and rkl.delete=0 and rkl.rkl between Prkla and Prklz and rkl.period>'1601'
and rkl.sub between Psuba and Psubz
group by rkl.rkl
union all
select -sum(rkb.qty) as qty,umd.umh as klr,umh.date,sub.sub,sub.name,umd.jurnal,'' as invo,'' nofp,umh.kurs,
sum(ifnull(umd.val*umh.kurs*-1,0)) as DPP,
0 as PPN,sum(umd.val*umh.kurs*-1) as val,umh.umh,0 as val1,rkb.remark as invname,rkb.inv,inv.unit,
  '' as PIB,'' as docpayment,0 as payment,0 as paynextyear,F_getpelunasan(umh.umh,5,pdatea,pdatez) as hpp
from umd left outer join umh on umd.umh=umh.umh
left outer join sub on sub.sub=umh.sub
left outer join rkb on umd.okl=rkb.rka
left outer join inv on rkb.inv=inv.inv
where umh.date>=Pdatea and umh.date<adddate(Pdatez,1) and umh.delete=0 and  left(umd.acc,2)='43'
and umh.sub between Psuba and Psubz
group by umh.umh;
end if;
if (Pjenis='3') then
select temklr.*,F_Concateinvklr(klr,5) as unit from (
select sum(kld.qty) qty,klr.klr,klr.date,sub.sub,sub.name,kld.klr kldklr,kld.okl as invo,kld.nofp,klr.kurs,sum(ifnull(kld.dpp*klr.kurs,0)) as DPP,
  if(kld.ppn=0 or trim(left(kld.nofp,2))='',0,(sum(ifnull(kld.DPP*klr.kurs,0)-ifnull(umk.val*klr.kurs,0))*0.1)) as PPN,
  sum(ifnull(kld.dpp*klr.kurs,0)-ifnull(umk.val*klr.kurs,0))*if(kld.ppn=0 or trim(left(kld.nofp,2))='',1,1.1) as val,
  umk.jurnal,ifnull(umk.val*klr.kurs,0) as val1,
  if(trim(kld.inv)='',F_Concateinvklr(klr.klr,0),F_Concateinvklr(klr.klr,1)) as inv,
  if(trim(kld.inv)='',F_Concateinvklr(klr.klr,21),F_Concateinvklr(klr.klr,2)) as invname,
  F_Concateinvklr(klr.klr,3) as PIB,
  F_Concateinvklr(klr.klr,4) as doc_payment ,
  F_getpelunasan(klr.klr,1,pdatea,pdatez)*klr.kurs as payment,
  F_getpelunasan(klr.klr,2,pdatea,pdatez)*klr.kurs as paynextyear,
  F_getpelunasan(klr.klr,3,pdatea,pdatez) as hpp
  from
   (select klr,okl,nofp,kurs,sum(dpp) dpp,sum(val) val, sum(ppn) ppn,sum(kld.qty) qty,ifnull(kld.inv,'') as inv from kld where kld.price>0 group by kld.klr) kld
   left outer join klr on kld.klr=klr.klr
   left outer join sub on sub.sub=klr.sub
   left outer join (select klr,jurnal,sum(umk.val) val,umk.kurs from umk group by klr) umk on umk.klr=klr.klr
 
   where klr.sub between psuba and psubz and klr.delete=0
   and klr.date>=pdatea and klr.date<adddate(pdatez,1) and klr.klr between Pklra and Pklrz and ifnull(dpp,0)>1
   group by klr.klr
union all
   select -jsu.val1,jsu.jsu,jsu.date,sub.sub,sub.name,jsd.jsu,'',jsu.acclawan1,jsu.kurs,jsd.val*if(jsd.dk='D',-1,1)*jsu.kurs as dpp,
   if((select count(jsu) tot from jsd where jsd.jsu=jsu.jsu and jsd.acc ='21050101') >= 1,jsd.val*if(jsd.dk='D',-1,1)*jsu.kurs*0.1,0) as ppn,
     if((select count(jsu) tot from jsd where jsd.jsu=jsu.jsu and jsd.acc ='21050101') >= 1,jsd.val*if(jsd.dk='D',-1,1)*jsu.kurs*1.1,-jsd.val*jsu.kurs) as val,
     '' umkjurnal, 0 as umkval,
   (select inv from sjd where trim(sjh)=trim(jsu.acclawan) limit 1) inv,
   (select remark from sjd where trim(sjh)=trim(jsu.acclawan) limit 1) as invname,
    '' as PIB,F_Concateinvklr(jsu.jsu,4) as doc_payment,F_getpelunasan(jsu.jsu,1,pdatea,pdatez)*jsu.kurs as payment,F_getpelunasan(jsu.jsu,2,pdatea,pdatez)*jsu.kurs as paynextyear,0 as hpp
   from jsd left outer join jsu on jsd.jsu=jsu.jsu
    left outer join sub on sub.sub=jsu.sub
    where
    jsu.date >=Pdatea and jsu.date<adddate(Pdatez,1) and jsu.sub between Psuba and Psubz
    and (jsd.acc like '41010%' or jsd.acc like '41020%') and jsu.`delete`=0
union all
    select 0 as qty,umd.umh as klr,umh.date,sub.sub,sub.name,umd.jurnal,'' as invo,'' nofp,umh.kurs,sum(ifnull(umd.val*umh.kurs*if(DK='D',-1,1),0)) as DPP,
    0 as PPN,sum(umd.val*umh.kurs*if(DK='D',-1,1)) as val,'',0 as val1,(select sjd.inv from sjd where sjd.sjh =umd.okl limit 1) as inv,
    (select sjd.remark from sjd where sjd.sjh =umd.okl limit 1) as invname,
    '' as PIB,'' as docpayment,0 as payment,0 as paynextyear,0 as hpp
    from umd left outer join umh on umd.umh=umh.umh
    left outer join sub on sub.sub=umh.sub
    where umh.date>=Pdatea and umh.date<adddate(Pdatez,1) and umh.delete=0 and  (left(umd.acc,2)='42' or left(umd.acc,2)='41')
union all
    select 0 as qty,umd.umh as klr,umh.date,sub.sub,sub.name,umd.jurnal,'' as invo,'' nofp,umh.kurs,sum(ifnull(umd.val*umh.kurs*if(DK='D',-1,1),0)) as DPP,
    0 as PPN,sum(umd.val*umh.kurs*if(DK='D',-1,1)) as val,'',0 as val1,(select sjd.inv from sjd where sjd.sjh in (select kll.sjh from kll where kll.klr=klr.klr) limit 1) as inv,
    (select sjd.remark from sjd where sjd.sjh in (select kll.sjh from kll where kll.klr=klr.klr) limit 1) as invname,
    '' as PIB,'' as docpayment,0 as payment,0 as paynextyear,0 as hpp
    from umd left outer join umh on umd.umh=umh.umh
    left outer join klr on umd.okl=klr.klr
    left outer join sub on sub.sub=klr.sub
    where umh.date>=Pdatea and umh.date<adddate(Pdatez,1) and umh.delete=0 and  (left(umd.acc,2)='42' or left(umd.acc,2)='41')
union all
    select 0 as qty,kad.kas as klr,kas.date,sub.sub,sub.name,kad.kas,'' as invo,'' nofp,kas.kurs,sum(ifnull(kad.val*kas.kurs*-1,0)) as DPP,
    0 as PPN,sum(kad.val*kas.kurs*-1) as val,'',0 as val1,(select sjd.inv from sjd where sjd.sjh in (select kll.sjh from kll where kll.klr=klr.klr) limit 1) as inv,
    (select sjd.remark from sjd where sjd.sjh in (select kll.sjh from kll where kll.klr=klr.klr) limit 1) as invname,
    '' as PIB,'' as docpayment,0 as payment,0 as paynextyear,0 as hpp
    from kad left outer join kas on kad.kas=kas.kas
    left outer join klr on kad.okl=klr.klr
    left outer join sub on sub.sub=kas.sub
    where kas.date>=Pdatea and kas.date<adddate(Pdatez,1) and kas.delete=0 and  (left(kad.acc,2)='42' or left(kad.acc,2)='41')
) as temklr where dpp is not null and inv<>''
union all
select -rkd.qty as qty,rkd.rkl as klr,rkl.date,sub.sub,sub.name,'' as jurnal,'' as invo,rkd.nofp,rkd.kurs,sum(ifnull(rkd.dpp*-1,0)) as DPP,
sum(ifnull(rkd.ppn*-1,0)) as PPN,sum(rkd.val*-1) as val,rkl.rkl,0 as val1,
(select remark from sjd where sjd.sjh=rkd.rsm limit 1) as invname,(select inv from sjd where sjd.sjh=rkd.rsm limit 1)  inv,
  '' as PIB,F_Concateinvklr(rkl.rkl,4) as doc_payment,F_getpelunasan(rkl.rkl,1,pdatea,pdatez) as payment,F_getpelunasan(rkl.rkl,2,pdatea,pdatez) as paynextyear,0 as hpp,rkd.unit  as unit
from rkd left outer join rkl on rkd.rkl=rkl.rkl
left outer join sub on sub.sub=rkl.sub
where rkl.date>=Pdatea and rkl.date<adddate(Pdatez,1) and rkl.delete=0 and rkl.rkl between Prkla and Prklz and rkl.period<='1601'
and rkl.sub between Psuba and Psubz
group by rkl.rkl
union all
select -rkd.qty as qty,rkd.rkl as klr,rkl.date,sub.sub,sub.name,'' as jurnal,'' as invo,rkd.nofp,rkd.kurs,sum(ifnull(rkd.dpp*-1,0)) as DPP,
sum(ifnull(rkd.ppn*-1,0)) as PPN,sum(rkd.val*-1) as val,rkl.rkl,0 as val1,
rkd.remark as invname,rkd.inv,
  '' as PIB,F_Concateinvklr(rkl.rkl,4) as doc_payment,F_getpelunasan(rkl.rkl,1,pdatea,pdatez) as payment,F_getpelunasan(rkl.rkl,2,pdatea,pdatez) as paynextyear,F_getpelunasan(rkl.rkl,4,pdatea,pdatez) as hpp,rkd.unit  as unit
from rkd left outer join rkl on rkd.rkl=rkl.rkl
left outer join sub on sub.sub=rkl.sub
where rkl.date>=Pdatea and rkl.date<adddate(Pdatez,1) and rkl.delete=0 and rkl.rkl between Prkla and Prklz and rkl.period>'1601'
and rkl.sub between Psuba and Psubz
group by rkl.rkl
union all
select -sum(rkb.qty) as qty,umd.umh as klr,umh.date,sub.sub,sub.name,umd.jurnal,'' as invo,'' nofp,umh.kurs,
sum(ifnull(umd.val*umh.kurs*-1,0)) as DPP,
0 as PPN,sum(umd.val*umh.kurs*-1) as val,'',0 as val1,rkb.inv,rkb.remark as invname,
  '' as PIB,'' as docpayment,0 as payment,0 as paynextyear,F_getpelunasan(umh.umh,5,pdatea,pdatez) as hpp,inv.unit
from umd left outer join umh on umd.umh=umh.umh
left outer join sub on sub.sub=umh.sub
left outer join rkb on umd.okl=rkb.rka
left outer join inv on rkb.inv=inv.inv
where umh.date>=Pdatea and umh.date<adddate(Pdatez,1) and umh.delete=0 and  left(umd.acc,2)='43'
and umh.sub between Psuba and Psubz
group by umh.umh;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_KlrOutPajakexport
DROP PROCEDURE IF EXISTS `Sp_KlrOutPajakexport`;
DELIMITER //
CREATE PROCEDURE `Sp_KlrOutPajakexport`(Pdatea datetime, Pdatez datetime, Psuba char(15), Psubz char(15),Pinva char(15),PinvZ char(15),Pklra char(15), Pklrz char(15),Prkla char(15), Prklz char(15),Pjenis char(1))
BEGIN
if(Psuba='') then
  set Psuba='00000000';
end if;
if(Psubz='') then
  set Psubz='99999999';
end if;
if (Pjenis='1') then
select temklr.*,F_Concateinvklr(klr,5) as unit from (
select sum(kld.qty) qty,klr.klr,klr.date,sub.sub,sub.name,kld.klr kldklr,kld.okl as invo,kld.nofp,klr.kurs,sum(ifnull(kld.dpp,0)) as DPP,
  if(kld.ppn=0 or trim(left(kld.nofp,2))='',0,(sum(ifnull(kld.DPP,0)-ifnull(umk.val,0))*0.1)) as PPN,
  sum(ifnull(kld.dpp,0)-ifnull(umk.val,0))*if(kld.ppn=0 or trim(left(kld.nofp,2))='',1,1.1) as val,
  umk.jurnal,ifnull(umk.val,0) as val1,
  if(trim(kld.inv)='',F_Concateinvklr(klr.klr,0),F_Concateinvklr(klr.klr,1)) as inv,
  if(trim(kld.inv)='',F_Concateinvklr(klr.klr,21),F_Concateinvklr(klr.klr,2)) as invname,
  F_Concateinvklr(klr.klr,3) as PIB,
  F_Concateinvklr(klr.klr,4) as doc_payment ,
  F_getpelunasan(klr.klr,1,pdatea,pdatez) as payment,
  F_getpelunasan(klr.klr,2,pdatea,pdatez) as paynextyear,
  F_getpelunasan(klr.klr,3,pdatea,pdatez) as hpp
  from
   (select klr,okl,nofp,kurs,sum(dpp) dpp,sum(val) val, sum(ppn) ppn,sum(kld.qty) qty,ifnull(kld.inv,'') as inv from kld where kld.price>0 group by kld.klr) kld
   left outer join klr on kld.klr=klr.klr
   left outer join sub on sub.sub=klr.sub
   left outer join (select klr,jurnal,sum(umk.val) val,umk.kurs from umk group by klr) umk on umk.klr=klr.klr
 
   where klr.sub between psuba and psubz and klr.delete=0
   and klr.date>=pdatea and klr.date<adddate(pdatez,1) and klr.klr between Pklra and Pklrz and ifnull(dpp,0)>1
   group by klr.klr
union all
   select -jsu.val1,jsu.jsu,jsu.date,sub.sub,sub.name,jsd.jsu,'',jsu.acclawan1,jsu.kurs,jsd.val*if(jsd.dk='D',-1,1) as dpp,
   if((select count(jsu) tot from jsd where jsd.jsu=jsu.jsu and jsd.acc ='21050101') >= 1,jsd.val*if(jsd.dk='D',-1,1)*0.1,0) as ppn,
     if((select count(jsu) tot from jsd where jsd.jsu=jsu.jsu and jsd.acc ='21050101') >= 1,jsd.val*if(jsd.dk='D',-1,1)*1.1,-jsd.val) as val,
     '' umkjurnal, 0 as umkval,
   (select inv from sjd where trim(sjh)=trim(jsu.acclawan) limit 1) inv,
   (select remark from sjd where trim(sjh)=trim(jsu.acclawan) limit 1) as invname,
    '' as PIB,F_Concateinvklr(jsu.jsu,4) as doc_payment,F_getpelunasan(jsu.jsu,1,pdatea,pdatez) as payment,F_getpelunasan(jsu.jsu,2,pdatea,pdatez) as paynextyear,0 as hpp
   from jsd left outer join jsu on jsd.jsu=jsu.jsu
    left outer join sub on sub.sub=jsu.sub
    where
    jsu.date >=Pdatea and jsu.date<adddate(Pdatez,1) and jsu.sub between Psuba and Psubz
    and (jsd.acc like '41010%' or jsd.acc like '41020%') and jsu.`delete`=0
union all
    select 0 as qty,umd.umh as klr,umh.date,sub.sub,sub.name,umd.jurnal,'' as invo,'' nofp,umh.kurs,sum(ifnull(umd.val*if(DK='D',-1,1),0)) as DPP,
    0 as PPN,sum(umd.val*if(DK='D',-1,1)) as val,'',0 as val1,(select sjd.inv from sjd where sjd.sjh =umd.okl limit 1) as inv,
    (select sjd.remark from sjd where sjd.sjh =umd.okl limit 1) as invname,
    '' as PIB,'' as docpayment,0 as payment,0 as paynextyear,0 as hpp
    from umd left outer join umh on umd.umh=umh.umh
    left outer join sub on sub.sub=umh.sub
    where umh.date>=Pdatea and umh.date<adddate(Pdatez,1) and umh.delete=0 and  (left(umd.acc,2)='42' or left(umd.acc,2)='41')
union all
    select 0 as qty,umd.umh as klr,umh.date,sub.sub,sub.name,umd.jurnal,'' as invo,'' nofp,umh.kurs,sum(ifnull(umd.val*if(DK='D',-1,1),0)) as DPP,
    0 as PPN,sum(umd.val*if(DK='D',-1,1)) as val,'',0 as val1,(select sjd.inv from sjd where sjd.sjh in (select kll.sjh from kll where kll.klr=klr.klr) limit 1) as inv,
    (select sjd.remark from sjd where sjd.sjh in (select kll.sjh from kll where kll.klr=klr.klr) limit 1) as invname,
    '' as PIB,'' as docpayment,0 as payment,0 as paynextyear,0 as hpp
    from umd left outer join umh on umd.umh=umh.umh
    left outer join klr on umd.okl=klr.klr
    left outer join sub on sub.sub=klr.sub
    where umh.date>=Pdatea and umh.date<adddate(Pdatez,1) and umh.delete=0 and  (left(umd.acc,2)='42' or left(umd.acc,2)='41')
union all
    select 0 as qty,kad.kas as klr,kas.date,sub.sub,sub.name,kad.kas,'' as invo,'' nofp,kas.kurs,sum(ifnull(kad.val*-1,0)) as DPP,
    0 as PPN,sum(kad.val*-1) as val,'',0 as val1,(select sjd.inv from sjd where sjd.sjh in (select kll.sjh from kll where kll.klr=klr.klr) limit 1) as inv,
    (select sjd.remark from sjd where sjd.sjh in (select kll.sjh from kll where kll.klr=klr.klr) limit 1) as invname,
    '' as PIB,'' as docpayment,0 as payment,0 as paynextyear,0 as hpp
    from kad left outer join kas on kad.kas=kas.kas
    left outer join klr on kad.okl=klr.klr
    left outer join sub on sub.sub=kas.sub
    where kas.date>=Pdatea and kas.date<adddate(Pdatez,1) and kas.delete=0 and  (left(kad.acc,2)='42' or left(kad.acc,2)='41')
) as temklr where dpp is not null and inv<>'';
end if;
if (Pjenis='2') then
select -rkd.qty as qty,rkd.rkl as klr,rkl.date,sub.sub,sub.name,'' as jurnal,'' as invo,rkd.nofp,rkd.kurs,sum(ifnull(rkd.dpp*-1,0)) as DPP,
sum(ifnull(rkd.ppn*-1,0)) as PPN,sum(rkd.val*-1) as val,rkl.rkl,0 as val1,
(select remark from sjd where sjd.sjh=rkd.rsm limit 1) as invname,(select inv from sjd where sjd.sjh=rkd.rsm limit 1)  inv,
  '' as PIB,F_Concateinvklr(rkl.rkl,4) as doc_payment,F_getpelunasan(rkl.rkl,1,pdatea,pdatez) as payment,F_getpelunasan(rkl.rkl,2,pdatea,pdatez) as paynextyear,F_getdatepelunasan(rkl.rkl) as tglpelunasan ,rkd.unit  as unit
from rkd left outer join rkl on rkd.rkl=rkl.rkl
left outer join sub on sub.sub=rkl.sub
where rkl.date>=Pdatea and rkl.date<adddate(Pdatez,1) and rkl.delete=0 and rkl.rkl between Prkla and Prklz and rkl.period<='1601'
and rkl.sub between Psuba and Psubz
group by rkl.rkl
union all
select -rkd.qty as qty,rkd.rkl as klr,rkl.date,sub.sub,sub.name,'' as jurnal,'' as invo,rkd.nofp,rkd.kurs,sum(ifnull(rkd.dpp*-1,0)) as DPP,
sum(ifnull(rkd.ppn*-1,0)) as PPN,sum(rkd.val*-1) as val,rkl.rkl,0 as val1,
rkd.remark as invname,rkd.inv,
  '' as PIB,F_Concateinvklr(rkl.rkl,4) as doc_payment,F_getpelunasan(rkl.rkl,1,pdatea,pdatez) as payment,F_getpelunasan(rkl.rkl,2,pdatea,pdatez) as paynextyear,F_getdatepelunasan(rkl.rkl) as tglpelunasan ,rkd.unit  as unit
from rkd left outer join rkl on rkd.rkl=rkl.rkl
left outer join sub on sub.sub=rkl.sub
where rkl.date>=Pdatea and rkl.date<adddate(Pdatez,1) and rkl.delete=0 and rkl.rkl between Prkla and Prklz and rkl.period>'1601'
and rkl.sub between Psuba and Psubz
group by rkl.rkl
union all
select -sum(rkb.qty) as qty,umd.umh as klr,umh.date,sub.sub,sub.name,umd.jurnal,'' as invo,'' nofp,umh.kurs,
sum(ifnull(umd.val*-1,0)) as DPP,
0 as PPN,sum(umd.val*-1) as val,'',0 as val1,rkb.inv,rkb.remark as invname,
  '' as PIB,'' as docpayment,0 as payment,0 as paynextyear,F_getdatepelunasan(umh.umh) as tglpelunasan,inv.unit
from umd left outer join umh on umd.umh=umh.umh
left outer join sub on sub.sub=umh.sub
left outer join rkb on umd.okl=rkb.rka
left outer join inv on rkb.inv=inv.inv
where umh.date>=Pdatea and umh.date<adddate(Pdatez,1) and umh.delete=0 and  left(umd.acc,2)='43'
and umh.sub between Psuba and Psubz
group by umh.umh order by sub;
end if;
if (Pjenis='3') then
select temklr.*,F_Concateinvklr(klr,5) as unit from (
select sum(kld.qty) qty,klr.klr,klr.date,sub.sub,sub.name,kld.klr kldklr,kld.okl as invo,kld.nofp,klr.kurs,sum(ifnull(kld.dpp,0)) as DPP,
  if(kld.ppn=0 or trim(left(kld.nofp,2))='',0,(sum(ifnull(kld.DPP,0)-ifnull(umk.val,0))*0.1)) as PPN,
  sum(ifnull(kld.dpp,0)-ifnull(umk.val,0))*if(kld.ppn=0 or trim(left(kld.nofp,2))='',1,1.1) as val,
  umk.jurnal,ifnull(umk.val,0) as val1,
  if(trim(kld.inv)='',F_Concateinvklr(klr.klr,0),F_Concateinvklr(klr.klr,1)) as inv,
  if(trim(kld.inv)='',F_Concateinvklr(klr.klr,21),F_Concateinvklr(klr.klr,2)) as invname,
  F_Concateinvklr(klr.klr,3) as PIB,
  F_Concateinvklr(klr.klr,4) as doc_payment ,
  F_getpelunasan(klr.klr,1,pdatea,pdatez) as payment,
  F_getpelunasan(klr.klr,2,pdatea,pdatez) as paynextyear,
  F_getdatepelunasan(klr.klr) as tglPelunasan
  from
   (select klr,okl,nofp,kurs,sum(dpp) dpp,sum(val) val, sum(ppn) ppn,sum(kld.qty) qty,ifnull(kld.inv,'') as inv from kld where kld.price>0 group by kld.klr) kld
   left outer join klr on kld.klr=klr.klr
   left outer join sub on sub.sub=klr.sub
   left outer join (select klr,jurnal,sum(umk.val) val,umk.kurs from umk group by klr) umk on umk.klr=klr.klr
 
   where klr.sub between psuba and psubz and klr.delete=0
   and klr.date>=pdatea and klr.date<adddate(pdatez,1) and klr.klr between Pklra and Pklrz and ifnull(dpp,0)>1
   group by klr.klr
union all
   select -jsu.val1,jsu.jsu,jsu.date,sub.sub,sub.name,jsd.jsu,'',jsu.acclawan1,jsu.kurs,jsd.val*if(jsd.dk='D',-1,1) as dpp,
   if((select count(jsu) tot from jsd where jsd.jsu=jsu.jsu and jsd.acc ='21050101') >= 1,jsd.val*if(jsd.dk='D',-1,1)*0.1,0) as ppn,
     if((select count(jsu) tot from jsd where jsd.jsu=jsu.jsu and jsd.acc ='21050101') >= 1,jsd.val*if(jsd.dk='D',-1,1)*1.1,-jsd.val) as val,
     '' umkjurnal, 0 as umkval,
   (select inv from sjd where trim(sjh)=trim(jsu.acclawan) limit 1) inv,
   (select remark from sjd where trim(sjh)=trim(jsu.acclawan) limit 1) as invname,
    '' as PIB,F_Concateinvklr(jsu.jsu,4) as doc_payment,F_getpelunasan(jsu.jsu,1,pdatea,pdatez) as payment,F_getpelunasan(jsu.jsu,2,pdatea,pdatez) as paynextyear,F_getdatepelunasan(jsu.jsu) as tglpelunasan
   from jsd left outer join jsu on jsd.jsu=jsu.jsu
    left outer join sub on sub.sub=jsu.sub
    where
    jsu.date >=Pdatea and jsu.date<adddate(Pdatez,1) and jsu.sub between Psuba and Psubz
    and (jsd.acc like '41010%' or jsd.acc like '41020%') and jsu.`delete`=0
union all
    select 0 as qty,umd.umh as klr,umh.date,sub.sub,sub.name,umd.jurnal,'' as invo,'' nofp,umh.kurs,sum(ifnull(umd.val*if(DK='D',-1,1),0)) as DPP,
    0 as PPN,sum(umd.val*if(DK='D',-1,1)) as val,'',0 as val1,(select sjd.inv from sjd where sjd.sjh =umd.okl limit 1) as inv,
    (select sjd.remark from sjd where sjd.sjh =umd.okl limit 1) as invname,
    '' as PIB,'' as docpayment,0 as payment,0 as paynextyear,F_getdatepelunasan(umd.umh) as tglpelunasan
    from umd left outer join umh on umd.umh=umh.umh
    left outer join sub on sub.sub=umh.sub
    where umh.date>=Pdatea and umh.date<adddate(Pdatez,1) and umh.delete=0 and  (left(umd.acc,2)='42' or left(umd.acc,2)='41')
union all
    select 0 as qty,umd.umh as klr,umh.date,sub.sub,sub.name,umd.jurnal,'' as invo,'' nofp,umh.kurs,sum(ifnull(umd.val*if(DK='D',-1,1),0)) as DPP,
    0 as PPN,sum(umd.val*if(DK='D',-1,1)) as val,'',0 as val1,(select sjd.inv from sjd where sjd.sjh in (select kll.sjh from kll where kll.klr=klr.klr) limit 1) as inv,
    (select sjd.remark from sjd where sjd.sjh in (select kll.sjh from kll where kll.klr=klr.klr) limit 1) as invname,
    '' as PIB,'' as docpayment,0 as payment,0 as paynextyear,F_getdatepelunasan(umd.umh) as tglpelunasan
    from umd left outer join umh on umd.umh=umh.umh
    left outer join klr on umd.okl=klr.klr
    left outer join sub on sub.sub=klr.sub
    where umh.date>=Pdatea and umh.date<adddate(Pdatez,1) and umh.delete=0 and  (left(umd.acc,2)='42' or left(umd.acc,2)='41')
union all
    select 0 as qty,kad.kas as klr,kas.date,sub.sub,sub.name,kad.kas,'' as invo,'' nofp,kas.kurs,sum(ifnull(kad.val*-1,0)) as DPP,
    0 as PPN,sum(kad.val*-1) as val,'',0 as val1,(select sjd.inv from sjd where sjd.sjh in (select kll.sjh from kll where kll.klr=klr.klr) limit 1) as inv,
    (select sjd.remark from sjd where sjd.sjh in (select kll.sjh from kll where kll.klr=klr.klr) limit 1) as invname,
    '' as PIB,'' as docpayment,0 as payment,0 as paynextyear,F_getdatepelunasan(kas.kas) as tglpelunasan
    from kad left outer join kas on kad.kas=kas.kas
    left outer join klr on kad.okl=klr.klr
    left outer join sub on sub.sub=kas.sub
    where kas.date>=Pdatea and kas.date<adddate(Pdatez,1) and kas.delete=0 and  (left(kad.acc,2)='42' or left(kad.acc,2)='41')
) as temklr where dpp is not null and inv<>'' order by sub;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_Kwt_outstanding
DROP PROCEDURE IF EXISTS `Sp_Kwt_outstanding`;
DELIMITER //
CREATE PROCEDURE `Sp_Kwt_outstanding`(Ptgla datetime,Ptglz datetime,Psuba varchar(15),Psubz varchar(15),Pstatus integer)
BEGIN
set Ptgla=20150101;
if pstatus=1 then
  select * from (
  select kwt.sub,sub.name,kwd.kwt,kwt.date,kwd.jurnal,kwd.valdpp*klr.kurs valdpp,kwd.valppn*klr.kurs valppn,kwd.valsubtotal*klr.kurs valsubtotal,kas.kas pelunasan,klr.kurs,
  (select sjd.remark from kll left outer join sjd on kll.sjh=sjd.sjh where kll.klr=kwd.jurnal limit 1 ) barang,
  (select sjd.okl from kll left outer join sjd on kll.sjh=sjd.sjh where kll.klr=kwd.jurnal limit 1 ) okl, klr.duedate
  from kwd  inner join kwt on kwd.kwt=kwt.kwt
  left outer join klr on kwd.jurnal=klr.klr
  left outer join kad on kwd.jurnal=kad.jurnal
  left outer join kas on kad.kas=kas.kas left outer join sub on kwt.sub=sub.sub
  where kwt.sub between Psuba and Psubz and kwt.date>=Ptgla and kwt.date < adddate(ptglz,1)
  ) as xtmp where pelunasan is null
  and left (jurnal,3)<>'SOL'
 union all
 select * from (
  select klr.sub,sub.name,kad.kas,klr.date,klr.klr,kld.dpp-ifnull(umk.val,0),0,kld.dpp-ifnull(umk.val,0) as val,kad.kas as pelunasan,kld.kurs,
  (select sjd.remark from kll left outer join sjd on kll.sjh=sjd.sjh where kll.klr=klr.klr limit 1 ) barang,
  kld.okl,klr.duedate from kld inner join klr on kld.klr=klr.klr left outer join
  (select kas.date,kad.kas,kad.jurnal from kad,kas where kas.kas=kad.kas and kas.date>Ptgla and kas.date<adddate(Ptglz,1)) kad on kad.jurnal=klr.klr
  left outer join sub on klr.sub=sub.sub
  left outer join (select umk.klr,sum(umk.val) val from umk group by umk.klr) umk on umk.klr=klr.klr
  where klr.sub between Psuba and Psubz  and
  kld.ppn=0 and klr.date>=Ptgla and klr.date<adddate(Ptglz,1) and round((kld.dpp-ifnull(umk.val,0)),2)>0
  and klr.klr not in (select jurnal from umd,umh where umd.umh=umh.umh and umh.sub between psuba and psubz and umd.jurnal<>'')
 ) as xtmp1 where pelunasan is null;
end if;
if pstatus=2 then
  select * from (
 select kwt.sub,sub.name,kwd.kwt,kwt.date,kwd.jurnal,kwd.valdpp*klr.kurs valdpp,kwd.valppn*klr.kurs valppn,kwd.valsubtotal*klr.kurs valsubtotal,kas.kas pelunasan,klr.kurs,
 (select sjd.remark from kll left outer join sjd on kll.sjh=sjd.sjh where kll.klr=kwd.jurnal limit 1 ) barang,
  (select sjd.okl from kll left outer join sjd on kll.sjh=sjd.sjh where kll.klr=kwd.jurnal limit 1 ) okl, klr.duedate
  from kwd  inner join kwt on kwd.kwt=kwt.kwt
  left outer join klr on kwd.jurnal=klr.klr
  left outer join kad on kwd.jurnal=kad.jurnal
  left outer join kas on kad.kas=kas.kas left outer join sub on kwt.sub=sub.sub
  where kwt.sub between Psuba and Psubz and kwt.date>=Ptgla and kwt.date < adddate(ptglz,1)
  ) as xtmp where pelunasan is not null
  and left (jurnal,3)<>'SOL'
union all
 select * from (
  select klr.sub,sub.name,kad.kas,klr.date,klr.klr,kld.dpp-ifnull(umk.val,0),0,kld.dpp-ifnull(umk.val,0) as val,kad.kas as pelunasan,kld.kurs,
  (select sjd.remark from kll left outer join sjd on kll.sjh=sjd.sjh where kll.klr=klr.klr limit 1 ) barang,
  kld.okl,klr.duedate from kld inner join klr on kld.klr=klr.klr left outer join
  (select kas.date,kad.kas,kad.jurnal from kad,kas where kas.kas=kad.kas and kas.date>Ptgla and kas.date<adddate(Ptglz,1)) kad on kad.jurnal=klr.klr
  left outer join sub on klr.sub=sub.sub
  left outer join (select umk.klr,sum(umk.val) val from umk group by umk.klr) umk on umk.klr=klr.klr
  where klr.sub between Psuba and Psubz  and
  kld.ppn=0 and klr.date>=Ptgla and klr.date<adddate(Ptglz,1) and round((kld.dpp-ifnull(umk.val,0)),2)>0
 ) as xtmp1 where pelunasan is not null;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LACCPerCCT
DROP PROCEDURE IF EXISTS `SP_LACCPerCCT`;
DELIMITER //
CREATE PROCEDURE `SP_LACCPerCCT`(Pdatea datetime,Pdatez datetime,Pacca varchar(15),Paccz varchar(15),Pccta varchar(15),Pcctz varchar(15))
BEGIN
select acc.name, acd.acc,cct.name as cctname,acd.cct,acd.date as date, acd.jurnal as jurnal, acd.rem as rem,
      if (acd.dk='D' , acd.val , 0) as debet,
      if (acd.dk='K' , acd.val , 0) as kredit,
      acd.dk as dk
      from acd
      left outer join acc on acd.acc=acc.acc
      left outer join cct on acd.cct=cct.cct
      where if (Pacca<>'' and Paccz<>'', acd.acc between Pacca and Paccz, 1) and if (Pccta<>'' and Pcctz<>'', acd.cct between Pccta and Pcctz, acd.cct<>'')
      and acd.date>=Pdatea and acd.date<adddate(Pdatez,1) and acc.detil=1
order by 2,3,8,4;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LapBBK
DROP PROCEDURE IF EXISTS `Sp_LapBBK`;
DELIMITER //
CREATE PROCEDURE `Sp_LapBBK`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `psuba` varchar(15),
	IN `psubz` varchar(15),
	IN `pbbka` varchar(15),
	IN `pbbkz` varchar(15)
)
BEGIN
select kas.kas,
		 if(kad.`no`=1,kas.kas,'') as `BKK No`,
		 if(kad.`no`=1,cast(DATE_FORMAT(kas.date,'%d/%m/%Y') as char),'') as `BKK Date`,
		 if(kad.`no`=1,kas.sub,'') as `Kode Supplier`,
 		 if(kad.`no`=1,sub.name,'') as `Nama Supplier`,
		 if(kad.`no`=1,ifnull(kas.val,0)+ifnull(kag.val,0),0) as `Nilai BKK`,
 		 concat(kad.jurnal,' - ',kad.invoice) as `Invoice No`,
 		 ifnull(cast(DATE_FORMAT(rhp.date,'%d/%m/%Y') as char),'') as `Invoice Date`,
 		 if(kad.`no`=1,kag.nobg,'') as `No Giro`,if(kad.`no`=1,cast(DATE_FORMAT(kag.duedate,'%d/%m/%Y') as char),'') as `Jatuh Tempo Giro`
  from kas 
  		 left outer join kag on kas.kas=kag.kas 
		 left outer join kad on kas.kas=kad.kas
 		 left outer join sub on kas.sub=sub.sub 
		 left outer join rhp on kad.jurnal=rhp.jurnal and kad.acc=rhp.acc and kad.invoice=rhp.invoice
 where kas.date > pdatea and 
 		 kas.date < adddate(Pdatez,1) and 
		 kas.sub between psuba and psubz and 
		 kas.kas between pbbka and pbbkz and 
		 kas.`delete`=0 and 
		 kas.group_=1 and left(kas.kas,3) = 'BBK' 
order by kas.date,kas.kas;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LapBBM
DROP PROCEDURE IF EXISTS `Sp_LapBBM`;
DELIMITER //
CREATE PROCEDURE `Sp_LapBBM`(
	IN `Pdatea` DATETIME,
	IN `Pdatez` DATETIME,
	IN `psuba` VARCHAR(50),
	IN `psubz` VARCHAR(50),
	IN `pbbka` VARCHAR(50),
	IN `pbbkz` VARCHAR(50)
)
BEGIN
select kas.kas,if(kad.`no`=1,kas.kas,'') as `BKK No`,if(kad.`no`=1,cast(DATE_FORMAT(kas.date,'%d/%m/%Y') as char),'') as `BKK Date`,if(kad.`no`=1,kas.sub,'') as `Kode Supplier`,
 if(kad.`no`=1,sub.name,'') as `Nama Supplier`,if(kad.`no`=1,ifnull(kas.val,0)+ifnull(kag.val,0),0) as `Nilai BKK`,
 concat(kad.jurnal,' - ',kad.invoice) as `Invoice No`,
 ifnull(cast(DATE_FORMAT(rhp.date,'%d/%m/%Y') as char),'') as `Invoice Date`,
 if(kad.`no`=1,kag.nobg,'') as `No Giro`,if(kad.`no`=1,cast(DATE_FORMAT(kag.duedate,'%d/%m/%Y') as char),'') as `Jatuh Tempo Giro`
 from kas left outer join kag on kas.kas=kag.kas left outer join kad on kas.kas=kad.kas
 left outer join sub on kas.sub=sub.sub left outer join rhp on kad.jurnal=rhp.jurnal and kad.acc=rhp.acc and kad.invoice=rhp.invoice
 where kas.date > pdatea and kas.date < adddate(Pdatez,1)
and kas.sub between psuba and psubz and kas.kas between pbbka and pbbkz and kas.`delete`=0
 and kas.group_=2 and left(kas.kas,3) = 'BBM' order by kas.date,kas.kas;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LapBKK
DROP PROCEDURE IF EXISTS `Sp_LapBKK`;
DELIMITER //
CREATE PROCEDURE `Sp_LapBKK`(
	IN `Pdatea` DATETIME,
	IN `Pdatez` DATETIME,
	IN `psuba` VARCHAR(50),
	IN `psubz` VARCHAR(50),
	IN `pbbka` VARCHAR(50),
	IN `pbbkz` VARCHAR(50)
)
BEGIN
select kas.kas,if(kad.`no`=1,kas.kas,'') as `BKK No`,if(kad.`no`=1,cast(DATE_FORMAT(kas.date,'%d/%m/%Y') as char),'') as `BKK Date`,if(kad.`no`=1,kas.sub,'') as `Kode Supplier`,
 if(kad.`no`=1,sub.name,'') as `Nama Supplier`,if(kad.`no`=1,ifnull(kas.val,0)+ifnull(kag.val,0),0) as `Nilai BKK`,
 concat(kad.jurnal,' - ',kad.invoice) as `Invoice No`,
 ifnull(cast(DATE_FORMAT(rhp.date,'%d/%m/%Y') as char),'') as `Invoice Date`,
 if(kad.`no`=1,kag.nobg,'') as `No Giro`,if(kad.`no`=1,cast(DATE_FORMAT(kag.duedate,'%d/%m/%Y') as char),'') as `Jatuh Tempo Giro`
 from kas left outer join kag on kas.kas=kag.kas left outer join kad on kas.kas=kad.kas
 left outer join sub on kas.sub=sub.sub left outer join rhp on kad.jurnal=rhp.jurnal and kad.acc=rhp.acc and kad.invoice=rhp.invoice
 where kas.date > pdatea and kas.date < adddate(Pdatez,1)
and kas.sub between psuba and psubz and kas.kas between pbbka and pbbkz and kas.`delete`=0
 and kas.group_=3 and left(kas.kas,3) = 'BKK' order by kas.date,kas.kas;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LapBKM
DROP PROCEDURE IF EXISTS `Sp_LapBKM`;
DELIMITER //
CREATE PROCEDURE `Sp_LapBKM`(
	IN `Pdatea` DATETIME,
	IN `Pdatez` DATETIME,
	IN `psuba` VARCHAR(50),
	IN `psubz` VARCHAR(50),
	IN `pbbka` VARCHAR(50),
	IN `pbbkz` VARCHAR(50)
)
BEGIN
select kas.kas,if(kad.`no`=1,kas.kas,'') as `BKK No`,if(kad.`no`=1,cast(DATE_FORMAT(kas.date,'%d/%m/%Y') as char),'') as `BKK Date`,if(kad.`no`=1,kas.sub,'') as `Kode Supplier`,
 if(kad.`no`=1,sub.name,'') as `Nama Supplier`,if(kad.`no`=1,ifnull(kas.val,0)+ifnull(kag.val,0),0) as `Nilai BKK`,
 concat(kad.jurnal,' - ',kad.invoice) as `Invoice No`,
 ifnull(cast(DATE_FORMAT(rhp.date,'%d/%m/%Y') as char),'') as `Invoice Date`,
 if(kad.`no`=1,kag.nobg,'') as `No Giro`,if(kad.`no`=1,cast(DATE_FORMAT(kag.duedate,'%d/%m/%Y') as char),'') as `Jatuh Tempo Giro`
 from kas left outer join kag on kas.kas=kag.kas left outer join kad on kas.kas=kad.kas
 left outer join sub on kas.sub=sub.sub left outer join rhp on kad.jurnal=rhp.jurnal and kad.acc=rhp.acc and kad.invoice=rhp.invoice
 where kas.date > pdatea and kas.date < adddate(Pdatez,1)
and kas.sub between psuba and psubz and kas.kas between pbbka and pbbkz and kas.`delete`=0
 and kas.group_=4 and left(kas.kas,3) = 'BKM' order by kas.date,kas.kas;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LapDO
DROP PROCEDURE IF EXISTS `SP_LapDO`;
DELIMITER //
CREATE PROCEDURE `SP_LapDO`(
	IN `pdatea` datetime,
	IN `pdatez` datetime,
	IN `Psuba` char(15),
	IN `Psubz` char(15),
	IN `POkla` char(15),
	IN `POklz` char(15),
	IN `PDOa` char(15),
	IN `PDOz` char(15),
	IN `Pinva` char(15),
	IN `Pinvz` char(15),
	IN `pstatus` integer,
	IN `pgrp` integer
)
BEGIN
if (pgrp=1) then
 select okl.okl,okl.sub,sub.name subname,cast(okl.date AS CHAR) AS date,dod.inv,inv.name,okd.qty qtyso,inv.unit,ifnull(dod.doh,'') as doh,doh.date as dohdate,ifnull(dod.qty,0) qtydo,sjh.date as sjhdate,ifnull(sjh.sjh,0) as sjh,ifnull(sjd.qty,0) qtysjl,ifnull((dod.qty-(select sum(j.qty1) from sjd j,sjh s,spm m where j.sjh=s.sjh and s.spm=m.spm and m.okl_rms=dod.doh and j.inv=dod.inv and m.`delete`=0 and s.`delete`=0)),0) as sisa
 from okl inner join dod on dod.okl=okl.okl left outer join doh on dod.doh=doh.doh left outer join okd on dod.okl=okd.okl and dod.inv=okd.inv
 left outer join inv on dod.inv=inv.inv left outer join (select * from spm where `delete`=0) as spm on dod.doh=spm.okl_rms left outer join (select * from sjh where `delete`=0) as sjh on sjh.spm=spm.spm left outer join sjd on sjd.sjh=sjh.sjh left outer join sub on okl.sub=sub.sub
 where (okl.sub between Psuba and Psubz) and (dod.doh between PDOa and PDOz) and (dod.inv between Pinva and Pinvz) order by okl,doh,sjh;
end if;
if (pgrp=2) then
select (select cast(okl.date AS char) from okl where okl=okd.okl) as okldate,okd.okl as so,okd.qty,inv.unit,inv.name,xdo1.* from okd left outer join
(
select okl,sub,subname,date,doh,dohdate,qtydo,sjhdate,sjh,sum(qtysjl) as qtysjl,inv,sisa,if((sisa<=0 or `close`=1),'CLOSSE','OPEN') as closed from
(
 select okl.okl,okl.sub,sub.name subname,okl.date,dod.inv,inv.name,okd.qty qtyso,inv.unit,ifnull(dod.doh,'') as doh,
 doh.date as dohdate,ifnull(dod.qty,0) qtydo,sjh.date as sjhdate,ifnull(sjh.sjh,0) as sjh,ifnull(sjd.qty,0) qtysjl,
 ifnull((dod.qty-ifnull((select sum(j.qty1) from sjd j,sjh s,spm m where j.sjh=s.sjh and s.spm=m.spm and m.okl_rms=dod.doh and j.inv=dod.inv and m.`delete`=0 and s.`delete`=0),0)),0) as sisa,doh.`close`
 from (select okl.okl,okl.sub,okl.date from okl where okl.sub between Psuba and Psubz) okl inner join dod on dod.okl=okl.okl
 left outer join doh on dod.doh=doh.doh
 left outer join okd on dod.okl=okd.okl and dod.inv=okd.inv
 left outer join inv on dod.inv=inv.inv left outer join
 (select spm.spm,spm.okl_rms from spm where `delete`=0 and sub between psuba and psubz) spm on dod.doh=spm.okl_rms left outer join
 (select sjh.sjh,sjh.date,sjh.spm from sjh where `delete`=0 and sub between psuba and psubz) sjh on sjh.spm=spm.spm
 left outer join sjd on sjd.sjh=sjh.sjh left outer join sub on okl.sub=sub.sub
 where okd.inv between Pinva and Pinvz  order by okl,doh,sjh
) as xdo group by okl,doh,inv
) as xdo1 on okd.okl=xdo1.okl and okd.inv=xdo1.inv left outer join inv on okd.inv=inv.inv  where  (okd.okl between POkla and POklz) and (xdo1.doh between PDOa and PDOz) and (xdo1.inv between Pinva and Pinvz) order by okd.okl,doh;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LapEFAKKELUARAN
DROP PROCEDURE IF EXISTS `SP_LapEFAKKELUARAN`;
DELIMITER //
CREATE PROCEDURE `SP_LapEFAKKELUARAN`(
	IN `psuba` varchar(15),
	IN `psubz` varchar(15),
	IN `pdatea` datetime,
	IN `pdatez` datetime
)
BEGIN
declare xm varchar(2);
declare xy varchar(2);
declare xyear varchar(4);
declare alamatwp varchar(150);
set xm = (select  right(Fdate2Period(pdatea),2));
set xy = (select  left(Fdate2Period(pdatea),2));
set xyear = (year(pdatea));
set alamatwp='JL. Kalisosok Kidul No.2, RT:004, RW:015, Kel.Krembangan Selatan Kec.Krembangan Kota/Kab. Surabaya Jawa Timur 60175';
select '' nomorfp,0 urut,'FK','KD_JENIS_TRANSAKSI','FG_PENGGANTI','NOMOR_FAKTUR','MASA_PAJAK','TAHUN_PAJAK','TANGGAL_FAKTUR','NPWP','NAMA','ALAMAT_LENGKAP','JUMLAH_DPP','JUMLAH_PPN','JUMLAH_PPNBM','ID_KETERANGAN_TAMBAHAN','FG_UANG_MUKA','UANG_MUKA_DPP','UANG_MUKA_PPN','UANG_MUKA_PPNBM','REFERENSI'
union all
select '',0,'LT','NPWP','NAMA','JALAN','BLOK','NOMOR','RT','RW','KECAMATAN','KELURAHAN','KABUPATEN','PROPINSI','KODE_POS','NOMOR_TELEPON','','','','',''
union all
select '',0,'OF','KODE_OBJEK','NAMA','HARGA_SATUAN','JUMLAH_BARANG','HARGA_TOTAL','DISKON','DPP','PPN','TARIF_PPNBM','PPNBM','','','','','','','',''
union all
select replace(nomorfp,',','.') nomorfp,urut,FK,jenis,fppengganti,replace(fpj,',','.')fpj,trim(masapajak) as masapajak,trim(tahunpajak) as tahunpajak,trim(tglfaktur) tglfaktur,npwp,nama,address,dpp as dpp,ppn,ppnbm,idtambahan,fg_uangmuka,dppumk,ppnumk,ppnbm_umk,referensi from (
select klr.fpj as nomorfp,1 as urut,'FK' as FK, substring(klr.fpj,1,2) as jenis, substring(klr.fpj,3,1)  as fppengganti,trim(replace(replace(substring(klr.fpj,4,16),'.',''),'-','')) as fpj,convert(left(xm,2) using latin1) as masapajak,xyear as tahunpajak,convert(trim(DATE_FORMAT(kld.tglfp,'%d/%m/%Y'))using latin1) as tglfaktur,LEFT(replace(replace(ifnull(sub.subnpwp,''),'-','.'),'.',''),15) as npwp,
        sub.name as nama, sub.address,convert(trim(round(sum(kld.dpp*ifnull(klr.kurs,klr.kurs)),0)) using latin1) as dpp,
        convert(trim(round((sum(kld.dpp*ifnull(klr.kurs,klr.kurs)))*0.1,0)) using latin1) as ppn,
        '0' as ppnbm,'' idtambahan,if((select ifnull(sum(val*klr.kurs),0) from umk where umk.klr=kld.klr)>0,'2','0') as fg_uangmuka,
        
        if((select ifnull(sum(val*klr.kurs),0) from umk where umk.klr=kld.klr)>0,convert(trim(round((sum(kld.dpp*ifnull(klr.kurs,klr.kurs))-(select ifnull(sum(val*klr.kurs),0) from umk where umk.klr=kld.klr)),0)) using latin1),'0') as dppumk,
        if((select ifnull(sum(val*klr.kurs),0) from umk where umk.klr=kld.klr)>0,convert(trim(round((sum(kld.dpp*ifnull(klr.kurs,klr.kurs))-(select ifnull(sum(val*klr.kurs),0) from umk where umk.klr=kld.klr))*0.1,0)) using latin1),'0') as ppnumk,
        '0' as ppnbm_umk,klr.klr as referensi
from kld inner join klr on kld.klr=klr.klr
inner join sub on klr.sub=sub.sub
where (kld.tglsfp >= pdatea and kld.tglsfp < adddate(pdatez,1))
and not(trim(left(klr.fpj,3)) ='' or trim(left(klr.fpj,3)) ='000')
and (klr.sub BETWEEN psuba and psubz)
group by klr.klr,klr.fpj
union all
select trim(fpjumk.nofpj),1,'FK' , substring(fpjumk.nofpj,1,2) as jenis ,if(fpjumk.fpganti=1,'1','0') as fppenganti,replace(replace(trim(substring(fpjumk.nofpj,4,16)),'-',''),'.','') as fpj,convert(left(xm,2) using latin1) as masapajak,xyear as tahunpajak,convert(trim(DATE_FORMAT(fpjumk.fpjdate,'%d/%m/%Y')) using latin1) as tglfaktur,LEFT(replace(replace(ifnull(sub.subnpwp,''),'-','.'),'.',''),15) as npwp,
        sub.name as subname,sub.address,convert(trim(fpjumk.umk*fpjumk.kurs) using latin1) as dpp,convert(trim(fpjumk.umk*0.1*fpjumk.kurs) using latin1) as ppn,'0' as ppnbm,'' idtambahan, if(fpjumk.fpganti=0,'1','0') as fg_umk,
        if(fpjumk.fpganti=0,convert(trim(round(fpjumk.umk*fpjumk.kurs,0)) using latin1),'0') as dppumk,if(fpjumk.fpganti=0,convert(trim(round(fpjumk.umk*0.1*fpjumk.kurs,0)) using latin1),'0') as ppnumk,'0' as ppnbm_umk, fpjumk.fpjumk as referensi
from fpjumk inner join sub on fpjumk.sub=sub.sub
where (fpjumk.fpjdate >= pdatea and fpjumk.fpjdate < adddate(pdatez,1))
and (fpjumk.sub BETWEEN psuba and psubz)
union all
select klr.fpj,2,'FAPR' , 'PT. KARYAINDAH ALAM SEJAHTERA' as jenis,alamatwp as fppenganti,'' as fpj,convert('' using latin1) as masapajak,'' as tahunpajak,'' as tglfaktur,'' as npwp,
        '' as nama, '','' as dpp,
        '' as ppn,'' as ppnbm,'' idtambahan,'' as fg_uangmuka,
        '' as dppumk,'' as ppnumk,'' as ppnbm_umk,'' as referensi
from kld inner join klr on kld.klr=klr.klr
inner join sub on klr.sub=sub.sub
where (kld.tglsfp >= pdatea and kld.tglsfp < adddate(pdatez,1))
and not(trim(left(klr.fpj,3)) ='' or trim(left(klr.fpj,3)) ='000')
and (klr.sub BETWEEN psuba and psubz)
group by klr.klr,klr.fpj
union all
select trim(fpjumk.nofpj),2,'FAPR' , 'PT. KARYAINDAH ALAM SEJAHTERA' ,alamatwp as fppenganti,'' as fpj,convert('' using latin1) as masapajak,'' as tahunpajak,''  as tglfaktur,'' as npwp,
  '' as nama, '','' as dpp,
  '' as ppn,'' as ppnbm,'' idtambahan,'' as fg_uangmuka,
  '' as dppumk,'' as ppnumk,'' as ppnbm_umk,'' as referensi
from fpjumk inner join sub on fpjumk.sub=sub.sub
where (fpjumk.fpjdate >= pdatea and fpjumk.fpjdate < adddate(pdatez,1))
and (fpjumk.sub BETWEEN psuba and psubz)
union all
select klr.fpj,3,'OF',ifnull(if(left(kld.inv,1)=9,'',kld.inv),(select inv from sjd where sjh=(select kll.sjh from kll where kll.klr=klr.klr limit 1))) as kodetransaksi,ifnull(inv.name,(select inv from sjd where sjh=(select kll.sjh from kll where kll.klr=klr.klr limit 1))) as kodepengganti,kld.price*klr.kurs,convert(trim(sum(kld.qty))using latin1) as masapajak,round(sum(kld.price*kld.qty)*klr.kurs,0) as total,convert(trim(ifnull(sum(kld.disc),0))using latin1) as disc,convert(trim(round(sum(kld.dpp),0))using latin1),
       convert(trim(round(sum(kld.ppn),0))using latin1) ppn,0 as tarifppnbm,0 as ppnbm,
       '','','','',
       '','','',''
from kld inner join klr on kld.klr=klr.klr left outer join inv on kld.inv=inv.inv
where (kld.tglsfp >= pdatea and kld.tglsfp < adddate(pdatez,1))
and not(trim(left(klr.fpj,3)) ='' or trim(left(klr.fpj,3)) ='000')
and (klr.sub BETWEEN psuba and psubz) and kld.price >0
group by klr.klr,klr.fpj,kld.inv
union all
select fpjumd.nofpj,3,'OF',if(left(fpjumd.inv,1)='9','',fpjumd.inv) as kodetransaksi,concat(if(fpjumk.fpganti=0,'Uang Muka ',''),fpjumd.remark) as namabrg,if(qty=0,sum(fpjumd.val)*fpjumk.kurs,price*kurs),convert(trim(if(qty=0,1,sum(qty)))using latin1) as masapajak,round(sum(fpjumd.val)*fpjumk.kurs,0) as total,convert(trim(0) using latin1) as disc,convert(trim(round(sum(fpjumd.val),0))using latin1),
       convert(trim(round(sum(fpjumd.val*0.1),0))using latin1) ppn,0 as tarifppnbm,0 as ppnbm,
       '','','','',
       '','','',''
from fpjumd inner join fpjumk on fpjumd.fpjumk=fpjumk.fpjumk
where (fpjdate >= pdatea and fpjdate < adddate(pdatez,1))
and not(trim(left(fpjumd.nofpj,3)) ='' or trim(left(fpjumd.nofpj,3)) ='000')
and (fpjumk.sub BETWEEN psuba and psubz) and fpjumd.val >0
group by fpjumk.fpjumk,fpjumd.nofpj,fpjumd.inv,fpjumd.remark, fpjumd.price
) as xpjk order by nomorfp,urut,fk
;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LapEFAKKELUARANEXP
DROP PROCEDURE IF EXISTS `SP_LapEFAKKELUARANEXP`;
DELIMITER //
CREATE PROCEDURE `SP_LapEFAKKELUARANEXP`(psuba varchar(15),psubz varchar(15),pdatea datetime, pdatez datetime)
BEGIN
declare xm varchar(2);
declare xy varchar(2);
declare xyear varchar(4);
declare alamatwp varchar(150);
set xm = (select  right(Fdate2Period(pdatea),2));
set xy = (select  left(Fdate2Period(pdatea),2));
set xyear = (year(pdatea));
set alamatwp='JL. Kalisosok Kidul No.2, RT:004, RW:015, Kel.Krembangan Selatan Kec.Krembangan Kota/Kab. Surabaya Jawa Timur 60175';
select klr.klr as Invoice,1 as urut,'DK' as DK_DM, 4 as JENISTRANSAKSI,6 as JENISDOKUMEN,13 as KD_JNS_TRANSAKSI,0  as FGPENGGANTI,'' as FGPENGGANTIlain,klr.fpjsederhana as PEB,convert(trim(DATE_FORMAT(kld.tglfp,'%d/%m/%Y'))using latin1) as TGLPEB,convert(left(xm,2) using latin1) as MASAPAJAK,xyear as TAHUNPAJAK,'0000000000000000' as NPWP,
        sub.name as NAMA, replace(replace(address,char(13),''), char(10),' - ')  as ALAMAT,convert(trim(round(sum(kld.dpp*ifnull(klr.kurs,klr.kurs)),0)) using latin1) as DPP_BI,
        '0' as PPN,
        '0' as PPNBM,'' as KETERANGAN,
        convert(trim(round(sum(kld.dpp),0)) using latin1)*(select ifnull(val,0) from khr where val>0  and date(khr.`date`)<= date(klr.date) and cur=klr.cur order by khr.date desc limit 1) as DPP_PJK
from kld inner join klr on kld.klr=klr.klr
inner join sub on klr.sub=sub.sub
where (kld.tglsfp >= pdatea and kld.tglsfp < adddate(pdatez,1))
and klr.fpjsederhana<>''
and (klr.sub BETWEEN psuba and psubz)
group by klr.klr
;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LapEFAKMASUKAN
DROP PROCEDURE IF EXISTS `SP_LapEFAKMASUKAN`;
DELIMITER //
CREATE PROCEDURE `SP_LapEFAKMASUKAN`(psuba varchar(15),psubz varchar(15),pdatea datetime, pdatez datetime)
BEGIN
declare xm varchar(2);
declare xy varchar(2);
declare xyear varchar(4);
set xm = (select  right(Fdate2Period(pdatez),2));
set xy = (select  left(Fdate2Period(pdatez),2));
set xyear = (year(pdatea));
select msk.msk,msd.nofp as NomorFP,'FM' as FM, '01' as KD_JENIS_TRANSAKSI,substring(msd.nofp,3,1) as FG_PENGGANTI,trim(replace(replace(substring(msd.nofp,4,16),'.',''),'-','')) as NOMOR_FAKTUR,xm as MASA_PAJAK,xyear as TAHUN_PAJAK,msd.tglfp as TANGGAL_FAKTUR,LEFT(replace(replace(ifnull(sub.subnpwp,''),'-','.'),'.',''),15) as NPWP,
sub.name as NAMA,'' as ALAMAT_LENGKAP,
msd.dpp*msd.kurs as `JUMLAH_DPP`,FLOOR(msd.ppn*msd.kurs) as `JUMLAH_PPN`,0 JUMLAH_PPNBM,1 as IS_CREDITABLE,
msd.sub1 as SubVendor,msd.npwp as NpwpSubVendor, msd.name1 as NamaSubVendor
from msd left outer join msk on msd.msk=msk.msk
left outer join sub on msk.sub=sub.sub
where (date(msd.tglsfp) between pdatea and pdatez)
and not(trim(msd.nofp) ='' or trim(msd.nofp) ='0') and (msk.sub BETWEEN psuba and psubz);
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LapEFAKRETURK
DROP PROCEDURE IF EXISTS `SP_LapEFAKRETURK`;
DELIMITER //
CREATE PROCEDURE `SP_LapEFAKRETURK`(psuba varchar(15),psubz varchar(15),pdatea datetime, pdatez datetime)
BEGIN
declare xm varchar(2);
declare xy varchar(2);
declare xyear varchar(4);
declare alamatwp varchar(150);
set xm = (select  right(Fdate2Period(pdatea),2));
set xy = (select  left(Fdate2Period(pdatea),2));
set xyear = (year(pdatea));
set alamatwp='JL. Kalisosok Kidul No.2, RT:004, RW:015, Kel.Krembangan Selatan Kec.Krembangan Kota/Kab. Surabaya Jawa Timur 60175';
select 'RK' ,LEFT(replace(replace(ifnull(sub.subnpwp,''),'-','.'),'.',''),15) as npwp,
sub.name as subname,left(rkd.nofp,2) as `KD_JENIS_TRANSAKSI`,substring(rkd.nofp,3,1) as FG_PENGGANTI,
trim(replace(replace(substring(rkd.nofp,4,16),'.',''),'-','')) as NOMOR_FAKTUR,rkd.tglfp as TGL_FAKTUR,
trim(rkd.rkl) as NO_DOKUMEN_RETUR,rkl.date as TANGGAL_RETUR,convert(left(xm,2) using latin1) as masapajak,
xyear as tahunpajak,sum(rkd.dpp*rkd.kurs) as DPPRETUR,sum(FLOOR(rkd.ppn*rkd.kurs)) as PPNRETUR,0 NILAI_RETUR_PPNBM
from rkd inner join rkl on rkd.rkl=rkl.rkl
inner join sub on rkl.sub=sub.sub
where (rkd.tglsfp between pdatea and pdatez)
and (rkl.sub BETWEEN psuba and psubz)
and rkd.ppn>0
group by rkd.nofp;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LapGiro
DROP PROCEDURE IF EXISTS `SP_LapGiro`;
DELIMITER //
CREATE PROCEDURE `SP_LapGiro`(Pacca varchar(15),Paccz varchar(15),Pdatea datetime,Pdatez datetime,Pstatus smallint,pgroup smallint,rule char(1))
BEGIN
if (pgroup=2) then
   set pgroup=1 ;
else
   if (pgroup=1) then
      set pgroup=2;
   end if;
end if;
if(Pacca='') then
  set Pacca='00000000';
end if;
if(Paccz='') then
  set Paccz='99999999';
end if;
select * from
(
select kag.kas as buktipelunasan,kas.group_,kas.remark,if(rule='1',(select name from acc where acc.acc=kas.acc),acc.name) as accname,if(kas.group_=2,'Giro Masuk','Giro Keluar') as jgiro,kas.sub,ifnull(sub.name,'') as name,
if(trim(kas.acc)='11013101'or trim(kas.acc)='11013102',kag.nobg,'') as nobgek,kag.nobg as nobg ,kag.duedate,kag.acbank,ifnull(cgr.bgdate, kas.date) as tglgiro,kag.val*if(rule='1',1,kas.kurs) as val,
ifnull(cgr.accbank,kag.acc) as acc,ifnull(cgr.cgr,kag.kas) as nobukti,if(cgr.cgr is null,'Terbuka','Cair') as status from acc,kag left outer join (select * from cgr where cgr.date>=Pdatea and cgr.date<adddate(Pdatez,1)) cgr on kag.nobg=cgr.nobg
left outer join kas on kag.kas=kas.kas left outer join sub on kas.sub=sub.sub
where
  (ifnull(cgr.accbank,kag.acc)) between Pacca and Paccz
   and if(Pstatus<3,(if(cgr.cgr is null,1,2)) = Pstatus,1)
  and if(pgroup<3,kas.group_ = pgroup,1)
  and ifnull(cgr.accbank,kag.acc) = acc.acc
  and kas.`delete`<>1 and kag.val>0
order by status
) as gr
where tglgiro>=Pdatea and tglgiro<adddate(Pdatez,1) order by status,tglgiro;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LapGiro1
DROP PROCEDURE IF EXISTS `SP_LapGiro1`;
DELIMITER //
CREATE PROCEDURE `SP_LapGiro1`(Pacca varchar(15),Paccz varchar(15),Pdatea datetime,Pdatez datetime,Pstatus smallint,pgroup smallint,rule char(1),Psuba varchar(15),
psubz varchar(15),Pbga varchar(10), pbgz varchar(10))
BEGIN
if (pgroup=2) then
   set pgroup=1 ;
else
   if (pgroup=1) then
      set pgroup=2;
   end if;
end if;
if(Pacca='') then
  set Pacca='00000000';
end if;
if(Paccz='') then
  set Paccz='99999999';
end if;
select *,gr.val-acd.val as sls from
(
select kag.kas as buktipelunasan,kas.group_,kas.remark,if(rule='1',(select name from acc where acc.acc=kas.acc),acc.name) as accname,if(kas.group_=2,'Giro Masuk','Giro Keluar') as jgiro,kas.sub,ifnull(sub.name,'') as name,
if(trim(kas.acc)='11013101'or trim(kas.acc)='11013102',kag.nobg,'') as nobgek,kag.nobg as nobg ,kag.duedate,kag.acbank,ifnull(cgr.bgdate, kas.date) as tglgiro,kag.val*if(rule='1',1,kas.kurs) as val,kag.gironame,
ifnull(cgr.accbank,kag.acc) as acc,ifnull(cgr.cgr,kag.kas) as nobukti,if(cgr.cgr is null,'Terbuka','Cair') as status from acc,kag left outer join (select * from cgr where cgr.date>=Pdatea and cgr.date<adddate(Pdatez,1)) cgr on kag.nobg=cgr.nobg
left outer join kas on kag.kas=kas.kas left outer join sub on kas.sub=sub.sub
where
  (ifnull(cgr.accbank,kag.acc)) between Pacca and Paccz
   and if(Pstatus<3,(if(cgr.cgr is null,1,2)) = Pstatus,1)
  and if(pgroup<3,kas.group_ = pgroup,1)
  and ifnull(cgr.accbank,kag.acc) = acc.acc
  and kas.`delete`<>1 and kag.val>0
order by status
) as gr left outer join (select * from acd where period='1602' and acc='21020302') as acd on gr.buktipelunasan =acd.jurnal
where tglgiro>=Pdatea and tglgiro<adddate(Pdatez,1) and sub between psuba and psubz and nobg between pbga and pbgz
 order by status,tglgiro;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LapGiro2
DROP PROCEDURE IF EXISTS `SP_LapGiro2`;
DELIMITER //
CREATE PROCEDURE `SP_LapGiro2`(Pacca varchar(15),Paccz varchar(15),Pdatea datetime,Pdatez datetime,Pstatus smallint,pgroup smallint,rule char(1),Psuba varchar(15),
psubz varchar(15),Pbga varchar(10), pbgz varchar(10),Pjtdatea datetime,Pjtdatez datetime)
BEGIN
if (pgroup=2) then
   set pgroup=1 ;
else
   if (pgroup=1) then
      set pgroup=2;
   end if;
end if;
if(Pacca='') then
  set Pacca='00000000';
end if;
if(Paccz='') then
  set Paccz='99999999';
end if;
select *,gr.val-acd.val as sls from
(
select kag.kas as buktipelunasan,kas.group_,kas.remark,if(rule='1',(select name from acc where acc.acc=kas.acc),acc.name) as accname,if(kas.group_=2,'Giro Masuk','Giro Keluar') as jgiro,kas.sub,ifnull(sub.name,'') as name,
if(trim(kas.acc)='11013101'or trim(kas.acc)='11013102',kag.nobg,'') as nobgek,kag.nobg as nobg ,kag.duedate,kag.acbank,ifnull(cgr.bgdate, kas.date) as tglgiro,kag.val*if(rule='1',1,kas.kurs) as val,kag.gironame,
ifnull(cgr.accbank,kag.acc) as acc,ifnull(cgr.cgr,kag.kas) as nobukti,if(cgr.cgr is null,'Terbuka','Cair') as status from acc,kag left outer join (select * from cgr where cgr.date>=Pdatea and cgr.date<adddate(Pdatez,1)) cgr on kag.nobg=cgr.nobg
left outer join kas on kag.kas=kas.kas left outer join sub on kas.sub=sub.sub
where
  (ifnull(cgr.accbank,kag.acc)) between Pacca and Paccz
   and if(Pstatus<3,(if(cgr.cgr is null,1,2)) = Pstatus,1)
  and if(pgroup<3,kas.group_ = pgroup,1)
  and ifnull(cgr.accbank,kag.acc) = acc.acc
  and kas.`delete`<>1 and kag.val>0
order by status
) as gr left outer join (select * from acd where period='1602' and acc='21020302') as acd on gr.buktipelunasan =acd.jurnal
where tglgiro>=Pdatea and tglgiro<adddate(Pdatez,1) and sub between psuba and psubz and nobg between pbga and pbgz
and duedate>=Pjtdatea and duedate<adddate(Pjtdatez,1)
 order by status,tglgiro;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LapHistoryMPR
DROP PROCEDURE IF EXISTS `Sp_LapHistoryMPR`;
DELIMITER //
CREATE PROCEDURE `Sp_LapHistoryMPR`(Pdatea datetime, Pdatez datetime, Pmpra char(15), Pmprz char(15))
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists outmpr;
create temporary table outmpr (mpr varchar(15), `date` datetime, inv varchar(15), qty double, remark varchar(50),qty1 double,unit varchar(6),nompd integer);
insert into outmpr
(
  select q.mpr, q.date, d.inv, sum(d.qty) as qty, d.remark as remark,d.qty1,d.unit, d.no nompd
    from mpr q, mpd d
   where q.mpr=d.mpr and q.delete=0
     and q.date>=Pdatea and q.date<adddate(Pdatez,1)
     and if(Pmpra<>'' and Pmprz<>'',q.mpr between Pmpra and Pmprz,1)
  group by mpr,date,inv,remark
);
drop temporary table if exists outpr;
create temporary table outpr (prq varchar(15), `date` datetime, inv varchar(15), qty double, remark varchar(50),qty1 double,unit varchar(6),noprd integer, mpr varchar(15),nompr integer);
insert into outpr
(
  select q.prq, q.date, d.inv, sum(d.qty) as qty, d.remark as remark,d.qty1,d.unit, d.no noprd, q.mpr,d.no_mpr
    from prq q, prd d
   where q.prq=d.prq and q.delete=0
     and q.date>=Pdatea
  group by prq,date,inv,remark
);
drop temporary table if exists realpr1;
drop temporary table if exists realpr2;
drop temporary table if exists realpr;
create temporary table realpr1 as select * from
(
    
    select oms.oms, omd.prq, oms.date as podate, oms.sub, omd.inv, omd.remark, sum(omd.qty1) as poqty, omd.unit as pounit,
           s.spb, s.spbdate, s.spbqty,s.spbqty1,s.unit1, omd.noprd
    from oms inner join omd on oms.oms=omd.oms
             left join
             (
               select spb.spb, spb.oms, spb.sub, spb.date as spbdate,spbd.inv, spbd.remark,sum(spbd.qty) as spbqty,sum(spbd.qty1) as spbqty1, spbd.unit as unit1
                 from spb inner join spbd on spb.spb=spbd.spb
                where spb.delete=0 and spb.withPO=1 and spb.date>pdatea
               group by spb, oms, inv, remark
             ) as s on s.oms=oms.oms and s.inv=omd.inv and s.remark=omd.remark
    where oms.delete=0 and oms.date>pdatea
    group by oms,spb, prq, inv, remark
) as x;
create temporary table realpr2 as select * from
(
  select convert ('' using latin1) as oms, spb.oms as prq, date(00000000) as podate, spb.sub, spbd.inv, spbd.remark, 0 as poqty,'' as pounit,
         spb.spb, spb.date as spbdate, sum(spbd.qty) as spbqty, sum(spbd.qty1) as spbqty1, spbd.unit as unit1, '' as noprd
    from spb inner join spbd on spb.spb=spbd.spb
    where spb.delete = 0 and spb.withPO=0 and spb.date>pdatea
    group by prq, inv, remark
) as y;
create temporary table realpr as select * from
(
  select * from realpr1
  union
  select * from realpr2
) as z;
select outmpr.*,outpr.prq, outpr.date as prdate, ifnull(realpr.sub,'') as sub, ifnull(sub.name,'') as subname,
       outpr.inv, outpr.remark as invname, realpr.unit1,
       outpr.remark, ifnull(outpr.qty1,0) as prqty, ifnull(realpr.oms,'') as oms, realpr.podate,
       ifnull(realpr.poqty,0) as poqty, ifnull(realpr.spb,'') as spb, realpr.spbdate,
       ifnull(realpr.spbqty1,0) as spbqty,
       lph.lph as lpb,ifnull(lpd.qty1,0) as lpdqty, lph.date as lpbdate
     from outmpr left outer join outpr on outmpr.mpr=outpr.mpr and outpr.nompr=outmpr.nompd
left join (realpr left join lph on realpr.spb=lph.spb and lph.`delete`=0) on outpr.prq = realpr.prq
and outpr.inv=realpr.inv and outpr.noprd=realpr.noprd
left outer join lpd on realpr.inv=lpd.inv and realpr.remark=lpd.remark and lpd.lph=lph.lph
left join inv on outpr.inv=inv.inv
left join sub on realpr.sub=sub.sub;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LapHistoryPO
DROP PROCEDURE IF EXISTS `Sp_LapHistoryPO`;
DELIMITER //
CREATE PROCEDURE `Sp_LapHistoryPO`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Psuba` char(15),
	IN `Psubz` char(15),
	IN `Pomsa` char(15),
	IN `Pomsz` char(15),
	IN `Pstatus` int,
	IN `Plokal` int,
	IN `Pinva` char(15),
	IN `Pinvz` char(15)
)
BEGIN
drop temporary table if exists outpo;
create temporary table outpo as
select oms,date,sub,inv,remark,sum(qtypo-qty) as qtypo,if(outpo.close=false,'OPEN','CLOSED') as `status`,cur, cct, cctname from
(
  select oms.close,oms_in.oms, oms.date, oms.sub, oms.cur, oms_in.inv,oms_in.remark, oms_in.qty as qtypo, 0 as qty, omd.cct as cct, cct.name as cctname
    from oms_in, oms, omd LEFT JOIN cct ON omd.cct = cct.cct
   where oms_in.oms=oms.oms and oms.oms = omd.oms
     and if(Psuba<>'' and Psubz<>'', oms.sub between Psuba and Psubz, 1)
     and if(Pomsa<>'' and Pomsz<>'', oms.oms between Pomsa and Pomsz, 1)
     and oms.date>=Pdatea and oms.date<adddate(Pdatez,1)
     and oms.delete=0
) as outpo
group by oms,date,sub,inv,remark;
drop temporary table if exists realpo;
create temporary table realpo as
select * from
(
  select spb.spb,concat('''',spb.nodoc) as nopen, spb.oms, spb.sub, spbd.inv,spbd.remark,
  lpd.nodsg, sum(if(left(spbd.inv,1)>=6,spbd.qtygd,spbd.qtytim)) as qty, spb.date as spbdate,
         lph.lph, lph.date as lpbdate,
          concat(msk.msk,' ',date_format(msk.date,'%d/%m/%Y')) as msk 
			from spb 
			inner join (
				select spb,inv,nodsg,remark,sum(qty) qty,sum(qtygd) qtygd,sum(qtytim) qtytim 
				from spbd group by spb,inv,remark
			) spbd on spb.spb=spbd.spb
         left join lph on spb.spb=lph.spb
         LEFT JOIN lpd ON lph.lph=lpd.lph and spbd.inv=lpd.inv and spbd.remark=lpd.remark
         Left JOIN msl ON msl.lph=lph.lph
         left JOIN msk ON msl.msk=msk.msk
   		where if(Psuba<>'' and Psubz<>'',spb.sub between Psuba and Psubz,1)
     and if(Pomsa<>'' and Pomsz<>'',spb.oms between Pomsa and Pomsz,1)
     and spb.delete=0 and lph.delete=0
   		group by spb.spb, spb.oms, spb.sub, spbd.inv,spbd.remark
) as realpo;
select outpo.`status`,outpo.sub, outpo.date, outpo.oms, outpo.cur,
       omd.val/omd.qty as price,omd.qty as qtypo,omd.val as val,
       outpo.inv,if(left(outpo.inv,1)='9',omd.remark,inv.name) as invname,outpo.remark, if(left(inv.inv,1)='9',omd.unit,inv.unit) as unit,
		 realpo.nodsg as `no batch`,
       realpo.spbdate, if(realpo.spb is null,space(15),realpo.spb) as nospb,realpo.nopen as nopen,
       realpo.lpbdate, if(realpo.lph is null,space(15),realpo.lph) as nolpb,
       sub.name as subname, if(realpo.qty is null,0,realpo.qty) as qtylpb, 0 as saldo, omd.prq as nopr, realpo.msk,
       (select concat(kas.kas,' ',date_format(kas.date,'%d/%m/%Y')) kas from kad,kas where kad.kas=kas.kas and jurnal=substring(realpo.msk,1,15) limit 1) as kas, outpo.cct, outpo.cctname
from oms left outer join (select oms,inv,remark,sum(val) as val,sum(qty) qty,unit,prq from omd group by oms,inv,remark) omd on omd.oms=oms.oms
left outer join inv on omd.inv=inv.inv
left outer join sub on oms.sub=sub.sub
inner join outpo on omd.oms=outpo.oms and omd.inv=outpo.inv and trim(omd.remark)=trim(outpo.remark)
left outer join realpo on outpo.oms=realpo.oms and outpo.inv=realpo.inv and trim(outpo.remark)=trim(realpo.remark)
where if(Pstatus=1,outpo.status='OPEN',if(Pstatus=2,outpo.status='CLOSED',1=1))
and if (Plokal=1,left(outpo.oms,3)='POL',if(Plokal=2,left(outpo.oms,3)='POI',1=1))
and if(Pinva<>'' and Pinvz<>'',outpo.inv between Pinva and Pinvz,1=1)
order by 1,2,9,3,4,5,7;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LapHistoryPO1
DROP PROCEDURE IF EXISTS `Sp_LapHistoryPO1`;
DELIMITER //
CREATE PROCEDURE `Sp_LapHistoryPO1`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Psuba` char(15),
	IN `Psubz` char(15),
	IN `Pomsa` char(15),
	IN `Pomsz` char(15),
	IN `Pstatus` int,
	IN `Plokal` int,
	IN `Pinva` char(15),
	IN `Pinvz` char(15)
)
BEGIN
drop temporary table if exists outpo;
create temporary table outpo as
select oms,date,sub,inv,remark,sum(qtypo-qty) as qtypo,if(outpo.close=false,'OPEN','CLOSED') as `status`,cur, cct, cctname from
(
  select oms.close,oms_in.oms, oms.date, oms.sub, oms.cur, oms_in.inv,oms_in.remark, oms_in.qty as qtypo, 0 as qty, omd.cct as cct, cct.name as cctname
    from oms_in, oms, omd LEFT JOIN cct ON omd.cct = cct.cct
   where oms_in.oms=oms.oms and oms.oms = omd.oms
     and if(Psuba<>'' and Psubz<>'', oms.sub between Psuba and Psubz, 1)
     and if(Pomsa<>'' and Pomsz<>'', oms.oms between Pomsa and Pomsz, 1)
     and oms.date>=Pdatea and oms.date<adddate(Pdatez,1)
     and oms.delete=0
) as outpo
group by oms,date,sub,inv,remark;
drop temporary table if exists realpo;
create temporary table realpo as
select * from
(
  select spb.spb,concat('''',spb.nodoc) as nopen, spb.oms, spb.sub, spbd.inv,spbd.remark,lpd.nodsg as nodsg, sum(if(left(spbd.inv,1)>=6,spbd.qtygd,spbd.qtytim)) as qty, spb.date as spbdate,
         lph.lph, lph.date as lpbdate,
         (select concat(msk.msk,' ',date_format(msk.date,'%d/%m/%Y')) msk from msl,msk where msl.msk=msk.msk and msl.lph=lph.lph limit 1) as msk
from spb inner join (select spb,inv,nodsg,remark,sum(qty) qty,sum(qtygd) qtygd,sum(qtytim) qtytim from spbd group by spb,inv,remark) spbd on spb.spb=spbd.spb
              left join lph on spb.spb=lph.spb
              left join (select lph,inv,nodsg,remark,sum(qty) qty from lpd group by lph,inv,remark) lpd on lph.lph=lpd.lph and spbd.inv=lpd.inv and spbd.remark=lpd.remark
   where if(Psuba<>'' and Psubz<>'',spb.sub between Psuba and Psubz,1)
     and if(Pomsa<>'' and Pomsz<>'',spb.oms between Pomsa and Pomsz,1)
     and spb.delete=0 and lph.delete=0
   group by spb.spb, spb.oms, spb.sub, spbd.inv,spbd.remark
) as realpo;
select outpo.`status`,outpo.sub, outpo.date, outpo.oms, outpo.cur,
       omd.val/omd.qty as price,omd.qty as qtypo,omd.val as val,
       outpo.inv,if(left(outpo.inv,1)='9',omd.remark,inv.name) as invname,outpo.remark, if(left(inv.inv,1)='9',omd.unit,inv.unit) as unit,
		 realpo.nodsg as `no batch`,
       realpo.spbdate, if(realpo.spb is null,space(15),realpo.spb) as nospb,realpo.nopen as nopen,
       realpo.lpbdate, if(realpo.lph is null,space(15),realpo.lph) as nolpb,
       sub.name as subname, if(realpo.qty is null,0,realpo.qty) as qtylpb, 0 as saldo, omd.prq as nopr, realpo.msk,
       (select concat(kas.kas,' ',date_format(kas.date,'%d/%m/%Y')) kas from kad,kas where kad.kas=kas.kas and jurnal=substring(realpo.msk,1,15) limit 1) as kas, outpo.cct, outpo.cctname
from oms left outer join (select oms,inv,remark,sum(val) as val,sum(qty) qty,unit,prq from omd group by oms,inv,remark) omd on omd.oms=oms.oms
left outer join inv on omd.inv=inv.inv
left outer join sub on oms.sub=sub.sub
inner join outpo on omd.oms=outpo.oms and omd.inv=outpo.inv and trim(omd.remark)=trim(outpo.remark)
left outer join realpo on outpo.oms=realpo.oms and outpo.inv=realpo.inv and trim(outpo.remark)=trim(realpo.remark)
where if(Pstatus=1,outpo.status='OPEN',if(Pstatus=2,outpo.status='CLOSED',1=1))
and if (Plokal=1,left(outpo.oms,3)='POL',if(Plokal=2,left(outpo.oms,3)='POI',1=1))
and if(Pinva<>'' and Pinvz<>'',outpo.inv between Pinva and Pinvz,1=1)
order by 1,2,9,3,4,5,7;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LapHistoryPOJ
DROP PROCEDURE IF EXISTS `Sp_LapHistoryPOJ`;
DELIMITER //
CREATE PROCEDURE `Sp_LapHistoryPOJ`(
	IN `Pdatea` DATETIME,
	IN `Pdatez` DATETIME,
	IN `Psuba` CHAR(15),
	IN `Psubz` CHAR(15),
	IN `Pomsa` CHAR(15),
	IN `Pomsz` CHAR(15),
	IN `Pinva` CHAR(15),
	IN `Pinvz` CHAR(15)
)
BEGIN
SELECT a.date,a.por AS `oms`, b.qty AS `qtypo`, b.unit, a.cur, b.price AS Harga, a.val AS Total, b.inv, c.name AS invname, e.spm AS smt, e.sjr AS sjt, a.sub AS `Kode Supplier`, f.name AS `Nama Supplier`, b.cct, g.name AS cctname, a.remark, b.qty AS qtylpb, '0' AS saldo
FROM por a
LEFT JOIN pord b ON b.por = a.por
left join inv c on b.inv = c.inv
LEFT JOIN sjr e ON a.por = e.okl_rms
LEFT JOIN sub f ON a.sub = f.sub
LEFT JOIN cct g ON b.cct =g.cct
WHERE 
     if(Psuba<>'' and Psubz<>'', a.sub between Psuba and Psubz, 1)
     and if(Pomsa<>'' and Pomsz<>'', a.por between Pomsa and Pomsz, 1)
     AND a.date>=Pdatea and a.date<adddate(Pdatez,1)
     and a.delete=0
	  and if(Pinva<>'' and Pinvz<>'', b.inv between Pinva and Pinvz,1=1);
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LapHistoryPORetur
DROP PROCEDURE IF EXISTS `Sp_LapHistoryPORetur`;
DELIMITER //
CREATE PROCEDURE `Sp_LapHistoryPORetur`(Pdatea datetime, Pdatez datetime, Psuba char(15), Psubz char(15), Prmsa char(15), Prmsz char(15), Pinva char(15), Pinvz char(15), Pstatus int)
BEGIN
drop temporary table if exists outpo;
create temporary table outpo as
select rms,date,sub,inv,sum(qtypo-qty) as qtypo,rma,remark, if(close=1, 'CLOSED', 'OPEN') as status from
(
  select rms.rms, rms.date, rms.sub, rms.close, rmd.inv, rmd.qty as qtypo, 0 as qty,rms.rma,rmd.remark
    from rms, rmd
   where rms.rms=rmd.rms
     and if(Psuba<>'' and Psubz<>'', rms.sub between Psuba and Psubz, 1)
     and if(Prmsa<>'' and Prmsz<>'', rms.rms between Prmsa and Prmsz, 1)
     and if(Pinva<>'' and Pinvz<>'', rmd.inv between Pinva and Pinvz, 1)
     and rms.date>=Pdatea and rms.date<adddate(Pdatez,1)
     and rms.delete=0
) as outpo
group by rms,date,sub,inv,remark;
drop temporary table if exists realpo;
create temporary table realpo as
select * from
(
  select spm.spm, spm.okl_rms as rms, spm.sub, spd.inv, max(spd.qty) as qty, spm.date as spmdate,
         sjr.sjr,sjrd.qty as qtysjr, sjr.date as sjrdate
    from spm inner join spd on spm.spm=spd.spm
              left join sjr on spm.spm=sjr.spm
              left outer join sjrd on sjrd.sjr=sjr.sjr and sjrd.inv=spd.inv and sjrd.remark=spd.remark
   where if(Psuba<>'' and Psubz<>'',spm.sub between Psuba and Psubz,1)
     and if(Prmsa<>'' and Prmsz<>'',spm.okl_rms between Prmsa and Prmsz,1)
     and if(Pinva<>'' and Pinvz<>'',spd.inv between Pinva and Pinvz,1)
     and spm.delete=0 and spm.group_=2 and sjr.delete=0
   group by spm.spm, spm.okl_rms, spm.sub, spd.inv,spd.remark
) as realpo;
select outpo.sub, outpo.date, outpo.status, outpo.rms, outpo.qtypo, outpo.inv, inv.name as invname, inv.unit,
outpo.rma as prq,
(select price from rmd where rmd.rms=outpo.rms and rmd.inv=outpo.inv and rmd.remark=outpo.remark limit 1) as price,
realpo.spmdate, if(realpo.spm is null,"",realpo.spm) as nospm,
realpo.sjrdate, if(realpo.sjr is null,"",realpo.sjr) as nosjr,if(realpo.qtysjr is null,0,realpo.qtysjr) as qtysjr,
sub.name as subname, if(realpo.qty is null,0,realpo.qty) as qtyspm, 0 as saldo
from outpo
left outer join realpo on outpo.rms=realpo.rms and outpo.inv=realpo.inv
left outer join sub on outpo.sub=sub.sub
left outer join inv on outpo.inv=inv.inv
where if(Pstatus=1,status='OPEN',if(Pstatus=2,status='CLOSED',1))
order by 1,2,3,4,5,7;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LapHistoryPR
DROP PROCEDURE IF EXISTS `Sp_LapHistoryPR`;
DELIMITER //
CREATE PROCEDURE `Sp_LapHistoryPR`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Pprqa` char(15),
	IN `Pprqz` char(15)
)
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists outpr;
create temporary table outpr (prq varchar(15), `date` datetime, inv varchar(15), qty double, remark VARCHAR(10000),qty1 double,unit varchar(6),noprd integer);
insert into outpr
(
  select q.prq, q.date, d.inv, sum(d.qty) as qty, d.remark as remark,d.qty1,d.unit, d.no noprd
    from prq q, prd d
   where q.prq=d.prq and q.delete=0
     and q.date>=Pdatea and q.date<adddate(Pdatez,1)
     and if(Pprqa<>'' and Pprqz<>'',q.prq between Pprqa and Pprqz,1)
  group by prq,date,inv,remark
);
drop temporary table if exists realpr1;
drop temporary table if exists realpr2;
drop temporary table if exists realpr;
create temporary table realpr1 as select * from
(
    
    select oms.oms, omd.prq, oms.date as podate, oms.sub, omd.inv, omd.remark, sum(omd.qty1) as poqty, omd.unit as pounit,
           s.spb, s.spbdate, s.spbqty,s.spbqty1,s.unit1, omd.noprd
    from oms inner join omd on oms.oms=omd.oms
             left join
             (
               select spb.spb, spb.oms, spb.sub, spb.date as spbdate,spbd.inv, spbd.remark,sum(spbd.qty) as spbqty,sum(spbd.qty1) as spbqty1, spbd.unit as unit1
                 from spb inner join spbd on spb.spb=spbd.spb
                where spb.delete=0 and spb.withPO=1 and spb.date>pdatea
               group by spb, oms, inv, remark
             ) as s on s.oms=oms.oms and s.inv=omd.inv and s.remark=omd.remark
    where oms.delete=0 and oms.date>pdatea
      and if(Pprqa<>'' and Pprqz<>'',omd.prq between Pprqa and Pprqz,1)
    group by oms,spb, prq, inv, remark
) as x;
create temporary table realpr2 as select * from
(
  select convert ('' using latin1) as oms, spb.oms as prq, date(00000000) as podate, spb.sub, spbd.inv, spbd.remark, 0 as poqty,'' as pounit,
         spb.spb, spb.date as spbdate, sum(spbd.qty) as spbqty, sum(spbd.qty1) as spbqty1, spbd.unit as unit1, '' as noprd
    from spb inner join spbd on spb.spb=spbd.spb
    where spb.delete = 0 and spb.withPO=0 and spb.date>pdatea
       and if(Pprqa<>'' and Pprqz<>'',spb.oms between Pprqa and Pprqz,1)
    group by prq, inv, remark
) as y;
create temporary table realpr as select * from
(
  select * from realpr1
  union
  select * from realpr2
) as z;
select outpr.prq, outpr.date as prdate, ifnull(realpr.sub,'') as sub, ifnull(sub.name,'') as subname,
       outpr.inv, outpr.remark as invname, realpr.unit1,
       outpr.remark, ifnull(outpr.qty1,0) as prqty, ifnull(realpr.oms,'') as oms, realpr.podate,
       ifnull(realpr.poqty,0) as poqty, ifnull(realpr.spb,'') as spb, realpr.spbdate,
       ifnull(realpr.spbqty1,0) as spbqty,
       lph.lph as lpb,ifnull(lpd.qty1,0) as lpdqty, lph.date as lpbdate
     from outpr
left join (realpr left join lph on realpr.spb=lph.spb and lph.`delete`=0) on outpr.prq = realpr.prq
and outpr.inv=realpr.inv and outpr.noprd=realpr.noprd
left outer join lpd on realpr.inv=lpd.inv and realpr.remark=lpd.remark and lpd.lph=lph.lph
left join inv on outpr.inv=inv.inv
left join sub on realpr.sub=sub.sub;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LapHistoryPRJasa
DROP PROCEDURE IF EXISTS `Sp_LapHistoryPRJasa`;
DELIMITER //
CREATE PROCEDURE `Sp_LapHistoryPRJasa`(
	IN `Pdatea` DATETIME,
	IN `Pdatez` DATETIME,
	IN `Pprqa` CHAR(15),
	IN `Pprqz` CHAR(15)
)
BEGIN
select sub.sub,sub.name as subname,e.rma as noprjasa,e.date as prjasadate,e.inv,e.remark,inv.unit,e.qty as qtyprjasa,
ifnull(f.nopojasa,'') as nopojasa,ifnull(f.podate,'') as podate,ifnull(f.qty,0) as qtypojasa,
ifnull(f.nospm,'') as nospm,ifnull(f.spmdate,'') as spmdate,ifnull(f.qtyspm,0) as qtyspm
,ifnull(f.nosj,'') as nosj,ifnull(f.sjdate,'') as sjdate,ifnull(f.qtysj,0) as qtysj,ifnull(e.qty-f.qty,e.qty) as openpr
from
(
  select por.sub,rma.rma,rma.date,rmb.inv,rmb.remark,rmb.qty
    from rma,rmb,por, pord
   where rma.rma=rmb.rma and pord.por=por.por and rma.delete=FALSE
) as e
left join
(
  select c.nopojasa,c.podate,c.inv,c.qty,ifnull(d.nospm,'') as nospm,ifnull(d.spmdate,'') as spmdate,
         ifnull(d.qtyspm,0) as qtyspm,ifnull(d.nosj,'') as nosj,ifnull(d.sjdate,'') as sjdate,
         ifnull(d.qtysj,0) as qtysj
    from
    (
      SELECT por.por as nopojasa,por.date as podate,pord.inv,pord.qty
        from por,pord
       where por.por=pord.por AND por.`delete`=FALSE
    ) as c
    left join
    (
      select a.nospm,a.spmdate,a.okl_rms,a.inv, a.qty as qtyspm, ifnull(b.nosj,'') as nosj,
             ifnull(b.sjdate,'') as sjdate,ifnull(b.qty,0) as qtysj
        from
        (
          select spm.spm as nospm,spm.date as spmdate,spm.okl_rms,spd.inv,spd.qty
            from spm,spd
           where spm.spm=spd.spm and spm.delete=false
        ) as a
        left join
        (
          select sjr.sjr as nosj,sjr.date as sjdate,sjr.spm,sjrd.inv,sjrd.qty
            from sjr,sjrd
           where sjr.sjr=sjrd.sjr and sjr.delete=false
        ) as b
        on a.nospm=b.spm and a.inv=b.inv
    ) as d
    on c.nopojasa=d.okl_rms and c.inv=d.inv
) as f
on e.inv=f.inv
Left join sub on e.sub=sub.sub
Left join inv on e.inv=inv.inv
where e.date BETWEEN Pdatea AND Pdatez
and if(Pprqa<>'' and Pprqz<>'',e.rma between Pprqa and Pprqz,1);
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LapHistoryPRRetur
DROP PROCEDURE IF EXISTS `Sp_LapHistoryPRRetur`;
DELIMITER //
CREATE PROCEDURE `Sp_LapHistoryPRRetur`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Pprqa` char(15),
	IN `Pprqz` char(15),
	IN `Psuba` char(15),
	IN `Psubz` char(15)
)
BEGIN
select e.sub,sub.name as subname,e.rma as noprretur,e.date as prreturdate,e.inv,e.remark,inv.unit,e.qty as qtyprretur,
ifnull(f.noporetur,'') as noporetur,ifnull(f.podate,'') as podate,ifnull(f.qty,0) as qtyporetur,
ifnull(f.nospm,'') as nospm,ifnull(f.spmdate,'') as spmdate,ifnull(f.qtyspm,0) as qtyspm
,ifnull(f.nosj,'') as nosj,ifnull(f.sjdate,'') as sjdate,ifnull(f.qtysj,0) as qtysj,ifnull(e.qty-f.qty,e.qty) as openpr
from
(
  select rma.sub,rma.rma,rma.date,rmb.inv,rmb.remark,rmb.qty
    from rma,rmb
   where rma.rma=rmb.rma and rma.delete=false
) as e
left join
(
  select c.noporetur,c.podate,c.rma,c.inv,c.qty,ifnull(d.nospm,'') as nospm,ifnull(d.spmdate,'') as spmdate,
         ifnull(d.qtyspm,0) as qtyspm,ifnull(d.nosj,'') as nosj,ifnull(d.sjdate,'') as sjdate,
         ifnull(d.qtysj,0) as qtysj
    from
    (
      select rms.rms as noporetur,rms.date as podate,rms.rma,rmd.inv,rmd.qty
        from rms,rmd
       where rms.rms=rmd.rms and rms.delete=false
    ) as c
    left join
    (
      select a.nospm,a.spmdate,a.okl_rms,a.inv, a.qty as qtyspm, ifnull(b.nosj,'') as nosj,
             ifnull(b.sjdate,'') as sjdate,ifnull(b.qty,0) as qtysj
        from
        (
          select spm.spm as nospm,spm.date as spmdate,spm.okl_rms,spd.inv,spd.qty
            from spm,spd
           where spm.spm=spd.spm and spm.delete=false
        ) as a
        left join
        (
          select sjr.sjr as nosj,sjr.date as sjdate,sjr.spm,sjrd.inv,sjrd.qty
            from sjr,sjrd
           where sjr.sjr=sjrd.sjr and sjr.delete=false
        ) as b
        on a.nospm=b.spm and a.inv=b.inv
    ) as d
    on c.noporetur=d.okl_rms and c.inv=d.inv
) as f
on e.rma=f.rma and e.inv=f.inv
Left join sub on e.sub=sub.sub
Left join inv on e.inv=inv.inv
where e.date between Pdatea and Pdatez
and if(Pprqa<>'' and Pprqz<>'',e.rma between Pprqa and Pprqz,1)
and if(Psuba<>'' and Psubz<>'',e.sub between Psuba and Psubz,1);
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LapHistorySO
DROP PROCEDURE IF EXISTS `Sp_LapHistorySO`;
DELIMITER //
CREATE PROCEDURE `Sp_LapHistorySO`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Psuba` char(15),
	IN `Psubz` char(15),
	IN `Pokla` char(15),
	IN `Poklz` char(15),
	IN `Pstatus` int
)
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists outso;
create temporary table outso as
  select outso.okl,date,sub,nodsg,inv,sum(qtyso-qty) as qtyso,aaa.close from
  (
    select rso.okl,rso.date, rso.sub,rso.nodsg,rso.inv,rso.qty as qtyso,rso.qtyout as qty
    from rso
    where if(Psuba<>'' and Psubz<>'', rso.sub between Psuba and Psubz, 1)
      and if(Pokla<>'' and Poklz<>'', rso.okl between Pokla and Poklz, 1)
      and rso.period=Pperiod
    union all
    select okl.okl,okl.date, okl.sub, okd.nodsg, okd.inv,okd.qty as qtyso, 0 as qty
    from okl, okd
    where okl.okl=okd.okl and okl.delete=0
      and if(Psuba<>'' and Psubz<>'',okl.sub between Psuba and Psubz,1)
      and if(Pokla<>'' and Poklz<>'',okl.okl between Pokla and Poklz,1)
      and okl.date>=Pdatea and okl.date<adddate(Pdatez,1)
  ) as outso, (select okl,close from okl) as aaa
  where outso.okl=aaa.okl
  group by okl,date,sub,nodsg,inv;
drop temporary table if exists realso;
create temporary table realso as
    select sjd.okl, sjh.sub, sjd.nodsg, sjd.inv, sjd.qty, sjh.sjh, sjh.date,sjd.mor,sjd.qty1,sjh.spm
      from sjh, sjd
     where sjh.sjh=sjd.sjh and sjh.delete=0
       and if(Psuba<>'' and Psubz<>'', sjh.sub between Psuba and Psubz, 1)
       and if(Pokla<>'' and Poklz<>'', sjd.okl between Pokla and Poklz, 1)
       and sjh.date >=pdatea and sjh.date< adddate(pdatez,1);
select outso.sub, outso.date, outso.okl, round(outso.qtyso/konversi,2) as qtyso, outso.nodsg, outso.inv,inv.unit2, inv.name as invname,realso.nodsg as `no batch`,spm.spm,spm.date,concat('''',spm.nodoc) as nopen,
       realso.date as sjdate, if(realso.sjh is null,space(15),realso.sjh) as sjno,
       sub.name as subname,
       round(if(realso.qty is null,0,realso.qty)/konversi,2) as qtysj,round(if(realso.qty is null,0,realso.qty),2) as `qty dasar`,inv.unit as `unit dasar`, 0 as saldo, okl.nopoc,
       if(subto.aliasname is null,'',subto.aliasname) as aliasname,ifnull(( select round(price*realso.qty,2) as val
        from okd where okd.okl=outso.okl and outso.inv=okd.inv limit 1
       ),0)as val,
      
       ifnull(( select round(val/qty,2) as price
        from okd where okd.okl=outso.okl and outso.inv=okd.inv limit 1
       ),0)as price,
       okl.cur,if((outso.qtyso/konversi)-ifnull((select sum(ifnull(qty,0)) from spd where spd.okl=outso.okl and spd.inv=outso.inv),0)/konversi <=0 and outso.close=true ,'CLOSED','OPEN') as status,
       (outso.qtyso/konversi)-ifnull((select sum(ifnull(qty,0)) from spd where spd.okl=outso.okl and spd.inv=outso.inv),0)/konversi as qtysisa, outso.close
from outso
left outer join realso on outso.okl=realso.okl and outso.inv=realso.inv
left outer join sub on outso.sub=sub.sub
left outer join inv on outso.inv=inv.inv
left outer join okl on outso.okl=okl.okl
left outer join spm on realso.spm=spm.spm
left outer join subto on cast(okl.shiptoaddress as char(80))=cast(subto.shiptoaddress as char(80))
left outer join konversi on inv.inv=konversi.inv and inv.unit2=konversi.unit
where if(Pstatus=1,outso.close=false,if(Pstatus=2,outso.close=true,1=1))
order by 1,2,3,4,6,8;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LapHppBF
DROP PROCEDURE IF EXISTS `SP_LapHppBF`;
DELIMITER //
CREATE PROCEDURE `SP_LapHppBF`(Pdatea datetime,Pdatez datetime)
BEGIN
select * from (
select sjh.sjh,sjh.date,sjh.sub,sub.name,sjd.remark,ind.qty,ind.val
from sjh left outer join sjd on sjh.sjh=sjd.sjh left outer join ind on sjd.sjh=ind.jurnal and sjd.inv=ind.inv
left outer join sub on sjh.sub=sub.sub
where sjh.date >= Pdatea and sjh.date < adddate(pdatez,interval 1 day)
and sjh.sjh not in
(select sjh from kll,klr where klr.klr=kll.klr and klr.date>=pdatea and klr.date < adddate(pdatez,interval 1 day))
) as x where round(val,2)>0;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LapJatuhTempo
DROP PROCEDURE IF EXISTS `SP_LapJatuhTempo`;
DELIMITER //
CREATE PROCEDURE `SP_LapJatuhTempo`(Psuba varchar(15),Psubz varchar(15), Pdatea datetime, Pdatez datetime, Pgroup_ smallint(5), Pacca varchar(15), Paccz varchar(15), Pintv int)
BEGIN
  declare Pperiod varchar(4);
  set Pperiod=(select Fdate2period(Pdatea));
  drop temporary table if exists outrhp;
  create temporary table outrhp as select jurnal,subname,accname,subjurnal,date,sum(val) as val,remark,duedate,acc,dk,sub,invoice,kurs from
  (
    select rsb.jurnal,sub.name as subname,acc.name as accname, rsb.subjurnal, rsb.date, rsb.val*if(rsb.dk='D',1,-1) val, left(rsb.remark,50) remark, rsb.duedate, rsb.acc, rsb.dk, rsb.sub,trim(rsb.invoice) invoice, rsb.kurs
      from rsb,acc,sub
     where rsb.acc=acc.acc and  rsb.sub=sub.sub and sub.group_=pgroup_ and (rsb.sub between Psuba and Psubz) and rsb.period=Pperiod and (rsb.acc between Pacca and Paccz)
           and round(val,2)<>0
    union all
    select rhp.jurnal,sub.name as subname,acc.name as accname, rhp.subjurnal, rhp.date, rhp.val*if(rhp.dk='D',1,-1) val, left(rhp.remark,50) remark, rhp.duedate, rhp.acc, rhp.dk, rhp.sub, trim(rhp.invoice) invoice, rhp.kurs
      from rhp,acc,sub
     where rhp.acc=acc.acc and rhp.sub=sub.sub and sub.group_=pgroup_ and (rhp.sub between Psuba and Psubz) and (if(Pintv=0,date(rhp.duedate),date(rhp.date)) between Pdatea and Pdatez) and (rhp.acc between Pacca and Paccz)
      and rhp.acc in (select acc from grp) and round(val,2)<>0
  ) as outrhp group by sub,jurnal,acc,invoice ;
  drop temporary table if exists tpayhp;
  create temporary table tpayhp as
    select payhp.reff, payhp.sub, payhp.acc, sum(payhp.val*if(payhp.dk='D',-1,1)) as val, trim(payhp.invoice) as invoice
      from payhp
     where payhp.sub between Psuba and Psubz
       and payhp.acc between Pacca and Paccz
       and date(payhp.date) between Pdatea and  Pdatez
     group by payhp.reff, payhp.sub, payhp.acc,trim(payhp.invoice);
  drop temporary table if exists trhp;
  create temporary table trhp as select dk,sub, acc, date,subname,accname,jurnal,left(remark,50) remark, val, duedate, kurs, ket, subjurnal from
  (
    select outrhp.date, outrhp.subname,outrhp.accname,outrhp.jurnal, outrhp.subjurnal, outrhp.remark, outrhp.duedate, outrhp.val-ifnull(tpayhp.val,0) as val,outrhp.invoice,
           outrhp.sub, outrhp.dk, outrhp.acc, outrhp.kurs, if(round((outrhp.val-ifnull(tpayhp.val,0)),2)<=0,'LUNAS','') as ket
    from outrhp
    left outer join tpayhp on outrhp.jurnal=tpayhp.reff and
                             outrhp.sub=tpayhp.sub and
                             outrhp.acc=tpayhp.acc and
                             trim(outrhp.invoice)=trim(tpayhp.invoice)
  ) as outrhp where if(Pintv=0,outrhp.val=outrhp.val,round(outrhp.val)<>0)
  group by dk,sub, date,jurnal,remark,duedate,acc,invoice, kurs;
  select 0 as Nomor,trhp.date, trhp.jurnal, trhp.remark, trhp.val*trhp.kurs as val, trhp.duedate, trhp.dk,if(kurs>1,trhp.val,0) valusd,datediff(Pdatez,trhp.duedate),
         trhp.sub, trhp.acc, trhp.subname, trhp.accname, trhp.ket, if(datediff(Pdatez,trhp.duedate)<0,-1,datediff(Pdatez,trhp.duedate) div Pintv) as gol, Pintv as intv
  from trhp
  order by date, jurnal;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LapJatuhTempo2
DROP PROCEDURE IF EXISTS `SP_LapJatuhTempo2`;
DELIMITER //
CREATE PROCEDURE `SP_LapJatuhTempo2`(Psuba varchar(15),Psubz varchar(15), Pdatea datetime, Pdatez datetime, Pgroup_ smallint(5), Pacca varchar(15), Paccz varchar(15), Pintv int)
BEGIN
  declare Pperiod varchar(4);
  set Pperiod=(select Fdate2period(Pdatea));
  drop temporary table if exists outrhp;
  create temporary table outrhp as select * from
  (
    select rsb.jurnal, rsb.subjurnal, date(rsb.date) as date, rsb.val, left(rsb.remark,50) remark, date(rsb.duedate) as duedate, rsb.acc, rsb.dk, rsb.sub,rsb.invoice, rsb.kurs
      from rsb
     where (rsb.sub between Psuba and Psubz) and rsb.period=Pperiod and (rsb.acc between Pacca and Paccz)
    union all
    select rhp.jurnal, rhp.subjurnal, rhp.date, rhp.val, left(rhp.remark,50) remark, rhp.duedate, rhp.acc, rhp.dk, rhp.sub, rhp.invoice, rhp.kurs
      from rhp
     where (rhp.sub between Psuba and Psubz) and (if(Pintv=0,date(rhp.duedate),date(rhp.date)) between Pdatea and Pdatez) and (rhp.acc between Pacca and Paccz)
      and rhp.acc in (select acc from grp)
  ) as outrhp;
  drop temporary table if exists tpayhp;
  create temporary table tpayhp as
    select payhp.reff, payhp.sub, payhp.acc, sum(payhp.val) as val, max(payhp.invoice) as invoice
      from payhp
     where payhp.sub between Psuba and Psubz
       and payhp.acc between Pacca and Paccz
       and payhp.period=Pperiod
     group by payhp.reff, payhp.sub, payhp.acc;
  drop temporary table if exists trhp;
  create temporary table trhp as select dk,sub, acc, date,jurnal,left(remark,50) remark, val, duedate, kurs, ket, subjurnal from
  (
    select date(outrhp.date) as date, outrhp.jurnal, outrhp.subjurnal, outrhp.remark, date(outrhp.duedate) duedate, outrhp.val-ifnull(tpayhp.val,0) as val,
           outrhp.sub, outrhp.dk, outrhp.acc, outrhp.kurs, if((outrhp.val-ifnull(tpayhp.val,0))<=0,'SELESAI','') as ket
    from outrhp
    left outer join tpayhp on outrhp.jurnal=tpayhp.reff and
                             outrhp.sub=tpayhp.sub and
                             outrhp.acc=tpayhp.acc
  ) as outrhp where if(Pintv=0,outrhp.val=outrhp.val,outrhp.val>0)
  group by dk,sub, date,jurnal,remark,val,duedate,acc, kurs;
  select 0 as Nomor,trhp.date, trhp.jurnal, left(trhp.remark,50) remark, trhp.val*trhp.kurs as val, date(trhp.duedate) duedate, trhp.dk,
         trhp.sub, trhp.acc,sub.name as subname, acc.name as accname, trhp.ket, if(datediff(Pdatez,date(trhp.duedate))<0,-1,datediff(Pdatez,date(trhp.duedate)) div Pintv) as gol, Pintv as intv,
  SUM(trhp.val*trhp.kurs*if(date(trhp.duedate)>Pdatez,if(trhp.dk='D',1,-1),0)) as val0,
	SUM(trhp.val*trhp.kurs*if(date(trhp.duedate)<=Pdatez AND datediff(Pdatez,date(trhp.duedate))<=Pintv,if(trhp.dk='D',1,-1),0)) as val1,
  SUM(trhp.val*trhp.kurs*if(trhp.duedate<=Pdatez  AND datediff(Pdatez,date(trhp.duedate))>Pintv AND datediff(Pdatez,date(trhp.duedate))<=(Pintv*2),if(dk='D',1,-1),0)) as val2,
  SUM(trhp.val*if(date(trhp.duedate)<=Pdatez AND datediff(Pdatez,date(trhp.duedate))>(Pintv*2) AND datediff(Pdatez,date(trhp.duedate))<=(Pintv*3),if(trhp.dk='D',1,-1),0)) as val3,
	SUM(trhp.val*if(date(trhp.duedate)<=Pdatez AND datediff(Pdatez,date(trhp.duedate))>(Pintv*3),if(trhp.dk='D',1,-1),0)) as val4,
  SUM(trhp.val*trhp.kurs*if(trhp.dk='D',1,-1)) as val5
  from trhp
  left outer join sub on trhp.sub=sub.sub
  left outer join acc on trhp.acc=acc.acc
  where sub.group_=Pgroup_
  group by trhp.acc,trhp.sub;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LapListMO
DROP PROCEDURE IF EXISTS `Sp_LapListMO`;
DELIMITER //
CREATE PROCEDURE `Sp_LapListMO`(Pdatea date, Pdatez date, Pmora char(15), Pmorz char(15), Pdsga char(15), Pdsgz char(15))
BEGIN
select a.*,ceil((a.LKertas-3)/50)*50 as Lkertas1 from
(select mor.mor, mor.qty1, mor.qty, mor.unit, okl.dateneed as date, dsg.*, inv.name,
         c1.warna as color11, c2.warna as color21, c3.warna as color31,okl.nopoc
    from mor left join (select okl.*, okd.dateneed,okd.nodsg from okl,okd where okl.okl=okd.okl) as okl on mor.okl=okl.okl and mor.nodsg=okl.nodsg, dsg, inv,
        (select dsg.`nodsg`,inv.name as warna from dsg left join inv on dsg.`color1`=inv.inv) as c1,
        (select dsg.`nodsg`,inv.name as warna from dsg left join inv on dsg.`color2`=inv.inv) as c2,
        (select dsg.`nodsg`,inv.name as warna from dsg left join inv on dsg.`color3`=inv.inv) as c3
   where mor.date>Pdatea and mor.date<adddate(Pdatez,1)
     and if (Pmora<>'' and Pmorz<>'', mor.mor between Pmora and Pmorz, 1)
     and if (Pdsga<>'' and Pdsgz<>'', mor.nodsg between Pdsga and Pdsgz, 1)
     and mor.`delete`=0 and mor.nodsg=dsg.nodsg and dsg.inv=inv.inv
     and mor.nodsg=c1.nodsg and mor.nodsg=c2.nodsg and mor.nodsg=c3.nodsg) a;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LapLPB
DROP PROCEDURE IF EXISTS `SP_LapLPB`;
DELIMITER //
CREATE PROCEDURE `SP_LapLPB`(
	IN `Pinva` varchar(15),
	IN `Pinvz` varchar(15),
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Psuba` varchar(15),
	IN `Psubz` varchar(15),
	IN `Plpba` varchar(15),
	IN `Plpbz` varchar(15),
	IN `POms` varchar(15),
	IN `Ploca` varchar(15),
	IN `Plocz` varchar(15)
)
BEGIN
select lph.sub,sub.name,lph.date,lpd.inv,lpd.remark as name,lph.oms,lph.lph,lpd.qty1 as qty,
       lpd.unit as unit, (xind.val/xind.qty)*konversi.konversi as price,xind.val as val,lph.nopol,spb.nosj sjl, lpd.nodsg AS kodebatch
from lph
inner join lpd on lph.lph=lpd.lph
left outer join spb on lph.spb=spb.spb
left outer join (select ind.jurnal,ind.inv,sum(ind.qty) qty,sum(ind.val) val from ind where ind.date>=Pdatea and ind.date<adddate(Pdatez,1) group by ind.jurnal,ind.inv) as xind
on lpd.lph=xind.jurnal and lpd.inv=xind.inv
left outer join konversi on lpd.inv=konversi.inv and lpd.unit=konversi.unit
left join sub on lph.sub=sub.sub, inv
where if (Psuba<>'' and Psubz<>'',lph.sub between Psuba and Psubz,1)
  and if (Pinva<>'' and Pinvz<>'',lpd.inv between Pinva and Pinvz,1)
  and if (Ploca<>'' and Plocz<>'',lpd.loc between Ploca and Plocz,1)
  and if (Plpba<>'' and Plpbz<>'',lph.lph between Plpba and Plpbz,1)
  and if (Pdatea<>'' and Pdatez<>'',lph.date>=Pdatea and lph.date<adddate(Pdatez,1),1)
  and lph.delete=0 and lpd.inv=inv.inv
  and if (POms<>'',lph.oms = POms,1)
order by lph.lph;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LapLPBPajak
DROP PROCEDURE IF EXISTS `SP_LapLPBPajak`;
DELIMITER //
CREATE PROCEDURE `SP_LapLPBPajak`(
	IN `Pinva` varchar(15),
	IN `Pinvz` varchar(15),
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Psuba` varchar(15),
	IN `Psubz` varchar(15),
	IN `Plpba` varchar(15),
	IN `Plpbz` varchar(15),
	IN `POms` varchar(15),
	IN `Ploca` varchar(15),
	IN `Plocz` varchar(15)
)
BEGIN
select (select msk from msl where msl.lph=lpd.lph limit 1)  msk,(select msk.date from msl,msk where msl.msk=msk.msk and msl.lph=lpd.lph limit 1) mskdate,lph.sub,sub.name,lph.date,lpd.inv,lpd.remark invname,lph.oms, lph.spb,lph.lph,lpd.qty1 as qty,lpd.unit,lpd.loc,
lph.nopol,(select nosj from spb where spb=lph.spb) as sjl, lpd.nodsg AS kodebatch
from lph
left outer join lpd on lpd.lph=lph.lph
left  outer join sub on lph.sub=sub.sub where lph.period between Fdate2period(Pdatea) and Fdate2period(Pdatez) and lph.`delete`=0 order by lph.sub,lph.date,lph.lph;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LapLPBRetur
DROP PROCEDURE IF EXISTS `SP_LapLPBRetur`;
DELIMITER //
CREATE PROCEDURE `SP_LapLPBRetur`(Pinva varchar(15),Pinvz varchar(15),Pdatea datetime,Pdatez datetime,Psuba varchar(15),Psubz varchar(15),Pdsga varchar(15),Pdsgz varchar(15),Prsma varchar(15),Prsmz varchar(15),Pspra varchar(15),Psprz varchar(15))
BEGIN
select rka.sub,sub.name,rka.rka,rka.date,rka.rsm,rka.spr,rkb.nodsg,rkb.inv,rkb.remark,rkb.qty1,rkb.unit
from rka,rkb,sub
where rka.rka=rkb.rka and rka.sub=sub.sub
  and if (Psuba<>'' and Psubz<>'',rka.sub between Psuba and Psubz,1)
  and if (Pinva<>'' and Pinvz<>'',rkb.inv between Pinva and Pinvz,1)
  and if (Pdsga<>'' and Pdsgz<>'',rkb.nodsg between Pdsga and Pdsgz,1)
  and if (Prsma<>'' and Prsmz<>'',rka.rsm between Prsma and Prsmz,1)
  and if (Pspra<>'' and Psprz<>'',rka.spr between Pspra and Psprz,1)
  and rka.date>=Pdatea and rka.date<adddate(Pdatez,1)
  and rka.delete=false;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LapLPBXInvoice
DROP PROCEDURE IF EXISTS `SP_LapLPBXInvoice`;
DELIMITER //
CREATE PROCEDURE `SP_LapLPBXInvoice`(Pdatea datetime,Pdatez datetime,Psuba varchar(15), Psubz varchar(15))
BEGIN
set Pdatea=20090101;
if (pdatez<20150701) then
select * from (
select lph.lph,lph.date,lph.sub,sub.name,lph.remark as keterangan,lph.spb,lpd.inv,lpd.remark,lpd.qty,inv.unit,lph.oms,oms_in.price*oms.kurs as harga,lpd.qty*oms_in.price*oms.kurs as total
from sub,oms_in,oms,inv,lpd,lph left join (select msl.* from msl,msk where msl.msk=msk.msk and msk.`delete`=0 and msk.date<adddate(Pdatez,1))as xmsl on lph.lph=xmsl.lph
where oms_in.oms=oms.oms and lph.sub=sub.sub and lph.lph=lpd.lph and isnull(xmsl.msk)=true and lpd.inv=inv.inv and lph.delete=false and lph.oms=oms_in.oms and lpd.remark=oms_in.remark and lpd.inv=oms_in.inv
and if(Psuba<>'' and Psubz<>'',lph.sub between Psuba and Psubz,1) and xmsl.lph is null
and (lph.date>=20140101 or lph.lph in (select lph from lpbbf)) and lph.date<adddate(Pdatez,1) and left(inv.inv,1)<>'9' and oms.group_=3 and lph.`delete`=0
union all
select cad.cad,cad.date,cad.sub,sub.name,cad.remark,cad.cad,'','',0,'',cad.cad,cadet.val*cad.kurs,cadet.val*cad.kurs from cadet,cad,sub where cadet.cad=cad.cad and cad.sub=sub.sub and cadet.acc='21020401'
and cad.date<adddate(Pdatez,1) and
cad.cad not in (select cad from msx,msk where msk.msk=msx.msk and msx.acc='21020401' and msk.`date`< adddate(Pdatez,1)
union all
select cad from umd,umh where umh.umh=umd.umh and umd.acc='21020401' and umh.`date`< adddate(Pdatez,1))
union all
select sjr.sjr,sjr.date,sjr.sub,sub.name,sjr.remark,sjr.spm,sjrd.inv,sjrd.remark,sjrd.qty*-1,sjrd.unit, '',-1*ind.val/ind.qty,ind.val*-1
from sjrd,sjr,sub,ind where sjrd.sjr=sjr.sjr and sjr.sub=sub.sub and sjrd.inv=ind.inv and sjrd.sjr=ind.jurnal
and sjr.date<adddate(Pdatez,1) and if(Psuba<>'' and Psubz<>'',sjr.sub between Psuba and Psubz,1) and sjr.group_=1 and
sjr.sjr not in (select rma from rms where rms.`date`< adddate(Pdatez,1) and if(Psuba<>'' and Psubz<>'',rms.sub between Psuba and Psubz,1))
) as xtmp where lph not in ('SJR-1206-000002')
order by lph;
else
Call SP_LapLPBXInvoice0715(Pdatea,Pdatez,Psuba,Psubz);
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LapLPBXInvoice0715
DROP PROCEDURE IF EXISTS `SP_LapLPBXInvoice0715`;
DELIMITER //
CREATE PROCEDURE `SP_LapLPBXInvoice0715`(Pdatea datetime,Pdatez datetime,Psuba varchar(15), Psubz varchar(15))
BEGIN
set Pdatea=20090101;
select * from (
select lph.lph,lph.date,lph.sub,sub.name,lph.remark as keterangan,lph.spb,lpd.inv,lpd.remark,lpd.qty,inv.unit,lph.oms,oms_in.price*oms.kurs as harga,lpd.qty*oms_in.price*oms.kurs as total
from sub,oms_in,oms,inv,lpd,lph left join (select msl.* from msl,msk where msl.msk=msk.msk and msk.`delete`=0 and msk.date<adddate(Pdatez,1))as xmsl on lph.lph=xmsl.lph
where oms_in.oms=oms.oms and lph.sub=sub.sub and lph.lph=lpd.lph and isnull(xmsl.msk)=true and lpd.inv=inv.inv and lph.delete=false and lph.oms=oms_in.oms and lpd.remark=oms_in.remark and lpd.inv=oms_in.inv
and if(Psuba<>'' and Psubz<>'',lph.sub between Psuba and Psubz,1) and xmsl.lph is null
and (lph.date>=20150701 or lph.lph in (select lph from lpbbf062015)) and lph.date<adddate(Pdatez,1) and left(inv.inv,1)<>'9' and oms.group_=3 and lph.`delete`=0
union all
select cad.cad,cad.date,cad.sub,sub.name,cad.remark,cad.cad,'','',0,'',cad.cad,cadet.val*cad.kurs,cadet.val*cad.kurs from cadet,cad,sub where cadet.cad=cad.cad and cad.sub=sub.sub and cadet.acc='21020401'
and cad.date<adddate(Pdatez,1) and
cad.cad not in (select cad from msx,msk where msk.msk=msx.msk and msx.acc='21020401' and msk.`date`< adddate(Pdatez,1)
union all
select cad from umd,umh where umh.umh=umd.umh and umd.acc='21020401' and umh.`date`< adddate(Pdatez,1))
union all
select sjr.sjr,sjr.date,sjr.sub,sub.name,sjr.remark,sjr.spm,sjrd.inv,sjrd.remark,sjrd.qty*-1,sjrd.unit, '',-1*ind.val/ind.qty,ind.val*-1
from sjrd,sjr,sub,ind where sjrd.sjr=sjr.sjr and sjr.sub=sub.sub and sjrd.inv=ind.inv and sjrd.sjr=ind.jurnal
and sjr.date<adddate(Pdatez,1) and if(Psuba<>'' and Psubz<>'',sjr.sub between Psuba and Psubz,1) and sjr.group_=1 and
sjr.sjr not in (select rma from rms where rms.`date`< adddate(Pdatez,1) and if(Psuba<>'' and Psubz<>'',rms.sub between Psuba and Psubz,1))
) as xtmp where lph not in ('SJR-1206-000002')
order by lph;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LapLPBXInvoice1
DROP PROCEDURE IF EXISTS `SP_LapLPBXInvoice1`;
DELIMITER //
CREATE PROCEDURE `SP_LapLPBXInvoice1`(Pdatea datetime,Pdatez datetime,Psuba varchar(15), Psubz varchar(15))
BEGIN
set Pdatea=20090101;
select * from (
select lph.lph,lph.date,lph.sub,sub.name,lph.remark as keterangan,lph.spb,lpd.inv,lpd.remark,lpd.qty,inv.unit,lph.oms,oms_in.price*oms.kurs as harga,lpd.qty*oms_in.price*oms.kurs as total
from sub,oms_in,oms,inv,lpd,(select * from lph where lph.date>=20140101 or lph.lph in (select lph from lpbbf)) lph left join (select msl.* from msl,msk where msl.msk=msk.msk and msk.`delete`=0 and msk.date<adddate(Pdatez,1))as xmsl on lph.lph=xmsl.lph
where oms_in.oms=oms.oms and lph.sub=sub.sub and lph.lph=lpd.lph and isnull(xmsl.msk)=true and lpd.inv=inv.inv and lph.delete=false and lph.oms=oms_in.oms and lpd.remark=oms_in.remark
and if(Psuba<>'' and Psubz<>'',lph.sub between Psuba and Psubz,1) and xmsl.lph is null
and (lph.date>=20140101) and lph.date<adddate(Pdatez,1) and left(inv.inv,1)<>'9' and oms.group_=3 and lph.`delete`=0
union all
select cad.cad,cad.date,cad.sub,sub.name,cad.remark,cad.cad,'','',0,'',cad.cad,cadet.val*cad.kurs,cadet.val*cad.kurs from cadet,cad,sub where cadet.cad=cad.cad and cad.sub=sub.sub and cadet.acc='21020401'
and cad.date<adddate(Pdatez,1) and
cad.cad not in (select cad from msx,msk where msk.msk=msx.msk and msx.acc='21020401' and msk.`date`< adddate(Pdatez,1)
union all
select cad from umd,umh where umh.umh=umd.umh and umd.acc='21020401' and umh.`date`< adddate(Pdatez,1))
union all
select sjr.sjr,sjr.date,sjr.sub,sub.name,sjr.remark,sjr.spm,sjrd.inv,sjrd.remark,sjrd.qty*-1,sjrd.unit, '',-1*ind.val/ind.qty,ind.val*-1
from sjrd,sjr,sub,ind where sjrd.sjr=sjr.sjr and sjr.sub=sub.sub and sjrd.inv=ind.inv and sjrd.sjr=ind.jurnal
and sjr.date<adddate(Pdatez,1) and if(Psuba<>'' and Psubz<>'',sjr.sub between Psuba and Psubz,1) and
sjr.sjr not in (select rma from rms where rms.`date`< adddate(Pdatez,1) and if(Psuba<>'' and Psubz<>'',rms.sub between Psuba and Psubz,1))
) as xtmp where lph not in ('SJR-1206-000002')
order by lph;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LapPPH
DROP PROCEDURE IF EXISTS `SP_LapPPH`;
DELIMITER //
CREATE PROCEDURE `SP_LapPPH`(Pdatea datetime,Pdatez datetime, psuba varchar(15), psubz varchar(15), pacca varchar(15), paccz varchar(15))
BEGIN
select msk.date,sub.name as sub,msk.msk, acc.name as acc,msx.remark,msx.val,msx.pph23,pph4ay2,pph15 from msx  inner join msk on msx.msk=msk.msk
left outer join sub on msk.sub=sub.sub left outer join acc on msx.acc=acc.acc where (ifnull(pph23,0)+ifnull(pph4ay2,0)+ifnull(pph15,0))>0
and msk.date > pdatea and msk.date < pdatez and msk.sub between psuba and psubz and msx.acc between pacca and paccz
order by TIMESTAMP(STR_TO_DATE(left(msk.chtime,10),'%d/%m/%Y '),time(substr(msk.chtime,11,5)));
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LapPPNKELUARAN
DROP PROCEDURE IF EXISTS `SP_LapPPNKELUARAN`;
DELIMITER //
CREATE PROCEDURE `SP_LapPPNKELUARAN`(psuba varchar(15),psubz varchar(15),pdatea datetime, pdatez datetime)
BEGIN
declare xm varchar(2);
declare xy varchar(2);
declare xyear varchar(4);
set xm = (select  right(Fdate2Period(pdatea),2));
set xy = (select  left(Fdate2Period(pdatea),2));
set xyear = (year(pdatea));
select 'A' , 2, 1 as fpjimport,1,0 as vat,LEFT(replace(replace(ifnull(sub.subpkp,''),'-','.'),'.',''),15) as npwp,
sub.name as subname,trim(klr.fpj) as fpj,
0 as jenisdoc,'' noretur, '' jnsretur,
kld.tglfp as fpjdate,'' as sspdate,concat(xm,xm) as masa, xyear, 0,
sum(kld.dpp*ifnull(klr.kurs,klr.kurs))-(select ifnull(sum(val*klr.kurs),0) from umk where umk.klr=kld.klr) as dpp,
(sum(kld.dpp*ifnull(klr.kurs,klr.kurs))-(select ifnull(sum(val*klr.kurs),0) from umk where umk.klr=kld.klr))*0.1 as val,0
from kld inner join klr on kld.klr=klr.klr
inner join sub on klr.sub=sub.sub
where (kld.tglsfp >= pdatea and kld.tglsfp < adddate(pdatez,1))
and not(trim(left(klr.fpj,3)) ='' or trim(left(klr.fpj,3)) ='000')
and (klr.sub BETWEEN psuba and psubz)
group by klr.klr,klr.fpj
union all
select 'A' , 2, 1 as fpjimport,1,0 as vat,LEFT(replace(replace(ifnull(sub.subpkp,''),'-','.'),'.',''),15) as npwp,
sub.name as subname,trim(rkd.nofp) as fpj,0 as jenisdoc,'' noretur, '' jnsretur,
rkd.tglfp as fpjdate,'' as sspdate,concat(xm,xm) as masa, xyear, 0,
-sum(rkd.dpp*rkd.kurs) as dpp,-sum(FLOOR(rkd.ppn*rkd.kurs)) as val,0
from rkd inner join rkl on rkd.rkl=rkl.rkl
inner join sub on rkl.sub=sub.sub
where (rkd.tglsfp between pdatea and pdatez)
and rkd.ppn>0 and rkd.tglfp >= pdatea and rkd.tglfp < adddate(pdatez,1)
and (rkl.sub BETWEEN psuba and psubz)
group by rkd.nofp
union all
select 'A' , 2, 1 as fpjimport,1,0 as vat,LEFT(replace(replace(ifnull(sub.subnpwp,''),'-','.'),'.',''),15) as npwp,
sub.name as subname,trim(fpjumk.nofpj) as fpj,0 as jenisdoc,'' noretur, '' jnsretur,
fpjumk.fpjdate as fpjdate,'' as sspdate,concat(xm,xm) as masa, xyear, 0,
fpjumk.umk*fpjumk.kurs as dpp,fpjumk.umk*0.1*fpjumk.kurs as val,0
from fpjumk inner join sub on fpjumk.sub=sub.sub
where (fpjumk.fpjdate >= pdatea and fpjumk.fpjdate < adddate(pdatez,1))
and (fpjumk.sub BETWEEN psuba and psubz)
union all
select 'A' , 2, 1 as fpjimport,1,0 as vat,LEFT(replace(replace(ifnull(sub.subpkp,''),'-','.'),'.',''),15) as npwp,
sub.name as subname,trim(jsu.acclawan1) as fpj,0 as jenisdoc,'' noretur, '' jnsretur,
jsu.fakdate as fpjdate,'' as sspdate,concat(xm,xm) as masa, xyear, 0,
-sum(jsd.val*jsu.kurs) as dpp,-sum(FLOOR(jsd.val*jsu.kurs)) as val,0
from jsd inner join jsu on jsd.jsu=jsu.jsu
inner join sub on jsu.sub=sub.sub
where (jsu.sspdate >= pdatea and jsu.sspdate < adddate(pdatez,1))
and (jsu.sub BETWEEN psuba and psubz) and jsd.acc like '210501%' and acclawan1<>''
group by jsu.acclawan1;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LapPPNMASUKAN
DROP PROCEDURE IF EXISTS `SP_LapPPNMASUKAN`;
DELIMITER //
CREATE PROCEDURE `SP_LapPPNMASUKAN`(psuba varchar(15),psubz varchar(15),pdatea datetime, pdatez datetime)
BEGIN
declare xm varchar(2);
declare xy varchar(2);
declare xyear varchar(4);
set xm = (select  right(Fdate2Period(pdatez),2));
set xy = (select  left(Fdate2Period(pdatez),2));
set xyear = (year(pdatea));
select 'B' , 2,1 ,1,0 as vat,LEFT(replace(replace(ifnull(sub.subnpwp,''),'-','.'),'.',''),15) as npwp,
sub.name as subname,trim(msd.nofp) as `nomor fpj`,'' as jenisdoc,'' as fpretur,'' as jnsfpretur,msd.tglfp as fpjdate,date(if(msd.tglsfp='',msd.tglfp,msd.tglsfp)) as sspdate,concat(xm,xm) as masa, xyear, 0,
msd.dpp*msd.kurs as `nilai dpp`,FLOOR(msd.ppn*msd.kurs) as `nilai ppn`,0
from msd left outer join msk on msd.msk=msk.msk
left outer join sub on msk.sub=sub.sub
where (msd.tglsfp between pdatea and pdatez)
and not(trim(msd.nofp) ='' or trim(msd.nofp) ='0') and (msk.sub BETWEEN psuba and psubz)
union all
select 'B' , 2,1 ,4,0 as vat,LEFT(replace(replace(ifnull(sub.subnpwp,''),'-','.'),'.',''),15) as npwp,
sub.name as subname,trim(rms.rms) as fpj,'1' as jenisdoc,rms.fpj as fpretur,'' as jnsfpretur,rms.date as fpjdate, last_day(rms.`date`) as sspdate,concat(xm,xm), xyear, 0,
FLOOR(((rms.val*rms.kurs))) *-1 as dpp,FLOOR(((rms.val*rms.kurs))*0.1)*-1 as val,0
from rms left outer join sub on rms.sub=sub.sub
where (rms.`date`> pdatea and  rms.`date`< adddate(pdatez,1))
and trim(rms.fpj) <>'' and (rms.sub BETWEEN psuba and psubz)
union all
select 'B' , 1,1 ,2,0 as vat,convert('' using latin1) as npwp,
umh.bank as subname, trim(pib) as fpj,'1' as jenisdoc,'' as fpretur,'' as jnsfpretur,umh.fakdate  as fpjdate,date(umh.sspdate),concat(xm,xm), xyear, 0,
floor(umd.val*umh.kurs)*10*case when dk='K' then -1 else 1 end,
floor(umd.val*umh.kurs)*case when dk='K' then -1 else 1 end as val,0
from umd
left outer join umh on umd.umh=umh.umh
where (umh.sspdate between pdatea and pdatez)
and (umd.acc='11070102' or umd.acc='11070106' or umd.acc='11070103' )
and trim(umh.pib)<>'' and (umh.sub BETWEEN psuba and psubz)
union all
select 'B' , 1,1 ,2,0 as vat,convert('' using latin1) as npwp,
jsu.bank as subname,rtrim(pib) as fpj,'1' as jenisdoc,'' as fpretur,'' as jnsfpretur, jsu.fakdate  as fpjdate,date(jsu.sspdate),concat(xm,xm), xyear, 0,
floor(jsd.val*10*jsu.kurs)*case when jsd.dk='K' then -1 else 1 end,
floor(jsd.val*jsu.kurs)*case when jsd.dk='K' then -1 else 1 end as val,0
from jsd
left outer join jsu on jsd.jsu=jsu.jsu
where (jsu.sspdate between pdatea and pdatez)
and trim(jsu.pib)<>''
and (jsd.acc='11070101' or jsd.acc='11070102' or jsd.acc='11070106') and (jsu.sub BETWEEN psuba and psubz)
order by 5,6,9 ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LapPPNMASUKAN1
DROP PROCEDURE IF EXISTS `SP_LapPPNMASUKAN1`;
DELIMITER //
CREATE PROCEDURE `SP_LapPPNMASUKAN1`(psuba varchar(15),psubz varchar(15),pdatea datetime, pdatez datetime)
BEGIN
declare xm varchar(2);
declare xy varchar(2);
declare xyear varchar(4);
set xm = (select  right(Fdate2Period(pdatez),2));
set xy = (select  left(Fdate2Period(pdatez),2));
set xyear = (year(pdatea));
select 'B' , 2,1 ,1,LEFT(replace(replace(ifnull(sub.subnpwp,''),'-','.'),'.',''),15) as npwp,
sub.name as subname,'000' as cab,xy as tahun, right(trim(msd.nofp),8) as `nomor fpj`, msd.tglfp as fpjdate,date(if(msd.tglsfp='',msd.tglfp,msd.tglsfp)) as sspdate,xm as xmonth, xyear, 0,
msd.dpp*msd.kurs as `nilai dpp`,FLOOR(msd.ppn*msd.kurs) as `nilai ppn`,0
from msd left outer join msk on msd.msk=msk.msk
left outer join sub on msk.sub=sub.sub
where (msd.tglsfp between pdatea and pdatez)
and not(trim(msd.nofp) ='' or trim(msd.nofp) ='0') and (msk.sub BETWEEN psuba and psubz)
union all
select 'B' , 2,1 ,4,LEFT(replace(replace(ifnull(sub.subnpwp,''),'-','.'),'.',''),15) as npwp,
sub.name as subname,'000' as cab,xy as tahun, right(trim(rsd.nofp),8) as fpj, rsd.tglfp as fpjdate, date(if(rsd.tglsfp='',rsd.tglfp,rsd.tglsfp)) as sspdate,xm, xyear, 0,
rsd.dpp*rsd.kurs as dpp,FLOOR(rsd.ppn*rsd.kurs) as val,0
from rsd left outer join rsk on rsd.rsk=rsk.rsk
left outer join sub on rsk.sub=sub.sub
where (rsd.tglsfp between pdatea and pdatez)
and trim(rsd.nofp) <>'' and (rsk.sub BETWEEN psuba and psubz)
union all
select 'B' , 1,1 ,2,convert('' using latin1) as npwp,
umh.bank as subname,'' as cab,convert('' using latin1) as tahun, trim(pib) as fpj, umh.fakdate  as fpjdate,date(umh.sspdate),xm, xyear, 0,
floor(umd.val*umh.kurs)*10*case when dk='K' then -1 else 1 end,
floor(umd.val*umh.kurs)*case when dk='K' then -1 else 1 end as val,0
from umd
left outer join umh on umd.umh=umh.umh
where (umh.sspdate between pdatea and pdatez)
and (umd.acc='11070102' or umd.acc='11070106')
and trim(umh.pib)<>'' and (umh.sub BETWEEN psuba and psubz)
union all
select 'B' , 1,1 ,2,convert('' using latin1) as npwp,
jsu.bank as subname,'' as cab,convert('' using latin1) as tahun,rtrim(pib) as fpj, jsu.fakdate  as fpjdate,date(jsu.sspdate),xm, xyear, 0,
floor(jsd.val*10*jsu.kurs)*case when jsd.dk='K' then -1 else 1 end,
floor(jsd.val*jsu.kurs)*case when jsd.dk='K' then -1 else 1 end as val,0
from jsd
left outer join jsu on jsd.jsu=jsu.jsu
where (jsu.sspdate between pdatea and pdatez)
and trim(jsu.pib)<>''
and (jsd.acc='11070101' or jsd.acc='11070102') and (jsu.sub BETWEEN psuba and psubz)
order by 5,6,9 ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LapPPNMASUKAN2
DROP PROCEDURE IF EXISTS `SP_LapPPNMASUKAN2`;
DELIMITER //
CREATE PROCEDURE `SP_LapPPNMASUKAN2`(psuba varchar(15),psubz varchar(15),pdatea datetime, pdatez datetime)
BEGIN
declare xm varchar(2);
declare xy varchar(2);
declare xyear varchar(4);
set xm = (select  right(Fdate2Period(pdatez),2));
set xy = (select  left(Fdate2Period(pdatez),2));
set xyear = (year(pdatea));
select 'B' , 2,1 ,1,0 as vat,LEFT(replace(replace(ifnull(sub.subnpwp,''),'-','.'),'.',''),15) as npwp,
sub.name as subname,trim(msd.nofp) as `nomor fpj`,'' as jenisdoc,'' as fpretur,'' as jnsfpretur,msd.tglfp as fpjdate,date(if(msd.tglsfp='',msd.tglfp,msd.tglsfp)) as sspdate,concat(xm,xm) as masa, xyear, 0,
msd.dpp*msd.kurs as `nilai dpp`,FLOOR(msd.ppn*msd.kurs) as `nilai ppn`,0,msd.msk as document
from msd left outer join msk on msd.msk=msk.msk
left outer join sub on msk.sub=sub.sub
where (msd.tglsfp between pdatea and pdatez)
and not(trim(msd.nofp) ='' or trim(msd.nofp) ='0') and (msk.sub BETWEEN psuba and psubz)
union all
select 'B' , 2,1 ,4,0 as vat,LEFT(replace(replace(ifnull(sub.subnpwp,''),'-','.'),'.',''),15) as npwp,
sub.name as subname,trim(rms.rms) as fpj,'1' as jenisdoc,rms.fpj as fpretur,'' as jnsfpretur,rms.date as fpjdate, last_day(rms.`date`) as sspdate,concat(xm,xm), xyear, 0,
FLOOR(((rms.val*rms.kurs))) *-1 as dpp,FLOOR(((rms.val*rms.kurs))*0.1)*-1 as val,0,rms.rms
from rms left outer join sub on rms.sub=sub.sub
where (rms.`date`> pdatea and  rms.`date`< adddate(pdatez,1))
and trim(rms.fpj) <>'' and (rms.sub BETWEEN psuba and psubz)
union all
select 'B' , 1,1 ,2,0 as vat,convert('' using latin1) as npwp,
umh.bank as subname, trim(pib) as fpj,'1' as jenisdoc,'' as fpretur,'' as jnsfpretur,umh.fakdate  as fpjdate,date(umh.sspdate),concat(xm,xm), xyear, 0,
floor(umd.val*umh.kurs)*10*case when dk='K' then -1 else 1 end,
floor(umd.val*umh.kurs)*case when dk='K' then -1 else 1 end as val,0, umd.umh
from umd
left outer join umh on umd.umh=umh.umh
where (umh.sspdate between pdatea and pdatez)
and (umd.acc='11070102' or umd.acc='11070106' or umd.acc='11070103' )
and trim(umh.pib)<>'' and (umh.sub BETWEEN psuba and psubz)
union all
select 'B' , 1,1 ,2,0 as vat,convert('' using latin1) as npwp,
jsu.bank as subname,rtrim(pib) as fpj,'1' as jenisdoc,'' as fpretur,'' as jnsfpretur, jsu.fakdate  as fpjdate,date(jsu.sspdate),concat(xm,xm), xyear, 0,
floor(jsd.val*10*jsu.kurs)*case when jsd.dk='K' then -1 else 1 end,
floor(jsd.val*jsu.kurs)*case when jsd.dk='K' then -1 else 1 end as val,0,jsd.jsu
from jsd
left outer join jsu on jsd.jsu=jsu.jsu
where (jsu.sspdate between pdatea and pdatez)
and trim(jsu.pib)<>''
and (jsd.acc='11070101' or jsd.acc='11070102' or jsd.acc='11070106') and (jsu.sub BETWEEN psuba and psubz)
order by 5,6,9 ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LapSJHXInvoice
DROP PROCEDURE IF EXISTS `SP_LapSJHXInvoice`;
DELIMITER //
CREATE PROCEDURE `SP_LapSJHXInvoice`(Pdatea datetime,Pdatez datetime,Psuba varchar(15), Psubz varchar(15))
BEGIN
set pdatea=20151101;
select sjh.sjh,sjh.date,sjh.sub,sub.name,sjh.remark as keterangan,sjh.spm,sjd.okl,okl.date as okldate,
okl.kurs,okd.qty as oklqty,okd.unit as oklunit,sjd.inv,sjd.remark as remark,
sjd.qty,inv.unit,okd.price,okd.val as total,sjd.qty*okd.price*okl.kurs as nilsjl
from sub,okd,okl,inv,sjd,sjh left join (select distinct kll.klr,kll.sjh from kll where kll.date>pdatea) kll on sjh.sjh=kll.sjh
left outer join (select klr from klr where klr.date>=Pdatea and klr.date < adddate(Pdatez,1))klr on klr.klr=kll.klr
where isnull(klr.klr)=true and sjh.delete=false and sjh.sjh=sjd.sjh and sjd.inv=inv.inv
and  okd.okl=sjd.okl and sub.sub=sjh.sub
and if(Psuba<>'' and Psubz<>'',sjh.sub between Psuba and Psubz,1)
and sjh.date>=Pdatea and sjh.date<adddate(Pdatez,1)
and okd.okl=okl.okl
order by sjh.sjh;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LapSJPenjualan
DROP PROCEDURE IF EXISTS `Sp_LapSJPenjualan`;
DELIMITER //
CREATE PROCEDURE `Sp_LapSJPenjualan`(Pdatea datetime, Pdatez datetime, Psuba char(15), Psubz char(15), Pdsga char(15), Pdsgz char(15), Pinva char(15), Pinvz char(15), Pdoa char(15), Pdoz char(15))
BEGIN
  select x.*, inv.unit,sub.name as custname from
  (
    select date(sjh.date) as sjdate, sjh.sjh, sjh.spm, sjh.sub, sjh.nopol,sjh.remark as ket,sjh.angkutan,spm.okl_rms as tdo,
           ifnull((select name from sub where sub=sjh.angkutan),'') as angkutanname,
           sjd.mor, sjd.okl, sjd.nodsg, sjd.inv, sjd.remark, sjd.qty1 as qty,sjd.unit as unit1,sjd.loc,date((select okl.date from okl where okl=sjd.okl)) as okldate,
           date(spm.date) as spmdate,(select nopoc from okl where okl=sjd.okl) as nopoc
      from sjh, sjd, spm
     where sjh.sjh=sjd.sjh and sjh.delete=0
       and sjh.spm=spm.spm
       and sjh.date>=Pdatea and sjh.date<adddate(Pdatez,1)
       and if(Psuba<>'' and Psubz<>'', sjh.sub between Psuba and PSubz,1)
       and if(Pdsga<>'' and Pdsgz<>'', sjd.okl between Pdsga and Pdsgz,1)
       and if(Pinva<>'' and Pinvz<>'', sjd.inv between Pinva and Pinvz,1)
       and if(Pdoa<>'' and Pdoz<>'', spm.okl_rms between Pdoa and Pdoz,1)
     order by sjh.date, sjh.sub
  ) as x, inv, sub
  where x.inv=inv.inv and x.sub=sub.sub;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LapSJPenjualanPajak
DROP PROCEDURE IF EXISTS `Sp_LapSJPenjualanPajak`;
DELIMITER //
CREATE PROCEDURE `Sp_LapSJPenjualanPajak`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Psuba` char(15),
	IN `Psubz` char(15),
	IN `Pdsga` char(15),
	IN `Pdsgz` char(15),
	IN `Pinva` char(15),
	IN `Pinvz` char(15)
)
BEGIN
  select x.*, inv.unit,sub.name as custname from
  (
select (select cast(date_format(klr.date, '%d/%m/%Y') AS CHAR) from kll,klr where kll.klr=klr.klr and kll.sjh=sjd.sjh limit 1) klrdate, (select klr from kll where kll.sjh=sjd.sjh limit 1) klr,CAST(date_format(sjh.date, '%d/%m/%Y') AS CHAR) as sjdate, sjh.sjh, sjh.spm, sjh.sub, sjh.angkutan,
           ifnull((select name from sub where sub=sjh.angkutan),'') as angkutanname,sjh.nopol,
           sjd.mor, sjd.okl, sjd.nodsg, sjd.inv, sjd.remark, sjd.qty as qty,sjd.unit as unit1,sjd.loc,
           CAST(date_format(sjh.date, '%d/%m/%Y') AS CHAR) as spmdate,(select nopoc from okl where okl=sjd.okl) as nopoc
      from sjh left outer join sjd on sjh.sjh=sjd.sjh
      where sjh.`delete`=0  and sjh.period between Fdate2period(Pdatea) and Fdate2period(Pdatez)
  ) as x, inv, sub
  where x.inv=inv.inv and x.sub=sub.sub ORDER BY x.sub,x.sjdate,x.sjh;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LapSJPenjualanT
DROP PROCEDURE IF EXISTS `Sp_LapSJPenjualanT`;
DELIMITER //
CREATE PROCEDURE `Sp_LapSJPenjualanT`(Pdatea datetime, Pdatez datetime, Psuba char(15), Psubz char(15), Pinva char(15), Pinvz char(15), Ploca char(15), Plocz char(15),grop_ int)
BEGIN
 select sjr.*,sub.name as subname,sjrd.inv,sjrd.remark as invname,sjrd.qty,sjrd.loc,sjrd.qty1,sjrd.unit
      from sjr,sjrd,sub where sjrd.sjr=sjr.sjr and sjr.sub=sub.sub and sjr.group_=grop_
       and sjr.delete=0
       and sjr.date>=Pdatea and sjr.date<adddate(Pdatez,1)
       and if(Psuba<>'' and Psubz<>'', sjr.sub between Psuba and PSubz,1)
       and if(Pinva<>'' and Pinvz<>'', sjrd.inv between Pinva and Pinvz,1)
       and if(Ploca<>'' and Plocz<>'', sjrd.loc between Ploca and Plocz,1)
      order by loc, sjr.sub,date(sjr.date),sjr.sjr;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LapStatusMOR
DROP PROCEDURE IF EXISTS `Sp_LapStatusMOR`;
DELIMITER //
CREATE PROCEDURE `Sp_LapStatusMOR`(Pdatea datetime, Pdatez datetime, Psuba char(15), Psubz char(15), Pinva char(15), Pinvz char(15), POkla char(15), POklz char(15), PMora char(15), PMorz char(15), PLhpa char(15), PLhpz char(15))
BEGIN
  select lhp.lhp,lhp.date as lhpdate,lhd.inv,lhd.remark,lhd.nodsg,dsg.abrev,lhd.mor,mor.date as mordate,okd.dateneed,okl.okl,okl.date as sodate,okl.nopoc,okl.sub,sub.name,okd.qty as qtyso, mor.qty as qtymor, lhd.qty as qtylhp,loc.name as locname,lhp.loc
  from lhp,lhd,dsg,mor left join spd on mor.mor=spd.mor,okl,sub,okd,loc
  where lhp.lhp=lhd.lhp and lhp.delete=false and dsg.nodsg=lhd.nodsg
  and lhd.mor=mor.mor and mor.okl=okl.okl and okl.sub=sub.sub and okl.okl=okd.okl and okd.nodsg=mor.nodsg and mor.delete=false and okl.delete=false and lhp.loc=loc.loc
  and if (Psuba<>'' and Psubz<>'', okl.sub between Psuba and Psubz, 1)
  and if (Pinva<>'' and Pinvz<>'', okd.inv between Pinva and Pinvz, 1)
  and if (POkla<>'' and POklz<>'', okl.okl between Pokla and Poklz, 1)
  and if (Plhpa<>'' and Plhpz<>'', lhp.lhp between Plhpa and Plhpz, 1)
  and if (PMora<>'' and PMorz<>'', mor.mor between PMora and PMorz, 1)
  and okl.date between Pdatea and Pdatez
  order by dateneed, okl.date;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LapStatusPORetur
DROP PROCEDURE IF EXISTS `Sp_LapStatusPORetur`;
DELIMITER //
CREATE PROCEDURE `Sp_LapStatusPORetur`(Pdatea datetime, Pdatez datetime, Psuba char(15), Psubz char(15), Pinva char(15), Pinvz char(15), Pclose int)
BEGIN
  
drop temporary table if exists outpo;
create temporary table outpo as
select rms,date,sub,inv,sum(qtypo-qty) as qtypor,rma,remark,closed from
(
  select rms.rms, rms.date, rms.sub, rmd.inv, rmd.qty as qtypo, 0 as qty,rms.rma,rmd.remark, rms.close as closed
    from rms, rmd
   where rms.rms=rmd.rms
     and if(Psuba<>'' and Psubz<>'', rms.sub between Psuba and Psubz, 1)
     and if(Pinva<>'' and Pinvz<>'', rmd.inv between Pinva and Pinvz, 1)
     and rms.date>=Pdatea and rms.date<adddate(Pdatez,1)
     and rms.delete=0
) as outpo
group by rms,date,sub,inv,remark;
drop temporary table if exists realpo;
create temporary table realpo as
select * from
(
  select spm.okl_rms, spm.spm, sjr.sjr, sjrd.inv, sjrd.remark, sjrd.qty as qtysjr, sjr.date as sjrdate
    from spm inner join spd on spm.spm=spd.spm
              left join sjr on spm.spm=sjr.spm
              left outer join sjrd on sjrd.sjr=sjr.sjr and sjrd.inv=spd.inv and sjrd.remark=spd.remark
   where if(Psuba<>'' and Psubz<>'',spm.sub between Psuba and Psubz,1)
     and spm.delete=0 and spm.group_=2 and sjr.delete=0
   group by spm.spm, spm.okl_rms, spm.sub, spd.inv,spd.remark
) as realpo;
select * from
(
select outpo.rms, outpo.date, outpo.sub, sub.name, outpo.inv, outpo.remark, inv.unit, outpo.qtypor,
       sum(realpo.qtysjr) as qtysjr, outpo.qtypor-sum(realpo.qtysjr) as sisa,
       sum(realpo.qtysjr)/outpo.qtypor*100 as varian,
       if(outpo.closed=0,'OPEN','CLOSED') as status,
       realpo.spm, outpo.closed
from outpo left join realpo on outpo.rms = realpo.okl_rms and outpo.inv = realpo.inv and outpo.remark = realpo.remark
           left join sub on outpo.sub = sub.sub
           left join inv on outpo.inv = inv.inv
group by outpo.rms, outpo.inv, outpo.remark
) as a
where if(Pclose<2,a.`closed`=Pclose,1);
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LapStatusPRRetur
DROP PROCEDURE IF EXISTS `Sp_LapStatusPRRetur`;
DELIMITER //
CREATE PROCEDURE `Sp_LapStatusPRRetur`(Pdatea datetime, Pdatez datetime, Psuba char(15), Psubz char(15), Pinva char(15), Pinvz char(15), Pclose int)
BEGIN
  drop temporary table if exists trma;
  create temporary table trma as select * from
  (
    select rma.rma, rma.sub, sub.name as subname, rma.date, rmb.inv, rmb.remark, sum(rmb.qty) as qty, inv.unit as unit
      from rma inner join rmb on rma.rma=rmb.rma
               left join sub on sub.sub=rma.sub
               left join inv on inv.inv=rmb.inv
     where rma.date between Pdatea and adddate(Pdatez,1)
       and if (Psuba<>'' and Psubz<>'', rma.sub between Psuba and Psubz, 1)
       and if (Pinva<>'' and Pinvz<>'', rmb.inv between Pinva and Pinvz, 1)
       and rma.`delete`=0
       and if (Pclose < 2, rma.close=PClose, 1)
     group by rma,sub,inv,remark
  ) as x;
  
  drop temporary table if exists trms;
  create temporary table trms as select * from
  (
     select rms.rma, rmd.inv, rmd.remark, sum(rmd.qty) as rmsqty
       from rms inner join rmd on rms.rms=rmd.rms
      where if (Psuba<>'' and Psubz<>'', rms.sub between Psuba and Psubz, 1)
        and if (Pinva<>'' and Pinvz<>'', rmd.inv between Pinva and Pinvz, 1)
        and rms.`delete`=0
      group by rma, inv, remark
  ) as y;
  select x.rma, x.sub, x.subname, x.date, x.inv, x.remark, x.qty, ifnull(y.rmsqty,0) as qtyterpenuhi,
         (x.qty-ifnull(y.rmsqty,0)) as qtykurang, x.unit
  from trma as x left join trms as y on x.rma = y.rma and x.inv=y.inv and x.remark=y.remark;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LapTransaksiAngkutan
DROP PROCEDURE IF EXISTS `SP_LapTransaksiAngkutan`;
DELIMITER //
CREATE PROCEDURE `SP_LapTransaksiAngkutan`(pdatea datetime,pdatez datetime,panga varchar(15), pangz varchar(15), psuba varchar(15), psubz varchar(15), pang varchar(2))
BEGIN
if (pang = 'DA') then
  select sjd.sjh as NoSJ, sjh.date, sjh.nopol, sjd.okl as NoOrder, sjh.sub as sub, sub.name as subname,
     sjh.shiptoname, angkutan.name as angkname, 'KG' as unit,
    (sum(ifnull(okl.valkg,0))) as thargaperkg,
    sum(sjd.qty) as tqty
  from sjd, sub, (sjh left join sub as angkutan on sjh.angkutan=angkutan.sub), okl
  where sjh.sjh=sjd.sjh and sjh.sub=sub.sub and okl.okl=sjd.okl and sjh.angkutan <> ''
	  and if(psuba<>'' and psubz<>'', sub.sub between psuba and psubz, 1)
      and if(panga<>'' and pangz<>'', angkutan between panga and pangz, 1)
      and sjh.date>=pdatea and sjh.date<adddate(pdatez,1)
  group by sjh.angkutan,sjh.sub,sjh.sjh;
end if;
if (pang = 'TA') then
  select sjd.sjh as NoSJ, sjh.date, sjh.nopol, sjd.okl as NoOrder, sjh.sub as sub, sub.name as subname,
     sjh.shiptoname, angkutan.name as angkname, 'KG' as unit,
    (sum(ifnull(okl.valkg,0))) as thargaperkg,
    sum(sjd.qty) as tqty
  from sjd, sub, (sjh left join sub as angkutan on sjh.angkutan=angkutan.sub), okl
  where sjh.sjh=sjd.sjh and sjh.sub=sub.sub and okl.okl=sjd.okl and sjh.angkutan = ''
	  and if(psuba<>'' and psubz<>'', sub.sub between psuba and psubz, 1)
      and if(panga<>'' and pangz<>'', angkutan between panga and pangz, 1)
      and sjh.date>=pdatea and sjh.date<adddate(pdatez,1)
  group by sjh.angkutan,sjh.sub,sjh.sjh;
end if;
if (pang = 'AL') then
  select sjd.sjh as NoSJ, sjh.date, sjh.nopol, sjd.okl as NoOrder, sjh.sub as sub, sub.name as subname,
     sjh.shiptoname, angkutan.name as angkname, 'KG' as unit,
    (sum(ifnull(okl.valkg,0))) as thargaperkg,
    sum(sjd.qty) as tqty
  from sjd, sub, (sjh left join sub as angkutan on sjh.angkutan=angkutan.sub), okl
  where sjh.sjh=sjd.sjh and sjh.sub=sub.sub and okl.okl=sjd.okl
	  and if(psuba<>'' and psubz<>'', sub.sub between psuba and psubz, 1)
      and if(panga<>'' and pangz<>'', angkutan between panga and pangz, 1)
      and sjh.date>=pdatea and sjh.date<adddate(pdatez,1)
  group by sjh.angkutan,sjh.sub,sjh.sjh;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LBPB
DROP PROCEDURE IF EXISTS `Sp_LBPB`;
DELIMITER //
CREATE PROCEDURE `Sp_LBPB`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Ploca` char(15),
	IN `Plocz` char(15),
	IN `Pinva` char(15),
	IN `Pinvz` char(15),
	IN `Pccta` CHAR(15),
	IN `Pcctz` CHAR(15)
)
BEGIN
select ind.jurnal,
a.name as `Gudang Asal`, 
b.name as `Gudang Tujuan`, 
ind.date,
inv.name as `Barang`,
ind.qty,(ind.val/ind.qty) as harga,
trm.remark,
ind.inv,
ind.nodsg,
ind.val,
inv.unit
from ind
LEFT JOIN inv ON ind.inv = inv.inv
LEFT JOIN trm ON ind.jurnal=trm.trm
left join loc a on trm.lock=a.loc
left join loc b on trm.locd=b.loc
where subjurnal='TRM'and ind.inv=inv.inv and ind.jurnal=trm.trm and ind.dk='D'
   and if (Ploca<>'' and Plocz<>'',trm.lock between Ploca and Plocz,1)
   and if (Pinva<>'' and Pinvz<>'',ind.inv between Pinva and Pinvz,1)
   and if (Pccta<>'' and Pcctz<>'',ind.inv between Pccta and Pcctz,1)
   and if (Pdatea<>'' and Pdatez<>'',ind.date>=Pdatea and ind.date<adddate(Pdatez,1),1);
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LBPPB
DROP PROCEDURE IF EXISTS `Sp_LBPPB`;
DELIMITER //
CREATE PROCEDURE `Sp_LBPPB`(Pdatea datetime, Pdatez datetime, Ploca char(15), Plocz char(15), Pinva char(15), Pinvz char(15), Pjina char(15), Pjinz char(15), Pccta char(15), Pcctz char(15))
BEGIN
select ind.jurnal,loc.name as `Gudang`, ind.date,ind.inv, ind.nodsg, inv.name as `Barang`,inv.unit,(select jenis.name from jenis where jenis.jenis=inv.jenis) as kelompok,
       ind.qty,(ind.val/ind.qty) as harga,jin.remark,jin.cct,(select cct.name from cct where cct.cct=jin.cct) as cctname, ind.val as val
  from ind,inv,jin,loc
 where subjurnal='BPP'and ind.inv=inv.inv and ind.jurnal=jin.jin and ind.loc=loc.loc
   and if (Ploca<>'' and Plocz<>'',ind.loc between Ploca and Plocz,1)
   and if (Pinva<>'' and Pinvz<>'',ind.inv between Pinva and Pinvz,1)
   and if (Pdatea<>'' and Pdatez<>'',ind.date>=Pdatea and ind.date<Pdatez,1)
   and if (Pccta<>'' and Pcctz<>'',jin.cct between Pccta and Pcctz,1)
  
   and if (Pjina<>'' and Pjinz<>'', ind.jurnal between Pjina and Pjinz,1)
 union all
select ind.inv,'xx - REKAP - xx"' as `Gudang`, ind.date,ind.inv, ind.nodsg, inv.name as `Barang`,inv.unit,(select jenis.name from jenis where jenis.jenis=inv.jenis) as kelompok,
       sum(ind.qty) qty,(ind.val/ind.qty) as harga,'Rekap' as remark,'' cct,'' as cctname, sum(ind.val) as val
  from ind,inv,jin,loc
 where subjurnal='BPP'and ind.inv=inv.inv and ind.jurnal=jin.jin and ind.loc=loc.loc
   and if (Ploca<>'' and Plocz<>'',ind.loc between Ploca and Plocz,1)
   and if (Pinva<>'' and Pinvz<>'',ind.inv between Pinva and Pinvz,1)
   and if (Pdatea<>'' and Pdatez<>'',ind.date>=Pdatea and ind.date<Pdatez,1)
   and if (Pccta<>'' and Pcctz<>'',jin.cct between Pccta and Pcctz,1)
   and if (Pjina<>'' and Pjinz<>'', ind.jurnal between Pjina and Pjinz,1) group by ind.inv  ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LBPPBTLperMonth
DROP PROCEDURE IF EXISTS `Sp_LBPPBTLperMonth`;
DELIMITER //
CREATE PROCEDURE `Sp_LBPPBTLperMonth`(Pdatea datetime, Pdatez datetime, Ploca char(15), Plocz char(15), Pinva char(15), Pinvz char(15), Pjina char(15), Pjinz char(15), Pccta char(15), Pcctz char(15),Pmsna char(15), Pmsnz char(15),nol int)
BEGIN
declare date1 datetime;
declare date2 datetime;
declare date3 datetime;
declare date4 datetime;
declare date5 datetime;
declare date6 datetime;
declare N1 char(3);
declare N2 char(3);
declare N3 char(3);
declare N4 char(3);
declare N5 char(3);
declare N6 char(3);
set date1 = Pdatea;
set date2 = DATE_add(date1, INTERVAL 1 month);
set date3 = DATE_add(date2, INTERVAL 1 month);
set date4 = DATE_add(date3, INTERVAL 1 month);
set date5 = DATE_add(date4, INTERVAL 1 month);
set date6 = DATE_add(date5, INTERVAL 1 month);
set N1= (SELECT left(MONTHNAME(date1),3));
set N2= (SELECT left(MONTHNAME(date2),3));
set N3= (SELECT left(MONTHNAME(date3),3));
set N4= (SELECT left(MONTHNAME(date4),3));
set N5= (SELECT left(MONTHNAME(date5),3));
set N6= (SELECT left(MONTHNAME(date6),3));
select * from (
select rekap.jurnal,adddate(Pdatez,-1) as date,
rekap.gudang as  `Gudang`,
 rekap.inv,
 rekap.nodsg,
 rekap.barang as `Barang`,
 rekap.unit,sum(ifnull(rekap.qtydatez,0)) as qtydatez,ifnull(qtymin,0) qtymin,ifnull(lotsz,0) lotsz,F_GetStockAll(date(now()),rekap.inv) as qtynow,
 rekap.kelompok,N1,N2,N3,N4,N5,N6,
 sum(ifnull(rekap.M1,0)) as qty1,
sum(ifnull(rekap.M2,0)) as qty2,
sum(ifnull(rekap.M3,0)) as qty3,
sum(ifnull(rekap.M4,0)) as qty4,
sum(ifnull(rekap.M5,0)) as qty5,
sum(ifnull(rekap.M6,0)) as qty6
 from(
select 'REKAP' as jurnal,'REKAP' as `Gudang`, ind.date,ind.inv, ind.nodsg, inv.name as `Barang`,inv.unit,(select jenis.name from jenis where jenis.jenis=inv.jenis) as kelompok,
       inv.qtymin,inv.lotsz,
       if(ind.date>date1 and ind.date<date2,ind.qty,0) as M1,
       if(ind.date>=date2 and ind.date<date3,ind.qty,0) as M2,
       if(ind.date>=date3 and ind.date<date4,ind.qty,0) as M3,
       if(ind.date>=date4 and ind.date<date5,ind.qty,0) as M4,
       if(ind.date>=date5 and ind.date<date6,ind.qty,0) as M5,
       if(ind.date>=date6 ,ind.qty,0) as M6,
       if(date(ind.date)=date(adddate(Pdatez,-1)) ,ind.qty,0) as qtydatez
       from ind,inv,jin,loc
 where subjurnal='BPP'and ind.inv=inv.inv and ind.jurnal=jin.jin and ind.loc=loc.loc
   and if (Ploca<>'' and Plocz<>'',ind.loc between Ploca and Plocz,1)
   and if (Pinva<>'' and Pinvz<>'',ind.inv between Pinva and Pinvz,1)
   and if (Pdatea<>'' and Pdatez<>'',ind.date>=Pdatea and ind.date<Pdatez,1)
   and if (Pccta<>'' and Pcctz<>'',jin.cct between Pccta and Pcctz,1)
   and if (Pjina<>'' and Pjinz<>'', ind.jurnal between Pjina and Pjinz,1))
 as rekap
group by inv
) as x where if(nol=1,qtydatez>0,1);
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LBPPBTLperMonth_Besar
DROP PROCEDURE IF EXISTS `Sp_LBPPBTLperMonth_Besar`;
DELIMITER //
CREATE PROCEDURE `Sp_LBPPBTLperMonth_Besar`(Pdatea datetime, Pdatez datetime, Ploca char(15), Plocz char(15), Pinva char(15), Pinvz char(15), Pjina char(15), Pjinz char(15), Pccta char(15), Pcctz char(15),Pmsna char(15), Pmsnz char(15),nol int)
BEGIN
declare date1 datetime;
declare date2 datetime;
declare date3 datetime;
declare date4 datetime;
declare date5 datetime;
declare date6 datetime;
declare N1 char(3);
declare N2 char(3);
declare N3 char(3);
declare N4 char(3);
declare N5 char(3);
declare N6 char(3);
set date1 = Pdatea;
set date2 = DATE_add(date1, INTERVAL 1 month);
set date3 = DATE_add(date2, INTERVAL 1 month);
set date4 = DATE_add(date3, INTERVAL 1 month);
set date5 = DATE_add(date4, INTERVAL 1 month);
set date6 = DATE_add(date5, INTERVAL 1 month);
set N1= (SELECT left(MONTHNAME(date1),3));
set N2= (SELECT left(MONTHNAME(date2),3));
set N3= (SELECT left(MONTHNAME(date3),3));
set N4= (SELECT left(MONTHNAME(date4),3));
set N5= (SELECT left(MONTHNAME(date5),3));
set N6= (SELECT left(MONTHNAME(date6),3));
select * from (
select rekap.jurnal,adddate(Pdatez,-1) as date,
rekap.gudang as  `Gudang`,
 rekap.inv,
 rekap.nodsg,
 rekap.barang as `Barang`,
 rekap.unit,sum(ifnull(rekap.qtydatez,0)) as qtydatez,ifnull(qtymin,0) qtymin,ifnull(lotsz,0) lotsz,F_GetStockAll(date(now()),rekap.inv) as qtynow,
 rekap.kelompok,N1,N2,N3,N4,N5,N6,
 sum(ifnull(rekap.M1,0)) as qty1,
sum(ifnull(rekap.M2,0)) as qty2,
sum(ifnull(rekap.M3,0)) as qty3,
sum(ifnull(rekap.M4,0)) as qty4,
sum(ifnull(rekap.M5,0)) as qty5,
sum(ifnull(rekap.M6,0)) as qty6
 from(
select 'REKAP' as jurnal,'REKAP' as `Gudang`, ind.date,ind.inv, ind.nodsg, inv.name as `Barang`,inv.unit2 as unit,(select jenis.name from jenis where jenis.jenis=inv.jenis) as kelompok,
       inv.qtymin/konversi as qtymin,inv.lotsz,
       if(ind.date>date1 and ind.date<date2,ind.qty/konversi,0) as M1,
       if(ind.date>=date2 and ind.date<date3,ind.qty/konversi,0) as M2,
       if(ind.date>=date3 and ind.date<date4,ind.qty/konversi,0) as M3,
       if(ind.date>=date4 and ind.date<date5,ind.qty/konversi,0) as M4,
       if(ind.date>=date5 and ind.date<date6,ind.qty/konversi,0) as M5,
       if(ind.date>=date6 ,ind.qty/konversi,0) as M6,
       if(date(ind.date)=date(adddate(Pdatez,-1)) ,ind.qty/konversi,0) as qtydatez
       from ind,inv,jin,loc,konversi
 where subjurnal='BPP'and ind.inv=inv.inv and ind.jurnal=jin.jin and ind.loc=loc.loc and (inv.inv=konversi.inv and inv.unit2=konversi.unit)
   and if (Ploca<>'' and Plocz<>'',ind.loc between Ploca and Plocz,1)
   and if (Pinva<>'' and Pinvz<>'',ind.inv between Pinva and Pinvz,1)
   and if (Pdatea<>'' and Pdatez<>'',ind.date>=Pdatea and ind.date<Pdatez,1)
   and if (Pccta<>'' and Pcctz<>'',jin.cct between Pccta and Pcctz,1)
   and if (Pjina<>'' and Pjinz<>'', ind.jurnal between Pjina and Pjinz,1))
 as rekap
group by inv
) as x where if(nol=1,qtydatez>0,1);
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LBukuBantuDetail
DROP PROCEDURE IF EXISTS `SP_LBukuBantuDetail`;
DELIMITER //
CREATE PROCEDURE `SP_LBukuBantuDetail`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Pacca` varchar(15),
	IN `Paccz` varchar(15)
)
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists TempAwal ;
create temporary table TempAwal (acc varchar(15), vlast double);
insert into TempAwal
(
  select acc, sum(vlast) as vlast
  from
  (
    select rac.acc, rac.vlast
       from rac
       where rac.period=PPeriod and if (Pacca<>'' and Paccz<>'', rac.acc between Pacca and Paccz, 1)
    union all
    select acd.acc, sum(val*case when dk='D' then 1 else -1 end) as vlast
      from acd
      where acd.period=Pperiod and acd.date <Pdatea and acd.acc between Pacca and Paccz group by acd.acc
  ) as oawal group by acc
);
select acc.name, TempAwal.acc, STR_TO_DATE(Pdatea, '%Y/%m/%d') as date,
      convert(' ' using latin1) as jurnal, convert('BALANCE' using latin1) as rem,
      if(TempAwal.vlast >= 0 , TempAwal.vlast , 0) as debet,
      if(TempAwal.vlast < 0 , -TempAwal.vlast , 0) as kredit, convert(' ' using latin1) as dk
      from TempAwal
      left outer join acc on TempAwal.acc=acc.acc
      where acc.detil=1 and TempAwal.vlast<>0
union all
select acc.name, acd.acc, acd.date as date, acd.jurnal as jurnal,  concat(trim(acd.rem),' ',if(left(acd.acc,4)='2106',ifnull((select sub.name from kas,sub where sub.sub=kas.sub and kas.kas=acd.jurnal limit 1),''),'')) as rem,
      if (acd.dk='D' , acd.val , 0) as debet,
      if (acd.dk='K' , acd.val , 0) as kredit,
      acd.dk as dk
      from acd
      left outer join acc on acd.acc=acc.acc
      where if (Pacca<>'' and Paccz<>'', acd.acc between Pacca and Paccz, 1)
      and acd.date>=Pdatea and acd.date<adddate(Pdatez,1) and acc.detil=1
order by 2,3,8,4;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LBukuBantuGlobal
DROP PROCEDURE IF EXISTS `SP_LBukuBantuGlobal`;
DELIMITER //
CREATE PROCEDURE `SP_LBukuBantuGlobal`(Pdatea datetime,Pdatez datetime,Pacc varchar(15))
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists TempAwal ;
create temporary table TempAwal (acc varchar(15), vlast double);
insert into TempAwal
(
  select acc, sum(vlast) as vlast
  from
  (
    select rac.acc, rac.vlast
       from rac
       where rac.period=PPeriod and (select FCekAccParent(rac.acc,Pacc))=1
    union all
    select acd.acc, sum(val*case when dk='D' then 1 else -1 end) as vlast
      from acd
      where acd.period=Pperiod and acd.date <Pdatea and (select FCekAccParent(acd.acc,Pacc))=1 group by acd.acc
  ) as oawal group by acc
);
select acc.name, TempAwal.acc, STR_TO_DATE(Pdatea, '%Y/%m/%d') as date,
      convert(' ' using latin1) as jurnal, convert('BALANCE' using latin1) as rem,
      if(TempAwal.vlast >= 0 , TempAwal.vlast , 0) as debet,
      if(TempAwal.vlast < 0 , -TempAwal.vlast , 0) as kredit, convert(' ' using latin1) as dk
      from TempAwal
      left outer join acc on TempAwal.acc=acc.acc
      where TempAwal.vlast<>0
union all
select acc.name, acd.acc, acd.date as date, acd.jurnal as jurnal, acd.rem as rem,
      if (acd.dk='D' , acd.val , 0) as debet,
      if (acd.dk='K' , acd.val , 0) as kredit,
      acd.dk as dk
      from acd
      left outer join acc on acd.acc=acc.acc
      where acd.date between Pdatea and adddate(Pdatez,1) and (select FCekAccParent(acd.acc,Pacc))=1
order by 1,3,6;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LhpOut
DROP PROCEDURE IF EXISTS `Sp_LhpOut`;
DELIMITER //
CREATE PROCEDURE `Sp_LhpOut`(Pdatea datetime, Pdatez datetime, Ploca char(15), Plocz char(15), Pinva char(15), Pinvz char(15),PLhpa char(15), PLhpz char(15), Pmsna char(15), Pmsnz char(15), Pccta char(15), Pcctz char(15),Pin int)
BEGIN
declare adjust double;
set adjust=ifnull((select val from adj where period=(select Fdate2period(Pdatea)))/(select sum(qty) from lhd left outer join lhp on lhd.lhp=lhp.lhp where substring(lhd.lhp,5,4)=(select Fdate2period(Pdatea)) and price<>0 and left(inv,1)='4' and lhp.`delete`=0),0);
select jurnal,gudang,date,remark,if(Pin=1,unit2,TempLHP.unit) as unit,TempLHP.inv,cct,msn,invname,msnname,cctname,qty/if(Pin=1,konversi,1) as qty,harga,val,'1' as grp from (
    select lhp.lhp as jurnal, loc.name as `Gudang`, lhp.date, lhp.remark,inv.unit2,inv.unit,
           lhd.inv, ifnull(lhp.cct,'') cct,ifnull(lhp.msn,'') msn, inv.name as invname,ifnull(msn.name,'') as msnname,ifnull(cct.name,'') as cctname, lhd.qty, lhd.price as harga, lhd.qty*lhd.price+if(price=0,0,adjust*lhd.qty) as val
      from lhp left outer join cct on lhp.cct=cct.cct left outer join msn on lhp.msn=msn.msn, lhd, loc, inv
     where lhp.lhp=lhd.lhp and lhp.loc=loc.loc and lhd.inv=inv.inv and lhp.delete=0 and
           if (Ploca<>'' and Plocz<>'',lhp.loc between Ploca and Plocz,1) and
           if (Pinva<>'' and Pinvz<>'',lhd.inv between Pinva and Pinvz,1) and
           if (Plhpa<>'' and Plhpz<>'',lhd.lhp between Plhpa and Plhpz,1) and
           if (Pdatea<>'' and Pdatez<>'',lhp.date>=Pdatea and lhp.date<Pdatez,1)
        
) as TempLHP left outer join konversi on TempLHP.inv=konversi.inv and TempLHP.unit2=konversi.unit
     where
           if (Pmsna<>'' and Pmsnz<>'',msn between Pmsna and Pmsnz,1) and
           if (Pccta<>'' and Pcctz<>'',cct between Pccta and Pcctz,1)
union all
select jurnal,gudang,cast(Pdatez as date),remark,if(Pin=1,unit2,TempLHP2.unit) as unit,TempLHP2.inv,cct,msn,invname,msnname,cctname,sum(qty/if(Pin=1,konversi,1)) as qty,(sum(val)/sum(qty/if(Pin=1,konversi,1))) as harga,sum(val) as val,'2' as grp from (
    select 'REKAP' as jurnal, convert('TOTAL REKAP' using latin1) as `Gudang`, Pdatez as `date`, lhp.remark,inv.unit2,inv.unit,
           lhd.inv, ifnull(lhp.cct,'') cct,ifnull(lhp.msn,'') msn, inv.name as invname,ifnull(msn.name,'') as msnname,ifnull(cct.name,'') as cctname, lhd.qty, lhd.price as harga, lhd.qty*lhd.price as val
      from lhp left outer join cct on lhp.cct=cct.cct left outer join msn on lhp.msn=msn.msn, lhd, loc, inv
     where lhp.lhp=lhd.lhp and lhp.loc=loc.loc and lhd.inv=inv.inv and lhp.delete=0 and
           if (Ploca<>'' and Plocz<>'',lhp.loc between Ploca and Plocz,1) and
           if (Pinva<>'' and Pinvz<>'',lhd.inv between Pinva and Pinvz,1) and
           if (Plhpa<>'' and Plhpz<>'',lhd.lhp between Plhpa and Plhpz,1) and
           if (Pdatea<>'' and Pdatez<>'',lhp.date>=Pdatea and lhp.date<Pdatez,1)
) as TempLHP2 left outer join konversi on TempLHP2.inv=konversi.inv and TempLHP2.unit2=konversi.unit
where
      if (Pmsna<>'' and Pmsnz<>'',msn between Pmsna and Pmsnz,1) and
           if (Pccta<>'' and Pcctz<>'',cct between Pccta and Pcctz,1)
 group by inv,msn;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LhpOut1
DROP PROCEDURE IF EXISTS `Sp_LhpOut1`;
DELIMITER //
CREATE PROCEDURE `Sp_LhpOut1`(Pdatea datetime, Pdatez datetime, Ploca char(15), Plocz char(15), Pinva char(15), Pinvz char(15),PLhpa char(15), PLhpz char(15), Pmsna char(15), Pmsnz char(15), Pccta char(15), Pcctz char(15),Pin int)
BEGIN
declare adjust double;
set adjust=ifnull((select val from adj where period=(select Fdate2period(Pdatea)))/(select sum(qty) from lhd left outer join lhp on lhd.lhp=lhp.lhp where substring(lhd.lhp,5,4)=(select Fdate2period(Pdatea)) and price<>0 and left(inv,1)='4' and lhp.`delete`=0),0);
select jurnal,gudang,cast(date as date) date,remark,if(Pin=1,unit2,TempLHP.unit) as unit,TempLHP.inv,cct,msn,invname,msnname,cctname,qty/if(Pin=1,konversi,1) as qty,harga,val,'1' as grp from (
    select lhp.lhp as jurnal, loc.name as `Gudang`, lhp.date, lhp.remark,inv.unit2,inv.unit,
           lhd.inv, ifnull(lhp.cct,'') cct,ifnull(lhp.msn,'') msn, inv.name as invname,ifnull(msn.name,'') as msnname,ifnull(cct.name,'') as cctname, lhd.qty, lhd.price as harga, lhd.qty*lhd.price+if(price=0,0,adjust*lhd.qty) as val
      from lhp left outer join cct on lhp.cct=cct.cct left outer join msn on lhp.msn=msn.msn, lhd, loc, inv
     where lhp.lhp=lhd.lhp and lhp.loc=loc.loc and lhd.inv=inv.inv and lhp.delete=0 and
           if (Ploca<>'' and Plocz<>'',lhp.loc between Ploca and Plocz,1) and
           if (Pinva<>'' and Pinvz<>'',lhd.inv between Pinva and Pinvz,1) and
           if (Plhpa<>'' and Plhpz<>'',lhd.lhp between Plhpa and Plhpz,1) and
           if (Pdatea<>'' and Pdatez<>'',lhp.date>=Pdatea and lhp.date<Pdatez,1)
) as TempLHP left outer join konversi on TempLHP.inv=konversi.inv and TempLHP.unit2=konversi.unit
     where
           if (Pmsna<>'' and Pmsnz<>'',msn between Pmsna and Pmsnz,1) and
           if (Pccta<>'' and Pcctz<>'',cct between Pccta and Pcctz,1)
union all
select jurnal,gudang,cast(Pdatez as date),remark,if(Pin=1,unit2,TempLHP2.unit) as unit,TempLHP2.inv,cct,msn,invname,msnname,cctname,sum(qty/if(Pin=1,konversi,1)) as qty,(sum(val)/sum(qty/if(Pin=1,konversi,1))) asharga,sum(val) as val,'2' as grp from (
    select 'REKAP' as jurnal, convert('TOTAL REKAP' using latin1) as `Gudang`, Pdatez as `date`, lhp.remark,inv.unit2,inv.unit,
           lhd.inv, ifnull(lhp.cct,'') cct,ifnull(lhp.msn,'') msn, inv.name as invname,ifnull(msn.name,'') as msnname,ifnull(cct.name,'') as cctname, lhd.qty, lhd.price as harga, lhd.qty*lhd.price as val
      from lhp left outer join cct on lhp.cct=cct.cct left outer join msn on lhp.msn=msn.msn, lhd, loc, inv
     where lhp.lhp=lhd.lhp and lhp.loc=loc.loc and lhd.inv=inv.inv and lhp.delete=0 and
           if (Ploca<>'' and Plocz<>'',lhp.loc between Ploca and Plocz,1) and
           if (Pinva<>'' and Pinvz<>'',lhd.inv between Pinva and Pinvz,1) and
           if (Plhpa<>'' and Plhpz<>'',lhd.lhp between Plhpa and Plhpz,1) and
           if (Pdatea<>'' and Pdatez<>'',lhp.date>=Pdatea and lhp.date<Pdatez,1)
) as TempLHP2 left outer join konversi on TempLHP2.inv=konversi.inv and TempLHP2.unit2=konversi.unit
where
      if (Pmsna<>'' and Pmsnz<>'',msn between Pmsna and Pmsnz,1) and
           if (Pccta<>'' and Pcctz<>'',cct between Pccta and Pcctz,1)
 group by inv,msn;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LJIN
DROP PROCEDURE IF EXISTS `Sp_LJIN`;
DELIMITER //
CREATE PROCEDURE `Sp_LJIN`(Pdatea datetime, Pdatez datetime, Ploca char(15), Plocz char(15), Pinva char(15), Pinvz char(15), Pjina char(15), Pjinz char(15), Pccta char(15), Pcctz char(15))
BEGIN
select ind.jurnal,loc.name as `Gudang`, ind.date,ind.inv, ind.nodsg, inv.name as `Barang`,inv.unit,(select jenis.name from jenis where jenis.jenis=inv.jenis) as kelompok,
       ind.qty,(ind.val/ind.qty) as harga,jin.remark,jin.cct,(select cct.name from cct where cct.cct=jin.cct) as cctname, ind.val as val
  from ind,inv,jin,loc
 where subjurnal='JIN'and ind.inv=inv.inv and ind.jurnal=jin.jin and ind.loc=loc.loc
   and if (Ploca<>'' and Plocz<>'',ind.loc between Ploca and Plocz,1)
   and if (Pinva<>'' and Pinvz<>'',ind.inv between Pinva and Pinvz,1)
   and if (Pdatea<>'' and Pdatez<>'',ind.date>=Pdatea and ind.date<Pdatez,1)
   and if (Pccta<>'' and Pcctz<>'',jin.cct between Pccta and Pcctz,1)
  
   and if (Pjina<>'' and Pjinz<>'', ind.jurnal between Pjina and Pjinz,1);
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LJurnal
DROP PROCEDURE IF EXISTS `SP_LJurnal`;
DELIMITER //
CREATE PROCEDURE `SP_LJurnal`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Pnoseria` varchar(15),
	IN `Pnoseriz` varchar(15)
)
BEGIN
drop temporary table if exists TempAwal ;
create temporary table TempAwal (acc varchar(15), vlast double);
select acc.name, acd.acc, acd.date as date, acd.jurnal as jurnal, acd.rem as rem,
      if (acd.dk='D' , acd.val , 0) as debet,
      if (acd.dk='K' , acd.val , 0) as kredit,
      acd.dk as dk,Pdatea as tgl_awal,Pdatez as tgl_akhir,sub.name as subname
      from acd
      left join kas on acd.jurnal = kas.kas
      left join sub on kas.sub = sub.sub
      left outer join acc on acd.acc=acc.acc
      where acd.date between Pdatea and adddate(Pdatez,1) and acc.detil=1
        and if(Pnoseria<>'' and Pnoseriz<>'', left(jurnal,3) between Pnoseria and Pnoseriz, 1)
      order by 4,8,2,3;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_loadingSO
DROP PROCEDURE IF EXISTS `sp_loadingSO`;
DELIMITER //
CREATE PROCEDURE `sp_loadingSO`(pdatea datetime)
BEGIN
select sjh.sjh as sjl,sjd,okl as sonumber,sjh.date as sjldate, sjd.inv as material,sjd.remark as materialname,
sjd.qty1 as quantity,sjd.unit as Unit, sjh.chtime,sjh.`delete` from wis_inventory.sjh sjh,wis_inventory.sjd sjd where sjh.sjh=sjd.sjh
and TIMESTAMP(STR_TO_DATE(left(sjh.chtime,10),'%d/%m/%Y '),time(substr(sjh.chtime,11,5)))>= pdatea;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LookUp
DROP PROCEDURE IF EXISTS `SP_LookUp`;
DELIMITER //
CREATE PROCEDURE `SP_LookUp`(
	IN `Ptable` varchar(50)
)
BEGIN
if (Ptable='loc') then
  select loc as `Loc`, name as `Nama Lokasi`, remark as `Keterangan`,name
    from loc ;
elseif (Ptable='rfp') then
  select rfp.rfp as `No RFP`,
  rfp.tglterima as `Tgl Terima`, sub.sub as `Kode Supplier`,sub.name as `Nama Supplier`,
  rfp.val as Nilai, rfd.nodoc as `No Document`, rfd.val as `Nilai Document`
    from rfp,rfd,sub
    where rfp.rfp=rfd.rfp and rfp.sub=sub.sub and rfp.delete=false;
elseif (Ptable='grp') then
  select grp as `Kode Group`, grpname as `Nama`, acc as `Acc Hutang Piutang`, accppn as `Acc PPPN`, accum as `Acc Uang Muka`,
         accumbf as `Acc U.Muka Blm Difakturkan`, accppnbm as `Acc PPN Beda Masa`
    from grp where left(grp,1)='1';
elseif (Ptable='grps') then
  select grp as `Kode Group`, grpname as `Nama`, acc as `Acc Hutang Piutang`, accppn as `Acc PPPN`, accum as `Acc Uang Muka`,
         accumbf as `Acc U.Muka Blm Difakturkan`, accppnbm as `Acc PPN Beda Masa`
    from grp where left(grp,1)='2';
elseif (Ptable='cct') then
  select cct as `Cost Center`, name as `Nama`, name as `Departement`
    from cct
   where detil=1;
elseif (Ptable='acc') then
  select acc as `Kode Akun`, name as `Keterangan`,acc as `Account`
    from acc
   where detil=1;
elseif (Ptable='accmemo') then
  select acc as `Kode Akun`, name as `Keterangan`
    from acc
   where detil=1 and (name like 'HUTANG%' or name like 'PIUTANG%' or name like 'UANG MUKA%');
elseif (Ptable='kgrpiutang') then
  select acc.acc as `Perk. Giro`, acc.name as `Keterangan`, '' as `Perk. Bank`
    from acc
   where acc.name like 'PIUTANG% CEK/GIRO MUNDUR%';
elseif (Ptable='kgrhutang') then
 select acc.acc as `Perk. Giro`, acc.name as `Keterangan`, '' as `Perk. Bank`, left(acc.name,locate('A/C',acc.name)-1) as Bank,left(right(acc.name,length(acc.name)-locate('A/C',acc.name)-3),locate('(',right(acc.name,length(acc.name)-locate('A/C',acc.name)-3))-1) as `AC.Bank`
    from acc
   where acc.name like 'HUTANG% CEK/GIRO%' AND detil=1;
elseif (Ptable='jenis') then
  select jenis as Jenis, name as Nama, remark as `Keterangan`, mtp as `Material Type`, acc as Account,
         accsls as `Acc.Penjualan`, accmt as `Acc.Material`, accvarian as `Acc.Varian`, accdisc as `Acc.Disc`,
         accrev as `Acc.Rev`, accreturn as `Acc.Return`, acchpp as `Acc.Hpp`
    from jenis;
elseif (Ptable='jenis1') then
  select jenis as Jenis, name as Nama, remark as `Keterangan`, mtp as `Material Type`, acc as Account,
         accsls as `Acc.Penjualan`, accmt as `Acc.Material`, accvarian as `Acc.Varian`, accdisc as `Acc.Disc`,
         accrev as `Acc.Rev`, accreturn as `Acc.Return`, acchpp as `Acc.Hpp`
    from jenis  where left(jenis,1) in ('1','2','3','6');
elseif (Ptable='inv') then
    select inv as `Kode Barang`, name as `Nama Barang`, oldinv as `Kode Lama`, unit as Unit, unit as `Unit Base`, spesifikasi as Spesifikasi
    from inv
   where flag=0;
elseif (Ptable='inv1') then
  select inv as `Kode Barang`, name as `Nama Barang`, oldinv as `Kode Lama`, unit as Unit, unit as `Unit Base`
    from inv
   where flag=0 and left(inv,1) in ('1','2','3','6','7');
elseif (Ptable='invpl') then
  select inv as `Kode Barang`, name as `Nama Barang`, oldinv as `Kode Lama`, unit as Unit, unit as `Unit Base`
    from inv
   where flag=0 and left(inv,1) in ('7');
elseif (Ptable='invpemb') then
  select inv as `Kode Barang`, name as `Nama Barang`,spesifikasi as Spesifikasi, oldinv as `Kode Lama`, unit as Unit, unit as `Unit Base`
    from inv
   where flag=0;
elseif (Ptable='invpenj') then
  select inv as `Kode Barang`,kgb as `Kode Global`, name as `Nama Barang`,spesifikasi as Spesifikasi, oldinv as `Kode Lama`, oldname as `Nama Lama`, unit as Unit, unit as `Unit Base`,prosen as `Price`,00 as `Harga Satuan Besar`
    from inv
   where flag=0;
elseif (Ptable='invpenj1') then
  select inv as `Kode Barang`,kgb as `Kode Global`, name as `Nama Barang`,spesifikasi as Spesifikasi, oldinv as `Kode Lama`, oldname as `Nama Lama`, unit as Unit, unit as `Unit Base`,prosen as `Price`,00 as `Harga Satuan Besar`
    from inv
   where flag=0;
elseif (Ptable='invpricelist') then
  select inv as `Kode Barang`, name as `Nama Barang`, oldinv as `Kode Lama`, oldname as `Nama Lama`, unit as `UOM Kecil`,00 as `Price`
    from inv
   where flag=0 and (left(jenis,1)<='2' or left(jenis,1)='4'  or left(jenis,1)='7' or left(jenis,1)='9');
elseif (Ptable='invpenj_web') then
  select inv as `Kode Barang`, name as `Nama Barang`, oldinv as `Kode Lama`, oldname as `Nama Lama`, unit as Unit, unit as `Unit Base`,
         (select group_concat(unit separator ', ')
          from konversi where konversi.inv=inv.inv group by konversi.inv) as `Konversi`,
         ifnull((select price from okd, okl
          where okd.okl=okl.okl and okd.inv=inv.inv order by okl.`date` desc limit 1),0) as `Last Price`,
         ifnull((select unit from okd, okl
          where okd.okl=okl.okl and okd.inv=inv.inv order by okl.`date` desc limit 1),'') as `Last Unit`
    from inv
   where inv not in (select inv from dsg) and flag=0 and (group_=4 or group_=3);
elseif (Ptable='invexcludedsg') then
  select inv as `Kode Barang`, name as `Nama Barang`, oldinv as `Kode Lama`, unit as Unit, unit as `Unit Base`
    from inv
   where inv not in (select inv from dsg) and flag=0;
elseif (Ptable='aktiva') then
  select akt as `Kode Barang`, name as `Nama Barang`, unit as Unit, unit as `Unit Base`,harga as Total
    from akt;
elseif (Ptable='aktivatetap') then
	select akt as `Kode Aktiva`, name as `Nama Aktiva`, acc AS acc, jumlah AS jumlah, unit as Unit,harga as Harga
	from akt where left(acc,6);
elseif (Ptable='accakt') then
select distinct akt.acc,acc.name from akt,acc where akt.acc=acc.acc;
elseif (Ptable='invjasa') then
  select inv as `Kode Barang`, name as `Nama Barang`, oldinv as `Kode Lama`, unit as Unit, unit as `Unit Base`
    from inv
    where flag=0 and group_=9;
elseif (Ptable='color') then
  select inv as  `Kode`, name as `Warna`, unit as Unit
    from inv
   where flag=0 and jenis='60100';
elseif (Ptable='type') then
  select `type` as `Type`, ket as `Keterangan`
    from `type`;
elseif (Ptable='dsg') then
  select dsg.nodsg as `No Design`, dsg.abrev as `Nama`, inv.oldinv as `Kode Lama`, inv.inv as `Kode Barang`, inv.name as `Nama Barang`, inv.unit as Unit,
         inv.unit as `Unit Base`
    from inv, dsg
   where inv.flag=0 and (inv.group_=3 or inv.group_=4) and dsg.inv=inv.inv and dsg.aktif=1;
elseif (Ptable='prq') then
  select prq as `No PR`, date as Tanggal from prq where prq.delete=false;
elseif (Ptable='mor2') then
  select s.mor as MO, s.okl as `Sales Order`, s.nodsg as `No Design`, s.inv as `Kode Barang`,
         s.remark as `Nama Barang`, sum(s.qty) as Qty, i.unit as Unit, i.unit as `Unit Base`
  from
  (
    select mor.mor, mor.okl, mor.nodsg, mor.inv, okd.remark, mor.qty
      from mor,okd
     where mor.delete=0 and mor.okl=okd.okl and mor.nodsg=okd.nodsg
    union all
    select lhd.mor, convert('' using latin1) as okl, lhd.nodsg, lhd.inv, lhd.remark, -qty as qty
      from lhd, lhp
     where lhp.lhp=lhd.lhp and lhp.delete=0
  ) as s, inv i where s.inv = i.inv
  group by s.mor,s.nodsg,s.inv,s.remark;
elseif (Ptable='mor') then
 select s.mor as MO, s.okl as `Sales Order`, s.nodsg as `No Design`, s.inv as `Kode Barang`,
         ifnull(s.remark,i.name) as `Nama Barang`, sum(s.qty) as Qty, i.unit as Unit, i.unit as `Unit Base`
  from
  (
    select mor.mor, mor.okl, mor.nodsg, mor.inv, okd.remark, mor.qty
      from mor
      left join okd on mor.okl=okd.okl and mor.nodsg=okd.nodsg
     where mor.delete=0 
    union all
    select lhd.mor, convert('' using latin1) as okl, lhd.nodsg, lhd.inv, lhd.remark, -qty as qty
      from lhd, lhp
     where lhp.lhp=lhd.lhp and lhp.delete=0
  ) as s, inv i where s.inv = i.inv
  group by s.mor,s.nodsg,s.inv,s.remark having sum(s.qty)>0;
elseif (Ptable='part') then
  select dsg.nodsg as `No Design`, inv.oldinv as `Kode Lama`, inv.inv as `Kode Barang`, name as `Nama Barang`
    from inv, dsg
   where inv.flag=0 and upper(inv.name) like 'L%' and dsg.inv=inv.inv;
elseif (Ptable='invspb') then
  select inv.oldinv as `Kode Lama`, inv as `Kode Barang`, name as `Nama Barang`, unit as `Unit SJ`, unit as "Unit Base Diterima",
         unit as "Unit Diterima"
    from inv
    where flag=0 and group_<>4;
elseif (Ptable='invspm') then
  select inv as `Kode Barang`, kgb as `Kode Global`, name as `Nama Barang`, unit as `Unit`, unit as "Unit Dikirim",
         unit as "Unit Base Dikirim"
    from inv
    where flag=0 ;
elseif (Ptable='sub') then
  select sub as `Kode`, name as `Nama`, address as `Alamat`, city as `Kota`, person as `Contact`,
         subnpwp as `NPWP`, cur as Cur, top as Top
    from sub
   where aktif=1  ;
elseif (Ptable='subsjt') then
  select sub as `Kode`, name as `Nama`, address as `Alamat`, city as `Kota`, person as `Contact`,
         subnpwp as `NPWP`, cur as Cur, top as Top
    from sub
   where aktif=1 and (group_=2 or sub= '2120057') and sub not in ('1120002','1320073');
elseif (Ptable='supplier') then
  select sub as `Kode`, name as `Nama`, address as `Alamat`, city as `Kota`, person as `Contact`, phone as `No Telp`,
         subnpwp as `NPWP`, cur, top as Top, shiptoname as `Ship To`, shiptoaddress as `Ship Address`,
         ifnull(`limit`,0) as `Limit`
    from sub
   where group_=1 and aktif=1;
elseif (Ptable='supplier_lok') then
  select sub as `Kode`, name as `Nama`, address as `Alamat`, city as `Kota`, person as `Contact`, phone as `No Telp`,
         subnpwp as `NPWP`, cur, top as Top, shiptoname as `Ship To`, shiptoaddress as `Ship Address`
    from sub
   where group_=1 and aktif=1 and sub like '21%' or sub like '23%' or sub like '24%';
elseif (Ptable='supplier_im') then
  select sub as `Kode`, name as `Nama`, address as `Alamat`, city as `Kota`, person as `Contact`, phone as `No Telp`,
         subnpwp as `NPWP`, cur, top as Top, shiptoname as `Ship To`, shiptoaddress as `Ship Address`
    from sub
   where group_=1 and aktif=1 and ( sub like '22%' or sub like '234%');
elseif (Ptable='customer') then
  select sub as `Kode`, name as `Nama`, address as `Alamat`, city as `Kota`, person as `Contact`, phone as `No Telp`,
         subnpwp as `NPWP`, cur, top as Top, ifnull(`limit`,0) as `Limit`
    from sub
   where group_=2 and aktif=1;
elseif (Ptable='Shipper') then
  select sub as `Kode`, name as `Nama`, address as `Alamat`, city as `Kota`, person as `Contact`, phone as `No Telp`,
         subnpwp as `NPWP`, cur, top as Top
    from sub
       where group_=2 and aktif=1;
elseif (left(Ptable,7)='Shippto') then
  select aliasname as `Kode`, shiptoname as `Nama`, shiptoaddress as `Alamat`, city as `Kota`, contactperson as `Contact`, phone as `No Telp`
    from subto ;
elseif (Ptable='emkl') then
  select sub as `Kode`, name as `Nama`, address as `Alamat`, city as `Kota`, person as `Contact`, phone as `No Telp`,
         subnpwp as `NPWP`, cur, top as Top
    from sub
   where group_=1 and aktif=1;
elseif (Ptable='supcus') then
  select sub as `Kode`, name as `Nama`, address as `Alamat`, city as `Kota`, person as `Contact`, phone as `No Telp`,
         subnpwp as `NPWP`, cur, top as Top
    from sub
   where (group_=2 or group_=1) and aktif=1 order by sub;
elseif (Ptable='angkutan') then
  select sub as `Kode`, name as `Nama`, address as `Alamat`, city as `Kota`, person as `Contact`,
         subnpwp as `NPWP`, cur , top as Top
    from sub
   where group_=1 and aktif=1 and grp='232';
elseif (Ptable='subto') then
  select sub as `Kode`, shiptoname as `Ship To`, concat(shiptoaddress,' - ',city) as `Ship Address`, aliasname as `Alias`
    from subto;
elseif (Ptable='so') then
  select okl.okl as `No SO`, sub.name as Customer, okl.date as Tanggal, okl.nopoc as `No PO Customer`,
         okl.close as `Closed`, withMO as `With MO`
    from okl, sub
    where okl.sub=sub.sub and okl.delete=0;
elseif (Ptable='noseri') then
  select noseri as `No Seri`, remark as `Keterangan` from modul where subjurnal<>'';
elseif (Ptable='mkertas') then
  select kode as `Tipe Kertas`, nama as Nama from mkertas;
elseif (Ptable='grphrgdasar') then
  select kode as `Group`, nama as `Keterangan`, ongkos as Ongkos from grphrgdasar;
elseif (Ptable='cur') then
  select cur as Curr, name as Nama from cur;
elseif (Ptable='lhp') then
  select lhp.LHP,lhp.date as `Tanggal LHP`,lhp.loc as `Kode Gudang`,loc.name as `Nama Gudang`,
  lhp.remark as `Keterangan`,lhd.inv as `Kode Persediaan`,lhd.remark as `Nama Persediaan`,lhd.Qty,lhd.Unit
  from lhp,lhd,loc
  where lhp.lhp=lhd.lhp and lhp.loc=loc.loc;
elseif (Ptable='bppb') then
  select jin.jin as `BPPB`,jin.date as `Tanggal BPPB`,jin.remark as `Keterangan`,jin.loc as `Kode Loc`,loc.name as `Loc`,jid.inv as `Kode Persediaan`,jid.remark as `Persediaan`,jid.qty1 as `Qty`,jid.unit as `Satuan`, jid.nodsg AS `Kode Batch`
  from jin,jid,loc
  where jin.group_=2 and jin.loc=loc.loc and jin.jin=jid.jin;
elseif (Ptable='bpb') then
  select trm.trm as BPB,trm.date as `Tanggal BPB`,trm.`lock` as `Lokasi Awal`,trm.locd as `Lokasi Tujuan`,trd.inv as `Kode Barang`,trd.remark as `Nama Barang`
  from trm,trd,inv
  where trm.trm = trd.trm and trd.inv = inv.inv and trm.`delete` = 0;
elseif (Ptable='jin') then
  select jin.jin as `BPPB`,jin.date as `Tanggal BPPB`,jin.remark as `Keterangan`,jin.loc as `Kode Loc`,loc.name as `Loc`,jid.inv as `Kode Persediaan`,jid.remark as `Persediaan`,jid.qty1 as `Qty`,jid.unit as `Satuan`
  from jin,jid,loc
  where jin.group_=1 and jin.loc=loc.loc and jin.jin=jid.jin;
elseif (Ptable='soretur') then
  select rsm.rsm as `SO Retur`,rsm.date as `Tanggal`,rsm.sub as `Kode Supplier`,sub.name as `Nama Supplier`,
         rsmd.nodsg as `No Desain`,rsmd.inv as `Persediaan`,rsmd.remark as `Keterangan`,rsmd.qty1 as `Qty`,rsmd.unit as `Unit`,
         rsmd.price as `Harga Satuan`
  from rsmd,rsm,sub
  where rsmd.rsm=rsm.rsm and rsm.sub=sub.sub and rsm.delete=false;
elseif (Ptable='spbretur') then
  select spr.spr as `SPB Retur`,spr.date as `Tanggal`,spr.sub as `Kode Supplier`,sub.name as `Nama Supplier`,
         sprd.nodsg as `No Desain`,sprd.inv as `Persediaan`,sprd.remark as `Keterangan`,
         sprd.qty1 as `Qty`,sprd.unit as `Unit`
  from spr,sprd,sub
  where sprd.spr=spr.spr and spr.sub=sub.sub and spr.delete=false;
elseif (Ptable='lpb') then
  select lph.lph as `No LPB`,lph.date as `Tanggal`,lph.sub as `Kode Supp`,sub.name as `Nama Supp`,lph.oms as `No PO`,lph.spb as `No Spb`
  from lph,sub where lph.sub=sub.sub and lph.delete=false;
elseif (left(Ptable,3)='cad') then
select * from (
  select trim(cad) cad,date,acc as `Kode Akun`,remark,'D' as `D/K`,sum(val) as Nilai,max(kurs) as kurs,sum(val) as val from
  (
    select cadet.cad,cadet.acc,cad.date,cadet.remark,'D' as dk,cadet.val,cad.kurs from cad left outer join cadet on cadet.cad=cad.cad
    where `delete`=0 and nocad<>'' and cad.sub=substr(Ptable,4,15)
    union all
    select msx.cad,msx.acc,msk.date,msx.remark,'D',-msx.val,1 from msx,msk where msx.msk=msk.msk and msx.cad<>'' and msk.sub=substr(Ptable,4,15)
    union all
    select umd.cad,umd.acc,umh.date,umd.remark,'D',-umd.val,1 from umd,umh where umd.umh=umh.umh and umd.cad<>'' and umh.sub=substr(Ptable,4,15)
  ) as xcad group by trim(cad),acc
) as xcad1
 where val<>0;
elseif (Ptable='ino') then
  select ino,cct,proname as `Nama Proyek`,datea as TglMulai,datez as TglAkhir,valpro as `Nilai Proyek`,ifnull(valpro,0)+
  ifnull((select sum(jsd.val*case when dk='K' then 1 else -1 end) from jsd where jsd.ino=ino.ino),0)+
  ifnull((select sum(msx.val*case when dk='K' then 1 else -1 end) from msx where msx.ino=ino.ino),0)+
  ifnull((select sum(umd.val*case when dk='K' then 1 else -1 end) from umd where umd.ino=ino.ino),0) as Nilai
  from ino where settle<>1;
elseif (left(Ptable,6)='oklmsk') then
  select okl as `No SO` from okl where okl.date>adddate(now(),-1000) 
 union all select oms from oms where oms.date>adddate(now(),-1000) and oms.sub=substring(ptable,7,15);
elseif (Ptable='vendor') then
  select sub as `Kode`, name as `Nama`,remark as `Keterangan`, address as `Alamat`, city as `Kota`, person as `Contact`,
         subnpwp as `NPWP`, cur as Cur, norek as NoRek
    from sub
   where aktif=1 and group_=1;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LookUp1
DROP PROCEDURE IF EXISTS `SP_LookUp1`;
DELIMITER //
CREATE PROCEDURE `SP_LookUp1`(ptable varchar(15),Ploc varchar(15), Pinv varchar(15))
BEGIN
if (Ptable='trm') then
 select trm as `Transfer Number`,date, qty-(select sum(qty) from lhp where lhp.trm=trm.trm) as qty, locd as `lokasi tujuan`
 from wis_inventory.trm a,wis_inventory.trd b
 where a.trm=b.trm and loc=Ploc and inv=Pinv ;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LookUpCca
DROP PROCEDURE IF EXISTS `SP_LookUpCca`;
DELIMITER //
CREATE PROCEDURE `SP_LookUpCca`(
	IN `Pcct` varchar(15)
)
BEGIN
  select cca.kode as `Kode Transaksi`, cca.name as `Nama` from cca where left(cct,1) = left(Pcct,1);
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LookUpCcaAcc
DROP PROCEDURE IF EXISTS `SP_LookUpCcaAcc`;
DELIMITER //
CREATE PROCEDURE `SP_LookUpCcaAcc`(
	IN `Pcct` varchar(15)
)
BEGIN
  select cca.kode as `Kd. Transaksi`, cca.name as `Name`, kode.acc as `No. Rekening`, acc.name as `Nama Rekening`
    from cca,kode,acc
   where left(cct,1) = left(Pcct,1) and cca.kode=kode.kode and kode.acc=acc.acc;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LookUpCgr
DROP PROCEDURE IF EXISTS `Sp_LookUpCgr`;
DELIMITER //
CREATE PROCEDURE `Sp_LookUpCgr`(Pperiod varchar(4), Pdatea datetime, Pdatez datetime, Pgroup varchar(1))
BEGIN
   select xrgr.jurnal, xrgr.nobg as `No BG`, xrgr.`date` as Tanggal, xrgr.duedate as `Jatuh Tempo`,
         xrgr.bank as Bank, xrgr.acbank as `AC Bank`, xrgr.val as Nilai,
         xrgr.sub as `Supplier/Customer`, sub.name as "Nama Supplier/Customer",
         xrgr.acc as `Acc Giro`, xrgr.accbank as `Acc Bank`
  from
  (
 select kag.kas as jurnal,cgr.nobg as bgcair, kag.nobg, kas.date, kag.duedate, kag.bank, kag.acbank, kag.val, kas.sub, kag.acc,
           kas.acc as accbank
    from (select * from kag where kag.duedate > adddate(Pdatez,interval -10 month)) kag inner join
    (select kas,acc,date,sub from kas where kas.date<adddate(Pdatez,1) and kas.date > adddate(Pdatez,interval -10 month) and kas.delete=0 and kas.group_=Pgroup) as kas on kag.kas=kas.kas
    left outer join (select nobg from cgr where cgr.date > adddate(Pdatez,interval -1 year)) cgr on kag.nobg=cgr.nobg
    ) as xrgr left join sub on xrgr.sub=sub.sub where bgcair is null ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LookUpLHP
DROP PROCEDURE IF EXISTS `Sp_LookUpLHP`;
DELIMITER //
CREATE PROCEDURE `Sp_LookUpLHP`(Pperiod varchar(4))
BEGIN
  select lhp as LHP, date as Tanggal, loc as Loc, remark as Keterangan
    from lhp where `delete`=0 and period=Pperiod;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LookUpLhpp
DROP PROCEDURE IF EXISTS `SP_LookUpLhpp`;
DELIMITER //
CREATE PROCEDURE `SP_LookUpLhpp`()
BEGIN
SELECT inv AS `Kode Barang`, name AS `Nama Barang`, oldinv AS `Kode Lama`, unit AS Unit, unit AS `Unit Base`
FROM inv
WHERE flag=0 AND (
LEFT(inv,2) = 11 OR
LEFT(inv,2) = 41 OR
LEFT(inv,2) = 51 OR
LEFT(inv,2) = 71 OR 
LEFT(inv,2) = 10);
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LookUpLoc
DROP PROCEDURE IF EXISTS `SP_LookUpLoc`;
DELIMITER //
CREATE PROCEDURE `SP_LookUpLoc`(
	IN `Pusr` varchar(15)
)
BEGIN
  select loc.loc as `Loc`, loc.name as `Nama Lokasi`, loc.remark as `Keterangan`, loc.name
  from loc ;
 
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LookUpMO
DROP PROCEDURE IF EXISTS `SP_LookUpMO`;
DELIMITER //
CREATE PROCEDURE `SP_LookUpMO`(Pdatea datetime, Pdatez datetime)
BEGIN
  
  
  select l.mor as MO, m.okl as SO, l.nodsg as `No Design`, l.inv as `Kode Barang`, l.remark as `Nama Barang`, p.date as `Tgl LHP`
  from lhd l left outer join lhp p on l.lhp=p.lhp
  left outer join mor m on m.mor=l.mor
  where m.`delete`=0 and p.`delete`=0 and if(Pdatea<>date(00000000) and Pdatez<>date(00000000),m.date between Pdatea and adddate(Pdatez,1),1)
    and m.mor not in (select mor from hprod);
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LookUpnokon
DROP PROCEDURE IF EXISTS `SP_LookUpnokon`;
DELIMITER //
CREATE PROCEDURE `SP_LookUpnokon`(Psub varchar(15),Pinv varchar(15),pilihan varchar(1))
BEGIN
if (pilihan='1') then
 select distinct vpo,tgl,kiriman,periode from
 (select vpo,sub,Supplier,`Kode Barang`,max(remark) as remark,`Nama Barang`,sum(Qty) as Qty,unit as Unit,max(Price) as Price,tgl,kiriman,periode from
  (
   select vpo.vpo,vpo.sub,(select name from sub where sub=vpo.sub) as Supplier,vpd.inv as `Kode Barang`,
   vpd.remark,vpd.remark as `Nama Barang`,vpd.qty as Qty,vpd.unit,vpd.price as Price,vpo.date as tgl,vpo.kiriman,vpo.periode
   from vpo,vpd where vpo.vpo=vpd.vpo and vpo.sub=Psub and vpo.`delete`=0
   union all
   select oms.no_kon,oms.sub,(select name from sub where sub=oms.sub) as Supplier, omd.inv,
   omd.remark,omd.remark,-omd.qty1,omd.unit,0 as Price,date(20000101),date(20000101),date(20000101)
   from oms,omd where oms.oms=omd.oms and oms.no_kon<>'' and oms.`delete`=0 and oms.sub=Psub
  ) as Tmpkontrak group by vpo,Supplier,`Nama Barang`
 ) xtmp where qty>0;
elseif (pilihan='2') then
select * from
 (select vpo,`Kode Barang`,`Nama Barang`,sum(Qty) as Qty,unit as Unit,max(Price) as Price from
  (
   select vpo.vpo,vpo.sub,(select name from sub where sub=vpo.sub) as Supplier,vpd.inv as `Kode Barang`,
   vpd.remark,vpd.remark as `Nama Barang`,vpd.qty as Qty,vpd.unit,vpd.price as Price
   from vpo,vpd where vpo.vpo=vpd.vpo and vpo.sub=Psub and vpo.`delete`=0
   union all
   select oms.no_kon,oms.sub,(select name from sub where sub=oms.sub) as Supplier, omd.inv,
   omd.remark,omd.remark,-omd.qty1,omd.unit,0 as Price
   from oms,omd where oms.oms=omd.oms and oms.no_kon<>'' and oms.`delete`=0 and oms.sub=Psub
  ) as Tmpkontrak group by vpo,Supplier,`Nama Barang`
 ) xtmp where qty>0;
elseif (pilihan='3') then
select * from
 (select `Kode Barang`,`Nama Barang`,vpo,sub,Supplier,sum(Qty) as Qty,unit as Unit,max(Price) as Price from
  (
   select vpo.vpo,vpo.sub,(select name from sub where sub=vpo.sub) as Supplier,vpd.inv as `Kode Barang`,
   vpd.remark,vpd.remark as `Nama Barang`,vpd.qty as Qty,vpd.unit,vpd.price as Price
   from vpo,vpd where vpo.vpo=vpd.vpo and vpo.`delete`=0 and vpd.inv=Pinv and vpo.sub=Psub
   union all
   select oms.no_kon,oms.sub,(select name from sub where sub=oms.sub) as Supplier, omd.inv,
   omd.remark,omd.remark,-omd.qty1,omd.unit,0 as Price
   from oms,omd where oms.oms=omd.oms and oms.no_kon<>'' and oms.`delete`=0 and omd.inv=Pinv and oms.sub=Psub
  ) as Tmpkontrak group by vpo,Supplier,`Nama Barang`
 ) xtmp where qty>0;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LookUpOKL
DROP PROCEDURE IF EXISTS `SP_LookUpOKL`;
DELIMITER //
CREATE PROCEDURE `SP_LookUpOKL`(Ptable varchar(50),Psub varchar(15))
BEGIN
  if (Ptable='okl') then
  select  okl as `Sales Order`,inv as `Kode Barang`,remark as `Nama Barang`,sum(qty1) as Qty,price as Price,val as `Nilai` from
  (
    select okd.okl ,okd.inv ,okd.remark ,okd.qty1 ,okd.unit as Unit,
    okd.price ,okd.val
    from okd,okl
    where  okl.okl=okd.okl and okl.sub=Psub
    union all
    select fpjumd.oms,fpjumd.inv,fpjumd.remark,-fpjumd.qty,fpjumd.unit,0,0 from fpjumd,fpjumk where fpjumd.fpjumk=fpjumk.fpjumk and fpjumk.sub=Psub
  ) as oklfpj group by okl,inv having qty>0 ;
  end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_LookUpPriceList
DROP PROCEDURE IF EXISTS `Sp_LookUpPriceList`;
DELIMITER //
CREATE PROCEDURE `Sp_LookUpPriceList`(
	IN `Pnodsg` VARCHAR(50)
)
BEGIN
  select h.tglawal as `Tgl Awal`, h.tglakhir as `Tgl Akhir`, d.harga as Price
    from hrgdasar h, dhrgdsg d where h.kode=d.kode and h.aktif=1 and d.nodsg=Pnodsg
   order by tglawal, tglakhir desc limit 3 ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LookUpSPBPO
DROP PROCEDURE IF EXISTS `SP_LookUpSPBPO`;
DELIMITER //
CREATE PROCEDURE `SP_LookUpSPBPO`(
	IN `Ptable` varchar(50),
	IN `Poms` varchar(15)
)
BEGIN
if (Ptable='invspb') then
  if (Poms='') then
    select inv.oldinv as `Kode Lama`, inv as `Kode Barang`, name as `Nama Barang`, unit as `Unit SJ`, unit as "Unit Base Diterima",
         unit as "Unit Diterima"
    from inv
    where flag=0 and group_<>4;
  elseif (Poms<>'') then
   call Sp_OutSpb(Poms);
  end if;
end if;
if (Ptable='invokl') then
 
select * from
(
select okl,inv as 'Kode Barang',remark as 'Nama Barang',loc as Loc,unit as Unit,sum(qty1) as Qty from
(
  select convert(okd.okl using latin1) okl,convert(okd.inv using latin1) inv,convert(okd.remark using latin1) remark,convert(okd.loc using latin1) loc,okd.qty1,convert(okd.unit using latin1) unit from okd where okd. okl=Poms
  union all
  select convert(dod.okl using latin1),convert(dod.inv using latin1),convert(dod.remark using latin1),convert(dod.loc using latin1),-dod.qty/ifnull(konversi,1) as qty,convert(okd.unit using latin1)as unit from dod left outer join
  okd on dod.inv=okd.inv and dod.okl=okd.okl left outer join konversi
  on dod.inv=konversi.inv and okd.unit=konversi.unit left outer join doh on dod.doh=doh.doh where  doh.`delete`=0 and dod.okl=Poms
) as tempdo group by okl,inv
) as tmp where qty>0;
end if;
if (Ptable='tdo') then
 select doh.doh as `DO Number`,doh.`date`,doh.sub,sub.name,doh.remark as keterangan from doh left outer join spm on doh.doh=spm.okl_rms
 left outer join sub on doh.sub=sub.sub where spm.okl_rms is null;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LookUpSPBPO_TDO
DROP PROCEDURE IF EXISTS `SP_LookUpSPBPO_TDO`;
DELIMITER //
CREATE PROCEDURE `SP_LookUpSPBPO_TDO`(
	IN `Ptable` VARCHAR(50),
	IN `Poms` VARCHAR(50)
)
BEGIN
if (Ptable='invspb') then
  if (oms='') then
    select inv.oldinv as `Kode Lama`, inv as `Kode Barang`, name as `Nama Barang`, kgb as `Kode Global`, unit as `Unit SJ`, unit as "Unit Base Diterima",
         unit as "Unit Diterima"
    from inv
    where flag=0 and group_<>4;
  elseif (Poms<>'') then
   call Sp_OutSpb(Poms);
  end if;
end if;
if (Ptable='invokl') then
select * from
(select okl,inv as 'Kode Barang',remark as 'Nama Barang',nodsg as `No Batch`,loc as Loc,unit as Unit,sum(qty1) as Qty, kgb as `Kode Global`
from
(select convert(okd.okl using latin1) okl,convert(okd.inv using latin1) inv,convert(okd.remark using latin1) remark,
convert(okd.loc using latin1) loc,okd.qty1,convert(okd.unit using latin1) unit,okd.nodsg,okd.kgb,okd.`no` 
from okd where okd. okl=Poms
  union all
select convert(dod.okl using latin1),convert(dod.inv using latin1),convert(dod.remark using latin1),okd.nodsg,convert(dod.loc using latin1),-dod.qty/ifnull(konversi,1) as qty,convert(okd.unit using latin1)as unit,
  convert(okd.kgb using latin1)as kgb,dod.`no` 
from dod
  left outer join okd on dod.inv=okd.inv and dod.okl=okd.okl and okd.`no`=dod.`no`
  left outer join konversi on dod.inv=konversi.inv and okd.unit=konversi.unit
  left outer join doh on dod.doh=doh.doh where  doh.`delete`=0 and dod.okl=Poms
) as tempdo group by nodsg,okl,inv, `no`
) as tmp where qty>0;
end if;
if (Ptable='tdo') then
 select doh.doh as `DO Number`,doh.`date`,doh.sub,sub.name,doh.remark as keterangan from doh left outer join spm on doh.doh=spm.okl_rms
 left outer join sub on doh.sub=sub.sub where spm.okl_rms is null;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_LookUpSubto
DROP PROCEDURE IF EXISTS `SP_LookUpSubto`;
DELIMITER //
CREATE PROCEDURE `SP_LookUpSubto`(PSub varchar(15))
BEGIN
  select sub as `Kode`, shiptoname as `Ship To`, shiptoaddress as `Ship Address`, aliasname as `Alias`
  from subto where sub=PSub;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_MasterAktiva
DROP PROCEDURE IF EXISTS `SP_MasterAktiva`;
DELIMITER //
CREATE PROCEDURE `SP_MasterAktiva`(
	IN `Pakta` VARCHAR(15),
	IN `Paktz` VARCHAR(15),
	IN `Pacca` VARCHAR(15),
	IN `Paccz` VARCHAR(15),
	IN `Pccta` VARCHAR(15),
	IN `Pcctz` VARCHAR(15)
)
BEGIN
select akt.akt as `Kode Aktiva`,akt.name as `Nama Aktiva`, akt.lokasi as Lokasi,akt.accsusut,date(tglbeli) as `Tanggal Beli`,date(tglstop) as `Tanggal End`,akt.jumlah as Jumlah, akt.unit as Unit,akt.harga as `Harga Beli`,acc.name as jenis
from akt
left join acc on akt.`acc`=acc.`acc`
left join akd on akd.akt=akt.akt AND akd.cct=akt.acc
where if (Pakta<>'' and Paktz<>'',akt.akt between Pakta and Paktz,1)
  and if (Pacca<>'' and Paccz<>'',akt.acc between Pacca and Paccz,1)
  and if (Pccta<>'' and Pcctz<>'',akd.cct between Pccta and Pcctz,1)
order by jenis,akd.cct,akt.akt;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_memo
DROP PROCEDURE IF EXISTS `sp_memo`;
DELIMITER //
CREATE PROCEDURE `sp_memo`()
BEGIN
select mpr ,date as tanggal,remark as remark,usrpr as peminta from (
select mpr.mpr,mpr.date,mpr.remark,mpr.usrpr,prq.mpr as mprprq from mpr left outer join prq on mpr.mpr=prq.mpr where mpr.aprov=1) as x where mprprq is null;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_MskOut
DROP PROCEDURE IF EXISTS `Sp_MskOut`;
DELIMITER //
CREATE PROCEDURE `Sp_MskOut`(Pdatea datetime, Pdatez datetime, Psuba char(15), Psubz char(15))
BEGIN
select *,a.val-a.umkval as subtotal from
(
select msk.`date`,msd.msk,sub.name,msd.invo,msd.remark,msd.dpp*msd.kurs as dpp,msd.ppn*msd.kurs as ppn,msd.val*msd.kurs as val,msd.nofp,msd.kurs,
  ifnull((select sum(val)*msd.kurs from umkp where trim(umkp.invoice)=trim(msd.invo) and umkp.msk=msd.msk),0) as umkval,
  if(left(msd.nofp,3)='010',msd.ppn*msd.kurs,0) as ppn010,if(left(msd.nofp,3)='040',msd.ppn*msd.kurs,0) as ppn040,if(left(msd.nofp,3)='070',msd.ppn*msd.kurs,0) as ppn070
  from msd,msk,sub where msd.msk=msk.msk and msk.sub=sub.sub and msk.delete=0
  and if (Psuba<>'' and Psubz<>'',msk.sub between Psuba and Psubz,1)
  and if (Pdatea<>'' and Pdatez<>'',msk.date>=Pdatea and msk.date<adddate(Pdatez,1),1)
union all
select rms.date,rms.rms,sub.name,'',rms.remark,-rms.val as dpp, -rms.val* if (rms.ppn=1,0.1,1) as ppn,-rms.val* if (rms.ppn=1,1.1,1) as val,rms.fpj,rms.kurs,
  0 as umk,if(left(rms.fpj,3)='010',rms.ppn*ifnull(rms.kurs,1),0) as PPN010,if(left(rms.fpj,3)='040',rms.ppn*ifnull(rms.kurs,1),0) as PPN040,if(left(rms.fpj,3)='070',rms.ppn*rms.kurs,0) as PPN070
  from rms,sub where rms.sub=sub.sub
  and if (Psuba<>'' and Psubz<>'',rms.sub between Psuba and Psubz,1)
  and if (Pdatea<>'' and Pdatez<>'',rms.date>=Pdatea and rms.date<adddate(Pdatez,1),1)
) a;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_MutasiKartuStock
DROP PROCEDURE IF EXISTS `Sp_MutasiKartuStock`;
DELIMITER //
CREATE PROCEDURE `Sp_MutasiKartuStock`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Pjenisa` varchar(15),
	IN `Pjenisz` varchar(15),
	IN `Pinva` varchar(15),
	IN `Pinvz` varchar(15),
	IN `Ploca` varchar(15),
	IN `Plocz` varchar(15),
	IN `Pnodsga` VARCHAR(50),
	IN `Pnodsgz` VARCHAR(50)
)
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists TempAwal ;
create temporary table TempAwal (inv varchar(15),loc varchar(15),qlast double, vlast double,nodsg varchar(50));
insert into TempAwal
( 
 select inv,loc, sum(qlast) as qlast, sum(vlast) as vlast,nodsg as nodsg
 from
 (
   select rin.inv, rin.loc, rin.qlast, rin.vlast,rin.nodsg
       from rin
			 inner join inv on rin.inv = inv.inv 
       where rin.period=Pperiod and inv.flag = 0 and 
			 if(Pinva<>'' and Pinvz<>'', rin.inv between Pinva and Pinvz, 1)
         and if(Ploca<>'' and Plocz<>'', rin.loc between Ploca and Plocz, 1)
         and if(Pnodsga<>'' and Pnodsgz<>'', rin.nodsg between Pnodsga and Pnodsgz, 1)
   union all
   select ind.inv, ind.loc, sum(qty*if(dk='D',1,-1)) as qlast , sum(val*if(dk='D',1,-1)) as vlast,ind.nodsg
      from ind
			inner join inv on ind.inv = inv.inv 
      where ind.period=Pperiod and inv.flag = 0 
			and ind.date < Pdatea
        and if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1)
        and if(Ploca<>'' and Plocz<>'', ind.loc between Ploca and Plocz, 1)
        and if(Pnodsga<>'' and Pnodsgz<>'', ind.nodsg between Pnodsga and Pnodsgz, 1)
      group by ind.inv, ind.loc
 ) as oawal group by inv,trim(loc)
);
select invname,oldinv,inv,locname,loc,sum(qlast) qlast,sum(vlast) vlast,sum(qdebet) debet,sum(vdebet) vdebet,
sum(qkredit) kredit,sum(vkredit) kredit,unit,nodsg as nodsg, sum(qlast)+sum(qdebet)-sum(qkredit) as qtynow from
(
select inv.name as invname,left(inv.oldinv,5) AS oldinv, TempAwal.inv, loc.name as locname, TempAwal.loc,
       TempAwal.qlast as qlast, TempAwal.vlast as vlast,
       0 as qdebet,0 as vdebet,
       0 as qkredit,0 as vkredit,
       inv.unit,'' as nodsg
       from TempAwal
       left outer join inv on TempAwal.inv=inv.inv
       left outer join loc on TempAwal.loc=loc.loc
       where inv.flag = 0 and if(Pjenisa<>'' and Pjenisz<>'', inv.jenis between Pjenisa and Pjenisz, 1)
union all
select inv.name as invname,left(inv.oldinv,5) AS oldinv, ind.inv, loc.name as locname, ind.loc,
       0 qlast,0 vlast,
       if (ind.dk='D' , ind.qty , 0) as qdebet,if (ind.dk='D' , ind.val , 0) as vdebet,
       if (ind.dk='K' , ind.qty , 0) as qkredit,if (ind.dk='K' , ind.val , 0) as vkredit,
       inv.unit,nodsg as nodsg
       from ind
       right outer join inv on ind.inv=inv.inv
       left outer join loc on ind.loc=loc.loc
       where (ind.date>=Pdatea and ind.date<Pdatez) and inv.flag = 0 and
       if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1) and
       if(Pnodsga<>'' and Pnodsgz<>'', ind.nodsg between Pnodsga and Pnodsgz, 1) and
       if(Ploca<>'' and Plocz<>'', ind.loc between Ploca and Plocz, 1) and
       if(Pjenisa<>'' and Pjenisz<>'', inv.jenis between Pjenisa and Pjenisz, 1)
) as Pmutasi
group by  inv,trim(loc) ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_MutasiKartuStockbesar
DROP PROCEDURE IF EXISTS `Sp_MutasiKartuStockbesar`;
DELIMITER //
CREATE PROCEDURE `Sp_MutasiKartuStockbesar`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Pjenisa` varchar(15),
	IN `Pjenisz` varchar(15),
	IN `Pinva` varchar(15),
	IN `Pinvz` varchar(15),
	IN `Ploca` varchar(15),
	IN `Plocz` varchar(15),
	IN `Pnodsga` VARCHAR(50),
	IN `Pnodsgz` VARCHAR(50)
)
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists TempAwal ;
create temporary table TempAwal (inv varchar(15),loc varchar(15),qlast double, vlast double,nodsg varchar(50));
insert into TempAwal
( 
 select inv,loc, sum(qlast) as qlast, sum(vlast) as vlast,nodsg
 from
 (
   select rin.inv, rin.loc, rin.qlast, rin.vlast,rin.nodsg
       from rin INNER join inv on rin.inv = inv.inv
       where rin.period=Pperiod and inv.flag = 0 and
			 if(Pinva<>'' and Pinvz<>'', rin.inv between Pinva and Pinvz, 1)
         and if(Ploca<>'' and Plocz<>'', rin.loc between Ploca and Plocz, 1)
         and if(Pnodsga<>'' and Pnodsgz<>'', rin.nodsg between Pnodsga and Pnodsgz, 1)
   union all
   select ind.inv, ind.loc, sum(qty*if(dk='D',1,-1)) as qlast , sum(val*if(dk='D',1,-1)) as vlast,ind.nodsg
      from ind inner join inv on ind.inv=inv.inv
      where ind.period=Pperiod and ind.date < Pdatea and inv.flag=0
        and if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1)
        and if(Ploca<>'' and Plocz<>'', ind.loc between Ploca and Plocz, 1)
        and if(Pnodsga<>'' and Pnodsgz<>'', ind.nodsg between Pnodsga and Pnodsgz, 1)
      group by ind.inv, ind.loc
 ) as oawal group by inv,loc
);
select invname,oldinv,Pmutasi.inv,locname,loc,sum(qlast/konversi) qlast,sum(vlast) vlast,sum(qdebet/konversi) debet,sum(vdebet) vdebet,max(unit2) as unit,
sum(qkredit/konversi) kredit,sum(vkredit) kredit,nodsg, sum(qlast/konversi)+sum(qdebet/konversi)-sum(qkredit/konversi) as qtynow from
(
select inv.name as invname,left(inv.oldinv,5) AS oldinv, TempAwal.inv, loc.name as locname, TempAwal.loc,inv.unit2,
       TempAwal.qlast as qlast, TempAwal.vlast as vlast,
       0 as qdebet,0 as vdebet,
       0 as qkredit,0 as vkredit,
       inv.unit,TempAwal.nodsg
       from TempAwal
       left outer join inv on TempAwal.inv=inv.inv
       left outer join loc on TempAwal.loc=loc.loc
       where inv.flag=0 and if(Pjenisa<>'' and Pjenisz<>'', inv.jenis between Pjenisa and Pjenisz, 1)
union all
select inv.name as invname,left(inv.oldinv,5) AS oldinv, ind.inv, loc.name as locname, ind.loc,inv.unit2,
       0 qlast,0 vlast,
       if (ind.dk='D' , ind.qty , 0) as qdebet,if (ind.dk='D' , ind.val , 0) as vdebet,
       if (ind.dk='K' , ind.qty , 0) as qkredit,if (ind.dk='K' , ind.val , 0) as vkredit,
       inv.unit,ind.nodsg
       from ind
       right outer join inv on ind.inv=inv.inv
       left outer join loc on ind.loc=loc.loc
       where (ind.date>=Pdatea and ind.date<Pdatez) and inv.flag=0 and 
       if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1) and
       if(Pnodsga<>'' and Pnodsgz<>'', ind.nodsg between Pnodsga and Pnodsgz, 1) and
       if(Ploca<>'' and Plocz<>'', ind.loc between Ploca and Plocz, 1) and
       if(Pjenisa<>'' and Pjenisz<>'', inv.jenis between Pjenisa and Pjenisz, 1)
) as Pmutasi left outer join konversi on Pmutasi.inv=konversi.inv and Pmutasi.unit2=konversi.unit
group by  inv,trim(loc) ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_MutasiKartuStockIT
DROP PROCEDURE IF EXISTS `Sp_MutasiKartuStockIT`;
DELIMITER //
CREATE PROCEDURE `Sp_MutasiKartuStockIT`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Pjenisa` varchar(15),
	IN `Pjenisz` varchar(15),
	IN `Pinva` varchar(15),
	IN `Pinvz` varchar(15),
	IN `Ploca` varchar(15),
	IN `Plocz` varchar(15),
	IN `Pnodsga` VARCHAR(50),
	IN `Pnodsgz` VARCHAR(50),
	IN `Pcat` varchar(15)
)
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists TempAwal ;
create temporary table TempAwal (inv varchar(15),loc varchar(15),qlast double, vlast double,nodsg varchar(50));
insert into TempAwal
( 
 select inv,loc, sum(qlast) as qlast, sum(vlast) as vlast,'' as nodsg
 from
 (
   select rin.inv, rin.loc, rin.qlast, rin.vlast,rin.nodsg
       from rin
       where rin.period=Pperiod and if(Pinva<>'' and Pinvz<>'', rin.inv between Pinva and Pinvz, 1)
         and if(Ploca<>'' and Plocz<>'', rin.loc between Ploca and Plocz, 1)
         and if(Pnodsga<>'' and Pnodsgz<>'', rin.nodsg between Pnodsga and Pnodsgz, 1)
   union all
   select ind.inv, ind.loc, sum(qty*if(dk='D',1,-1)) as qlast , sum(val*if(dk='D',1,-1)) as vlast,ind.nodsg
      from ind
      where ind.period=Pperiod and ind.date < Pdatea
        and if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1)
        and if(Ploca<>'' and Plocz<>'', ind.loc between Ploca and Plocz, 1)
        and if(Pnodsga<>'' and Pnodsgz<>'', ind.nodsg between Pnodsga and Pnodsgz, 1)
      group by ind.inv, ind.loc
 ) as oawal group by inv,trim(loc)
);
select invname,inv,locname,loc,sum(qlast) qlast,sum(vlast) vlast,sum(qdebet) debet,sum(vdebet) vdebet,
sum(qkredit) kredit,sum(vkredit) kredit,unit,'' as nodsg, sum(qlast)+sum(qdebet)-sum(qkredit) as qtynow from
(
select inv.name as invname, TempAwal.inv, loc.name as locname, TempAwal.loc,
       TempAwal.qlast as qlast, TempAwal.vlast as vlast,
       0 as qdebet,0 as vdebet,
       0 as qkredit,0 as vkredit,
       inv.unit,'' as nodsg
       from TempAwal
       left outer join inv on TempAwal.inv=inv.inv
       left outer join loc on TempAwal.loc=loc.loc
       where if(Pjenisa<>'' and Pjenisz<>'', inv.jenis between Pjenisa and Pjenisz, 1) and if(Pcat='',1,inv.grpmat=pcat)
union all
select inv.name as invname, ind.inv, loc.name as locname, ind.loc,
       0 qlast,0 vlast,
       if (ind.dk='D' , ind.qty , 0) as qdebet,if (ind.dk='D' , ind.val , 0) as vdebet,
       if (ind.dk='K' , ind.qty , 0) as qkredit,if (ind.dk='K' , ind.val , 0) as vkredit,
       inv.unit,'' as nodsg
       from ind
       right outer join inv on ind.inv=inv.inv
       left outer join loc on ind.loc=loc.loc
       where (ind.date>=Pdatea and ind.date<Pdatez) and
       if(Pinva<>'' and Pinvz<>'', ind.inv between Pinva and Pinvz, 1) and
       if(Pnodsga<>'' and Pnodsgz<>'', ind.nodsg between Pnodsga and Pnodsgz, 1) and
       if(Ploca<>'' and Plocz<>'', ind.loc between Ploca and Plocz, 1) and
       if(Pjenisa<>'' and Pjenisz<>'', inv.jenis between Pjenisa and Pjenisz, 1) and
       if(Pcat='',1,inv.grpmat=pcat)
) as Pmutasi
group by  inv,trim(loc) ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_MutasiKASBank
DROP PROCEDURE IF EXISTS `Sp_MutasiKASBank`;
DELIMITER //
CREATE PROCEDURE `Sp_MutasiKASBank`(
	IN `Pdate0` datetime,
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Pacc` varchar(15),
	IN `Pperiod` varchar(4),
	IN `tunai` int
)
BEGIN
SET Pperiod = (SELECT Fdate2period(Pdatea));
 if (tunai=0) then
select a.*, sub.name AS supplier from kas,sub,
(SELECT Acd.acc, Acd.jurnal,Acd.period, Acd.rem, date(Pdatea) as tgl_awal, date(Pdatez) as tgl_akhir, 
       date(Acd.date) AS tanggal, Acd.val AS value,
       if(rac.vlast is null,0,rac.vlast)+(select if(sum(val*if (acd1.dk='D',1,-1 )) is null,
                                                    0,sum(val*if (acd1.dk='D', 1 , -1 ))) as saldo
       from acd acd1
       where if(Pacc<>'',acc= Pacc,acc=rac.acc) and acd1.date>=Pdate0 and acd1.date < date(pdatea))  as saldo,
       Acd.dk, acc.name as accname
  FROM (rac left join acd on rac.period=acd.period and rac.acc=acd.acc)
       inner join acc on acc.acc=rac.acc
 WHERE acd.period>=Pperiod and Acd.date >= Pdatea and acd.adj<>1
   AND if(Pacc<>'',Acd.acc = Pacc,1)
   AND Acd.date < adddate(Pdatez,1)
 ORDER BY date(Acd.date), Acd.jurnal) AS a
  where a.jurnal=kas.kas and a.acc=kas.acc and kas.sub = sub.sub;
END if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_neraca
DROP PROCEDURE IF EXISTS `Sp_neraca`;
DELIMITER //
CREATE PROCEDURE `Sp_neraca`( lcdatea datetime, lcdatez datetime, lclevel float)
BEGIN
DECLARE lcperiod      VARCHAR(4);
DECLARE lcAccParent   VARCHAR(15);
DECLARE lcAccDetil    VARCHAR(15);
DECLARE lcDebet       double;
DECLARE lcKredit      double;
DECLARE lcDebetadj    double;
DECLARE lcKreditadj   double;
DECLARE lcDebetnetto  double;
DECLARE lcKreditnetto double;
DECLARE lcVal double;
DECLARE lcValnetto double;
DECLARE DONe INT DEFAULT 0;
DECLARE lcADetil,lcAParent,a,p CHAR(15);
DECLARE lcD,lcK,lcDa,lcKa,lcV,lcVnet,lcDnet,lcKnet,v,valkiri,valkanan,aw DOUBLE;
DECLARE i,j,n,l,d,k INT;
DECLARE g CHAR(1);
DECLARE r VARCHAR(100);
DECLARE SalDODetil CURSOR FOR
SELECT  acc,parent,debet,kredit,awal FROM TsalDO WHERE detil=1 AND abs(awal)+abs(debet)+abs(kredit)>0;
DECLARE Cneraca CURSOR FOR
SELECT  n,awal,GROUP_, name, acc ,(awal+debet-kredit) as val,level_,detil,parent  FROM TsalDO  ;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONe = 1;
SET lcperiod = (SELECT Fdate2period(lcdatea));
drop temporary table IF EXISTS Tawal ;
CREATE TEMPORARY TABLE Tawal (acc VARCHAR(15),vlast DOUBLE);
drop temporary table IF EXISTS Tmutasi;
CREATE TEMPORARY TABLE Tmutasi (acc VARCHAR(15),debet DOUBLE,kredit DOUBLE);
drop temporary table IF EXISTS TsalDO;
CREATE TEMPORARY TABLE TsalDO (acc VARCHAR(15),name VARCHAR(100),parent VARCHAR(15),group_ char(1),detil tinyint(2),level_ smallint(5),awal DOUBLE,
              debet DOUBLE,kredit DOUBLE);
drop temporary table IF EXISTS TsalDOparent;
CREATE TEMPORARY TABLE TsalDOparent (acc VARCHAR(15),parent VARCHAR(15));
drop temporary table IF EXISTS NeracaKiri;
CREATE TEMPORARY TABLE NeracaKiri (nomer int,GROUP_ CHAR(1),remark varchar (100), acc VARCHAR(15),val DOUBLE,level_ int,detil int,parent VARCHAR(15));
drop temporary table IF EXISTS NeracaKanan;
CREATE TEMPORARY TABLE NeracaKanan (nomer int,GROUP_ CHAR(1),remark varchar (100), acc VARCHAR(15),val DOUBLE,level_ int,detil int,parent VARCHAR(15));
INSERT INTO Tawal
SELECT acc, SUM(IF(isnull(vlast),0,vlast)) as vlast
FROM
(
  SELECT rac.acc,rac.vlast
      FROM rac
      WHERE rac.period=lcPeriod
  uniON all
  SELECT acd.acc, SUM(val*IF(dk="D",1,-1)) as vlast
      FROM acd
      WHERE acd.period=lcperiod AND acd.date < lcdatea GROUP BY acd.acc
)
as oawal GROUP BY acc;
INSERT INTO Tmutasi
SELECT acc,
    SUM(val*IF(dk="D",1,0)) as debet,                             
    SUM(val*IF(dk="K",1,0)) as kredit			
    FROM acd
    WHERE acd.date >=lcdatea  AND acd.date<lcdatez  GROUP BY acd.acc;
INSERT INTO TsalDO
SELECT acc.acc,
    acc.name,
    acc.parent,
    acc.group_,
    acc.detil,
    acc.level_,
    IF(isnull(Tawal.vlast),0,Tawal.Vlast) as awal,
    IF(isnull(Tmutasi.debet),0,Tmutasi.debet) as debet,
    IF(isnull(Tmutasi.kredit),0,Tmutasi.kredit) as kredit
    FROM  Tawal
    RIGHT OUTER JOIN acc
    LEFT OUTER JOIN Tmutasi
    ON acc.acc=Tmutasi.acc
    ON Tawal.acc=acc.acc;
INSERT INTO tsalDOparent
SELECT acc, parent FROM TsalDO WHERE detil=0;
OPEN SalDODetil;
  REPEAT
      FETCH SalDODetil INTO lcADetil,lcAParent,lcD,lcK,lcV;
               WHILE lcAParent<>'' DO
                  UPDATE TsalDO SET  debet=debet+lcD, kredit=kredit+lcK WHERE acc=lcAParent;
                  SET lcAParent=(SELECT parent FROM tsalDOparent WHERE acc=lcAParent);
               end WHILE;
    UNTIL DONe=1  END REPEAT;
  CLOSE SalDODetil;
set done=0;
  set j=0;
  set k=0;
  set i=(select count(acc) from Tsaldo);
  OPEN Cneraca;
  REPEAT
    FETCH Cneraca INTO n,aw,g,r,a,v,l,d,p;
    if i>0 then
       if g="1" and v<>0 and ( l<= lclevel or (l<lclevel AND d=1)) then
         insert into neracaKiri (nomer,group_,remark,acc,val,level_,detil,parent)
              values (j,g,concat(space(l*3),left(r,50)),a,if ((l=lclevel) or d=1,v,0.00),l,d,p) ;
         if (a=(select acc from tsaldo where parent=p and awal+debet-kredit>0 order by acc desc limit 1) and l=lclevel) then
           set j=j+1;
           insert into neracaKiri (nomer,group_,remark,acc,val,level_,detil,parent)
           values (j,g,concat(space(l+14),'S.TOTAL ',left((select name from acc where acc=p),50)),a,if ((l=lclevel) or d=1,(select awal+debet-kredit from tsaldo where acc=p),0.00),0.00,d,'') ;
         end if;
         set j=j+1;
        end if;
       if g>"1" and g<"4" and v<>0 and ( l<= lclevel or (l<lclevel AND d=1) ) then
         insert into neracaKanan (nomer,group_,remark,acc,val,level_,detil,parent) values (k,g,concat(space(l*3),left(r,50)),a,if ((l=lclevel) or d=1,-1*v,0.00),l,d,p) ;
          if (a=(select acc from tsaldo where parent=p and ((awal+debet-kredit)*-1) <> 0  order by acc desc limit 1) and l=lclevel) then
           set k=k+1;
           insert into neracaKanan (nomer,group_,remark,acc,val,level_,detil,parent)
           values (k,g,concat(space(l+14),'S.TOTAL ',left((select name from acc where acc=p),40)),a,if ((l=lclevel) or d=1,(select ((awal+debet-kredit)*-1) from tsaldo where acc=p),0.00),0.00,d,'') ;
         end if;
         set k=k+1;
       end if;
    end if ;
    set i = i - 1;
    UNTIL done=1  END REPEAT;
  CLOSE Cneraca;
 set valkanan=(select sum(val) from neracakanan where level_<>0);
 
  insert into neracaKanan (nomer,group_,remark,acc,val,level_,detil,parent) values (k,3,'  LABA (RUGI)','',(select sum(val) from neracakiri where level_<>0)-valkanan,lclevel,0,'');
  set valkanan=(select sum(val) from neracakanan where level_<>0);
  set valkiri=(select sum(val) from neracakiri where level_<>0);
  insert into neracaKiri (nomer,group_,remark,acc,val,level_,detil,parent) values (if(k>j,k+1,j+1),1,'TOTAL AKTIVA','',valkiri,0,0,'0');
  insert into neracaKanan (nomer,group_,remark,acc,val,level_,detil,parent) values (if(k>j,k+1,j+1),3,'TOTAL PASIVA','',valkanan,0,0,'0');
 if (j>k+1) then
   select neracaKiri.remark as remarkkiri,neracakiri.val as valkiri,neracakiri.level_ as lvkiri,neracakanan.remark as remarkkanan,neracakanan.val as valkanan,neracakanan.level_ as lvkanan
   from neracaKiri left outer join neracakanan on neracakiri.nomer=neracakanan.nomer;
 else
   select neracaKiri.remark as remarkkiri,neracakiri.val as valkiri,neracakiri.level_ as lvkiri,neracakanan.remark as remarkkanan,neracakanan.val as valkanan,neracakanan.level_ as lvkanan
   from neracaKiri right outer join neracakanan on neracakiri.nomer=neracakanan.nomer;
 end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_OklOut
DROP PROCEDURE IF EXISTS `Sp_OklOut`;
DELIMITER //
CREATE PROCEDURE `Sp_OklOut`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Psuba` char(15),
	IN `Psubz` char(15),
	IN `Pinva` char(15),
	IN `Pinvz` char(15),
	IN `Pnodsga` CHAR(50),
	IN `Pnodsgz` CHAR(50),
	IN `PSOa` char(15),
	IN `PSOz` char(15),
	IN `Pclose` int
)
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists outso;
create temporary table outso (okl varchar(15), `date` datetime, sub varchar(15), nodsg varchar(50), inv varchar(15), qtyso double, dateneed datetime, close int, nopoc varchar(25), price double, shiptoaddress longtext, cur varchar(4));
insert into outso
(
  select okl,date,sub,nodsg,inv,sum(qtyso-qty) as qtyso, max(dateneed), max(`close`), max(nopoc),
         max(price), max(shiptoaddress), max(cur) from
  (
    select rso.okl,rso.date, rso.sub,ifnull(rso.nodsg,'') nodsg,rso.inv,rso.qty as qtyso,rso.qtyout as qty,
           date(00000000) as dateneed, 0 as `close`, convert('' using latin1) as nopoc, 0 as price,
           convert('' using latin1) as shiptoaddress, convert('' using latin1) as cur
      from rso
      where if(Psuba<>'' and Psubz<>'',rso.sub between Psuba and Psubz,1)
        and if(Pinva<>'' and Pinvz<>'',rso.inv between Pinva and Pinvz,1)
        and if(Pnodsga<>'' and Pnodsgz<>'',rso.nodsg between Pnodsga and Pnodsgz,1)
        and if(PSOa<>'' and PSOz<>'',rso.okl between PSOa and PSOz,1)
        and rso.period=Pperiod
    union all
    select okl.okl,okl.date,okl.sub,ifnull(okd.nodsg,'') nodsg,okd.inv,okd.qty as qtyso,0 as qty,
           okd.dateneed, okl.`close`, okl.nopoc, (okd.val/okd.qty) as price, okl.shiptoaddress, okl.cur
      from okl, okd
      where okl.okl = okd.okl and okl.delete=0
        and if(Psuba<>'' and Psubz<>'',okl.sub between Psuba and Psubz,1)
        and if(Pinva<>'' and Pinvz<>'',okd.inv between Pinva and Pinvz,1)
        and if(Pnodsga<>'' and Pnodsgz<>'',okd.nodsg between Pnodsga and Pnodsgz,1)
        and if(PSOa<>'' and PSOz<>'',okl.okl between PSOa and PSOz,1)
        and if(Pdatea<>'' and Pdatez<>'',okl.date>=Pdatea and okl.date<adddate(Pdatez,1),1)
        and if(Pclose<2, okl.close=PClose, 1)
  ) as outso
  group by okl,date,sub,nodsg,inv
);
drop temporary table if exists realso;
create temporary table realso (okl varchar(15), sub varchar(15), nodsg varchar(50),inv varchar(15), qty double);
insert into realso
(
  select * from
  (
    select sjd.okl,sjh.sub,ifnull(sjd.nodsg,'') nodsg,sjd.inv, sum(sjd.qty) as qty
      from sjh, sjd
      where sjh.sjh=sjd.sjh and sjh.delete=0
        and if(Psuba<>'' and Psubz<>'',sjh.sub between Psuba and Psubz,1)
        
        and sjh.date>=Pdatea and sjh.date<adddate(Pdatez,1)
        and if(Pinva<>'' and Pinvz<>'',sjd.inv between Pinva and Pinvz,1)
        and if(Pnodsga<>'' and Pnodsgz<>'',sjd.nodsg between Pnodsga and Pnodsgz,1)
        and if(PSOa<>'' and PSOz<>'',sjd.okl between PSOa and PSOz,1)
    group by sjd.okl, sjh.sub, sjd.nodsg, sjd.inv
  ) as realso
);
select outso.okl, outso.date, outso.sub, outso.shiptoaddress, outso.nodsg,outso.inv,
         outso.qtyso/konversi.konversi as qtyso, if(realso.qty is null,0,realso.qty)/konversi.konversi as qtyklr,
         (outso.qtyso - if(realso.qty is null,0,realso.qty))/konversi.konversi as qtykurang,
         sub.name as subname, inv.name as invname, inv.unit2 as invunit,
         if(subto.aliasname is null,'',subto.aliasname) as aliasname,
         outso.dateneed, outso.nopoc, outso.price*konversi.konversi as price, outso.cur, outso.close,
         if(Pclose=2,'All',convert('' using latin1)) as filterStatus
    from konversi,outso
    left outer join realso on outso.okl=realso.okl and outso.inv=realso.inv
    left outer join sub on outso.sub=sub.sub
    left outer join inv on outso.inv=inv.inv
    left outer join subto on cast(outso.shiptoaddress as char(80))=cast(subto.shiptoaddress as char(80))
    where konversi.inv=outso.inv and konversi.unit=inv.unit2 and inv.inv=konversi.inv
    order by 3,2,1;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_OklOut1
DROP PROCEDURE IF EXISTS `Sp_OklOut1`;
DELIMITER //
CREATE PROCEDURE `Sp_OklOut1`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Psuba` char(15),
	IN `Psubz` char(15),
	IN `Pinva` char(15),
	IN `Pinvz` char(15),
	IN `Pnodsga` CHAR(50),
	IN `Pnodsgz` CHAR(50),
	IN `PSOa` char(15),
	IN `PSOz` char(15),
	IN `Pclose` int
)
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists outso;
create temporary table outso (okl varchar(15), `date` datetime, sub varchar(15), nodsg varchar(50), inv varchar(15), qtyso double, dateneed datetime, close int, nopoc varchar(25), price double, shiptoaddress longtext, cur varchar(4));
insert into outso
(
  select okl,date,sub,nodsg,inv,sum(qtyso-qty) as qtyso, max(dateneed), max(`close`), max(nopoc),
         max(price), max(shiptoaddress), max(cur) from
  (
    select rso.okl,rso.date, rso.sub,rso.nodsg,rso.inv,rso.qty as qtyso,rso.qtyout as qty,
           date(00000000) as dateneed, 0 as `close`, convert('' using latin1) as nopoc, 0 as price,
           convert('' using latin1) as shiptoaddress, convert('' using latin1) as cur
      from rso
      where if(Psuba<>'' and Psubz<>'',rso.sub between Psuba and Psubz,1)
        and if(Pinva<>'' and Pinvz<>'',rso.inv between Pinva and Pinvz,1)
        and if(Pnodsga<>'' and Pnodsgz<>'',rso.nodsg between Pnodsga and Pnodsgz,1)
        and if(PSOa<>'' and PSOz<>'',rso.okl between PSOa and PSOz,1)
        and rso.period=Pperiod
    union all
    select okl.okl,okl.date,okl.sub,okd.nodsg,okd.inv,okd.qty as qtyso,0 as qty,
           okd.dateneed, okl.`close`, okl.nopoc, (okd.val/okd.qty) as price, okl.shiptoaddress, okl.cur
      from okl, okd
      where okl.okl = okd.okl and okl.delete=0
        and if(Psuba<>'' and Psubz<>'',okl.sub between Psuba and Psubz,1)
        and if(Pinva<>'' and Pinvz<>'',okd.inv between Pinva and Pinvz,1)
        and if(Pnodsga<>'' and Pnodsgz<>'',okd.nodsg between Pnodsga and Pnodsgz,1)
        and if(PSOa<>'' and PSOz<>'',okl.okl between PSOa and PSOz,1)
        and if(Pdatea<>'' and Pdatez<>'',okl.date>=Pdatea and okl.date<adddate(Pdatez,1),1)
        and if(Pclose<2, okl.close=PClose, 1)
  ) as outso
  group by okl,date,sub,nodsg,inv
);
drop temporary table if exists realso;
create temporary table realso (okl varchar(15), sub varchar(15), nodsg varchar(50),inv varchar(15), qty double);
insert into realso
(
  select * from
  (
    select sjd.okl,sjh.sub,sjd.nodsg,sjd.inv, sum(sjd.qty) as qty
      from sjh, sjd
      where sjh.sjh=sjd.sjh and sjh.delete=0
        and if(Psuba<>'' and Psubz<>'',sjh.sub between Psuba and Psubz,1)
        
        and sjh.date>=Pdatea and sjh.date<adddate(Pdatez,1)
        and if(Pinva<>'' and Pinvz<>'',sjd.inv between Pinva and Pinvz,1)
        and if(Pnodsga<>'' and Pnodsgz<>'',sjd.nodsg between Pnodsga and Pnodsgz,1)
        and if(PSOa<>'' and PSOz<>'',sjd.okl between PSOa and PSOz,1)
    group by sjd.okl, sjh.sub, sjd.nodsg, sjd.inv
  ) as realso
);
select outso.okl, outso.date, outso.sub, outso.shiptoaddress, outso.nodsg,outso.inv,
         outso.qtyso/konversi.konversi as qtyso, if(realso.qty is null,0,realso.qty)/konversi.konversi as qtyklr,
         (outso.qtyso - if(realso.qty is null,0,realso.qty))/konversi.konversi as qtykurang,
         sub.name as subname, inv.name as invname, inv.unit2 as invunit,
         if(subto.aliasname is null,'',subto.aliasname) as aliasname,
         outso.dateneed, outso.nopoc, outso.price, outso.cur, outso.close,
         if(Pclose=2,'All',convert('' using latin1)) as filterStatus
    from konversi,outso
    left outer join realso on outso.okl=realso.okl and outso.inv=realso.inv
    left outer join sub on outso.sub=sub.sub
    left outer join inv on outso.inv=inv.inv
    left outer join subto on cast(outso.shiptoaddress as char(80))=cast(subto.shiptoaddress as char(80))
    where konversi.inv=outso.inv and konversi.unit=inv.unit2 and inv.inv=konversi.inv
    order by 3,2,1;
select * from realso;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_OmsOut
DROP PROCEDURE IF EXISTS `Sp_OmsOut`;
DELIMITER //
CREATE PROCEDURE `Sp_OmsOut`(
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Psuba` char(15),
	IN `Psubz` char(15),
	IN `Pinva` char(15),
	IN `Pinvz` char(15),
	IN `Pclose` int,
	IN `Pomsa` char(15),
	IN `Pomsz` char(15),
	IN `Pkosong` VARCHAR(50)
)
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists outpo;
create temporary table outpo (oms varchar(15), `date` datetime, remark varchar(200),sub varchar(15), inv varchar(15), qtypo double, qtyout double);
insert into outpo
(
  select * from (
  select oms,max(date) date,remark,sub,inv,sum(qtypo) as qtypo,sum(qtyout) qtyout from
  (
    select rpo.oms,rpo.date,rpo.remark,rpo.sub,rpo.inv,rpo.qtyout as qtypo,rpo.qtyout-rpo.qty as qtyout
    from rpo
    where
      if (Psuba<>'' and Psubz<>'',rpo.sub between Psuba and Psubz,1)
      and if (Pinva<>'' and Pinvz<>'',rpo.inv between Pinva and Pinvz,1)
      and if (Pomsa<>'' and Pomsz<>'',rpo.oms between Pomsa and Pomsz,1)
      and rpo.period=Pperiod
    union all
    select oms_in.oms,oms.date,oms_in.remark,oms.sub,oms_in.inv,oms_in.qty as qtypo, 0 as qtyout
    from oms_in, oms
    where oms_in.oms=oms.oms
      and if(Psuba<>'' and Psubz<>'',oms.sub between Psuba and Psubz,1)
      and if(Pinva<>'' and Pinvz<>'',oms_in.inv between Pinva and Pinvz,1)
      and if(Pomsa<>'' and Pomsz<>'',oms.oms between Pomsa and Pomsz,1)
      and oms.date>=Pdatea and oms.date<adddate(Pdatez,1) and oms.delete<>1
    union all
    select lph.oms,19000101 date,lpd.remark,lph.sub,lpd.inv,0,lpd.qty qty
    from lph,lpd
      where lph.lph=lpd.lph
      and if (Psuba<>'' and Psubz<>'',lph.sub between Psuba and Psubz,1)
      and if (Pinva<>'' and Pinvz<>'',lpd.inv between Pinva and Pinvz,1)
      and if (Pomsa<>'' and Pomsz<>'',lph.oms between Pomsa and Pomsz,1)
      and lph.date>=Pdatea  and lph.date<adddate(Pdatez,1) and lph.delete<>1
   ) as outpo
   group by oms,sub,inv,remark
  ) as x where x.date >= date(pdatea) and x.date < date(adddate(pdatez,1))
) ;
  select x.oms, x.date,x.sub,sub.name as subname,x.inv, inv.name as invname,x.remark,ifnull(round(od.val/od.qty,3),0) as price,
  date(od.dateneed) as dateneed, x.qtypo, x.qtyout qtymsk, (x.qtypo-x.qtyout) qtykurang, inv.unit as invunit,
  if(oms.close=0,if(od.closeitem=1,'CLOSED',if(x.qtypo-x.qtyout <= 0,'CLOSED','OPEN')),'CLOSED') as status,(select ucase(name) from usrp where trim(usrp.usrp) = trim(oms.person)) as person
  from outpo x,omd od,sub, oms,inv
  where
        x.oms=od.oms and x.remark=od.remark and x.inv=od.inv
        and x.sub=sub.sub and od.oms=oms.oms
        and if(Pomsa<>'' and Pomsz<>'',oms.oms between Pomsa and Pomsz,1)
        and x.inv=inv.inv
        and (if(pclose=0,oms.close=0 and ((od.closeitem=0 or od.closeitem is null) and (x.qtypo-x.qtyout >0) ),1) and if(pclose=1,oms.close=1 or od.closeitem=1 or (x.qtypo-x.qtyout <= 0),1))
 order by x.oms;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_OmsOut1
DROP PROCEDURE IF EXISTS `Sp_OmsOut1`;
DELIMITER //
CREATE PROCEDURE `Sp_OmsOut1`(Pdatea datetime, Pdatez datetime, Psuba char(15), Psubz char(15), Pinva char(15), Pinvz char(15), Pclose int, Pomsa char(15), Pomsz char(15))
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists outpo;
create temporary table outpo (oms varchar(15), `date` datetime, remark varchar(50),sub varchar(15), inv varchar(15), qtypo double, qtyout double);
insert into outpo
(
  select * from (
  select oms,max(date) date,remark,sub,inv,sum(qtypo) as qtypo,sum(qtyout) qtyout from
  (
    select rpo.oms,rpo.date,rpo.remark,rpo.sub,rpo.inv,rpo.qty as qtypo,0 as qtyout
    from rpo
    where
      if (Psuba<>'' and Psubz<>'',rpo.sub between Psuba and Psubz,1)
      and if (Pinva<>'' and Pinvz<>'',rpo.inv between Pinva and Pinvz,1)
      and if (Pomsa<>'' and Pomsz<>'',rpo.oms between Pomsa and Pomsz,1)
      and rpo.period=Pperiod
    union all
    select oms_in.oms,oms.date,oms_in.remark,oms.sub,oms_in.inv,oms_in.qty as qtypo, 0 as qtyout
    from oms_in, oms
    where oms_in.oms=oms.oms
      and if(Psuba<>'' and Psubz<>'',oms.sub between Psuba and Psubz,1)
      and if(Pinva<>'' and Pinvz<>'',oms_in.inv between Pinva and Pinvz,1)
      and if(Pomsa<>'' and Pomsz<>'',oms.oms between Pomsa and Pomsz,1)
      and oms.date>=Pdatea and oms.date<adddate(Pdatez,1) and oms.delete<>1
    union all
    select lph.oms,19000101 date,lpd.remark,lph.sub,lpd.inv,0,lpd.qty qty
    from lph,lpd
      where lph.lph=lpd.lph
      and if (Psuba<>'' and Psubz<>'',lph.sub between Psuba and Psubz,1)
      and if (Pinva<>'' and Pinvz<>'',lpd.inv between Pinva and Pinvz,1)
      and if (Pomsa<>'' and Pomsz<>'',lph.oms between Pomsa and Pomsz,1)
      and lph.date>=Pdatea  and lph.date<adddate(Pdatez,1) and lph.delete<>1
   ) as outpo
   group by oms,sub,inv,remark
  ) as x where x.date > date(19000101)
) ;
  select x.oms, x.date,x.sub,sub.name as subname,x.inv, inv.name as invname,x.remark,ifnull(round(od.val/od.qty,3),0) as price,
  date(od.dateneed) as dateneed, x.qtypo, x.qtyout qtymsk, (x.qtypo-x.qtyout) qtykurang, inv.unit as invunit,
  if(oms.close=0,'OPEN','CLOSED') as status
  from outpo x,omd od,sub, oms,inv
  where
        x.oms=od.oms and x.remark=od.remark and x.inv=od.inv
        and x.sub=sub.sub and od.oms=oms.oms
        and if(Pomsa<>'' and Pomsz<>'',oms.oms between Pomsa and Pomsz,1)
        and x.inv=inv.inv
        and if(pclose<2,oms.close=Pclose,1);
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_OpenPOOuts
DROP PROCEDURE IF EXISTS `Sp_OpenPOOuts`;
DELIMITER //
CREATE PROCEDURE `Sp_OpenPOOuts`(Pdatea char(15))
BEGIN
select omd.*,omd.qty,ifnull(lph.qty,0) qty,omd.qty-ifnull(lph.qty,0) selisih from wis_inventory.omd
left outer join wis_inventory.oms on omd.oms=oms.oms left outer join (select lph.date,lph.oms,lpd.inv,lpd.remark,sum(qty) qty
from wis_inventory.lpd,wis_inventory.lph where lph.lph=lpd.lph and left(inv,1)<='4' group by lph.oms,lpd.inv,lpd.remark) lph on omd.oms=lph.oms and omd.inv=lph.inv
and omd.remark=lph.remark where oms.`delete`=0 and oms.`close`=0 and left(omd.inv,1)<='4' and lph.date<Pdatea and oms.date < Pdatea and omd.qty-ifnull(lph.qty,0)>0;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_OpenSO
DROP PROCEDURE IF EXISTS `Sp_OpenSO`;
DELIMITER //
CREATE PROCEDURE `Sp_OpenSO`(Psub char(15), Pinv char(15))
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(20100101));
drop temporary table if exists outso;
create temporary table outso (okl varchar(15), `date` datetime, sub varchar(15), nodsg varchar(15), inv varchar(15), qtyso double, dateneed datetime, close int, nopoc varchar(25), price double, shiptoaddress longtext, cur varchar(4), kurs double);
insert into outso
(
  select okl,date,sub,nodsg,inv,sum(qtyso-qty) as qtyso, max(dateneed), max(`close`), max(nopoc),
         max(price), max(shiptoaddress), max(cur), max(kurs) from
  (
    
    select rso.okl,rso.date, rso.sub,rso.nodsg,rso.inv,rso.qty as qtyso,rso.qtyout as qty,
           date(00000000) as dateneed, 0 as `close`, convert('' using latin1) as nopoc, 0 as price,
           convert('' using latin1) as shiptoaddress, convert('' using latin1) as cur, convert('' using latin1) as kurs
      from rso
      where if(Psub<>'',rso.sub=Psub,1)
        and if(Pinv<>'',rso.inv=Pinv,1)
        and rso.period=Pperiod
    union all
    select okl.okl,okl.date,okl.sub,okd.nodsg,okd.inv,okd.qty as qtyso,0 as qty,
           okd.dateneed, okl.`close`, okl.nopoc, (okd.val/okd.qty) as price, okl.shiptoaddress, okl.cur, okl.kurs
      from okl, okd
      where okl.okl = okd.okl and okl.delete=0
        and if(Psub<>'',okl.sub=Psub,1)
        and if(Pinv<>'',okd.inv=Pinv,1)
        and okl.close=0
  ) as outso
  group by okl,date,sub,nodsg,inv
);
drop temporary table if exists realso;
create temporary table realso (okl varchar(15), sub varchar(15), nodsg varchar(15),inv varchar(15), qty double);
insert into realso
(
  select * from
  (
    select sjd.okl,sjh.sub,sjd.nodsg,sjd.inv, sum(sjd.qty) as qty
      from sjh, sjd
      where sjh.sjh=sjd.sjh and sjh.delete=0
        and if(Psub<>'',sjh.sub=Psub,1)
        and sjh.date<adddate(Now(),1)
        and if(Pinv<>'',sjd.inv=Pinv,1)
    group by sjd.okl, sjh.sub, sjd.nodsg, sjd.inv
  ) as realso
);
select outso.okl, outso.sub,sub.name as subname,outso.inv,inv.name as invname,
         outso.qtyso/konversi.konversi as qtyso, if(realso.qty is null,0,realso.qty)/konversi.konversi as qtyklr,
         (outso.qtyso - if(realso.qty is null,0,realso.qty))/konversi.konversi as qtykurang,
         inv.unit2 as invunit,outso.dateneed as deliverydate, outso.price, outso.price*(outso.qtyso - if(realso.qty is null,0,realso.qty))/konversi.konversi as `value`,outso.cur,outso.kurs
    from konversi,outso
    left outer join realso on outso.okl=realso.okl and outso.nodsg=realso.nodsg and outso.inv=realso.inv
    left outer join sub on outso.sub=sub.sub
    left outer join inv on outso.inv=inv.inv
    left outer join subto on cast(outso.shiptoaddress as char(80))=cast(subto.shiptoaddress as char(80))
    where konversi.inv=outso.inv and konversi.unit=inv.unit2 and realso.inv=konversi.inv and inv.inv=konversi.inv
    order by 3,2,1;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_OpenTransaction
DROP PROCEDURE IF EXISTS `Sp_OpenTransaction`;
DELIMITER //
CREATE PROCEDURE `Sp_OpenTransaction`(
	IN `Psubjurnal` Varchar(3),
	IN `Pjurnal` varchar(15)
)
BEGIN
DECLARE done INT DEFAULT 0;
DECLARE Pprq varchar(15);
DECLARE Poms varchar(15);
DECLARE toms varchar(15);
DECLARE Ppnv varchar(15);
DECLARE Pklri varchar(15);
DECLARE tklri varchar(15);
DECLARE OmsDetail CURSOR FOR
  SELECT prq from tOmd;
DECLARE LphDetail CURSOR FOR
  SELECT oms FROM tLph;
DECLARE MslDetail CURSOR FOR
  select oms FROM tMsl;
DECLARE klriDetail CURSOR FOR
  SELECT pnv from tklri;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
if (Psubjurnal='OMS') then
  drop temporary table if exists tOmd;
  create temporary table tOmd as select prq from omd where oms=Pjurnal;
  OPEN OmsDetail;
  REPEAT
      FETCH OmsDetail INTO Pprq;
      Update prq set `close`=0 where prq=Pprq;
    UNTIL done=1  END REPEAT;
  CLOSE OmsDetail;
end if;
if (Psubjurnal='LPH') then
  drop temporary table if exists tLph;
  create temporary table tLph as select oms from lph where lph=Pjurnal;
  OPEN LphDetail;
  REPEAT
      FETCH LphDetail INTO Poms;
      
      set toms='';
      select oms into toms from oms where oms=Poms and `delete`=0;
      if toms<>'' then
        Update oms set `close`=0 where oms=Poms;
      else
        Update prq set `close`=0 where prq=Poms;
      end if;
      
    UNTIL done=1  END REPEAT;
  CLOSE LphDetail;
end if;
if (Psubjurnal='MSK') then
  drop temporary table if exists tMsl;
  create temporary table tMsl as select oms from msl where msk=Pjurnal;
  OPEN MslDetail;
  REPEAT
      FETCH MslDetail INTO Poms;
      set toms='';
      if (left(Poms,3)<>'PRQ') then
        select oms into toms from oms where oms=Poms and `delete`=0;
      else
        select prq into toms from prq where prq=Poms and `delete`=0;
      end if;
      if toms<>'' then
        if (left(Poms,3)<>'PRQ') then
          Update oms set `closedval`=0 where oms=Poms;
        else
          update prq set `close`=false where prq=Poms;
        end if;
      end if;
      
    UNTIL done=1  END REPEAT;
  CLOSE MslDetail;
end if;
if (Psubjurnal = 'RMS') then
  update rma set `close`=0 where rma=Pjurnal;
end if;
if (Psubjurnal = 'SJR') then
  update rms, spm set rms.`close`=0 where rms.rms=spm.okl_rms and spm.spm=Pjurnal;
end if;
if (Psubjurnal='KLRI') then
  drop temporary table if exists tklri;
  create temporary table tklri as select pnv from klri where klri=Pjurnal;
  OPEN klriDetail;
  REPEAT
      FETCH klriDetail INTO Ppnv;
      Update pnv set `close`=0 where pnv=Ppnv;
    UNTIL done=1  END REPEAT;
  CLOSE klriDetail;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_OutBPPB
DROP PROCEDURE IF EXISTS `SP_OutBPPB`;
DELIMITER //
CREATE PROCEDURE `SP_OutBPPB`(
	IN `Pjurnal` VARCHAR(50)
)
SELECT jid.inv AS `Kode Barang`,jid.remark AS `Nama Barang`,jid.nodsg AS `No Batch`,jid.spesifikasi AS Spesifikasi,jid.unit as Unit,jid.expired,jid.qty1 AS qty,jid.qty AS `Quantity Base`,inv.unit as `Unit Base`,'D' AS `D/K` FROM jid,inv WHERE jid.inv = inv.inv and jid.jin = Pjurnal//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_outino
DROP PROCEDURE IF EXISTS `Sp_outino`;
DELIMITER //
CREATE PROCEDURE `Sp_outino`(Pjurnal varchar(15))
BEGIN
select Pjurnal as ino,umh.umh as jurnal,umh.date,umd.acc,umh.remark as rem,umd.dk,umd.val,0 as `no` from
umd left outer join umh on umd.umh=umh.umh
where umd.ino=Pjurnal
union all
select Pjurnal as ino,msx.msk,msk.date,msx.acc,msx.remark,convert('D' using latin1),msx.val,0 from
msx left outer join msk on msx.msk=msk.msk
where msx.ino=Pjurnal
union all
select Pjurnal as ino,jsu.jsu,jsu.date,jsd.acc,jsu.remark,jsd.dk,jsd.val,0 from
jsd left outer join jsu on jsd.jsu=jsu.jsu
where jsd.ino=Pjurnal;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_OutLhp
DROP PROCEDURE IF EXISTS `Sp_OutLhp`;
DELIMITER //
CREATE PROCEDURE `Sp_OutLhp`(Pjurnal char(15))
BEGIN
select s.mor as MO, s.okl as `Sales Order`, s.nodsg as `No Design`, s.inv as `Kode Barang`,
         s.remark as `Nama Barang`, sum(s.qty)+s.toleransi as Qty, i.unit as Unit, i.unit as `Unit Dikirim`,
         i.unit as `Unit Base Dikirim`, s.toleransi as `QtyToleransi`
  from
  (
    select mor.mor, mor.okl, mor.nodsg, mor.inv, okd.remark, mor.qty, (mor.toleransi*mor.qty/100) as toleransi
      from mor
      left join okd on mor.okl=okd.okl and mor.nodsg=okd.nodsg
     where mor.mor=Pjurnal and mor.delete=0 
    union all
    select lhd.mor, convert('' using latin1) as okl, lhd.nodsg, lhd.inv, lhd.remark, -qty as qty, 0 as toleransi
      from lhd, lhp
     where lhd.mor=Pjurnal and lhp.lhp=lhd.lhp and lhp.delete=0
  ) as s, inv i where s.inv = i.inv
  group by s.mor,s.nodsg,s.inv,s.remark having sum(s.qty)+s.toleransi>0;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_OutMor
DROP PROCEDURE IF EXISTS `Sp_OutMor`;
DELIMITER //
CREATE PROCEDURE `Sp_OutMor`(Pdate datetime, Pjurnal varchar(15), Pmode int)
BEGIN
if Pmode=1 then
  select distinct okl.okl as `Kode Sales Order`, sub.name as `Nama Customer`, okl.nopoc as `Kode PO`,
                  okl.date as Tanggal
    from okl, okd, sub
   where (okl.okl, okd.nodsg) not in (select okd.okl, okd.nodsg
                           from okd, (select okl, nodsg, inv, sum(qty) as jum from mor group by okl, nodsg, inv) as a
                          where okd.okl = a.okl and okd.nodsg=a.nodsg and okd.inv=a.inv
                            and (okd.qty+okd.toleransi/100*okd.qty)<=a.jum
                        )
     and okd.okl=okl.okl
     and okl.date<=adddate(Pdate,1)
     and okl.withMO=1
     and okl.sub = sub.sub
     and if(Pjurnal<>'', okl.okl=Pjurnal, 1)
     and okl.delete=0 and okl.close=0;
else
  select t.nodsg as `No Design`, g.abrev as Nama, t.inv as `Kode Barang`, t.remark as `Nama Barang`, sum(t.qty) as Qty, i.unit as Unit
  from
  (
     select nodsg, inv, okd.remark, (qty+toleransi/100*qty) as qty
       from okl, okd
      where okl.okl=PJurnal and okl.okl=okd.okl and okl.withMO=1 and okl.delete=0
    union all
    select mor.nodsg, mor.inv, okd.remark, -mor.qty as qty
      from mor, okd
     where mor.okl=Pjurnal and mor.okl=okd.okl and mor.nodsg=okd.nodsg and mor.delete=0
  ) as t, dsg g, inv i where t.inv=i.inv and t.nodsg=g.nodsg and i.inv=g.inv
  group by t.nodsg having sum(qty)>0;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_OutOkl
DROP PROCEDURE IF EXISTS `SP_OutOkl`;
DELIMITER //
CREATE PROCEDURE `SP_OutOkl`(
	IN `Pjurnal` VARCHAR(50),
	IN `Pokl` VARCHAR(50)
)
SELECT spd.inv AS `Kode Barang`, spd.remark AS `Nama Barang`,SUM(spd.qty1) AS Quantity,spd.unit AS Unit,SUM(spd.qty) AS `Net Weight`,SUM((spd.qtygudang)+(spd.qty)) AS `Gross Weight`,okd.price AS Harga,okd.packaging AS `Fee`,okd.packaging*0.1 AS `PPN Fee` ,okd.val AS Total, okd.`no` AS `no`
FROM okd
INNER JOIN spd ON okd.inv = spd.inv
INNER JOIN spm ON spd.spm = spm.spm
WHERE spd.spm = Pjurnal AND okd.okl=Pokl
GROUP BY `no`, packaging//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_OutOklCons
DROP PROCEDURE IF EXISTS `SP_OutOklCons`;
DELIMITER //
CREATE PROCEDURE `SP_OutOklCons`(
	IN `Pjurnal` VARCHAR(50)
)
SELECT inv.inv AS `Kode Barang`, inv.name AS `Nama Barang`,sum(spd.qty1) as `Quantity`,spd.unit AS Unit,sum(spd.qty) AS `Net Weight`,(sum(spd.qty) * 0.1 + sum(spd.qty)) as `Gross Weight`,okd.price AS Harga,okd.price*spd.qty as Total FROM spm,inv,okl,spd,okd WHERE spd.inv = inv.inv AND spm.spm = spd.spm AND spd.okl = okl.okl and okl.okl = okd.okl AND okl.okl = Pjurnal group by spd.inv//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_OutOklEx
DROP PROCEDURE IF EXISTS `SP_OutOklEx`;
DELIMITER //
CREATE PROCEDURE `SP_OutOklEx`(
	IN `Pjurnal` VARCHAR(50)
)
SELECT okd.inv AS `Kode Barang`,okd.remark AS `Nama Barang`,okd.qty1 AS `Quantity`,okd.unit AS `Unit`,okd.qty AS `Net Weight`,(SUM(okd.qty) * 0.1 + SUM(okd.qty)) AS `Gross Weight`,okd.price AS `Process`,okd.packaging AS `Packaging`,okd.val AS `Total`,a.kode AS `Kode`
FROM okl
LEFT OUTER JOIN okd ON okd.okl=okl.okl
LEFT outer JOIN (SELECT spd.okl,spd.inv,group_concat(distinct(MID(spd.nodsg,10,4)) SEPARATOR ', ') AS `Kode` FROM spd WHERE okl = Pjurnal GROUP BY spd.inv) a ON a.inv=okd.inv
WHERE okl.okl = Pjurnal
GROUP BY okd.inv//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_OutOklGlobal
DROP PROCEDURE IF EXISTS `SP_OutOklGlobal`;
DELIMITER //
CREATE PROCEDURE `SP_OutOklGlobal`(
	IN `Pjurnal` VARCHAR(50)
)
SELECT distinct (okd.kgb) AS `Kode Barang`, inv.name AS `Nama Barang`, SUM(okd.qty1) as `Quantity`,okd.unit AS Unit, SUM(okd.qty) AS `Net Weight`, (SUM(okd.qty) * 0.1)+SUM(okd.qty) as `Gross Weight`,sum(okd.price) AS Harga,sum(okd.val) as Total FROM okl,inv,okd WHERE okd.kgb = inv.inv AND okl.okl = okd.okl AND okl.okl = Pjurnal group by okl.okl, okd.kgb//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_OutOklLokal
DROP PROCEDURE IF EXISTS `SP_OutOklLokal`;
DELIMITER //
CREATE PROCEDURE `SP_OutOklLokal`(
	IN `Pjurnal` VARCHAR(50)
)
select okd.inv as `Kode Barang`, okd.remark as `Nama Barang`,sum(okd.qty1) as Quantity,okd.unit as Unit,sum(okd.qty) as `Net Weight`,sum(okd.qty1+okd.qty) as `Gross Weight`,sum(okd.price) as Harga,sum(okd.val) as Total
from okd
where okd.okl = Pjurnal
Group by okd.inv, okd.nodsg//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_OutPrj
DROP PROCEDURE IF EXISTS `Sp_OutPrj`;
DELIMITER //
CREATE PROCEDURE `Sp_OutPrj`()
BEGIN
 drop temporary table if exists outprj ;
 create temporary table outprj (jurnal varchar(15),inv varchar(15),loc varchar(15),remark VARCHAR(200),
                       qty float, qty1 float, unit VARCHAR(6), unitbase varchar(6), etd text);
 insert into outprj
 (
  select s.rma,s.inv,s.loc,s.remark,sum(s.qty) as qty, sum(s.qty1) as qty1, max(s.unit) as unit, i.unit as unitbase, s.etd as Keterangan
  from
  (
    select rma.rma, inv, loc, rmb.remark,rmb.qty as qty,rmb.qty1 as qty1, rmb.unit, rmb.etd
    from rmb left outer join rma on rmb.rma = rma.rma
    where rma.delete = 0
    union all
    select pord.rma, pord.inv, pord.loc, pord.remark, -pord.qty as qty,-pord.qty1 as qty1, convert('' using latin1) as unit, pord.etd
    from por, pord
    where por.por=pord.por and por.delete = 0
  ) as s, inv i where s.inv = i.inv
    group by s.rma,s.inv,s.remark
 );
select jurnal as `Purchase Request`,inv as "Kode Barang", loc as Loc, remark as `Nama Barang`, qty1 as `Qty`, unit as Unit,qty as `Qty Base`, unit as `Unit Base` from outprj where qty>0 and left(jurnal,3) = 'PRJ';
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_OutRhp
DROP PROCEDURE IF EXISTS `Sp_OutRhp`;
DELIMITER //
CREATE PROCEDURE `Sp_OutRhp`(
	IN `Psuba` varchar(15),
	IN `Psubz` varchar(15),
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Pjurnal` varchar(15),
	IN `pgroup_` varchar(1)
)
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists outrhp ;
create temporary table outrhp (jurnal varchar(15),`date` datetime,val double,remark varchar(100), `duedate` datetime, acc varchar(15), dk varchar(1), sub varchar(15),invoice varchar(50));
insert into outrhp
select * from
(
  select s.jurnal,s.date, s.val, s.remark, s.duedate, s.acc,s.dk, s.sub,s.invoice from
  (select rsb.jurnal,rsb.date, rsb.val, left(rsb.remark,70) as remark, rsb.duedate, rsb.acc, rsb.dk, rsb.sub, rsb.invoice
   from rsb
   where rsb.sub between Psuba and Psubz and rsb.period=Pperiod
   union all
   select rhp.jurnal,rhp.date, rhp.val, if(rhp.remark is null,'',rhp.remark), rhp.duedate, rhp.acc,
   rhp.dk, rhp.sub, rhp.invoice
   from rhp
   where rhp.sub between Psuba and Psubz and rhp.date <= Pdatez
  ) as s
) as xrhp;
drop temporary table if exists temppayhp ;
create temporary table temppayhp (jurnal varchar(15),val double, acc varchar(15),dk varchar(2), sub varchar(15), invoice varchar(50));
insert into temppayhp
(
 select pay.jurnal,pay.val, pay.acc,pay.dk,pay.sub,pay.invoice from
 (select payhp.reff as jurnal, payhp.sub, payhp.acc,payhp.dk, sum(payhp.val) as val,payhp.invoice
  from payhp
  where payhp.sub between Psuba and Psubz and payhp.date <= Pdatez and payhp.jurnal<>PJurnal
  group by payhp.reff, payhp.sub, payhp.acc, trim(payhp.invoice)
 ) as pay
);
if (pgroup_='1') then
select rhp.jurnal as `No.Hutang`,rhp.date as `Tanggal`,ifnull(left(rhp.remark,70),'') as `Keterangan`,rhp.acc as `Perkiraan`,rhp.acc as `Kode Akun`,accname as `Nama Akun`,rhp.dk as `D/K`,drhp.val as `Nilai`,rhp.duedate as `Jatuh Tempo`,rhp.invoice as `Invoice`,rhp.kurs as kurs,rhp.kurs as Kurs,rhp.jurnal as `No. Piutang`
from rhp,
 (select date,jurnal,val,remark, duedate,invoice,accname from
  (
    select outrhp.date,outrhp.jurnal,outrhp.remark, outrhp.duedate, outrhp.val-ifnull(temppayhp.val,0) as val,outrhp.invoice as invoice,acc.name as accname
    from outrhp
    left outer join temppayhp on outrhp.jurnal=temppayhp.jurnal and
                                 rtrim(outrhp.sub) = rtrim(temppayhp.sub) and
                                 rtrim(outrhp.acc) = rtrim(temppayhp.acc) and
                                 rtrim(outrhp.invoice) = rtrim(temppayhp.invoice)
    left outer join acc on outrhp.acc=acc.acc
   ) as outrhpnew
  where round(val,2) > 0
  group by date,jurnal,remark,duedate,val,trim(invoice)
  order by date, jurnal
 ) as drhp
where drhp.jurnal = rhp.jurnal and trim(drhp.invoice)=trim(rhp.invoice);
end if;
if (pgroup_='2') then
select rhp.jurnal as `No.Hutang`,rhp.date as `Tanggal`,left(rhp.remark,70) as `Keterangan`,rhp.acc as `Perkiraan`,rhp.acc as `Kode Akun`,
       rhp.dk as `D/K`,drhp.val as `Nilai`,rhp.duedate as `Jatuh Tempo`,rhp.invoice as `invo`,
       rhp.kurs as kurs, rhp.kurs as Kurs
from rhp,
(select date,jurnal,val,remark, duedate,invoice from
  (
   select outrhp.date,outrhp.jurnal,outrhp.remark, outrhp.duedate, outrhp.val-ifnull(temppayhp.val,0) as val,
          outrhp.invoice
   from outrhp
   left outer join temppayhp on outrhp.jurnal=temppayhp.jurnal and
                                rtrim(outrhp.sub)=rtrim(temppayhp.sub) and
                                rtrim(outrhp.acc)=rtrim(temppayhp.acc) and
                                rtrim(outrhp.invoice)=rtrim(temppayhp.invoice)
   left outer join sub on outrhp.sub=sub.sub
   left outer join grp on sub.grp=grp.grp
   where outrhp.acc=grp.accum or outrhp.acc=grp.accumbf
  ) as outrhpnew
 where round(val,2) > 0
 group by date,jurnal,remark,duedate,val,trim(invoice)
 order by date, jurnal
) as drhp
where drhp.jurnal = rhp.jurnal and trim(drhp.invoice)=trim(rhp.invoice);
end if;
if (pgroup_='3') then
select rhp.jurnal as `AP/APR`,rhp.date as `Tanggal`,rhp.remark as `Keterangan`,rhp.acc as `Perkiraan`,rhp.acc as `Kode Akun`,if(drhp.val<0,'K','D') as `D/K`,abs(drhp.val) as `Nilai`,rhp.duedate as `Jatuh Tempo`,rhp.invoice  as `Invoice`
from rhp,
 (select date,jurnal,val,remark, duedate,invoice from
  (
    select outrhp.date,outrhp.jurnal,outrhp.remark, outrhp.duedate, (outrhp.val*if(outrhp.dk='D',1,-1))+ifnull(temppayhp.val*if(temppayhp.dk='D',1,-1),0) as val,outrhp.invoice
    from outrhp
    left outer join temppayhp on outrhp.jurnal=temppayhp.jurnal and
                                 rtrim(outrhp.sub) = rtrim(temppayhp.sub) and
                                 rtrim(outrhp.acc) = rtrim(temppayhp.acc) and
                                 rtrim(outrhp.invoice) = rtrim(temppayhp.invoice)
   ) as outrhpnew
  where abs(round(val,2)) > 0
  group by date,jurnal,remark,duedate,val,trim(invoice)
  order by date, jurnal
 ) as drhp
where drhp.jurnal = rhp.jurnal and trim(drhp.invoice)=trim(rhp.invoice) ;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_OutSjT
DROP PROCEDURE IF EXISTS `Sp_OutSjT`;
DELIMITER //
CREATE PROCEDURE `Sp_OutSjT`(
	IN `PJurnal` VARCHAR(50),
	IN `Pgroup` INT
)
BEGIN
if Pgroup=3 then
 drop temporary table if exists outspm ;
 create temporary table outspm (jurnal varchar(15),inv varchar(15),loc varchar(15),remark VARCHAR(100),
                       qty float, unit VARCHAR(6), unitbase varchar(6));
 insert into outspm
 (
  select s.por,s.inv,s.loc,s.remark,sum(s.qty) as qty, max(s.unit) as unit, i.unit as unitbase
  from
  (
    select por.por, inv, loc, pord.remark,qty as qty, unit
    from pord left outer join por on pord.por = por.por
    where pord.por = Pjurnal and por.delete = 0
  ) as s, inv i where s.inv = i.inv
    group by s.por,s.inv,s.remark
 );
select inv as "Kode Barang", loc as Loc, remark as `Nama Barang`, qty as `Qty Diterima`, unitbase as `Unit`, qty as `Qty Dikirim`, unitbase as `Unit Diterima Base`, unitbase as `Unit Base`, qty as qtytim from outspm where qty>0;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_OutSpb
DROP PROCEDURE IF EXISTS `Sp_OutSpb`;
DELIMITER //
CREATE PROCEDURE `Sp_OutSpb`(
	IN `Pjurnal` varchar(15) 
)
BEGIN
drop temporary table if exists outspb ;
create temporary table outspb (oms varchar(15),inv varchar(15),loc varchar(15),remark varchar(100),
  qty1 double, cct varchar(15), unit VARCHAR(6), toleransi double, etd longtext);
insert into outspb
(
  select s.oms,s.inv,s.loc as "Loc",s.remark as "Nama Barang",sum(s.qtysisa) as Qty, s.cct, if(left(s.inv,1)='9',s.unit,i.unit) as unit,
         max(toleransi) as toleransi, max(etd) as etd
  from
  (
     select  convert(oms_in.oms using latin1) as oms,oms_in.inv,oms_in.loc,oms_in.remark,oms_in.qty as qtysisa,oms_in.cct,if(openpo.oms is null,oms_in.toleransi,openpo.qtypo*(openpo.tol/100)) as toleransi,
     convert((select etd from omd where oms=oms_in.oms and inv=oms_in.inv and remark=oms_in.remark limit 1) using latin1) as etd,
    convert((select unit from omd where oms=oms_in.oms and inv=oms_in.inv and remark=oms_in.remark limit 1)   using latin1) as unit
    from oms_in left outer join (select distinct oms,inv,remark,qtypo,tol,`close` from openpo where `close`=0) as openpo on oms_in.oms=openpo.oms and oms_in.inv=openpo.inv and oms_in.remark=openpo.remark
    where oms_in.oms=Pjurnal
    union all
    select lph.oms,lpd.inv,lpd.loc,lpd.remark,-qty as qtysisa,lpd.cct, 0 as toleransi, convert('' using latin1) as etd,
     convert('' using latin1) unit
    from lpd left outer join lph on lpd.lph=lph.lph
    where lph.oms=Pjurnal and lph.`delete`=0
  ) as s, inv i where s.inv = i.inv
   group by s.oms,s.inv,s.remark
) ;
select outspb.inv as "Kode Barang", loc as Loc, outspb.remark as "Nama Barang", spesifikasi as Spesifikasi,
if(qtys<=0,qtys+toleransi,qtys) as "Qty SJ", cct as `Cost Center`, units as "Unit SJ",
toleransi as Toleransi,if(qtys<=0,qtys+toleransi,qtys) as "Qty Flow",if(qtys<=0,qtys+toleransi,qtys) as "Qty Gdg", units as "Unit Diterima", unit as "Unit Base",
etd as Keterangan from outspb inner join (select max(omd.inv) inv,max(omd.remark) remark,closeitem,omd.spesifikasi,omd.qty1 as qtys,omd.unit as units from omd
left outer join (select distinct oms,inv,remark,qtypo,tol,`close` from openpo where `close`=0) as openpo on omd.oms=openpo.oms and omd.inv=openpo.inv and omd.remark=openpo.remark
where omd.oms=Pjurnal and ((omd.closeitem=0 or omd.closeitem is null) or openpo.`close`=0) group by omd.no,omd.inv,omd.remark) as omd on outspb.inv=omd.inv and outspb.remark=omd.remark  where qty1+toleransi >0;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_OutSpb1
DROP PROCEDURE IF EXISTS `Sp_OutSpb1`;
DELIMITER //
CREATE PROCEDURE `Sp_OutSpb1`(
	IN `Pjurnal` varchar(15),
	IN `Pgroup` tinyint 
)
BEGIN
drop temporary table if exists outspb ;
create temporary table outspb (oms varchar(15),inv varchar(15),loc varchar(15),remark varchar(100),
  qty1 double, cct varchar(15), unit VARCHAR(6), toleransi double, etd longtext);
if (pgroup=1) then
insert into outspb
(
  select s.oms,s.inv,s.loc as "Loc",s.remark as "Nama Barang",sum(s.qtysisa) as Qty, s.cct, if(left(s.inv,1)='9',s.unit,i.unit) as unit,
         max(toleransi) as toleransi, max(etd) as etd
  from
  (
     select oms_in.oms,oms_in.inv,oms_in.loc,oms_in.remark,oms_in.qty as qtysisa,oms_in.cct,if(openpo.oms is null,oms_in.toleransi,openpo.qtypo*(openpo.tol/100)) as toleransi,
    convert((select etd from omd where oms=oms_in.oms and inv=oms_in.inv and remark=oms_in.remark limit 1) using latin1) as etd,
    convert((select unit from omd where oms=oms_in.oms and inv=oms_in.inv and remark=oms_in.remark limit 1)   using latin1) as unit
      from oms_in left outer join (select distinct oms,inv,remark,qtypo,tol,`close` from openpo where `close`=0) as openpo on oms_in.oms=openpo.oms and oms_in.inv=openpo.inv and oms_in.remark=openpo.remark
    where oms_in.oms=Pjurnal
    union all
    select spb.oms,spbd.inv,spbd.loc,spbd.remark,-qty1 as qtysisa,spbd.cct, 0 as toleransi, convert('' using latin1) as etd,
    convert('' using latin1) unit
    from spbd left outer join spb on spbd.spb=spb.spb
    where spb.oms=Pjurnal and spb.`delete`=0
  ) as s, inv i where s.inv = i.inv
   group by s.oms,s.inv,s.remark
) ;
else
insert into outspb
(
  select s.oms,s.inv,s.loc as "Loc",s.remark as "Nama Barang",sum(s.qtysisa) as Qty, s.cct, if(left(s.inv,1)='9',s.unit,i.unit) as unit,
         max(toleransi) as toleransi, max(etd) as etd
  from
  (
     select convert(oms_in.oms using latin1) oms,oms_in.inv,oms_in.loc,oms_in.remark,oms_in.qty as qtysisa,oms_in.cct,if(openpo.oms is null,oms_in.toleransi,openpo.qtypo*(openpo.tol/100)) as toleransi,
    convert((select etd from omd where oms=oms_in.oms and inv=oms_in.inv and remark=oms_in.remark limit 1) using latin1) as etd,
    convert((select unit from omd where oms=oms_in.oms and inv=oms_in.inv and remark=oms_in.remark limit 1) using latin1) as unit
    from oms_in left outer join (select distinct oms,inv,remark,qtypo,tol,`close` from openpo where `close`=0) as openpo on oms_in.oms=openpo.oms and oms_in.inv=openpo.inv and oms_in.remark=openpo.remark
    where oms_in.oms=Pjurnal
    union all
    select lph.oms,lpd.inv,lpd.loc,lpd.remark,-qty as qtysisa,lpd.cct, 0 as toleransi, convert('' using latin1) as etd,
     convert('' using latin1) unit
    from lpd left outer join lph on lpd.lph=lph.lph
    where lph.oms=Pjurnal and lph.`delete`=0
  ) as s, inv i where s.inv = i.inv
   group by s.oms,s.inv,s.remark
) ;
end if;
if (pgroup=1) then
select outspb.inv as "Kode Barang", loc as Loc, outspb.remark as "Nama Barang",
if(qty1<=0,qty1,qty1) as "Qty SJ", cct as `Cost Center`, unit as "Unit SJ",
toleransi as Toleransi, unit as "Unit Diterima",  if(qty1<=0,qty1,qty1) as "Qty Base", unit as "Unit Base",
etd as Keterangan from outspb inner join
(select max(omd.inv) inv,max(omd.remark) remark,closeitem from omd
left outer join (select distinct oms,inv,remark,qtypo,tol,`close` from openpo where `close`=0) as openpo on omd.oms=openpo.oms and omd.inv=openpo.inv and omd.remark=openpo.remark
where omd.oms=Pjurnal and ((omd.closeitem=0 or omd.closeitem is null) or openpo.`close`=0) group by omd.inv,omd.remark) as omd on outspb.inv=omd.inv and outspb.remark=omd.remark where qty1+toleransi>0;
else
select outspb.inv as "Kode Barang", loc as Loc, outspb.remark as "Nama Barang",
qty1 as "Qty SJ", cct as `Cost Center`, unit as "Unit SJ",
toleransi as Toleransi, unit as "Unit Diterima",  if(qty1<=0,qty1,qty1) as "Qty Base", unit as "Unit Base",
etd as Keterangan from outspb inner join (select max(inv) inv,max(remark) remark,closeitem from omd where oms=Pjurnal and (omd.closeitem=0 or omd.closeitem is null) group by inv,remark) as omd on outspb.inv=omd.inv and outspb.remark=omd.remark where qty1 >0;
end if ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_OutSpbBB
DROP PROCEDURE IF EXISTS `Sp_OutSpbBB`;
DELIMITER //
CREATE PROCEDURE `Sp_OutSpbBB`(
	IN `Pjurnal` VARCHAR(15)
)
BEGIN
drop temporary table if exists outspb ;
create temporary table outspb (oms varchar(15),inv varchar(15),loc varchar(15),remark varchar(50),
  qty1 double, cct varchar(15), unit VARCHAR(6), toleransi double, etd longtext);
insert into outspb
(
  select s.oms,s.inv,s.loc as "Loc",s.remark as "Nama Barang",sum(s.qtysisa) as Qty, s.cct, if(left(s.inv,1)='9',s.unit,i.unit) as unit,
         max(toleransi) as toleransi, max(etd) as etd
  from
  (
     select  convert(oms_in.oms using latin1) as oms,oms_in.inv,oms_in.loc,oms_in.remark,oms_in.qty as qtysisa,oms_in.cct,if(openpo.oms is null,oms_in.toleransi,openpo.qtypo*(openpo.tol/100)) as toleransi,
     convert((select etd from omd where oms=oms_in.oms and inv=oms_in.inv and remark=oms_in.remark limit 1) using latin1) as etd,
    convert((select unit from omd where oms=oms_in.oms and inv=oms_in.inv and remark=oms_in.remark limit 1)   using latin1) as unit
    from oms_in left outer join (select distinct oms,inv,remark,qtypo,tol,`close` from openpo where `close`=0) as openpo on oms_in.oms=openpo.oms and oms_in.inv=openpo.inv and oms_in.remark=openpo.remark
    where oms_in.oms=Pjurnal
    union all
    select lph.oms,lpd.inv,lpd.loc,lpd.remark,-qty as qtysisa,lpd.cct, 0 as toleransi, convert('' using latin1) as etd,
     convert('' using latin1) unit
    from lpd left outer join lph on lpd.lph=lph.lph
    where lph.oms=Pjurnal and lph.`delete`=0
  ) as s, inv i where s.inv = i.inv
   group by s.oms,s.inv,s.remark
) ;
select outspb.inv as "Kode Barang", loc as Loc, outspb.remark as "Nama Barang",
if(qty1<=0,qty1+toleransi,qty1) as "Qty SJ", cct as `Cost Center`, unit as "Unit SJ",
toleransi as Toleransi, unit as "Unit Diterima",  if(qty1<=0,qty1+toleransi,qty1) as "Qty Base", unit as "Unit Base",
etd as Keterangan from outspb where qty1 > 0;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_OutSpbval
DROP PROCEDURE IF EXISTS `Sp_OutSpbval`;
DELIMITER //
CREATE PROCEDURE `Sp_OutSpbval`(Pjurnal varchar(15) )
BEGIN
select * from lph where oms=Pjurnal and lph not in (select lph from msl where oms=Pjurnal);
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_OutSpm
DROP PROCEDURE IF EXISTS `Sp_OutSpm`;
DELIMITER //
CREATE PROCEDURE `Sp_OutSpm`(
	IN `Pjurnal` varchar(15),
	IN `Pgroup` tinyint
)
BEGIN
if Pgroup=11 then
  
  select s.okl as `Sales Order`, s.nodsg as `No Design`, s.inv as `Kode Barang`,max(s.loc) as Loc,
         s.remark as `Nama Barang`, sum(s.qty) as Qty, i.unit as Unit, i.unit as `Unit Dikirim`,
         i.unit as `Unit Base Dikirim`
  from
  (
    select okd.okl, okd.nodsg, okd.inv, okd.loc, okd.remark, okd.qty
      from okd,okl
      where okd.okl=Pjurnal and okl.okl=okd.okl and okl.delete=0
    union all
    select sjd.okl, sjd.nodsg, sjd.inv, sjd.loc, sjd.remark, -qty as qty
      from sjd,sjh
      where sjd.okl=Pjurnal and sjh.sjh=sjd.sjh and sjh.delete=0
    union all
       select doh.okl,sprd.nodsg,sprd.inv,sprd.loc,sprd.remark,sprd.qty
       from spr,sprd,sjh,spm,doh where sprd.spr=spr.spr and spr.rsm=sjh.sjh and sjh.spm=spm.spm and spm.okl_rms=doh.doh and doh.okl=Pjurnal
  ) as s, inv i where s.inv = i.inv
  group by s.okl,s.inv,s.remark HAVING ROUND(sum(s.qty),2);
elseif Pgroup=10 then
select s.okl as `Sales Order`, '' as `No Design`, s.inv as `Kode Barang`,max(s.loc) as Loc,
         s.remark as `Nama Barang`, sum(s.qty) as Qty, i.unit as Unit, i.unit as `Unit Dikirim`,
         i.unit as `Unit Base Dikirim`
  from
  (
    select dod.okl, dod.inv, dod.loc, dod.remark, dod.qty
      from dod,doh
      where dod.doh=Pjurnal and doh.doh=dod.doh and doh.delete=0
    union all
    select spd.okl, spd.inv, spd.loc, spd.remark, -qty as qty
      from spd,spm
      where spm.okl_rms=Pjurnal and spm.spm=spd.spm and spm.delete=0
  ) as s, inv i where s.inv = i.inv
  group by s.okl,s.inv,s.remark  having sum(s.qty)>0;
elseif Pgroup=20 then
select s.okl as `Sales Order`, '' as `No Design`, s.inv as `Kode Barang`,max(s.loc) as Loc,
         s.remark as `Nama Barang`, sum(s.qty) as Qty, i.unit as Unit, i.unit as `Unit Dikirim`,
         i.unit as `Unit Base Dikirim`
  from
  (
     select okl.okl, okd.inv, okd.loc, okd.remark, qty1 as qty
      from okd,okl
      where okl.okl=Pjurnal and okl.okl=okd.okl and okl.delete=0
   union all
     select dod.okl, dod.inv, dod.loc, dod.remark, -dod.qty1 as qty
      from dod,doh
      where doh.okl=Pjurnal and doh.doh=dod.doh and doh.delete=0    
  ) as s, inv i where s.inv = i.inv
  group by s.okl,s.inv,s.remark having sum(s.qty)>0;
elseif Pgroup=12 then
  
  select t.mor as MO, t.okl as `Sales Order`, t.nodsg as `No Design`, t.inv as `Kode Barang`, t.remark as `Nama Barang`,
         max(loc) as Loc, sum(qty) as Qty, i.unit as Unit, i.unit as `Unit Dikirim`, i.unit as `Unit Base Dikirim`
  from
  (
     
     (
      select lhd.mor, mor.okl, lhd.nodsg, lhd.inv, lhp.loc, lhd.remark, lhd.qty
      from lhp, lhd, mor
      where mor.mor=trim(Pjurnal) and lhd.mor=mor.mor and lhp.lhp=lhd.lhp
        and lhp.delete=0
     )
     union all
     (select sjd.mor, sjd.okl, sjd.nodsg, sjd.inv, sjd.loc, sjd.remark, -qty as qty
      from sjd,sjh
      where sjd.mor=Pjurnal and sjh.sjh=sjd.sjh and sjh.delete=0
     )
  ) as t, inv i where t.inv = i.inv
  group by t.mor, t.okl, t.inv,t.remark having sum(t.qty)>0;
elseif Pgroup=2 then
 drop temporary table if exists outspm ;
 create temporary table outspm (jurnal varchar(15),inv varchar(15),loc varchar(15),remark varchar(200),
                       qty float, unit VARCHAR(6), unitbase varchar(6));
 insert into outspm
 (
  select s.rms,s.inv,s.loc,s.remark,sum(s.qty) as qty, max(s.unit) as unit, i.unit as unitbase
  from
  (
    select rms.rms, inv, loc, rmd.remark,qty as qty, unit
    from rmd left outer join rms on rmd.rms = rms.rms
    where rms.rms = Pjurnal and rms.delete = 0
    union all
    select spm.okl_rms, sjrd.inv, sjrd.loc, sjrd.remark, -sjrd.qty as qty, convert('' using latin1) as unit
    from spm, sjr, sjrd
    where spm.okl_rms=Pjurnal and sjr.spm=spm.spm and sjr.sjr=sjrd.sjr and spm.delete = 0 and sjr.delete=0
  ) as s, inv i where s.inv = i.inv
    group by s.rms,s.inv,s.remark
 );
 select inv as "Kode Barang", loc as Loc, remark as `Nama Barang`, qty as `Qty SJ`, unitbase as `Unit SJ`, unitbase as `Unit Dikirim`, unitbase as `Unit Base Dikirim` from outspm where qty>0;
elseif Pgroup=3 then
 drop temporary table if exists outspm ;
 create temporary table outspm (jurnal varchar(15),inv varchar(15),loc varchar(15),remark varchar(50),
                       qty float, unit VARCHAR(6), unitbase varchar(6));
 insert into outspm
 (
  select s.por,s.inv,s.loc,s.remark,sum(s.qty) as qty, max(s.unit) as unit, i.unit as unitbase
  from
  (
    select por.por, inv, loc, pord.remark,qty as qty, unit
    from pord left outer join por on pord.por = por.por
    where pord.por = Pjurnal and por.delete = 0
    union all
    select spm.okl_rms, sjrd.inv, sjrd.loc, sjrd.remark, -sjrd.qty as qty, convert('' using latin1) as unit
    from spm, sjr, sjrd
    where spm.okl_rms=Pjurnal and sjr.spm=spm.spm and sjr.sjr=sjrd.sjr and spm.delete = 0 and sjr.delete=0
  ) as s, inv i where s.inv = i.inv
    group by s.por,s.inv,s.remark
 );
select inv as "Kode Barang", loc as Loc, remark as `Nama Barang`, qty as `Qty SJ`, unitbase as `Unit SJ`, unitbase as `Unit Dikirim`, unitbase as `Unit Base Dikirim` from outspm where qty>0;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_OutSpmT
DROP PROCEDURE IF EXISTS `Sp_OutSpmT`;
DELIMITER //
CREATE PROCEDURE `Sp_OutSpmT`(
	IN `Pjurnal` VARCHAR(50),
	IN `Pgroup` INT
)
BEGIN
if Pgroup=3 then
 drop temporary table if exists outspm ;
 create temporary table outspm (jurnal varchar(15),inv varchar(15),loc varchar(15),remark varchar(200),
                       qty float, qty1 float, unit VARCHAR(6), unitbase varchar(6));
 insert into outspm
 (
  select s.por,s.inv,s.loc,s.remark,sum(s.qty) as qty, sum(s.qty1) as qty1, max(s.unit) as unit, i.unit as unitbase
  from
  (
    select por.por, inv, loc, pord.remark,qty as qty,qty1 as qty1, unit
    from pord left outer join por on pord.por = por.por
    where pord.por = Pjurnal and por.delete = 0
    union all
    select spm.okl_rms, sjrd.inv, sjrd.loc, sjrd.remark, -sjrd.qty as qty,-sjrd.qty1 as qty1, convert('' using latin1) as unit
    from spm, sjr, sjrd
    where spm.okl_rms=Pjurnal and sjr.spm=spm.spm and sjr.sjr=sjrd.sjr and spm.delete = 0 and sjr.delete=0
  ) as s, inv i where s.inv = i.inv
    group by s.por,s.inv,s.remark
 );
select jurnal as `Purchase Order`,inv as "Kode Barang", loc as Loc, remark as `Nama Barang`, qty1 as `Qty`, unit as Unit, qty1 as `Qty Dikirim`, unit as `Unit Dikirim`, qty as `Qty Base Dikirim`, qty as `qtytim`, unitbase as `Unit Base Dikirim` from outspm where qty>0;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_OutSpr
DROP PROCEDURE IF EXISTS `Sp_OutSpr`;
DELIMITER //
CREATE PROCEDURE `Sp_OutSpr`(
	IN `Pjurnal` varchar(15) 
)
BEGIN
drop temporary table if exists outspr ;
create temporary table outspr (rsm varchar(15),nodsg varchar(50), inv varchar(15),
  loc varchar(15),remark varchar(50),
  qty1 float, unit VARCHAR(6), etd longtext);
insert into outspr
(
  select s.sjh rsm,s.nodsg,s.inv,s.loc as "Loc",s.remark as "Nama Barang",sum(s.qtysisa) as Qty, i.unit, '' as etd
  from
  (
  select d.sjh,d.nodsg,d.inv,d.loc,d.remark,d.qty as qtysisa
    from sjd d, sjh r where d.sjh=Pjurnal and r.sjh=d.sjh and r.delete=0
  ) as s, inv i where s.inv = i.inv
   group by s.sjh,s.nodsg,s.inv,s.remark
) ;
select nodsg as `No Design`, inv as "Kode Barang", loc as Loc, remark as "Nama Barang", qty1 as "Qty SJ",
      unit as "Unit SJ", unit as "Unit Diterima", unit as "Unit Base Diterima", etd as Keterangan
  from outspr where qty1>0;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_OutSpr1
DROP PROCEDURE IF EXISTS `Sp_OutSpr1`;
DELIMITER //
CREATE PROCEDURE `Sp_OutSpr1`(
	IN `Pjurnal` varchar(15)
)
BEGIN
drop temporary table if exists outspr ;
create temporary table outspr (rsm varchar(15),nodsg varchar(50), inv varchar(15),
  loc varchar(15),remark VARCHAR(200),
  qty1 float, unit VARCHAR(6), etd longtext);
insert into outspr
(
   select s.rsm,s.nodsg,s.inv,s.loc as "Loc",s.remark as "Nama Barang",sum(s.qtysisa)/i.konversi as Qty, s.unit, max(etd) as etd
  from
  (
  select d.rsm,d.nodsg,d.inv,d.loc,d.remark,d.qty as qtysisa,d.etd, d.unit
    from rsmd d, rsm r where d.rsm=Pjurnal and r.rsm=d.rsm and r.delete=0
      union all
  select spr.rsm,sprd.nodsg,sprd.inv,sprd.loc,sprd.remark,-qty as qtysisa,convert('' using latin1) as etd,sprd.unit as unit
    from sprd left outer join spr on sprd.spr=spr.spr
    where spr.rsm=Pjurnal and spr.delete=0
  ) as s, konversi i where s.inv = i.inv and  s.unit=i.unit
   group by s.rsm,s.nodsg,s.inv,s.remark
) ;
select nodsg as `No Design`, inv as "Kode Barang", ifnull(loc,'') as loc, remark as "Nama Barang", qty1 as "Qty SJ",
      unit as "Unit SJ", unit as "Unit Diterima", etd as Keterangan
  from outspr where qty1>0;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_OutSpr2
DROP PROCEDURE IF EXISTS `Sp_OutSpr2`;
DELIMITER //
CREATE PROCEDURE `Sp_OutSpr2`(
	IN `Pjurnal` VARCHAR(50)
)
BEGIN
drop temporary table if exists outspr ;
create temporary table outspr (rsm varchar(15),nodsg varchar(50), inv varchar(15),
  loc varchar(15),remark VARCHAR(200),
  qty1 float, unit VARCHAR(6), etd longtext, qtygd float, qty float, unitbase varchar(6));
insert into outspr
(
   select s.spm AS rsm,s.nodsg,s.inv,s.loc as "Loc",s.remark as "Nama Barang",sum(s.qtysisa)/i.konversi as Qty, s.unit, max(etd) as etd,sum(s.qtygudang) qtygd,sum(s.qty) as qty, i.unit as unitbase
  from
  (
      SELECT spm.spm,spd.nodsg,spd.inv,spd.loc,spd.remark,spd.qty AS qtysisa,'' AS etd,spd.unit, spd.qtygudang,spd.qty
		FROM spm,spd
		WHERE spm.spm=spd.spm AND spm.spm=Pjurnal AND spm.`delete`=0
		UNION ALL
  		select spr.rsm,sprd.nodsg,sprd.inv,sprd.loc,sprd.remark,-qty as qtysisa,convert('' using latin1) as etd,sprd.unit as unit,-sprd.qtygd,-sprd.qty
    	from sprd left outer join spr on sprd.spr=spr.spr
    	where spr.rsm=Pjurnal and spr.delete=0
  ) as s, konversi i where s.inv = i.inv and  s.unit=i.unit
   group by s.spm,s.nodsg,s.inv,s.remark
) ;
select nodsg as `No Design`, inv as "Kode Barang", ifnull(loc,'') as Loc, remark as "Nama Barang", qty1 as "Qty SJ", qty as "Qty Base Diterima", qtygd as "Qty Diterima",
      unit as "Unit SJ", unit as "Unit Diterima",unitbase as "Unit Base Dikirim", etd as Keterangan
  from outspr where qty1>0;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_PembelianRM
DROP PROCEDURE IF EXISTS `Sp_PembelianRM`;
DELIMITER //
CREATE PROCEDURE `Sp_PembelianRM`(
	IN `Ppola` CHAR(15),
	IN `Ppolz` CHAR(15)
)
BEGIN
SELECT c.sub AS `Kode Supplier`,e.name AS `Nama Supplier`, c.oms AS `No PO`,a.spb AS `No SPB`, a.date AS Tanggal,b.inv AS `Kode Barang`,b.remark AS `Nama Barang`,b.spesifikasi AS Spesifikasi,b.qty1 AS `Total Qty (CT)`,d.disc AS `Disc(%)`,
d.price AS `Harga Satuan (MC)`,
((b.qty1*d.price)-(b.qty1*d.price*d.disc/100)) AS Subtotal,
b.qty AS `Total Qty (KGM)`,
(((b.qty1*d.price)-(b.qty1*d.price*d.disc/100))/b.qty) AS `Harga Satuan (KGM)`,
(((b.qty1*d.price)-(b.qty1*d.price*d.disc/100))*d.pph22/100) AS pph22,
(((b.qty1*d.price)-(b.qty1*d.price*d.disc/100))*d.pph23/100) AS pph23,
(((b.qty1*d.price)-(b.qty1*d.price*d.disc/100))*d.pph42/100) AS pph42,
c.ppn AS ppn,
(((b.qty1*d.price)-(b.qty1*d.price*d.disc/100))-(((b.qty1*d.price)-(b.qty1*d.price*d.disc/100))*d.pph22/100)-(((b.qty1*d.price)-(b.qty1*d.price*d.disc/100))*d.pph23/100)-(((b.qty1*d.price)-(b.qty1*d.price*d.disc/100))*d.pph42/100)+c.ppn) AS `Grand Total`, a.remark AS Keterangan
FROM spb a
LEFT JOIN spbd b ON a.spb=b.spb
left JOIN oms c ON c.oms=a.oms 
LEFT JOIN omd d ON c.oms = d.oms AND b.inv=d.inv
LEFT JOIN sub e ON c.sub = e.sub
WHERE if(Ppola<>'' and Ppolz<>'',c.oms between Ppola AND Ppolz,1);
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_PindahSaldoRL
DROP PROCEDURE IF EXISTS `Sp_PindahSaldoRL`;
DELIMITER //
CREATE PROCEDURE `Sp_PindahSaldoRL`(
	IN `pdatea` datetime,
	IN `pdatez` datetime
)
BEGIN
declare nextperiod char(4);
declare pperiod char(4);
declare totRL double;
set pperiod=fdate2period(pdatea);
set nextperiod=fdate2period(adddate(pdatez,1));
set totRL=(select sum(ifnull(vlast,0)+vdebet-vkredit) as val from rac,acc where rac.acc=acc.acc and period=pperiod and acc.detil=1 and acc.group_>3);
  update rac set rac.vlast=rac.vlast+totRL  where rac.period=nextperiod and rac.acc in ('32030101','32030100','32030000','32000000','30000000') and period<>'0902';
  update rac,acc set vlast=0 where rac.acc=acc.acc and acc.group_>3 and rac.period=nextperiod and period<>'0902';
if (select right(pperiod,2))= '12' then
  update rac,acc set vlast=0 where rac.acc=acc.acc and trim(acc.acc) in ('32030101','32030100','32030000')  and rac.period=nextperiod ;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_pindahsaldo_rac
DROP PROCEDURE IF EXISTS `Sp_pindahsaldo_rac`;
DELIMITER //
CREATE PROCEDURE `Sp_pindahsaldo_rac`( lcdatea datetime, lcdatez datetime)
BEGIN
DECLARE lcperiod,nextperiod   VARCHAR(4);
DECLARE lcAccParent   VARCHAR(15);
DECLARE lcAccDetil    VARCHAR(15);
DECLARE lcDebet       DOUBLE;
DECLARE lcKredit      DOUBLE;
DECLARE lcDebetadj    DOUBLE;
DECLARE lcKreditadj   DOUBLE;
DECLARE lcDebetnetto  DOUBLE;
DECLARE lcKreditnetto DOUBLE;
Declare lclevel       DOUBLE;
DECLARE lcVal         DOUBLE;
DECLARE lcValnetto    DOUBLE;
DECLARE DONe INT DEFAULT 0;
DECLARE lcADetil,lcAParent CHAR(15);
DECLARE lcD,lcK,lcDa,lcKa,lcV,lcVnet,lcDnet,lcKnet DOUBLE;
DECLARE i INT;
DECLARE SalDODetil CURSOR FOR
SELECT  acc,parent,debet,kredit,awal FROM TsalDO WHERE detil=1 AND abs(awal)+abs(debet)+abs(kredit)>0;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONe = 1;
SET lcperiod = (SELECT Fdate2period(lcdatea));
SET lclevel=6;
set nextperiod=fdate2period(adddate(lcdatez,1));
drop temporary table IF EXISTS Tawal ;
CREATE TEMPORARY TABLE Tawal (acc VARCHAR(15),vlast DOUBLE);
drop temporary table IF EXISTS Tmutasi;
CREATE TEMPORARY TABLE Tmutasi (acc VARCHAR(15),debet DOUBLE,kredit DOUBLE);
drop temporary table IF EXISTS TsalDO;
CREATE TEMPORARY TABLE TsalDO (acc VARCHAR(15),name VARCHAR(50),parent VARCHAR(15),group_ char(1),detil tinyint(2),level_ smallint(5),awal DOUBLE,
              debet DOUBLE,kredit DOUBLE);
drop temporary table IF EXISTS TsalDOparent;
CREATE TEMPORARY TABLE TsalDOparent (acc VARCHAR(15),parent VARCHAR(15));
INSERT INTO Tawal
SELECT acc, SUM(IF(isnull(vlast),0,vlast)) as vlast
FROM
(
  SELECT rac.acc,rac.vlast
      FROM rac
      WHERE rac.period=lcPeriod
  uniON all
  SELECT acd.acc, SUM(val*IF(dk="D",1,-1)) as vlast
      FROM acd
      WHERE acd.period=lcperiod AND acd.date < lcdatea GROUP BY acd.acc
)
as oawal GROUP BY acc;
INSERT INTO Tmutasi
SELECT acc,
    SUM(val*IF(dk="D",1,0)) as debet,                             
    SUM(val*IF(dk="K",1,0)) as kredit			
    FROM acd
    WHERE acd.date >=lcdatea  AND acd.date<lcdatez GROUP BY acd.acc;
INSERT INTO TsalDO
SELECT acc.acc,
    acc.name,
    acc.parent,
    acc.group_,
    acc.detil,
    acc.level_,
    IF(isnull(Tawal.vlast),0,Tawal.Vlast) as awal,
    IF(isnull(Tmutasi.debet),0,Tmutasi.debet) as debet,
    IF(isnull(Tmutasi.kredit),0,Tmutasi.kredit) as kredit
    FROM  Tawal
    RIGHT OUTER JOIN acc
    LEFT OUTER JOIN Tmutasi
    ON acc.acc=Tmutasi.acc
    ON Tawal.acc=acc.acc;
INSERT INTO TsalDOparent
SELECT acc, parent FROM TsalDO WHERE detil=0;
OPEN SalDODetil;
  REPEAT
      FETCH SalDODetil INTO lcADetil,lcAParent,lcD,lcK,lcV;
               WHILE lcAParent<>'' DO
                  UPDATE TsalDO SET  debet=debet+lcD, kredit=kredit+lcK WHERE acc=lcAParent;
                  SET lcAParent=(SELECT parent FROM TsalDOparent WHERE acc=lcAParent);
               end WHILE;
    UNTIL DONe=1  END REPEAT;
  CLOSE SalDODetil;
 update rac set vlast=0 where period=nextperiod;
 insert into rac (rac.period, rac.acc, rac.vlast, rac.vdebet, rac.vkredit)
  select nextperiod,TsalDO.acc,Tsaldo.awal+TsalDO.debet-TsalDO.kredit ,0,0
 FROM TsalDO
 WHERE ( level_= lclevel or (level_<lclevel AND detil=1) ) AND (abs(awal)+abs(debet)+abs(kredit)>0)
 and TsalDO.acc not in (select acc from rac where period=nextperiod);
 UPDATE rac,TsalDO SET rac.vlast=TsalDO.awal+TsalDO.debet-TsalDO.kredit
 WHERE rac.acc=TsalDO.acc and rac.period=nextperiod and ( level_= lclevel or (level_<lclevel AND detil=1) )
 AND (abs(awal)+abs(debet)+abs(kredit)>0);
 
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_PiutangOut
DROP PROCEDURE IF EXISTS `Sp_PiutangOut`;
DELIMITER //
CREATE PROCEDURE `Sp_PiutangOut`(
	IN `Psuba` varchar(15),
	IN `Psubz` varchar(15),
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Pjurnal` varchar(15),
	IN `pgroup_` varchar(1),
	IN `Pacca` varchar(15),
	IN `Paccz` varchar(15)
)
BEGIN
declare Pperiod varchar(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists outrhp ;
create temporary table outrhp (jurnal varchar(15),`date` datetime,val double,remark varchar(100), `duedate` datetime, acc varchar(15), dk varchar(1), sub varchar(15),invoice varchar(50));
insert into outrhp
select * from
(
  select s.jurnal,s.date, s.val, s.remark, s.duedate, s.acc,s.dk, s.sub,s.invoice from
  (select rsb.jurnal,rsb.date, rsb.val*if(rsb.dk='D',1,-1) val, rsb.remark, rsb.duedate,rsb.acc, rsb.dk, rsb.sub, rsb.invoice
   from rsb
   where rsb.sub between Psuba and Psubz and rsb.period=Pperiod and left(sub,1)='1'
   union all
   select rhp.jurnal,rhp.date, rhp.val*if(rhp.dk='D',1,-1) val, if(rhp.remark is null,'',rhp.remark), rhp.duedate, rhp.acc,
   rhp.dk, rhp.sub, rhp.invoice
   from rhp
   where rhp.sub between Psuba and Psubz and rhp.date between Pdatea and  Pdatez and left(sub,1)='1'
  ) as s
) as xrhp;
drop temporary table if exists temppayhp ;
create temporary table temppayhp (jurnal varchar(15),val double, acc varchar(15),dk varchar(2), sub varchar(15), invoice varchar(15));
insert into temppayhp
(
 select pay.jurnal,pay.val, pay.acc,pay.dk,pay.sub,pay.invoice from
 (select payhp.reff as jurnal, payhp.sub, payhp.acc,payhp.dk, sum(payhp.val*if(payhp.dk='D',-1,1)) as val,payhp.invoice
  from payhp
  where payhp.sub between Psuba and Psubz and payhp.date between Pdatea and  Pdatez and payhp.jurnal<>PJurnal
  group by payhp.reff, payhp.sub, payhp.acc, payhp.invoice
 ) as pay
);
if (pgroup_='1') then
select rhp.jurnal as Jurnal,subname,rhp.date as `Tanggal`,ifnull(rhp.remark,'') as `Keterangan`,rhp.acc as `Perkiraan`,rhp.acc as `Kode Akun`,accname as `Nama Akun`,rhp.dk as `D/K`,drhp.val as `Nilai`,rhp.kurs as `Kurs`,rhp.duedate as `Jatuh Tempo`,rhp.invoice  as `Invoice`,rhp.kurs as kurs,rhp.jurnal as `No. Hutang`
,okl,nopoc,kwt
from rhp,
 (select date,jurnal,val,remark, duedate,invoice,accname,subname,kwt,nopoc,okl from
  (
    select outrhp.date,outrhp.jurnal,sub.name subname,outrhp.remark, outrhp.duedate, outrhp.val-ifnull(temppayhp.val,0) as val,outrhp.invoice,acc.name as accname
    ,acc.acc,kwd.kwt,okl.okl,okl.nopoc from outrhp
    left outer join temppayhp on outrhp.jurnal=temppayhp.jurnal and
                                 rtrim(outrhp.sub) = rtrim(temppayhp.sub) and
                                 rtrim(outrhp.acc) = rtrim(temppayhp.acc) and
                                 rtrim(outrhp.invoice) = rtrim(temppayhp.invoice)
    left outer join acc on outrhp.acc=acc.acc
    left outer join sub on outrhp.sub=sub.sub
    left outer join kwd on outrhp.jurnal=kwd.jurnal
    left outer join kld on outrhp.jurnal=kld.klr
    left outer join okl on kld.okl=okl.okl
   ) as outrhpnew
  where round(val,2) <> 0 and acc between Pacca and Paccz
  group by date,jurnal,remark,duedate,val,invoice
  order by date, jurnal
 ) as drhp
where drhp.jurnal = rhp.jurnal and trim(drhp.invoice)=trim(rhp.invoice) and round(drhp.val)<>0;
end if;
if (pgroup_='2') then
select rhp.jurnal as `AP/APR`,rhp.date as `Tanggal`,rhp.remark as `Keterangan`,rhp.acc as `Perkiraan`,rhp.acc as `Kode Akun`,if(drhp.val<0,'K','D') as `D/K`,abs(drhp.val) as `Nilai`,rhp.duedate as `Jatuh Tempo`,rhp.invoice  as `Invoice`
from rhp,
 (select date,jurnal,val,remark, duedate,invoice from
  (
    select outrhp.date,outrhp.jurnal,outrhp.remark, outrhp.duedate, (outrhp.val*if(outrhp.dk='D',1,-1))+ifnull(temppayhp.val*if(temppayhp.dk='D',1,-1),0) as val,outrhp.invoice
    from outrhp
    left outer join temppayhp on outrhp.jurnal=temppayhp.jurnal and
                                 rtrim(outrhp.sub) = rtrim(temppayhp.sub) and
                                 rtrim(outrhp.acc) = rtrim(temppayhp.acc) and
                                 rtrim(outrhp.invoice) = rtrim(temppayhp.invoice)
   ) as outrhpnew
  where abs(round(val,2)) > 0
  group by date,jurnal,remark,duedate,val,invoice
  order by date, jurnal
 ) as drhp
where drhp.jurnal = rhp.jurnal and trim(drhp.invoice)=trim(rhp.invoice) ;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_PoIno
DROP PROCEDURE IF EXISTS `SP_PoIno`;
DELIMITER //
CREATE PROCEDURE `SP_PoIno`(
	IN `Psub` VARCHAR(50)
)
BEGIN
SELECT ino.ino as 'Int. Order',ino.proname,format(ino.valpro,0),ino.date FROM ino,inoc WHERE ino.ino = inoc.ino and inoc.sub = Psub and ino.settle = 0;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_Print
DROP PROCEDURE IF EXISTS `SP_Print`;
DELIMITER //
CREATE PROCEDURE `SP_Print`(
	IN `Pform` varchar(50),
	IN `Pjurnal` varchar(15)
)
BEGIN
DECLARE noOrder longtext default '';
DECLARE noPOCust longtext default '';
DECLARE mor_okl varchar(15);
DECLARE nopoc varchar(30);
DECLARE Done INT DEFAULT 0;
DECLARE cur_order CURSOR FOR
  select if(sjd.mor='',sjd.okl,sjd.mor) as noOrder
    from sjd,sjh where sjd.sjh=Pjurnal and sjd.sjh=sjh.sjh and sjh.`delete`=0 order by sjd.nodsg,sjd.inv;
DECLARE cur_nopoc CURSOR FOR
  select distinct sjd.nopoc
    from sjd,sjh where sjd.sjh=Pjurnal and sjd.sjh=sjh.sjh and sjh.`delete`=0 order by sjd.nodsg,sjd.inv;
DECLARE cur_nopockwt CURSOR FOR
    select distinct okl.nopoc from okl where okl in (select kwd.jurnal from kwd where kwt=Pjurnal);
DECLARE CONTINUE HANDLER FOR NOT FOUND SET Done=1;
if (Pform='Transaction.FrmTOrderbeli') then
  select oms.oms, oms.date, concat('(',sub.sub,') ',sub.name) as name,ifnull(usrp.name,oms.person) as pemesan, concat(rtrim(sub.address),' - ',sub.city,if(sub.fax<>'',' - FAX ',''),sub.fax ) as address, oms.cur, oms.duedate, omd.inv, trim(upper(omd.remark)) remark,trim(upper(omd.spesifikasi)) as spesifikasi, upper(omd.etd) as etd,
         sum(omd.qty1) as qty1, omd.unit, omd.price, omd.freight, omd.disc, sum(omd.val) as val, (oms.ppn * oms.val * 0.1) as ppn ,oms.ppnbebas,oms.ppnganti,omd.valpph22,omd.valpph23,omd.valpph42,(select sum(omd.valpph22) - sum(omd.valpph23) + sum(omd.valpph42) as total from omd where omd.oms = Pjurnal) as PPHTotal,(select sum(omd.valpph22) - sum(omd.valpph23) + sum(omd.valpph42) as total from omd where omd.oms = Pjurnal) + oms.val + (oms.ppn * oms.val * 0.1) as TotalVal,omd.dateneed,oms.addnote,if(sum(ifnull(reprint,0)+1)=1,'',concat('cetak ke - ',cast(sum(reprint+1) as char))) reprint ,
         oms.val as val1, oms.remark, datediff(oms.duedate,oms.date) as TOP,if(ifnull(omd.per,0)=0,1,omd.per) per, oms.aprovby, if(trim(oms.aprovby1)='' or oms.aprovby1 is null,oms.aprovby,oms.aprovby1) as aprovby1
    from omd left outer join oms on omd.oms=oms.oms left outer join (select jurnal,sum(reprint) as reprint from printed group by jurnal) as printed on omd.oms=printed.jurnal left outer join usrp on oms.person=usrp.usrp, sub
   where omd.oms=oms.oms and oms.sub=sub.sub and oms.oms=PJurnal and oms.`delete`=0
   group by omd.no,inv, omd.remark, unit, etd;
end if;
if (Pform='Transaction.FrmTPOR') then
select por.por, por.date,por.sub, sub.name,concat(rtrim(sub.address),' - ',sub.city,if(sub.fax<>'',' - FAX ',''),sub.fax ) as address,
por.cur,por.kurs, por.duedate, pord.inv, pord.remark as namabarang, pord.etd, concat('(   ',usrp.name,'   )') as usrp,
         sum(pord.qty1) as qty1, pord.unit, pord.price,pord.per, pord.disc, sum(pord.val) as val, por.ppn,por.ppnbebas,por.ppnganti,pord.valpph21,pord.valpph22,pord.valpph23,pord.valpph42,(select sum(pord.valpph21) + sum(pord.valpph22) + sum(pord.valpph23) + sum(pord.valpph42) as total from pord where pord.por = Pjurnal) as PPHTotal,(select sum(pord.valpph21) + sum(pord.valpph22) + sum(pord.valpph23) + sum(pord.valpph42) as total from pord where pord.por = Pjurnal) + por.val + por.ppn as TotalVal,
         por.val as val1, por.remark, datediff(por.duedate,por.date) as TOP
    from pord left outer join por on pord.por=por.por left outer join sub on por.sub=sub.sub left outer join usrp on usrp.usrp=por.rma
   where por.por=PJurnal and por.`delete`=0
   group by pord.no,inv, pord.remark, unit, etd;
end if;
if (Pform='Transaction.FrmTPOJ') then
select por.por, por.date,por.sub, sub.name,concat(rtrim(sub.address),' - ',sub.city,if(sub.fax<>'',' - FAX ',''),sub.fax ) as address,
por.cur,por.kurs, por.duedate, pord.inv, pord.remark as namabarang, pord.etd, CONCAT(usr.name) as usr,
         sum(pord.qty1) as qty1, pord.unit, pord.price,pord.per, pord.disc, sum(pord.val) as val, (por.ppn*por.val*0.1) as ppn,por.ppnbebas,(por.ppnganti*por.val*0.01) as ppnganti,pord.valpph21,pord.valpph22,pord.valpph23,pord.valpph42,(select sum(pord.valpph21) + sum(pord.valpph22) + sum(pord.valpph23) + sum(pord.valpph42) as total from pord where pord.por = Pjurnal) as PPHTotal,-(select sum(pord.valpph21) + sum(pord.valpph22) + sum(pord.valpph23) + sum(pord.valpph42) as total from pord where pord.por = Pjurnal) + por.val + (por.ppn*por.val *0.1) + (por.ppnganti*por.val*0.01) as TotalVal,
         por.val as val1, por.remark, datediff(por.duedate,por.date) as TOP
    from pord
	 left outer join por on pord.por=por.por
	 left outer join sub on por.sub=sub.sub
	 left outer join usr on usr.user=por.chusr
   where por.por=PJurnal and por.`delete`=0
   group by pord.no,inv, pord.remark, unit, etd;
end if;
if (Pform='Transaction.FrmTPOJJasa') then
select por.por, por.date,por.sub, sub.name,concat(rtrim(sub.address),' - ',sub.city,if(sub.fax<>'',' - FAX ',''),sub.fax ) as address,
por.cur,por.kurs, por.duedate, pord.inv, pord.remark as namabarang, pord.etd, CONCAT(usr.name) as usr,
         sum(pord.qty1) as qty1, pord.unit, pord.price,pord.per, pord.disc, pord.val as val, (por.ppn*por.val*0.1) as ppn,por.ppnbebas,(por.ppnganti*por.val*0.01) as ppnganti,pord.valpph21,pord.valpph22,pord.valpph23,pord.valpph42,(select sum(pord.valpph21) + sum(pord.valpph22) + sum(pord.valpph23) + sum(pord.valpph42) as total from pord where pord.por = Pjurnal) as PPHTotal,-(select sum(pord.valpph21) + sum(pord.valpph22) + sum(pord.valpph23) + sum(pord.valpph42) as total from pord where pord.por = Pjurnal) + pord.val + (por.ppn*por.val *0.1) + (por.ppnganti*pord.val*0.01) as TotalVal,
         pord.val as val1, por.remark, datediff(por.duedate,por.date) as TOP
    from pord
	 left outer join por on pord.por=por.por
	 left outer join sub on por.sub=sub.sub
	 left outer join usr on usr.user=por.chusr
   where por.por=PJurnal and por.`delete`=0 and left(pord.inv,2) = '91'
   group by pord.no,inv, pord.remark, unit, etd;
end if;
if (Pform='Transaction.FrmTPOJBarang') then
select por.por, por.date,por.sub, sub.name,concat(rtrim(sub.address),' - ',sub.city,if(sub.fax<>'',' - FAX ',''),sub.fax ) as address,
por.cur,por.kurs, por.duedate, pord.inv, pord.remark as namabarang, pord.etd, CONCAT(usr.name) as usr,
         sum(pord.qty1) as qty1, pord.unit, pord.price,pord.per, pord.disc, pord.val as val, (por.ppn*por.val*0.1) as ppn,por.ppnbebas,(por.ppnganti*por.val*0.01) as ppnganti,pord.valpph21,pord.valpph22,pord.valpph23,pord.valpph42,(select sum(pord.valpph21) + sum(pord.valpph22) + sum(pord.valpph23) + sum(pord.valpph42) as total from pord where pord.por = Pjurnal) as PPHTotal,-(select sum(pord.valpph21) + sum(pord.valpph22) + sum(pord.valpph23) + sum(pord.valpph42) as total from pord where pord.por = Pjurnal) + pord.val + (por.ppn*por.val *0.1) + (por.ppnganti*pord.val*0.01) as TotalVal,
         pord.val as val1, por.remark, datediff(por.duedate,por.date) as TOP
    from pord
	 left outer join por on pord.por=por.por
	 left outer join sub on por.sub=sub.sub
	 left outer join usr on usr.user=por.chusr
   where por.por=PJurnal and por.`delete`=0 and left(pord.inv,2) between '10' and '81'
   group by pord.no,inv, pord.remark, unit, etd;
end if;
if (Pform='Transaction.FrmTKBK') then
 select a.kasaccname,a.terbilang,a.kas as kas,a.date,a.acc as account,a.nama,a.alamat,'K' as kasDK ,remark,a.totalval,a.terbilang,a.detailacc,acc.name as keterangan,a.keterangan as accname,a.dk,a.val,'' as NoKasir,kag.nobg as Giro, kag.duedate as TglJT, ifnull(a.nama,'') as TobePaid,kasbank,rfp,left(rfp,3) as jenis,relasi from
(
 select kas.bilus,kas.kas,concat(kas.acc,' - ',acc1.name) as kasaccname,acc1.name as kasbank,ifnull(kas.remark,'') as remark,kas.date,ifnull((select name from sub where sub=kas.sub),kas.tobepaid) as nama,
      (select address from sub where sub=kas.sub) as alamat,
      kad.acc as acc,
     (select sum(kad.val*if(tcsi=1,kad.kurs,1)*(if(kad.dk='D',1,-1))*if(kas.group_=2,-1,1)) from kad where kad.kas=kas.kas) as totalval,
     concat(kas.bilus,if(kas.kurs=1 and kas.val>0, convert('Rupiah' using latin1), convert('' using latin1))) as terbilang,
     kad.acc as detailacc,kad.remark as keterangan,kad.dk, kad.val*if((kas.kurs=1 and kad.kurs>1),kad.kurs,1) as val,kad.rfp as rfp,kad.jurnal as relasi
     from acc as acc1,kas left join kad on kas.kas=kad.kas left join acc on kad.acc=acc.acc
  where kas.kas=Pjurnal and kas.`delete`=0 and kas.acc=acc1.acc
) as a left join kag on a.kas=kag.kas,acc where a.acc=acc.acc ;
end if;
if (Pform='Transaction.FrmTKBM') then
 select a.kasaccname,a.terbilang,right(a.kas,11) as kas,a.date,a.acc as account,a.nama,a.alamat,'K' as kasDK ,remark,a.totalval,a.terbilang,a.detailacc,acc.name as keterangan,a.keterangan as accname,a.dk,a.val,'' as NoKasir,kag.nobg as Giro, kag.duedate as TglJT, a.nama as TobePaid,kasbank,jurnal,left(jurnal,3) as jenis from
(
 select kas.bilus,kas.kas,concat(kas.acc,' - ',acc1.name) as kasaccname,acc1.name as kasbank,ifnull(kas.remark,'') as remark,kas.date,ifnull((select name from sub where sub=kas.sub),kas.tobepaid) as nama,
      (select address from sub where sub=kas.sub) as alamat,
      kad.acc as acc,
     (select sum(kad.val*if(tcsi=1,kad.kurs,1)*(if(kad.dk='D',1,-1))*if(kas.group_=2,-1,1)) from kad where kad.kas=kas.kas) as totalval,
     concat(kas.bilus,if(kas.kurs=1 and kas.val>0, convert('rupiah' using latin1), convert('' using latin1))) as terbilang,
     kad.acc as detailacc,kad.remark as keterangan,kad.dk, if(kad.dk='D',kad.val*-1,kad.val) as val,kad.jurnal as jurnal
     from acc as acc1,kas left join kad on kas.kas=kad.kas left join acc on kad.acc=acc.acc
  where kas.kas=Pjurnal and kas.`delete`=0 and kas.acc=acc1.acc
) as a left join kag on a.kas=kag.kas,acc where a.acc=acc.acc ;
end if;
if (Pform='Transaction.FrmTspb') then
   select spb.spb,spb.date,spb.sub,sub.name,concat(trim(spb.remark),'. ',ifnull(spbd.etd,'')) as remark,spb.oms,spb.nopol,spb.nosj,spbd.inv,spbd.no,if(spb.station=0,'',cast(spb.station as char)) as station,
   concat(trim(spbd.remark),'. ',ifnull(spbd.etd,'')) as namabarang,spbd.spesifikasi,spbd.qty,spbd.unit,qty1 as qty1,spbd.cct,spbd.qtygd,spbd.unitgd,spbd.etd, spbd.loc as name1,if(spb.cpo=true,'1','0') as cpo,
   (select dept from omd where omd.oms=spb.oms and omd.inv=spbd.inv and omd.remark=spbd.remark limit 1) as dept
   from loc,spb left outer join spbd on spb.spb =spbd.spb left outer join sub on spb.sub=sub.sub
   where spb.spb=PJurnal and spb.`delete`=0 and loc.loc=spbd.loc;
end if;
if (Pform='Transaction.FrmTLpb') then
   select lph.lph,lph.date,lph.sub,sub.name,lph.remark,lph.oms,lph.nopol,lph.spb,lpd.inv,lpd.no,
   lpd.remark as namabarang,lpd.spesifikasi,lpd.qty,lpd.unit,lpd.qty1,lpd.cct,lpd.qty,lpd.etd,lpd.loc as name1,spb.nosj,if(spb.station=0,'',cast(spb.station as char)) as station,
   (select dept from omd where omd.oms=lph.oms and omd.inv=lpd.inv and omd.remark=lpd.remark limit 1) as dept,lpd.nodsg as nodsg
   from spb,lph left outer join lpd on lph.lph =lpd.lph left outer join sub on lph.sub=sub.sub
  where lph.lph=Pjurnal and lph.`delete`=0 and spb.spb=lph.spb and left(pjurnal,3)='LPB'
  union all
   select lph.lph,lph.date,lph.sub,sub.name,lph.remark,lph.oms,lph.nopol,'' spb,lpd.inv,lpd.no,
   lpd.remark as namabarang,lpd.spesifikasi,lpd.qty,lpd.unit,lpd.qty1,lpd.cct,lpd.qty,lpd.etd,lpd.loc as name1,'' nosj,'' as station,'' as dept,lpd.nodsg as nodsg
   from lph left outer join lpd on lph.lph =lpd.lph left outer join sub on lph.sub=sub.sub
  where lph.lph=Pjurnal and lph.`delete`=0 and left(pjurnal,3)='LPJ';
end if;
if (Pform='Transaction.FrmTPrq') then
   select prq.prq,prq.date,prq.remark,prd.inv,prd.no, prd.remark as namabarang,dateneed,prd.qty,prd.unit,prd.qty1,prd.cct,prd.qty,prd.etd,prd.spesifikasi
   from prq left outer join prd on prq.prq =prd.prq
  where prq.prq=Pjurnal and prq.`delete`=0;
end if;
if (Pform='Transaction.FrmTRma') then
   select rma.rma, rma.date, rma.remark, rma.sub, sub.name,
          rmb.inv, rmb.remark as namabarang, sum(rmb.qty1) as qty1, rmb.unit, max(rmb.etd) as etd
     from rma left outer join rmb on rma.rma=rmb.rma
              left outer join sub on rma.sub=sub.sub
    where rma.rma=Pjurnal and rma.`delete`=0
    group by rmb.inv, rmb.remark, rmb.unit;
end if;
if (Pform='Transaction.FrmTPrj') then
   select rma.rma, rma.date, rma.remark, rma.sub, sub.name,
          rmb.inv, rmb.remark as namabarang, sum(rmb.qty1) as qty1, rmb.unit, max(rmb.etd) as etd
     from rma left outer join rmb on rma.rma=rmb.rma
              left outer join sub on rma.sub=sub.sub
    where rma.rma=Pjurnal and rma.`delete`=0
    group by rmb.inv, rmb.remark, rmb.unit, rmb.etd;
end if;
if (Pform='Transaction.FrmTDO') then
  select doh.doh, doh.date, doh.sub, sub.name, doh.remark, doh.nopol,
         doh.okl as okl, dod.inv, dod.remark as namabarang, sum(dod.qty1) as qty1, dod.unit,dod.loc, max(dod.etd) as etd
    from doh left outer join dod on doh.doh=dod.doh
             left outer join sub on doh.sub=sub.sub
  where doh.doh=Pjurnal and doh.`delete`=0
  group by dod.inv, dod.remark, dod.unit;
end if;
if (Pform='Transaction.FrmTSpm') then
  select spm.spm, spm.date, spm.sub, sub.name, spm.remark, spm.nopol,
         spm.okl_rms as rms, spd.inv, spd.remark as namabarang, sum(spd.qty1) as qty1, spd.unit,spd.loc, max(spd.etd) as etd
    from spm left outer join spd on spm.spm=spd.spm
             left outer join sub on spm.sub=sub.sub
  where spm.spm=Pjurnal and spm.`delete`=0
  group by spd.inv, spd.remark, spd.unit;
end if;
if (Pform='Transaction.FrmTSpmJual') then
  select spm.spm,spm.date,spm.sub,sub.name,spm.remark,spd.mor,spd.okl,spm.nopol,spd.nodsg,spd.inv,spd.no,
   spd.remark as namabarang,spd.qty,spd.unit,spd.unitgudang,spd.qty1,spd.cct,spd.qtygudang,spd.etd,spd.loc
   from spm left outer join spd on spm.spm =spd.spm
            left outer join sub on spm.sub=sub.sub
  where spm.spm=Pjurnal and spm.`delete`=0;
end if;
if (Pform='Transaction.FrmTSpmJualGlobal') then
select spm.spm,spm.date,spm.sub,sub.name,spm.remark,spd.mor,spd.okl,spm.nopol,spd.nodsg,spd.inv,spd.no,
   spd.remark as namabarang,spd.qty,spd.unit,spd.unitgudang,spd.qty1,spd.cct,spd.qtygudang,spd.etd,spd.loc,
   inv.inv,inv.name,spm.totqty,spm.totqtykemasan,kgb.name as namaglobal 
   from spm left outer join spd on spm.spm =spd.spm
   			left outer join inv on spm.kodeglobal=inv.inv
   			LEFT OUTER JOIN kgb ON spd.kgb=kgb.kgb
            left outer join sub on spm.sub=sub.sub
  where spm.spm='spm-2006-000056'and spm.`delete`=0
  limit 1;
end if;
if (Pform='Transaction.FrmTKlr') then
     select aa.sub, aa.subname as name, aa.subnpwp, aa.subnpwp as subpkp, aa.subadd as address, aa.city,'FPJ' as jurnal,
             bb.nodsg, bb.inv, bb.remark, bb.unit, bb.remark as invname, sum(aa.qty) as qty, aa.kmkno,
             aa.klr as invno, aa.fpj as nofp,'' as nofpsederhana, aa.fpjdate, aa.sfpjdate,
             (sum(ifnull(aa.dpp,0))-sum(ifnull(aa.umk,0)))*1.1 as total, sum(ifnull(aa.dpp,0)) as subtotal, (sum(ifnull(aa.dpp,0))-sum(ifnull(aa.umk,0)))*0.1 as ppn, aa.kurs,aa.cur,0 as disc, aa.umk, 0 as pageno,
             (sum(ifnull(aa.dpp,0))-sum(ifnull(aa.umk,0))) as dpp
        from
(select kld.no,sum(qty) as qty,klr.kurs,klr.cur,sub.name as subname,sub.subnpwp,sub.address as subadd,
sub.city,sub.kodeinv,klr.klr,klr.date,klr.duedate,klr.sub,kld.okl,klr.fpj,klr.fpjdate,klr.sfpjdate,
(select ifnull(sum(val),0) from umk where umk.klr=Pjurnal) as UMK,sum(kld.dpp) as dpp,sum(kld.ppn) as ppn, if(klr.cur='USD',khr.no_sk,'') as kmkno
    from sub,kld,klr left join  (select klr,jurnal,remark,sum(val) val from umk group by klr) umk on klr.klr=umk.klr
    left outer join (select no_sk,date from khr where cur='USD' )khr on date(khr.`date`)=date(klr.`date`)
    where klr.klr=trim(Pjurnal) and klr.klr=kld.klr and klr.sub=sub.sub and kld.price<>0
    group by klr.klr,kld.inv ) aa,
(select kll.no,sjd.sjh,kll.klr,kll.okl,sum(sjd.qty1) as qty,sjd.price,sjd.unit,sjd.loc,loc.name as locname,
  inv.unit as invunit,sjd.nodsg, sjd.inv,inv.oldinv,inv.oldinv1,sjd.remark
  from kll,sjd,loc,inv
  where kll.sjh=sjd.sjh and kll.okl=sjd.okl and kll.klr=trim(Pjurnal) and trim(sjd.loc)=trim(loc.loc) and sjd.inv=inv.inv
  group by sjd.nodsg,sjd.inv,sjd.sjh) bb
 where aa.klr=bb.klr and aa.no=bb.no and bb.price<>0
  group by bb.nodsg,bb.inv,bb.price;
end if;
if (Pform='Transaction.FrmTOrderBeli_im') then
  select oms.oms,sub.sub,sub.name,concat(rtrim(sub.address),' -- ',sub.city) as address,concat(sub.person,'/', sub.fax) as salesinfo, oms.cur,
    oms.date,oms.pricebasis,omd.inv,concat(trim(omd.remark),' ' , trim(ifnull(omd.etd,''))) as remark, omd.qty1,omd.unit,omd.price,(omd.disc/100)*(omd.price*omd.qty1) as disc,omd.val as amount,oms.val as subtotal,if(oms.ppn=true,0.1*oms.val,0) as tax, oms.pph as pph, if(oms.ppn=true, 1.1*oms.val,oms.val)-oms.pph as total,
    oms.addnote,oms.payment,oms.packaging,oms.country,oms.portload,oms.shippedby,oms.portdes,oms.partial_,
    oms.tranship,oms.vessel,oms.mark,oms.facilities,oms.shippingdoc,oms.shippingint,if(ifnull(omd.per,0)=0,1,omd.per) per, oms.remark as rem
  from oms,omd,sub
  where oms.oms=omd.oms and oms.oms=PJurnal and oms.sub=sub.sub;
end if;
if (Pform='Transaction.FrmTJin') then
   select jin.jin,jin.date,jin.remark,jid.inv,jid.no,
   jid.remark as namabarang,jid.qty,jid.unit,jid.qty1,concat((jin.loc),' - ',(select name from loc where loc=jin.loc)) as loc,jin.cct
   from jin left outer join jid on jin.jin =jid.jin
  where jin.jin=Pjurnal and jin.`delete`=0;
end if;
if (Pform='Transaction.FrmTOpname') then
   select opn.opn,opn.date,opn.remark,opd.inv,opd.no,
   opd.remark as namabarang,opd.qty,inv.unit,concat((opn.loc),' - ',(select name from loc where loc=opn.loc)) as loc,opn.cct
   from opn left outer join opd on opn.opn =opd.opn left outer join inv on opd.inv=inv.inv
  where opn.opn=Pjurnal and opn.`delete`=0;
end if;
if (Pform='Transaction.FrmTBPPB') then
 select jin.jin,jin.date,jin.remark,jid.inv,jid.no,
   jid.remark as namabarang,jid.qty,jid.unit,jid.qty1,jid.nodsg,concat((jin.loc),' - ',(select name from loc where loc=jin.loc)) as loc,jin.cct
   from jin left outer join jid on jin.jin =jid.jin
  where jin.jin=Pjurnal and jin.`delete`=0;
end if;
if (Pform='Transaction.FrmTBPPBR') then
 select jin.jin,jin.date,jin.remark,jid.inv,jid.no,
   jid.remark as namabarang,jid.qty,jid.unit,jid.qty1,jid.nodsg,concat((jin.loc),' - ',(select name from loc where loc=jin.loc)) as loc,jin.cct,jin.bppb
   from jin left outer join jid on jin.jin =jid.jin
  where jin.jin=Pjurnal and jin.`delete`=0;
end if;
if (Pform='Transaction.FrmTLHP') then
  select lhp.lhp, lhp.date, lhp.loc,loc.name,lhd.no,lhd.mor,lhd.nodsg,concat(lhd.inv,' - ',lhd.remark) as Keterangan, concat(ifnull(lhd.qty1,0),' ',lhd.unit) as qty
    from lhp,loc,lhd
   where lhp.loc=loc.loc and lhd.lhp=lhp.lhp and lhp.lhp=PJurnal;
end if;
if (Pform='Transaction.FrmTMOR') then
select mor.*, dsg.*,concat(inv.inv,'_',inv.name,' ( ',inv.oldinv,'_',inv.oldname,' )') as name , sub.`name`
,okl.nopoc, okd.`dateneed`,ceil((dsg.LKertas-3)/50)*50 as Lkertasa
,concat(kwalitet.kode, ' ', kwalitet.lapis) as kwalitet
,a.warna as namecolor1, b.warna as namecolor2
,c.warna as namecolor3
,d.kwalitet as kw1, d.berat as berat1,d.pjg as pjg1,d.lbr as lbr1,d.tig as tig1,ceil((d.Lkertas-3)/50)*50 as Lkertas1
,d.Pkertas as Pkertas1,d.L1 as L11,d.T as T1,d.L2 as L21,d.P as P1,d.L as L1,d.dikali as dikali1,d.tambah as tambah1
,d.kali as kali1,d.kalip as kalip1,d.jmlbundel as jmlbundel1,d.jmlstich as jmlstich1,d.stich as stich1
,e.kwalitet as kw2, e.berat as berat2,e.pjg as pjg2,e.lbr as lbr2,e.tig as tig2,ceil((e.Lkertas-3)/50)*50 as Lkertas2
,e.Pkertas as Pkertas2,e.L1 as L12,e.T as T2,e.L2 as L22,e.P as P2,e.L as L2,e.dikali as dikali2,e.tambah as tambah2
,e.kali as kali2,e.kalip as kalip2,e.jmlbundel as jmlbundel2,e.jmlstich as jmlstich2,e.stich as stich2
,f.kwalitet as kw3, f.berat as berat3,f.pjg as pjg3,f.lbr as lbr3,f.tig as tig3,ceil((f.Lkertas-3)/50)*50 as Lkertas3
,f.Pkertas as Pkertas3,f.L1 as L13,f.T as T3,f.L2 as L23,f.P as P3,f.L as L3,f.dikali as dikali3,f.tambah as tambah3
,f.kali as kali3,f.kalip as kalip3,f.jmlbundel as jmlbundel3,f.jmlstich as jmlstich3,f.stich as stich3
,g.kwalitet as kw4, g.berat as berat4,g.pjg as pjg4,g.lbr as lbr4,g.tig as tig4,ceil((g.Lkertas-3)/50)*50 as Lkertas4
,g.Pkertas as Pkertas4,g.L1 as L14,g.T as T4,g.L2 as L24,g.P as P4,g.L as L4,g.dikali as dikali4,g.tambah as tambah4
,g.kali as kali4,g.kalip as kalip4,g.jmlbundel as jmlbundel4,g.jmlstich as jmlstich4,g.stich as stich4
from mor,dsg,inv,sub,okl,okd,kwalitet,
(select dsg.`nodsg`,inv.name as warna from dsg left join inv on dsg.`color1`=inv.inv) as a,
(select dsg.`nodsg`,inv.name as warna from dsg left join inv on dsg.`color2`=inv.inv) as b,
(select dsg.`nodsg`,inv.name as warna from dsg left join inv on dsg.`color3`=inv.inv) as c,
(select dsg.`nodsg`, concat(kwalitet.kode,' ',kwalitet.lapis) as kwalitet,kwalitet.berat,tempdsg.pjg,tempdsg.lbr,tempdsg.tig,tempdsg.Lkertas,
        tempdsg.Pkertas,tempdsg.L1,tempdsg.T,tempdsg.L2,tempdsg.P,tempdsg.L,tempdsg.dikali,tempdsg.tambah,
        tempdsg.kali,tempdsg.kalip,tempdsg.jmlbundel,tempdsg.jmlstich,tempdsg.stich
   from dsg left join tempdsg on dsg.partisi1=tempdsg.nodsg
            left join kwalitet on tempdsg.kwalitet=kwalitet.no) as d,
(select dsg.`nodsg`,concat(kwalitet.kode,' ',kwalitet.lapis) as kwalitet,kwalitet.berat,tempdsg.pjg,tempdsg.lbr,tempdsg.tig,tempdsg.Lkertas,
        tempdsg.Pkertas,tempdsg.L1,tempdsg.T,tempdsg.L2,tempdsg.P,tempdsg.L,tempdsg.dikali,tempdsg.tambah,
        tempdsg.kali,tempdsg.kalip,tempdsg.jmlbundel,tempdsg.jmlstich,tempdsg.stich
   from dsg left join dsg as tempdsg on dsg.partisi2=tempdsg.nodsg
            left join kwalitet on tempdsg.kwalitet=kwalitet.no) as e,
(select dsg.`nodsg`,concat(kwalitet.kode,' ',kwalitet.lapis) as kwalitet,kwalitet.berat,tempdsg.pjg,tempdsg.lbr,tempdsg.tig,tempdsg.Lkertas,
        tempdsg.Pkertas,tempdsg.L1,tempdsg.T,tempdsg.L2,tempdsg.P,tempdsg.L,tempdsg.dikali,tempdsg.tambah,
        tempdsg.kali,tempdsg.kalip,tempdsg.jmlbundel,tempdsg.jmlstich,tempdsg.stich
   from dsg left join dsg as tempdsg on dsg.partisi3=tempdsg.nodsg
            left join kwalitet on tempdsg.kwalitet=kwalitet.no) as f,
(select dsg.`nodsg`,concat(kwalitet.kode,' ',kwalitet.lapis) as kwalitet,kwalitet.berat,tempdsg.pjg,tempdsg.lbr,tempdsg.tig,tempdsg.Lkertas,
        tempdsg.Pkertas,tempdsg.L1,tempdsg.T,tempdsg.L2,tempdsg.P,tempdsg.L,tempdsg.dikali,tempdsg.tambah,
        tempdsg.kali,tempdsg.kalip,tempdsg.jmlbundel,tempdsg.jmlstich,tempdsg.stich
   from dsg left join dsg as tempdsg on dsg.partisi4=tempdsg.nodsg
            left join kwalitet on tempdsg.kwalitet=kwalitet.no) as g
where mor.`nodsg`=dsg.`nodsg` and dsg.`inv` = inv.`inv` and mor.`okl`=okl.`okl`
and okl.`sub`=sub.`sub` and okd.`okl`=okl.`okl` and okd.`nodsg` = mor.`nodsg`
and a.nodsg=dsg.`nodsg` and b.nodsg=dsg.`nodsg` and c.nodsg=dsg.`nodsg`
and d.nodsg=mor.nodsg and e.nodsg=mor.nodsg and f.nodsg=mor.nodsg and g.nodsg=mor.nodsg
and mor.mor=PJurnal and mor.`delete`=0 and dsg.kwalitet=kwalitet.no;
end if;
if (Pform='Transaction.FrmTMOP') then
select mor.*, dsg.*,concat(inv.inv,'_',inv.name,' ( ',inv.oldinv,'_',inv.oldname,' )') as name , '' as name
,'' as nopoc, '' as dateneed,ceil((dsg.LKertas-3)/50)*50 as Lkertasa
,concat(kwalitet.kode, ' ', kwalitet.lapis) as kwalitet
,a.warna as namecolor1, b.warna as namecolor2
,c.warna as namecolor3
,d.kwalitet as kw1, d.berat as berat1,d.pjg as pjg1,d.lbr as lbr1,d.tig as tig1,ceil((d.Lkertas-3)/50)*50 as Lkertas1
,d.Pkertas as Pkertas1,d.L1 as L11,d.T as T1,d.L2 as L21,d.P as P1,d.L as L1,d.dikali as dikali1,d.tambah as tambah1
,d.kali as kali1,d.kalip as kalip1,d.jmlbundel as jmlbundel1,d.jmlstich as jmlstich1,d.stich as stich1
,e.kwalitet as kw2, e.berat as berat2,e.pjg as pjg2,e.lbr as lbr2,e.tig as tig2,ceil((e.Lkertas-3)/50)*50 as Lkertas2
,e.Pkertas as Pkertas2,e.L1 as L12,e.T as T2,e.L2 as L22,e.P as P2,e.L as L2,e.dikali as dikali2,e.tambah as tambah2
,e.kali as kali2,e.kalip as kalip2,e.jmlbundel as jmlbundel2,e.jmlstich as jmlstich2,e.stich as stich2
,f.kwalitet as kw3, f.berat as berat3,f.pjg as pjg3,f.lbr as lbr3,f.tig as tig3,ceil((f.Lkertas-3)/50)*50 as Lkertas3
,f.Pkertas as Pkertas3,f.L1 as L13,f.T as T3,f.L2 as L23,f.P as P3,f.L as L3,f.dikali as dikali3,f.tambah as tambah3
,f.kali as kali3,f.kalip as kalip3,f.jmlbundel as jmlbundel3,f.jmlstich as jmlstich3,f.stich as stich3
,g.kwalitet as kw4, g.berat as berat4,g.pjg as pjg4,g.lbr as lbr4,g.tig as tig4,ceil((g.Lkertas-3)/50)*50 as Lkertas4
,g.Pkertas as Pkertas4,g.L1 as L14,g.T as T4,g.L2 as L24,g.P as P4,g.L as L4,g.dikali as dikali4,g.tambah as tambah4
,g.kali as kali4,g.kalip as kalip4,g.jmlbundel as jmlbundel4,g.jmlstich as jmlstich4,g.stich as stich4
from mor,dsg,inv,kwalitet,
(select dsg.`nodsg`,inv.name as warna from dsg left join inv on dsg.`color1`=inv.inv) as a,
(select dsg.`nodsg`,inv.name as warna from dsg left join inv on dsg.`color2`=inv.inv) as b,
(select dsg.`nodsg`,inv.name as warna from dsg left join inv on dsg.`color3`=inv.inv) as c,
(select dsg.`nodsg`, concat(kwalitet.kode,' ',kwalitet.lapis) as kwalitet,kwalitet.berat,tempdsg.pjg,tempdsg.lbr,tempdsg.tig,tempdsg.Lkertas,
        tempdsg.Pkertas,tempdsg.L1,tempdsg.T,tempdsg.L2,tempdsg.P,tempdsg.L,tempdsg.dikali,tempdsg.tambah,
        tempdsg.kali,tempdsg.kalip,tempdsg.jmlbundel,tempdsg.jmlstich,tempdsg.stich
   from dsg left join tempdsg on dsg.partisi1=tempdsg.nodsg
            left join kwalitet on tempdsg.kwalitet=kwalitet.no) as d,
(select dsg.`nodsg`,concat(kwalitet.kode,' ',kwalitet.lapis) as kwalitet,kwalitet.berat,tempdsg.pjg,tempdsg.lbr,tempdsg.tig,tempdsg.Lkertas,
        tempdsg.Pkertas,tempdsg.L1,tempdsg.T,tempdsg.L2,tempdsg.P,tempdsg.L,tempdsg.dikali,tempdsg.tambah,
        tempdsg.kali,tempdsg.kalip,tempdsg.jmlbundel,tempdsg.jmlstich,tempdsg.stich
   from dsg left join dsg as tempdsg on dsg.partisi2=tempdsg.nodsg
            left join kwalitet on tempdsg.kwalitet=kwalitet.no) as e,
(select dsg.`nodsg`,concat(kwalitet.kode,' ',kwalitet.lapis) as kwalitet,kwalitet.berat,tempdsg.pjg,tempdsg.lbr,tempdsg.tig,tempdsg.Lkertas,
        tempdsg.Pkertas,tempdsg.L1,tempdsg.T,tempdsg.L2,tempdsg.P,tempdsg.L,tempdsg.dikali,tempdsg.tambah,
        tempdsg.kali,tempdsg.kalip,tempdsg.jmlbundel,tempdsg.jmlstich,tempdsg.stich
   from dsg left join dsg as tempdsg on dsg.partisi3=tempdsg.nodsg
            left join kwalitet on tempdsg.kwalitet=kwalitet.no) as f,
(select dsg.`nodsg`,concat(kwalitet.kode,' ',kwalitet.lapis) as kwalitet,kwalitet.berat,tempdsg.pjg,tempdsg.lbr,tempdsg.tig,tempdsg.Lkertas,
        tempdsg.Pkertas,tempdsg.L1,tempdsg.T,tempdsg.L2,tempdsg.P,tempdsg.L,tempdsg.dikali,tempdsg.tambah,
        tempdsg.kali,tempdsg.kalip,tempdsg.jmlbundel,tempdsg.jmlstich,tempdsg.stich
   from dsg left join dsg as tempdsg on dsg.partisi4=tempdsg.nodsg
            left join kwalitet on tempdsg.kwalitet=kwalitet.no) as g
where mor.`nodsg`=dsg.`nodsg` and dsg.`inv` = inv.`inv`
and a.nodsg=dsg.`nodsg` and b.nodsg=dsg.`nodsg` and c.nodsg=dsg.`nodsg`
and d.nodsg=mor.nodsg and e.nodsg=mor.nodsg and f.nodsg=mor.nodsg and g.nodsg=mor.nodsg
and mor.mor=PJurnal and mor.`delete`=0 and dsg.kwalitet=kwalitet.no;
end if;
if (PForm='Transaction.FrmTSJJual') then
  OPEN cur_order;
    WHILE Done=0 DO
      set mor_okl='';
      FETCH cur_order INTO mor_okl;
      if (mor_okl <> '') then
        set noOrder = concat(noOrder,if(noOrder<>'',",",""),mor_okl);
      end if;
    END WHILE;
  CLOSE cur_order;
  set Done=0;
  OPEN cur_nopoc;
    WHILE Done=0 DO
      set nopoc='';
      FETCH cur_nopoc INTO nopoc;
      if (nopoc <> '') then
        set noPOCust = concat(noPOCust,if(noPOCust<>'',",",""),nopoc);
      end if;
    END WHILE;
  CLOSE cur_nopoc;
  select sjh.sjh,sjh.sub, noOrder, noPOCust, sjh.date as tanggal, sjh.duedate as jatuhtempo, sjh.spm, sjh.nopol,
         sjh.shiptoname, sjh.shiptoaddress, sjd.nodsg, sjd.inv, sjd.remark, sum(sjd.qty1) as qty1,
         sjd.unit, sjd.nopoc, sub.name as subname, sub.address, sub.city, sub.top
    from sjh left join sjd on sjd.sjh=sjh.sjh
             left join sub on sub.sub=sjh.sub
   where sjh.sjh=Pjurnal and sjh.`delete`=0
   group by nodsg, inv, unit;
end if;
if (Pform='Transaction.FrmTTrm') then
select trm.trm,trm.date,trm.remark,trd.inv,trd.no,
   trd.remark as namabarang,trd.qty,trd.unit,trd.qty1,concat((trm.lock),' - ',(select name from loc where loc=trm.lock)) as `lock`,
   concat((trm.locd),' - ',(select name from loc where loc=trm.locd)) as locd,trd.nodsg
   from trm left outer join trd on trm.trm = trd.trm
  where trm.trm=Pjurnal and trm.`delete`=0;
END if;
if (Pform='giro') then
select kag.kas,kag.nobg,kag.bank,kag.acbank,kag.duedate,kag.val as val,kag.no,kag.group_,kag.acc,kag.accbank,kas.date as date,
left(kas.remark,45) as rem,kas.sub,sub.name,if(kag.gironame='',sub.gironame,ifnull(kag.gironame,sub.gironame)) as gironame,casto,left(ifnull(kag.gironame,sub.gironame),18) as gironame1,substr(ifnull(kag.gironame,sub.gironame),19,35) as gironame2,
concat(trim(ifnull(kag.gironame,sub.gironame)),' ',ifnull(kag.bank,''),' ',ifnull(kag.acbank,'')) as sub_rek
from kag inner join kas on kag.kas=kas.kas left outer join sub on sub.sub=kas.sub where kag.kas=Pjurnal;
end if;
if (Pform='Transaction.FrmTOrderjual') then
select okl.okl,rtrim(okl.nopoc) as nopoc,okl.date,okl.duedate,datediff(okl.duedate,okl.date) as TOP,okl.kurs,okl.cur,
okl.ppn,okl.sub,sub.name,trim(sub.address) as address,sub.subnpwp,okl.remark as keterangan,okd.dateneed,okd.price,okd.packaging,
okd.disc,okd.val,if(okl.ppn=1,okd.val*0.1,0) as valppn,okd.val+if(okl.ppn=1,okd.val*0.1,0) as total,
okd.qty,(select unit from inv where inv=okd.inv) as unitkecil,
okd.inv,okd.remark,okd.qty1,okd.unit,okl.shiptoname,okl.shiptoaddress,
okl.penyerahan,okl.syaratpenyerahan,okl.syaratpembayaran,okl.bayarkepada,asal,tujuan,spec as spect,ketlain
 from okl,okd,sub where okl.okl=okd.okl and okl.sub=sub.sub and okl.okl=Pjurnal;
end if;
if (Pform='Transaction.FrmTOrderjualex') then
select okl.okl,rtrim(okl.nopoc) as nopoc,okl.date,okl.duedate,datediff(okl.duedate,okl.date) as TOP,okl.kurs,okl.cur,
okl.ppn,okl.sub,sub.name,trim(sub.address) as address,sub.subnpwp,okl.remark as keterangan,okd.dateneed,okd.price,
okd.disc,okd.val,if(okl.ppn=1,okd.val*0.1,0) as valppn,okd.val+if(okl.ppn=1,okd.val*0.1,0) as total,
okd.qty,(select unit from inv where inv=okd.inv) as unitkecil,
okd.inv,okd.remark,okd.qty1,okd.unit,okl.shiptoname,okl.shiptoaddress,
okl.penyerahan,okl.syaratpenyerahan,okl.syaratpembayaran,okl.bayarkepada,asal,tujuan,spec as spect,ketlain
 from okl,okd,sub where okl.okl=okd.okl and okl.sub=sub.sub and okl.okl=Pjurnal;
end if;
if (Pform='Transaction.FrmTKwitansi') then
 set Done=0;
  OPEN cur_nopockwt;
    WHILE Done=0 DO
      set nopoc='';
      FETCH cur_nopockwt INTO nopoc;
      if (nopoc <> '') then
        set noPOCust = concat(noPOCust,if(noPOCust<>'',",",""),nopoc);
      end if;
    END WHILE;
  CLOSE cur_nopockwt;
 select kwt.kwt,kwt.date,kwt.remark,kwt.period,kwt.fpjdate,sub.name, concat(sub.address,' ,',sub.city) as address,ifnull(klr.kurs,0) kurs,klr.cur,
  concat ('No PO Customer: ',(select okl.nopoc from okl where okl=(select okl from kld where kld.klr=klr.klr limit 1) limit 1)) as nopoc
  from kwt, sub,kwd,klr
  where kwt.sub=sub.sub and kwt.kwt=kwd.kwt and kwd.jurnal=klr.klr and kwt.kwt=Pjurnal limit 1
union all
 select kwt.kwt,kwt.date,kwt.remark,kwt.period,kwt.fpjdate,sub.name, concat(sub.address,' ,',sub.city) as address,fpjumk.kurs,fpjumk.cur,
 concat ('No PO Customer: ',ifnull(noPOCust,'')) as nopoc
 
  from kwt, sub,kwd,fpjumk
  where kwt.sub=sub.sub and kwt.kwt=kwd.kwt and kwd.fpj=fpjumk.nofpj and kwt.kwt=Pjurnal limit 1;
end if;
if (Pform='Transaction.FrmTRkl') then
   select rkl.rkl,rkl.sub,rkl.date,rkl.remark,rkl.cur,rkl.kurs,rkd.invo,rkd.nofp,sum(rkb.qty) qty,max(rkb.remark) as invname,rkd.dpp/rkb.qty as price,sum(rkd.dpp) dpp,sum(rkd.ppn) ppn1,sum(rkd.val) as val,sub.name,
   sub.address,sub.subnpwp,(select sum(ppn) from rkd where rkl=Pjurnal) as ppn
  from rkd left outer join rkl on rkd.rkl=rkl.rkl left outer join rll on rkd.no=rll.no and rll.rkl=rkd.rkl and rll.inv=rkd.inv
  left outer join rkb on rkb.rka=rll.rka and rkb.inv=rll.inv left outer join sub on rkl.sub=sub.sub where rkd.rkl =Pjurnal and rkl.`delete`=0
   group by rkd.nofp,rkd.rkl,rkb.inv,rkb.remark,round(rkd.dpp/rkb.qty,2);
end if;
if (Pform='Transaction.FrmTRms') then
   select rms.rms,rms.date,rms.sub,sub.name,if(rms.kurs>1,rmd.price,0) as valas,
   if(rms.kurs>1,rmd.price*rms.kurs,rmd.price) as price,if(rms.kurs>1,rmd.price*rms.kurs,rmd.price)*rmd.qty1 as subtotal,
   if(rms.ppn=0,0,if(rms.kurs>1,rmd.price*rms.kurs,rmd.price)*rmd.qty1*0.1) as ppn, sub.address,sub.subpkp,sub.city,if(rms.kurs>1,rmd.price,0)*rmd.qty1 as totvalas,
   sub.subnpwp,rms.remark,rmd.inv,rmd.no,rms.fpj,rms.fpjdate,if(rms.kurs>1,rms.cur,'') as cur,rms.kurs,
   concat(rmd.remark) as namabarang ,rmd.no as nomor,rmd.qty,rmd.unit,rmd.qty1,rmd.qty
   from rms left outer join rmd on rms.rms =rmd.rms left outer join sub on rms.sub=sub.sub
  where rms.rms=Pjurnal and rms.`delete`=0;
end if;
if (Pform='Transaction.FrmTProformaex') then
   SELECT x.*,@num := @num + 1 AS `no`
FROM
(
select pnv.date,pnv.noinv,sub.name,sub.address,pnv.validity,pnv.loaddate,pnd.kode,pnd.remark,'' AS size,pnd.qty,pnd.unit as unit1,pnd.net,pnd.`process`,pnd.packaging,pnd.val,pnv.cscharge,pnv.freight,pnv.payment,if(pnv.aprov=1,pnd.val*0.1,1) as ppn,inv.unit as unitdsr,i.name AS namaglobal,CONCAT(sub.city,', ',sub.country) AS tujuan1,RIGHT(pnv.bank,12) AS `no acc`,pnv.bank,inv.unit as unit
from pnv
   left outer join pnd on pnv.pnv=pnd.pnv 
	left outer join sub on pnv.sub=sub.sub 
	left outer join inv on pnd.inv = inv.inv
	LEFT OUTER JOIN okl ON pnv.okl=okl.okl
	LEFT OUTER JOIN inv AS i ON okl.kodeglobal = i.inv
  WHERE pnv.pnv=Pjurnal and pnv.`delete`=0
  order by pnd.kode,pnd.inv
) x left outer JOIN (SELECT @num :=0) AS n ON 1=1;
end if;
if (Pform='Transaction.FrmTProforma') then
   SELECT *, if(pnv.aprov=1,packaging*0.1,1) AS ppnfeepack, if(pnv.aprov=1,packaging*0.1+packaging,1) AS Totalfeepack, if(pnv.aprov=1,val*0.1,1) as ppn,inv.unit as unitdsr ,pnd.remark as namaglobal, pnd.packaging/pnd.net AS pricejasa,pnd.packaging+pnd.ppnpackaging AS totaljasa
	from pnv
   left outer join pnd on pnv.pnv=pnd.pnv 
	left outer join sub on pnv.sub=sub.sub 
	left outer join inv on pnd.inv = inv.inv
  where pnv.pnv=Pjurnal and pnv.`delete`=0;
end if;
if (Pform='Transaction.FrmTShippInt') then
 select shp.*,shd.*, sub1.name as name,sub1.address as address,sub1.city as city,sub1.country as country,sub2.person ,sub2.fax, sub2.phone,
       sub2.name as emklname,sub2.address as emkladdress,sub2.city as emklcity, sub2.country as emklcountry,subto.shiptoaddress,subto.city city1,subto.country country1
       
 from (select * from shp where shp.shp=Pjurnal) as shp
   left outer join shd on shp.shp=shd.shp left outer join sub sub1 on shp.sub=sub1.sub
   left outer join sub sub2 on shp.emkl=sub2.sub left outer join subto on subto.aliasname=shp.`to`;
end if;
if (Pform='Transaction.FrmTKlrImport') then
    SELECT *, klrid.packaging/klrid.netweight AS pricejasa, klrid.packaging+klrid.ppnpackaging AS totaljasa from klri,klrid where klri.klri=klrid.klri and klri.klri=Pjurnal;
end if;
if (Pform='Transaction.FrmTMemo') then
  select nomor.nomor,jsu.* from nomor left outer join
  (select  @rownum := @rownum + 1 AS nomor,jsu.jsu,jsu.date,jsu.sub,sub.name,sub.subnpwp,concat(sub.address,' - ', sub.city) address,jsu.acclawan1,concat(jsu.acc,' ',acc.name) acc,jsu.kurs,jsu.cur,
  jsd.dk,jsd.val valjsd,jsd.remark from jsu,jsd,sub,acc,(SELECT @rownum := 0) r
  where jsu.jsu=jsd.jsu and jsu.sub=sub.sub and jsu.acc=acc.acc and jsu.jsu=Pjurnal) as jsu on nomor.nomor=jsu.nomor where nomor.nomor<=5;
end if ;
if (Pform='transfer') then
  select ifnull(kag.nobg,'   ') as nobg,kas.kas,kag.val,ifnull(kas.valrp,0) as biaya,kag.val+ifnull(kas.valrp,0) as totalval,cast(substr(trim(F_getnumber(nobg)),1,1) as char(8)) A1,cast(substr(trim(F_getnumber(nobg)),2,1) as char(8)) A2,cast(substr(trim(F_getnumber(nobg)),3,1) as char(8)) A3
 ,cast(substr(trim(F_getnumber(nobg)),4,1)as char(8))  A4,cast(substr(trim(F_getnumber(nobg)),5,1)as char(8)) A5,cast(substr(trim(F_getnumber(nobg)),6,1)as char(8)) A6,cast(substr(trim(F_getnumber(nobg)),7,1)as char(8)) A7,cast(substr(trim(F_getnumber(nobg)),8,1)as char(8)) A8,
 kas.cur,sub.city,kas.kurs,accbank.bank as bankname,accbank.no_rek ,kas.date as date,kas.date as duedate,kas.remark as rem,kas.sub,sub.name subname,sub.gironame name,casto,left(sub.gironame,25) as gironame1,substr(sub.gironame,26,15) as gironame2,
 sub.norek,sub.bankname banksub,sub.addressbank,sub.citybank,concat(kas.period,'-',right(kas.kas,4)) as nokas,
 substr(norek,1,1) B1,substr(norek,2,1) B2,substr(norek,3,1) B3,substr(norek,4,1) B4,substr(norek,5,1) B5,substr(norek,6,1) B6,substr(norek,7,1) B7,substr(norek,8,1) B8,substr(norek,9,1) B9,substr(norek,10,1) B10,
 substr(norek,11,1) B11,substr(norek,12,1) B12,substr(norek,13,1) B13,substr(norek,14,1) B14,substr(norek,15,1) B15,substr(norek,16,1) B16,substr(norek,17,1) B17,substr(norek,18,1) B18,substr(norek,19,1) B19,substr(norek,20,1) B20,
substr(no_rek,1,1) C1,substr(no_rek,2,1) C2,substr(no_rek,3,1) C3,substr(no_rek,4,1) C4,substr(no_rek,5,1) C5,substr(no_rek,6,1) C6,substr(no_rek,7,1) C7,substr(no_rek,8,1) C8,substr(no_rek,9,1) C9,substr(no_rek,10,1) C10,
 substr(no_rek,11,1) C11,substr(no_rek,12,1) C12,substr(no_rek,13,1) C13,substr(no_rek,14,1) C14,substr(no_rek,15,1) C15,
 if(kas.cur='IDR','IDR','') idr, if(kas.cur<>'IDR','IDR','') notidr,if(kas.cur='IDR',kas.val,0) validr, if(kas.cur<>'IDR',kas.val,0) valnotidr
 from kag right join kas on kag.kas=kas.kas left outer join accbank on kas.acc=accbank.acc
 left outer join sub on sub.sub=kas.sub where kas.kas=Pjurnal;
end if;
if (Pform='transfertiti') then
  select ifnull(kag.nobg,'   ') as nobg,kas.tcsi,kas.kas,if(kas.val=0,kag.val,kas.val) as val,ifnull(kas.valrp,0)+ if(tcsi=1,(ifnull(kas.valus,0)+ifnull(kas.valpro,0))*(select kurs from kad where kad.kas=kas.kas limit 1),0) as biaya,if(tcsi=0 and kas.kurs>1,0,if(kas.val=0,kag.val,kas.val)+(ifnull(kas.valus,0)+ifnull(kas.valpro,0))*if(kas.tcsi=1,(select kurs from kad where kad.kas=kas.kas limit 1),kas.kurs))+ifnull(kas.valrp,0) as totalval,
  cast(substr(trim(F_getnumber(nobg)),1,1) as char(8)) A1,cast(substr(trim(F_getnumber(nobg)),2,1) as char(8)) A2,cast(substr(trim(F_getnumber(nobg)),3,1) as char(8)) A3
 ,cast(substr(trim(F_getnumber(nobg)),4,1)as char(8))  A4,cast(substr(trim(F_getnumber(nobg)),5,1)as char(8)) A5,cast(substr(trim(F_getnumber(nobg)),6,1)as char(8)) A6,cast(substr(trim(F_getnumber(nobg)),7,1)as char(8)) A7,cast(substr(trim(F_getnumber(nobg)),8,1)as char(8)) A8,
 if(kas.tcsi=1,'USD',kas.cur) as cur,sub.city,if(kas.tcsi=1,(select kurs from kad where kad.kas=kas.kas limit 1),kas.kurs) as kurs,accbank.bank as bankname,accbank.no_rek ,kas.date as date,kas.date as duedate,kas.remark as rem,kas.sub,sub.name subname,sub.gironame name,casto,left(sub.gironame,25) as gironame1,substr(sub.gironame,26,15) as gironame2,
 sub.norek,sub.bankname banksub,sub.addressbank,sub.citybank,concat(kas.period,'-',right(kas.kas,4)) as nokas,
 substr(norek,1,1) B1,substr(norek,2,1) B2,substr(norek,3,1) B3,substr(norek,4,1) B4,substr(norek,5,1) B5,substr(norek,6,1) B6,substr(norek,7,1) B7,substr(norek,8,1) B8,substr(norek,9,1) B9,substr(norek,10,1) B10,
 substr(norek,11,1) B11,substr(norek,12,1) B12,substr(norek,13,1) B13,substr(norek,14,1) B14,substr(norek,15,1) B15,substr(norek,16,1) B16,substr(norek,17,1) B17,substr(norek,18,1) B18,substr(norek,19,1) B19,substr(norek,20,1) B20,
substr(no_rek,1,1) C1,substr(no_rek,2,1) C2,substr(no_rek,3,1) C3,substr(no_rek,4,1) C4,substr(no_rek,5,1) C5,substr(no_rek,6,1) C6,substr(no_rek,7,1) C7,substr(no_rek,8,1) C8,substr(no_rek,9,1) C9,substr(no_rek,10,1) C10,
 substr(no_rek,11,1) C11,substr(no_rek,12,1) C12,substr(no_rek,13,1) C13,substr(no_rek,14,1) C14,substr(no_rek,15,1) C15,
 if(kas.cur='IDR','IDR','') idr, if(kas.cur<>'IDR','IDR','') notidr,if(kas.cur='IDR',if(kas.val=0,kag.val,kas.val),if(tcsi=1,if(kas.val=0,kag.val,kas.val)*kas.kurs,0)) validr,
 if(kas.cur<>'IDR',kag.val,(if(kas.tcsi=1,(select ifnull(kad.val,0) from kad where kad.kas=kas.kas limit 1),0))) valnotidr,
 ifnull(kas.valpro,0) valpro,ifnull(kas.valus,0) as valus, if(kas.kurs>1,(ifnull(kas.valpro,0)+ifnull(kas.valus,0)+if(kas.val=0,kag.val,kas.val)),0) as totalus
 from kag right join kas on kag.kas=kas.kas left outer join accbank on kas.acc=accbank.acc
 left outer join sub on sub.sub=kas.sub where kas.kas=Pjurnal;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_PrintFPJ
DROP PROCEDURE IF EXISTS `SP_PrintFPJ`;
DELIMITER //
CREATE PROCEDURE `SP_PrintFPJ`(Pform varchar(50), Pjurnal varchar(20))
BEGIN
if (Pform='fpj') then
      select fpjumk.sub,fpganti jenis,sub.name as name, sub.subnpwp, sub.subnpwp as subpkp, sub.address as address, sub.city as city,left(Pjurnal,3) As jurnal,
             '' as nodsg,'' as inv, '' as remark, '' as unit,if(fpjumk.remark='', concat('UM ',fpjumd.oms,' ' ,fpjumd.remark,' ',okl.nopoc),fpjumk.remark) as invname, 0 as qty,concat('PO: ',okl.nopoc) as nopo, if(fpjumk.cur='USD',fpjumk.no_sk,'') as kmkno,
             '' as invno, fpjumk.nofpj as nofp, '' as nofpsederhana, fpjdate, 20091010 as sfpjdate,
             fpjumd.val+fpjumd.val*0.1 as total, fpjumd.val as subtotal, round((fpjumd.val*0.1)+ 0.00001) as ppn, fpjumk.kurs as kurs,fpjumk.cur, 0 as disc, 0 as umk, 1 as pageno,
             fpjumd.val as dpp,concat('PO : ',okl.nopoc) as oms1,fpjumd.remark as remark1,fpjumd.val as val1
      from (select fpjumk.*,khr.no_sk from fpjumk left outer join khr on date(fpjumk.`date`)= date(khr.`date`) and fpjumk.cur=khr.cur) fpjumk  ,sub,fpjumd,okl
     where fpjumk.sub=sub.sub and fpjumk.fpjumk = Pjurnal and fpjumk.fpjumk=fpjumd.fpjumk and fpjumd.oms=okl.okl
     ;
end if;
if (Pform='ganti') then
      select fpjumk.sub,fpganti jenis,sub.name as name, sub.subnpwp, sub.subnpwp as subpkp, sub.address as address, sub.city as city,
             '' as nodsg,'' as inv, '' as unit, fpjumd.remark as invname, 0 as qty,''as nopo,if(fpjumk.cur='USD',khr.no_sk,'') as kmkno,
             '' as invno, fpjumk.nofpj as nofp, '' as nofpsederhana, fpjdate, 20091010 as sfpjdate,
             fpjumd.val+fpjumd.val*0.1 as total, fpjumd.val as subtotal, fpjumd.val*0.1 as ppn, fpjumk.kurs as kurs,fpjumk.cur, 0 as disc, 0 as umk, 1 as pageno,
             umk as dpp,''as oms1,'Atas Faktur Pajak Nomor.'+fpjumk.remark as remark,fpjumd.val as val1
      from (select fpjumk.*,khr.no_sk from fpjumk left outer join khr on date(fpjumk.`date`)= date(khr.`date`) and fpjumk.cur=khr.cur) fpjumk ,sub,fpjumd,khr
     where fpjumk.sub=sub.sub and fpjumk.fpjumk = Pjurnal and fpjumk.fpjumk=fpjumd.fpjumk   ;
end if;
if (Pform='standart') then
      select fpjumk.sub,fpganti jenis,sub.name as name, sub.subnpwp, sub.subnpwp as subpkp, sub.address as address, sub.city as city,
             '' as nodsg,'' as inv, '' as unit, fpjumd.remark as invname, 0 as qty,''as nopo,if(fpjumk.cur='USD',fpjumk.no_sk,'') as kmkno,
             '' as invno, fpjumk.nofpj as nofp, '' as nofpsederhana, fpjdate, 20091010 as sfpjdate,
             fpjumd.val+fpjumd.val*0.1 as total, fpjumd.val as subtotal, fpjumd.val*0.1 as ppn, fpjumk.kurs as kurs,fpjumk.cur, 0 as disc, 0 as umk, 1 as pageno,
             fpjumd.val as dpp,''as oms1,fpjumk.remark as remark,fpjumd.val as val1
      from (select fpjumk.*,khr.no_sk from fpjumk left outer join khr on date(fpjumk.`date`)= date(khr.`date`) and fpjumk.cur=khr.cur ) fpjumk,sub,fpjumd
     where fpjumk.sub=sub.sub and fpjumk.fpjumk = Pjurnal and fpjumk.fpjumk=fpjumd.fpjumk;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_PrintHarga
DROP PROCEDURE IF EXISTS `SP_PrintHarga`;
DELIMITER //
CREATE PROCEDURE `SP_PrintHarga`(PType int, Pkode varchar(8))
BEGIN
  
  if (PType = 0) then
    select distinct (concat(k.kode, ' ', k.lapis)) as kwalitet, k.berat, hg.hrgm2, hg.hrgkg, grp.nama as namagrp
      from kwalitet k, dhrggroup hg, hrgdasar d, grphrgdasar grp
     where k.no=hg.kwalitet and hg.kode=d.kode
       and d.kode=Pkode and d.grp=grp.kode;
  
  elseif (PType = 1) then
    select dsg.nodsg, inv.name,
           concat(cast(dsg.pjg as char),'x',cast(dsg.lbr as char),'x',cast(dsg.tig as char),'mm') as ukuran,
           concat(kwalitet.kode,' ',kwalitet.lapis) as kwalitet,
           dhrgdsg.harga, hrgdasar.nosurat, grphrgdasar.nama as namagrp, dsg.grppt,
           sub.name as ptname, sub.person, sub.address, sub.city
      from dhrgdsg, dsg, inv, kwalitet, hrgdasar, grphrgdasar, sub
     where dhrgdsg.kode=hrgdasar.kode and dhrgdsg.nodsg=dsg.nodsg
       and dsg.kwalitet = kwalitet.no and dsg.inv = inv.inv
       and hrgdasar.kode=Pkode and hrgdasar.grp=grphrgdasar.kode
       and dsg.grppt=sub.sub and dsg.aktif=true
     order by inv.name;
  end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_PrintInvoice
DROP PROCEDURE IF EXISTS `SP_PrintInvoice`;
DELIMITER //
CREATE PROCEDURE `SP_PrintInvoice`(
	IN `Pform` varchar(50),
	IN `Pjurnal` varchar(15)
)
BEGIN
DECLARE Done INT DEFAULT 0;
DECLARE noOrder longtext default '';
DECLARE noPOCust longtext default '';
DECLARE lpb varchar(15);
DECLARE nopoc varchar(15);
DECLARE cur_order CURSOR FOR
  select distinct right(lph,4) as noOrder
    from msl where msk=Pjurnal;
DECLARE cur_nopoc CURSOR FOR
  select distinct right(oms,4) as noPOCust
    from msl where msk = Pjurnal;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET Done=1;
if (Pform='Transaction.FrmTspb') then
    select 'SURAT PERINTAH BONGKAR' as header1, spb.spb as header2,
    spb.date as headertanggal,
    'Supplier :' as subheader1a, sub.name as subheader1b, sub.address as subheader1c,
    'Bongkar di :' as subheader2a, spbd.loc as subheader2b, loc.name as subheader2c,
    '' as subheader3a, '' as subheader3b, '' as subheader3c,
    '' as tableheader1a, 'No. PO' as tableheader1b, 'No. SJ' as tableheader1c,
    '' as isitable1a, spb.oms as isitable1b, spb.nosj as isitable1c, '-' as isitable1d, '-' as isitable1e, spb.nopol as isitable1f,
    concat(ifnull(spbd.qty1,0),' ',spbd.unit) as isitable2b, spbd.inv as isitable2c, '' as isitable2d1 ,spbd.remark as isitable2d2, '-' as isitable2e, '-' as isitable2f,
    '-' as summary, 'UM' as UMLabel, 0 as UM, 'DPP' as DPPLabel, 0 as DPP, 'PPN' as PPNlabel, 0 as PPN, 0 as Total,
    'Ekspedisi' as footer1a, 'Gudang' as footer1b
   from loc,spb left outer join spbd on spb.spb =spbd.spb left outer join sub on spb.sub=sub.sub
   where spb.spb=PJurnal and spb.`delete`=0 and loc.loc=spbd.loc;
end if;
if (Pform='Transaction.FrmTspbRetur') then
    select 'SPB RETUR PENJUALAN' as header1, spr.spr as header2,
    spr.date as headertanggal,
    'Customer :' as subheader1a, sub.name as subheader1b, sub.address as subheader1c,
    'Bongkar di :' as subheader2a, sprd.loc as subheader2b, loc.name as subheader2c,
    '' as subheader3a, '' as subheader3b, '' as subheader3c,
    '' as tableheader1a, 'No. SO RET' as tableheader1b, 'No. SJ CUST' as tableheader1c,
    '' as isitable1a, spr.rsm as isitable1b, spr.nosj as isitable1c, '-' as isitable1d, '-' as isitable1e, spr.nopol as isitable1f,
    concat(ifnull(sprd.qty1,0),' ',sprd.unit) as isitable2b,  concat(sprd.inv,' - ') as isitable2c,'' as isitable2d1 ,sprd.remark as isitable2d2, '-' as isitable2e, '-' as isitable2f,
    '-' as summary, 'UM' as UMLabel, 0 as UM, 'DPP' as DPPLabel, 0 as DPP, 'PPN' as PPNlabel, 0 as PPN, 0 as Total,
    'Ekspedisi' as footer1a, 'Gudang' as footer1b, spr.remark as keterangan
   from loc,spr left outer join sprd on spr.spr =sprd.spr left outer join sub on spr.sub=sub.sub
   where spr.spr=PJurnal and spr.`delete`=0 and loc.loc=sprd.loc;
end if;
if (Pform='Transaction.FrmTSpmRetur') then
  select 'SPM RETUR PEMBELIAN' as header1, spm.spm as header2,
    spm.date as headertanggal,
    'Supplier :' as subheader1a, sub.name as subheader1b, sub.address as subheader1c,
    'Muat di :' as subheader2a, spd.loc as subheader2b, loc.name as subheader2c,
    '' as subheader3a, '' as subheader3b, '' as subheader3c,
    '' as tableheader1a, 'No. PO RET' as tableheader1b, 'ANGKUTAN' as tableheader1c,
    '' as isitable1a, spm.okl_rms as isitable1b, ifnull(ang.name,'') as isitable1c, '-' as isitable1d, '-' as isitable1e, spm.nopol as isitable1f,
    concat(sum(spd.qty1),' ',spd.unit) as isitable2b, spd.inv as isitable2c, '' as isitable2d1 ,spd.remark as isitable2d2, '-' as isitable2e, '-' as isitable2f,
    '-' as summary, 'UM' as UMLabel, 0 as UM, 'DPP' as DPPLabel, 0 as DPP, 'PPN' as PPNlabel, 0 as PPN, 0 as Total,
    'Ekspedisi' as footer1a, 'Gudang' as footer1b
  from loc,spm left outer join spd on spm.spm=spd.spm
               left outer join sub on spm.sub=sub.sub
               left outer join sub as ang on spm.angkutan=ang.sub
  where spm.spm='SMR-0811-000004' and spm.`delete`=0 and spd.loc=loc.loc
  group by spd.inv, spd.remark, spd.unit,spd.nodsg;
end if;
if (Pform='Transaction.FrmTSpmJual') then
  select 'SURAT PERINTAH MUAT' as header1, spm.spm as header2,
    spm.date as headertanggal,
    'Customer :' as subheader1a, sub.name as subheader1b, sub.address as subheader1c,
    'Muat di :' as subheader2a, spd.loc as subheader2b, loc.name as subheader2c,
    '' as subheader3a, '' as subheader3b, '' as subheader3c,
    '' as tableheader1a, '' as tableheader1b, 'ANGKUTAN' as tableheader1c,
    '' as isitable1a, '' as isitable1b, ang.name as isitable1c, '-' as isitable1d, '-' as isitable1e, spm.nopol as isitable1f,
    concat(sum(spd.qty1),' ',spd.unit) as isitable2b, spd.nodsg as isitable2c, concat(spd.inv,' - ') isitable2d1 ,spd.remark as isitable2d2, '-' as isitable2e, '-' as isitable2f,
    '-' as summary, 'UM' as UMLabel, 0 as UM, 'DPP' as DPPLabel, 0 as DPP, 'PPN' as PPNlabel, 0 as PPN, 0 as Total,
    'Ekspedisi' as footer1a, 'Gudang' as footer1b
  from sub as ang,loc,spm left outer join spd on spm.spm=spd.spm
                          left outer join sub on spm.sub=sub.sub
  where spm.spm=PJurnal and spm.`delete`=0 and spd.loc=loc.loc and spm.angkutan=ang.sub
  group by spd.inv, spd.remark, spd.unit,spd.nodsg
  order by spd.no;
end if;
if (Pform='Transaction.FrmTSJRetur') then
  select 'SURAT JALAN RETUR' as header1, sjr.sjr as header2,
    sjr.date as headertanggal,
    'Supplier :' as subheader1a,sub.name as subheader1b, concat(sub.address,' - ',sub.city) as subheader1c,
    'Storloc :' as subheader2a, spd.loc as subheader2b, loc.name as subheader2c,
    'Ship to:' as subheader3a, sjr.shiptoname as subheader3b, sjr.shiptoaddress as subheader3c,
    'No. SPM RET' as tableheader1a, '' as tableheader1b, 'ANGKUTAN' as tableheader1c,
    sjr.spm as isitable1a, spm.okl_rms as isitable1b, ifnull(ang.name,'') as isitable1c, '-' as isitable1d, 'NOPOL:' as isitable1e, spm.nopol as isitable1f,
    concat(sum(spd.qty1),' ',spd.unit) as isitable2b, spd.inv as isitable2c, '' as isitable2d1 ,spd.remark as isitable2d2, '-' as isitable2e,'-' as isitable2f,
    '-' as summary, 'UM' as UMLabel, 0 as UM, 'DPP' as DPPLabel, 0 as DPP, 'PPN' as PPNlabel, 0 as PPN, 0 as Total,
    'Pengirim' as footer1a, 'Penerima' as footer1b, sjr.remark as keterangan,(select sum(sjrd.qty1) from sjrd where sjr = Pjurnal) as sumqty
  from sjr,loc,spm left outer join spd on spm.spm=spd.spm
                   left outer join sub on spm.sub=sub.sub
                   left outer join sub as ang on spm.angkutan=ang.sub
  where sjr.spm=spm.spm and sjr.sjr=Pjurnal and spm.`delete`=0 and spd.loc=loc.loc
  group by spd.inv, spd.remark, spd.unit, spd.nodsg;
end if;
if (PForm='Transaction.FrmTSJTransfer') then
    set noOrder='';
    select 'SURAT JALAN TRANSFER' as header1,  sjr.sjr as header2, sjr.date as headertanggal,'' as ketso,
    'Customer :' as subheader1a, sub.name as subheader1b, sub.address as subheader1c,sjr.remark as `remark`,
    'Storloc :' as subheader2a, sjrd.loc as subheader2b, loc.name as subheader2c,
    'Ship to:' as subheader3a, sub.name as subheader3b, sub.address as subheader3c,
    'No. SPM' as tableheader1a, '' as tableheader1b, 'ANGKUTAN' as tableheader1c,
    sjr.spm as isitable1a, '' as isitable1b, sjr.angkutan as isitable1c,'' as isitable1d,  sjr.okl_rms  as isitable1e, sjr.nopol as isitable1f,
    ifnull(sum(sjrd.qty1),0) as isitable2b,ifnull(sjrd.unit,' ') as isitable2b1,
    sjrd.`no`,
    sjrd.okl AS POJ,
    por.date AS POJdate,
    sjrd.inv as isitable2c,
    sjrd.remark as isitable2d1 ,
    sjrd.nodsg AS nodsg,
    '' as isitable2d2,'' as oldinv, sub.city as isitable2f, ' ' as isitable2e,
    '-' as summary, 'UM' as UMLabel, 0 as UM, 'DPP' as DPPLabel, 0 as DPP, 'PPN' as PPNlabel, 0 as PPN, 0 as Total,
    'Pengirim' as footer1a, 'Penerima' as footer1b,(select sum(sjrd.qty1) from sjrd where sjr = Pjurnal) as sumqty,sjrd.qty as qty,ifnull(inv.unit,' ') as unit2
   from sjr
	left join sjrd on sjr.sjr=sjrd.sjr
	left join loc on sjrd.loc=loc.loc
	left join sub on sjr.sub=sub.sub
	left join inv on sjrd.inv = inv.inv
	LEFT JOIN por ON por.por = sjrd.okl
    where  sjr.sjr=Pjurnal and sjr.`delete`=0
	 group by  sjrd.inv,sjrd.remark,sjrd.unit,sjrd.nodsg
	 order by sjrd.`no`;
end if;
if (Pform='Transaction.FrmTLpb') then
    select 'LAPORAN PENERIMAAN BARANG' as header1, lph.lph as header2,
    lph.date as headertanggal,
    'Supplier :' as subheader1a, sub.name as subheader1b, sub.address as subheader1c,
    'Storloc :' as subheader2a, lpd.loc as subheader2b, loc.name as subheader2c,
    '' as subheader3a, '' as subheader3b, '' as subheader3c,
    'No. SPB' as tableheader1a, 'No. PO' as tableheader1b, 'No. SJ' as tableheader1c,
    lph.spb as isitable1a, spb.oms as isitable1b, spb.nosj as isitable1c, '-' as isitable1d, '-' as isitable1e, spb.nopol as isitable1f,
    concat(ifnull(lpd.qty1,0),' ',lpd.unit) as isitable2b, lpd.inv as isitable2c, '' as isitable2d1 ,lpd.remark as isitable2d2, '-' as isitable2e, '-' as isitable2f,
    '-' as summary, 'UM' as UMLabel, 0 as UM, 'DPP' as DPPLabel, 0 as DPP, 'PPN' as PPNlabel, 0 as PPN, 0 as Total,
    'Ekspedisi' as footer1a, 'Gudang' as footer1b
   from spb,loc,lph left outer join lpd on lph.lph =lpd.lph left outer join sub on lph.sub=sub.sub
   where lph.lph=PJurnal and lph.`delete`=0 and lph.spb=spb.spb and lpd.loc=loc.loc;
end if;
if (Pform='Transaction.FrmTLpbRetur') then
    select 'LPB RETUR' as header1, rka.rka as header2,
    rka.date as headertanggal,
    'Supplier :' as subheader1a, sub.name as subheader1b, sub.address as subheader1c,
    'Storloc :' as subheader2a, rkb.loc as subheader2b, loc.name as subheader2c,
    '' as subheader3a, '' as subheader3b, '' as subheader3c,
    'No. SPB RET' as tableheader1a, 'No. SO RET' as tableheader1b, 'No. SJ CUST' as tableheader1c,
    rka.spr as isitable1a, rka.noretur as isitable1b, spr.nosj as isitable1c, '-' as isitable1d, 'No.Kendaraan' as isitable1e, trim(spr.nopol) as isitable1f,
    concat(ifnull(rkb.qty1,0),' ',rkb.unit) as isitable2b, rkb.inv  as isitable2c, '' as isitable2d1 ,rkb.remark as isitable2d2, '-' as isitable2e, '-' as isitable2f,
    '-' as summary, 'UM' as UMLabel, 0 as UM, 'DPP' as DPPLabel, 0 as DPP, 'PPN' as PPNlabel, 0 as PPN, 0 as Total,
    'Ekspedisi' as footer1a, 'Gudang' as footer1b, rka.remark as keterangan
   from spr,loc,rka left outer join rkb on rka.rka =rkb.rka left outer join sub on rka.sub=sub.sub
   where rka.rka=PJurnal and rka.`delete`=0 and rka.spr=spr.spr and rkb.loc=loc.loc;
end if;
if (PForm='Transaction.FrmTSJJual') then
 if ((select count(okl) from sjd where sjh=Pjurnal and okl<>'') >0) then
      set noOrder=(select F_ConcateBaris('sjd',Pjurnal));
 else
     set noOrder='';
  end if;
    select @n := @n +1 RowNumber,'SURAT JALAN' as header1, sjh.sjh as header2, sjh.date as headertanggal,(select concat(if (remark='','',''),'') from (select @n:=0) initvars, okl where okl.okl=sjd.okl) as ketso,
    'Customer :' as subheader1a, sub.name as subheader1b, sub.address as subheader1c,sjh.remark as `remark`,
    'Storloc :' as subheader2a, sjd.loc as subheader2b, loc.name as subheader2c,
    'Ship to:' as subheader3a, sjh.shiptoname as subheader3b, sjh.shiptoaddress as subheader3c,
    'No. SPM' as tableheader1a, '' as tableheader1b, 'ANGKUTAN' as tableheader1c,
    sjh.spm as isitable1a, '' as isitable1b, ang.name as isitable1c,sjd.okl as isitable1d,date(okl.date) as sodate, sjd.nopoc  as isitable1e, sjh.nopol as isitable1f,(select sum(sjd.qty) from sjd where sjh = Pjurnal) as sumqty,ifnull(sum(sjd.qty),0) as qty,
    ifnull(sum(sjd.qty1),0) as isitable2b,ifnull(sjd.unit,' ') as isitable2b1,ifnull(inv.unit,' ') as unit2,
      trim(if(trim(sub.kodeinv)='Kode A',inv.oldinv,if(trim(sub.kodeinv)='Kode B',inv.oldinv1,sjd.inv))) as isitable2c,
    sjd.remark as isitable2d1 ,
    '' as isitable2d2, inv.oldinv, sub.city as isitable2f, ' ' as isitable2e,
    '-' as summary, 'UM' as UMLabel, 0 as UM, 'DPP' as DPPLabel, 0 as DPP, 'PPN' as PPNlabel, 0 as PPN, 0 as Total,
    'Pengirim' as footer1a, 'Penerima' as footer1b, sjd.nodsg as kodebatch
   from sjd left join sjh on sjd.sjh=sjh.sjh
             left join sub on sub.sub=sjh.sub
             left join inv on sjd.inv=inv.inv
             left join loc on sjd.loc=loc.loc
             left join okl on sjd.okl=okl.okl
             left outer join sub ang on sjh.angkutan=ang.sub
    where sjd.sjh=Pjurnal
    group by sjd.nodsg,sjd.inv,sjd.okl
    order by sjd.no;
end if;
if (PForm='Transaction.FrmTSJJualGlobal') then
 if ((select count(okl) from sjd where sjh=Pjurnal and okl<>'') >0) then
      set noOrder=(select F_ConcateBaris('sjd',Pjurnal));
 else
     set noOrder='';
  end if;
    select @n := @n +1 RowNumber,'SURAT JALAN' as header1, sjh.sjh as header2, sjh.date as headertanggal,(select concat(if (remark='','',''),'') from (select @n:=0) initvars, okl where okl.okl=sjd.okl) as ketso,
    'Customer :' as subheader1a, sub.name as subheader1b, sub.address as subheader1c,sjh.remark as `remark`,
    'Storloc :' as subheader2a, sjd.loc as subheader2b, loc.name as subheader2c,
    'Ship to:' as subheader3a, sjh.shiptoname as subheader3b, sjh.shiptoaddress as subheader3c,
    'No. SPM' as tableheader1a, '' as tableheader1b, 'ANGKUTAN' as tableheader1c,
    sjh.spm as isitable1a, '' as isitable1b, ang.name as isitable1c,sjd.okl as isitable1d,date(okl.date) as sodate, sjd.nopoc  as isitable1e, sjh.nopol as isitable1f,(select sum(sjd.qty) from sjd where sjh = Pjurnal) as sumqty,ifnull(sum(sjd.qty),0) as qty,
    ifnull(sum(sjd.qty1),0) as isitable2b,ifnull(sjd.unit,' ') as isitable2b1,ifnull(inv.unit,' ') as unit2,
      trim(if(trim(sub.kodeinv)='Kode A',inv.oldinv,if(trim(sub.kodeinv)='Kode B',inv.oldinv1,sjd.inv))) as isitable2c,
    sjd.remark as isitable2d1 ,
    '' as isitable2d2, inv.oldinv, sub.city as isitable2f, ' ' as isitable2e,
    '-' as summary, 'UM' as UMLabel, 0 as UM, 'DPP' as DPPLabel, 0 as DPP, 'PPN' as PPNlabel, 0 as PPN, 0 as Total,
    'Pengirim' as footer1a, 'Penerima' as footer1b,sjh.totqtykemasan,sjh.totqty,inv.name,kgb.kgb AS kodeglobal,kgb.name as namaglobal, sjd.nodsg as kodebatch
   from sjd left join sjh on sjd.sjh=sjh.sjh
             left join sub on sub.sub=sjh.sub
             left join inv on sjd.inv=inv.inv
				 LEFT JOIN kgb on inv.kgb = kgb.kgb
             left join loc on sjd.loc=loc.loc
             left join okl on sjd.okl=okl.okl
             left outer join sub ang on sjh.angkutan=ang.sub
    where sjd.sjh=Pjurnal
    group by sjd.kgb, sjd.unit
    order by sjd.no;
end if;
if (PForm='Transaction.FrmTKlr') then
    select 'INVOICE PENJUALAN' as header1, a.klr as header2,kurs,
    a.date as headertanggal,nosol,namabarang,satuanunit,
    'Customer :' as subheader1a, a.subname as subheader1b, concat(a.subadd, ' - ', a.city) as subheader1c,'' okl,
    'Storloc :' as subheader2a, '' as subheader2b, '' as subheader2c,
    'No PO Customer :' as subheader3a, '' as subheader3b, '' as subheader3c,
    'Tgl. FP' as tableheader1a, '' as tableheader1b, 'Delivery Order' as tableheader1c,
    a.fpjdate as isitable1a, '' as isitable1b, '' as isitable1c, abs(datediff(a.date,a.duedate)) as isitable1d,
    a.duedate as isitable1e, '' as isitable1f,
    sum(a.qty) as isitable2b,'' as unit, '' as isitable2c,'' as isitable2d1 ,
    a.material as isitable2d2, a.dpp/a.qty as isitable2e, sum(a.dpp) as isitable2f,
    '-' as summary, 'UM' as UMLabel, a.UM as UM, 'DPP' as DPPLabel,cur, (sum(a.dpp)-sum(a.um)) as DPP, 'PPN' as PPNlabel,
    (sum(a.dpp)-sum(a.um))*0.1 as PPN, (sum(a.dpp)-sum(a.um))*11/10 as Total,sumdpp + sumppn as sumtotal,sumdpp,sumppn,
    'Pengirim' as footer1a, 'Penerima' as footer1b,'' sjh,a.city
  from
  (select kld.no,kld.okl as nosol,inv.name as namabarang,inv.unit as satuanunit,(select sum(val) from okd where okl = (select okl from kld where klr = Pjurnal group by okl)) as sumtotal,(select sum(kld.dpp) from kld where klr = Pjurnal) as sumdpp,(select sum(kld.ppn) from kld where klr = Pjurnal) as sumppn,klr.kurs,sum(qty) as qty,sub.name as subname,sub.address as subadd,sub.city,sub.kodeinv,klr.klr,klr.date,klr.cur as cur,
  kld.remark as material,
  klr.remark,klr.duedate,klr.sub,kld.okl,klr.fpj,klr.fpjdate,klr.sfpjdate,sum(ifnull(umk.val,0)) as UM,sum(kld.dpp) as dpp,
  sum(kld.ppn) as ppn
    from sub,kld,inv,klr left join (select klr,jurnal,remark,sum(val) val from umk group by klr) umk on klr.klr=umk.klr
    where klr.klr=Pjurnal and klr.klr=kld.klr and klr.sub=sub.sub and kld.inv = inv.inv
    group by klr.klr,kld.`no`) as a group by a.no;
end if;
if (PForm='Transaction.FrmTKlrEx') then
  select * from
  (select klr.*,kld.no,sum(qty) as qty,sub.name as subname,sub.address as subadd,sub.city,sub.kodeinv,kld.okl,ifnull(umk.val,0) as UM,sum(kld.dpp) as dpp,if(left(klr.fpj,1)='',0,(sum(kld.dpp)-ifnull(umk.val,0))*0.1) as valppn,(sum(kld.dpp)-ifnull(umk.val,0))*if(left(klr.fpj,1)='',1,11/10) as Total
    from sub,kld,klr left join (select klr,jurnal,remark,sum(ifnull(val,0)) val from umk group by klr) umk on klr.klr=umk.klr
    where klr.klr=PJurnal and klr.klr=kld.klr and klr.sub=sub.sub
    group by klr.klr,kld.okl) as a
  ,
  (select kll.no,sjd.sjh,okl.nopoc,kll.klr,kll.okl,spm.okl_rms as doh,sum(sjd.qty1) as qty,sjd.price,sjd.unit,sjd.loc,loc.name as locname,inv.unit as invunit,sjd.nodsg, sjd.inv,inv.oldinv,inv.oldinv1,sjd.remark as namabarang
  from kll,sjd,loc,inv,sjh,spm,okl
  where kll.sjh=sjd.sjh and kll.okl=sjd.okl and sjd.okl=okl.okl and kll.klr=PJurnal and trim(sjd.loc)=trim(loc.loc) and sjd.inv=inv.inv and sjd.sjh=sjh.sjh and sjh.spm=spm.spm
  group by sjd.nodsg,sjd.inv,sjd.sjh) as b
  where a.klr=b.klr and b.price<>0 and a.okl=b.okl
  group by b.nodsg,b.inv,b.price;
end if;
if (PForm='Transaction.FrmTMsk') then
  OPEN cur_order;
    WHILE Done=0 DO
      set lpb='';
      FETCH cur_order INTO lpb;
      if (lpb <> '') then
        set noOrder = concat(noOrder,if(noOrder<>'',",",""),lpb);
      end if;
    END WHILE;
  CLOSE cur_order;
  set Done=0;
  OPEN cur_nopoc;
    WHILE Done=0 DO
      set nopoc='';
      FETCH cur_nopoc INTO nopoc;
      if (nopoc <> '') then
        set noPOCust = concat(noPOCust,if(noPOCust<>'',",",""),nopoc);
      end if;
    END WHILE;
  CLOSE cur_nopoc;
  select a.msk,a.sub,b.name,b.address,b.city,a.remark,ifnull((select sum(val*if(dk='D',-1,1)) from acd where left(acc,3)='210' and (left(acc,4) not in ('2106','2108')) and left(acc,6) <>('210204') and jurnal=Pjurnal),0)/ifnull((select msd.kurs from msd where msd.msk=a.msk limit 1),1) as tot_inv,d.acc,a.`date`,date(a.duedate) as duedate,(select msd.kurs from msd where msd.msk=a.msk limit 1) as kurs,
         e.name as accname,d.val as jml,noOrder,noPOCust,d.dk,a.cur
  from msk a,sub b,(select jurnal,acc,sum(val) as val,dk from acd group by jurnal,acc,dk) d,acc e
  where a.sub = b.sub and a.msk = d.jurnal
  and d.acc = e.acc and a.msk = Pjurnal;
end if;
if (Pform='Transaction.FrmTJsu') then
  select 'JURNAL MEMO DEBET/KREDIT' as header1, jsu.jsu as header2,
    jsu.date as headertanggal,jsu.cur,
    'Supplier :' as subheader1a, sub.name as subheader1b, sub.address as subheader1c,
    'Kode Perkiraan :' as subheader2a, jsu.acc as subheader2b, acc.name as subheader2c,
    '' as subheader3a, '' as subheader3b, '' as subheader3c,
    '' as tableheader1a, '' as tableheader1b, '' as tableheader1c,
    '' as isitable1a, '' as isitable1b, '' as isitable1c, '' as isitable1d, '' as isitable1e, '' as isitable1f,
    '' as isitable2b, '' as isitable2c, jsd.acc as isitable2d1, jsd.remark as isitable2d2, '' as isitable2d3, jsd.dk as isitable2e, jsd.val as isitable2f,
    '-' as summary, '' as UMLabel, 0 as UM, '' as DPPLabel, 0 as DPP, '' as PPNlabel, 0 as PPN, jsu.val as Total,
    '' as footer1a, '' as footer1b
  from acc as acc,  jsu left outer join jsd on jsu.jsu=jsd.jsu
               left outer join sub on jsu.sub=sub.sub
  where jsu.jsu=Pjurnal and jsu.`delete`=0 and jsu.acc=acc.acc;
end if;
if (Pform='Transaction.FrmTUmh') then
  select 'JURNAL UMUM PERKIRAAN' as header1, umh.umh as header2,
    umh.date as headertanggal,umd.no as no_,
    '' as subheader1a, sub.name as subheader1b, sub.address as subheader1c,
    '' as subheader2a, '' as subheader2b, '' as subheader2c,
    '' as subheader3a, '' as subheader3b, '' as subheader3c,
    '' as tableheader1a, '' as tableheader1b, '' as tableheader1c,
    '' as isitable1a, '' as isitable1b, '' as isitable1c, '' as isitable1d, '' as isitable1e, '' as isitable1f,
    '' as isitable2b, '' as isitable2c, umd.acc as isitable2d1, umd.remark as isitable2d2, '' as isitable2d3, umd.dk as isitable2e, umd.val as isitable2f,
    '-' as summary, '' as UMLabel, 0 as UM, '' as DPPLabel, 0 as DPP, '' as PPNlabel, 0 as PPN, 0 as Total,
    '' as footer1a, '' as footer1b
  from umh left outer join umd on umh.umh=umd.umh
               left outer join sub on umh.sub=sub.sub
  where umh.umh=PJurnal and umh.`delete`=0;
end if;
if (Pform='Transaction.FrmTTF') then
  select concat(left(ttf,9),'1-',right(ttf,6)) as ttf, ttf.`sub`,`titip`,`jml`,concat(' - ',byr) as `byr`,`kmbl_tgl`,`period` ,ttf.`chtime`,ttf.`chusr`,ttf.`delete`,`cur1`,`cur2`,`jml2`,
   if(jnsbyr=0,'GIRO',if(jnsbyr=1,'CEK',if(jnsbyr=2,'TUNAI','TRANSFER'))) as `jnsbyr`,`unsub`,
  ttf.date as tgl,ifnull(sub.name,unsub) as supplier, concat(sub.address,' ', city) as address
  from ttf left outer join sub
  on ttf.sub=sub.sub where ttf.ttf=PJurnal and ttf.`delete`=0;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_printRFP
DROP PROCEDURE IF EXISTS `sp_printRFP`;
DELIMITER //
CREATE PROCEDURE `sp_printRFP`(
	IN `Pdatea` DATE,
	IN `Pdatez` DATE
,
	IN `Psuba` VARCHAR(50),
	IN `Psubz` VARCHAR(50),
	IN `stats` VARCHAR(50)
)
BEGIN
if (stats='all') then
     select rfp.`rfp`, rfp.`date`,
  rfd.`nodoc`, rhp.`date` as 'Tgl BU', sub.`name`,
  datediff(rhp.`duedate`,rhp.`date`) as 'TOP', rhp.`duedate` as 'Tgl Jtp', rfp.`val` as `Total`,sub.bankname,sub.norek,if(stat_rfp=1,'Tertutup','Terbuka') as stat_rfp,rfp.cur,grp.grpname
from rfp, sub, rfd left join rhp on rfd.`nodoc`=rhp.`jurnal` and rfd.invoice=rhp.invoice, grp
where rfp.`rfp`=rfd.`rfp` and rfp.`sub`=sub.`sub` and sub.grp = grp.grp
  and date(rfp.date) between Pdatea and Pdatez and if (Psuba<>'' and Psubz<>'',sub.sub between Psuba and Psubz,1)
  group by rfp.rfp
  order by rfp.rfp;
end if ;
if (stats='Terbuka') then
     select rfp.`rfp`, rfp.`date`,
  rfd.`nodoc`, rhp.`date` as 'Tgl BU', sub.`name`,
  datediff(rhp.`duedate`,rhp.`date`) as 'TOP', rhp.`duedate` as 'Tgl Jtp', rfp.`val` as `Total`,sub.bankname,sub.norek,if(stat_rfp=1,'Tertutup','Terbuka') as stat_rfp,rfp.cur,grp.grpname
from rfp, sub, rfd left join rhp on rfd.`nodoc`=rhp.`jurnal` and rfd.invoice=rhp.invoice, grp
where rfp.`rfp`=rfd.`rfp` and rfp.`sub`=sub.`sub` and sub.grp = grp.grp
  and date(rfp.date) between Pdatea and Pdatez and rfp.stat_rfp = 0 and if (Psuba<>'' and Psubz<>'',sub.sub between Psuba and Psubz,1)
  group by rfp.rfp
  order by rfp.rfp;
end if ;
if (stats='Tertutup') then
     select rfp.`rfp`, rfp.`date`,
  rfd.`nodoc`, rhp.`date` as 'Tgl BU', sub.`name`,
  datediff(rhp.`duedate`,rhp.`date`) as 'TOP', rhp.`duedate` as 'Tgl Jtp', rfp.`val` as `Total`,sub.bankname,sub.norek,if(stat_rfp=1,'Tertutup','Terbuka') as stat_rfp,rfp.cur,grp.grpname
from rfp, sub, rfd left join rhp on rfd.`nodoc`=rhp.`jurnal` and rfd.invoice=rhp.invoice, grp
where rfp.`rfp`=rfd.`rfp` and rfp.`sub`=sub.`sub` and sub.grp = grp.grp
  and date(rfp.date) between Pdatea and Pdatez and rfp.stat_rfp = 1 and if (Psuba<>'' and Psubz<>'',sub.sub between Psuba and Psubz,1)
  group by rfp.rfp
  order by rfp.rfp;
end if ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_PrqOut
DROP PROCEDURE IF EXISTS `Sp_PrqOut`;
DELIMITER //
CREATE PROCEDURE `Sp_PrqOut`(Pdatea datetime, Pdatez datetime, Pinva char(15), Pinvz char(15), Pclose int, Pprqa char(15), Pprqz char(15))
BEGIN
select prq,omdoms as oms,date,dateneed,close1,close,x.inv,x.remark,name,qty as qty1,qtyterpenuhi as qtyterpenuhi1 ,varian,unit as unit1,if((qty-qtyterpenuhi)>=0,(qty-qtyterpenuhi),0) as qtysisa,
ifnull(y.oms,'') lastoms,ifnull(y.price,0) price,ifnull(lastunit,'') lastunit ,ifnull(y.cur,'') cur,ifnull(if(y.ppn=1,'PPN','NO'),'') ppn, ifnull(vendor,'') vendor from
(
select prq.prq,ifnull(max(a.omdoms),'') as omdoms, prq.date,prd.dateneed,if(prq.close or (prd.qty-(ifnull(a.qty,0)+ifnull(b.qty,0))<=0) ,'CLOSED','OPEN') as close1, prq.close,prd.inv,prd.remark,inv.name,sum(prd.qty) as qty,inv.unit,
  (ifnull(a.qty,0)+ifnull(b.qty,0)) as qtyterpenuhi,prq.aprov,
  ((ifnull(a.qty,0)+ifnull(b.qty,0))/sum(prd.qty) * 100) as varian
from prq,inv, prd left join (select omd.prq,omd.inv,sum(omd.qty) as qty,oms.oms as omdoms,omd.noprd from oms,omd where oms.oms=omd.oms and oms.delete=false group by prq,inv,omd.noprd) as a
  on prd.prq=a.prq and prd.inv=a.inv and prd.no=a.noprd left join (select lph.oms,lpd.inv,sum(lpd.qty) as qty from lpd,lph where lph.lph=lpd.lph and lph.delete=false group by oms,inv) as b
  on prd.prq=b.oms and prd.inv=b.inv
where prq.prq=prd.prq and prd.inv=inv.inv and prq.`delete`=0
  and if(Pinva<>'' and Pinvz<>'',prd.inv between Pinva and Pinvz,1)
   and if(Pprqa<>'' and Pprqz<>'',prq.prq between Pprqa and Pprqz,1)
  and if(Pclose=1,prq.close=true,if(Pclose=4,aprov=0,if(Pclose=5,aprov1=0,if(Pclose=2,prq.close=false and aprov=1,1))))
  and prq.date>=Pdatea and prq.date<adddate(Pdatez,1) and prq.delete=false
group by prq.prq,prd.inv,prd.remark,prd.no) as x
left outer join (select * from (select omd.oms,omd.inv,omd.remark,omd.unit lastunit,omd.price,oms.ppn,oms.cur, sub.name as vendor from omd,oms,sub where omd.oms=oms.oms and oms.sub=sub.sub and oms.date >= adddate(now(),interval -2 year) order by oms.date desc) as z group by inv ) y on x.inv=y.inv and x.remark=y.remark
where if(Pclose=2,(close1='OPEN'),If(Pclose=1,(close1='CLOSED'),1)) order by `date`,x.prq,x.inv,x.remark;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_PrqOut1
DROP PROCEDURE IF EXISTS `Sp_PrqOut1`;
DELIMITER //
CREATE PROCEDURE `Sp_PrqOut1`(Pdatea datetime, Pdatez datetime, Pinva char(15), Pinvz char(15), Pclose int, Pprqa char(15), Pprqz char(15), Pjnsa char(15), Pjnsz char(15))
BEGIN
select prq,omdoms as oms,date,dateneed,close1,close,x.inv,x.remark,name,qty as qty1,qtyterpenuhi as qtyterpenuhi1 ,varian,unit as unit1,if((qty-qtyterpenuhi)>=0,(qty-qtyterpenuhi),0) as qtysisa,
ifnull(y.oms,'') lastoms,ifnull(y.price,0) price,ifnull(lastunit,'') lastunit ,ifnull(y.cur,'') cur,ifnull(if(y.ppn=1,'PPN','NO'),'') ppn, ifnull(vendor,'') vendor, ifnull(person,'') usrpur from
(
select prq.prq,ifnull(max(a.omdoms),'') as omdoms, prq.date,prd.dateneed,if(prq.close or (prd.qty-(ifnull(a.qty,0)+ifnull(b.qty,0))<=0) ,'CLOSED','OPEN') as close1, prq.close,prd.inv,prd.remark,inv.name,sum(prd.qty) as qty,inv.unit,
  (ifnull(a.qty,0)+ifnull(b.qty,0)) as qtyterpenuhi,prq.aprov,
  ((ifnull(a.qty,0)+ifnull(b.qty,0))/sum(prd.qty) * 100) as varian
from prq,inv, prd left join (select omd.prq,omd.inv,sum(omd.qty) as qty,oms.oms as omdoms,omd.noprd from oms,omd where oms.oms=omd.oms and oms.delete=false group by prq,inv,omd.noprd) as a
  on prd.prq=a.prq and prd.inv=a.inv and prd.no=a.noprd left join (select lph.oms,lpd.inv,sum(lpd.qty) as qty from lpd,lph where lph.lph=lpd.lph and lph.delete=false group by oms,inv) as b
  on prd.prq=b.oms and prd.inv=b.inv
where prq.prq=prd.prq and prd.inv=inv.inv and prq.`delete`=0
  and if(Pjnsa<>'' and Pjnsz<>'',inv.jenis between Pjnsa and Pjnsz,1)
  and if(Pinva<>'' and Pinvz<>'',prd.inv between Pinva and Pinvz,1)
   and if(Pprqa<>'' and Pprqz<>'',prq.prq between Pprqa and Pprqz,1)
  and if(Pclose=1,prq.close=true,if(Pclose=4,aprov=0,if(Pclose=5,aprov1=0,if(Pclose=2,prq.close=false and aprov=1,1))))
  and prq.date>=Pdatea and prq.date<adddate(Pdatez,1) and prq.delete=false
group by prq.prq,prd.inv,prd.remark,prd.no) as x
left outer join (select * from (select omd.oms,omd.inv,omd.remark,omd.unit lastunit,omd.price,oms.ppn,oms.cur, sub.name as vendor,oms.person from omd,oms,sub where omd.oms=oms.oms and oms.sub=sub.sub and oms.date >= adddate(now(),interval -2 year) order by oms.date desc) as z group by inv ) y on x.inv=y.inv and x.remark=y.remark
where if(Pclose=2,(close1='OPEN'),If(Pclose=1,(close1='CLOSED'),1)) order by `date`,x.prq,x.inv,x.remark;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_rekapklr
DROP PROCEDURE IF EXISTS `sp_rekapklr`;
DELIMITER //
CREATE PROCEDURE `sp_rekapklr`(Pklr varchar (15))
BEGIN
  select @num := @num + 1 as nm,klr.klr,klr.sub,trim(sub.name) as name,sub.address,sub.city,kll.okl,klr.date,klr.kurs,kll.sjh,sjd.inv,sjd.remark,kld.qty as qty1,sjd.unit,kld.price,kld.qty*kld.price as val
  from kll left outer join sjd on kll.sjh=sjd.sjh and kll.okl=sjd.okl and if(kll.inv is null,1,kll.inv = sjd.inv) left outer join klr on kll.klr=klr.klr left outer join kld on kll.`no`=kld.`no` and kll.klr=kld.klr and if(kll.inv is null or kld.inv is null,1,kll.inv=kld.inv)
  left outer join sub on klr.sub=sub.sub,(select @num := 0) as a
  where kll.klr=Pklr;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_rekapttf
DROP PROCEDURE IF EXISTS `sp_rekapttf`;
DELIMITER //
CREATE PROCEDURE `sp_rekapttf`(Psuba char(15), Psubz char(15), Pdatea datetime, Pdatez datetime)
BEGIN
 select concat(left(ttf,9),'1-',right(ttf,6)) as ttf, ttf.`sub`,`titip`,`jml`,concat(' - ',byr) as `byr`,`kmbl_tgl`,`period` ,ttf.`chtime`,ttf.`chusr`,ttf.`delete`,`cur1`,`cur2`,`jml2`,
   if(jnsbyr=0,'GIRO',if(jnsbyr=1,'CEK',if(jnsbyr=2,'TUNAI','TRANSFER'))) as `jnsbyr`,`unsub`,
  date(ttf.date) as tgl,ifnull(sub.name,unsub) as supplier, concat(sub.address,' ', city) as address
  from ttf left outer join sub
  on ttf.sub=sub.sub where ttf.sub between Psuba and Psubz and date(ttf.date) >= Pdatea and date(ttf.date) <= Pdatez and ttf.`delete`=0 order by ttf.date,ttf.ttf;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_Reproses
DROP PROCEDURE IF EXISTS `Sp_Reproses`;
DELIMITER //
CREATE PROCEDURE `Sp_Reproses`(
	IN `Pperiod` char(4)
)
BEGIN
if Pperiod>'1601' then
select * from
(
      select oms as jurnal,date(date) as `date`, 'OMS' as subjurnal,1 as prior from oms where oms.period=Pperiod and oms.delete=0
			union all
      select jsu as jurnal,date(date), 'MMO' as subjurnal,2 as prior from jsu where jsu.period=Pperiod and jsu.delete=0
  		union all
			select okl as jurnal,date(date), 'OKL' as subjurnal,3 as prior from okl where okl.period=Pperiod and okl.delete=0
         	union all
    	select lph as jurnal,date(date), 'LPH' as subjurnal,4 as prior from lph where lph.period=Pperiod and lph.delete=0 and left(lph,3)="LPB"
      	union all
    	select lph as jurnal,date(date), 'LPJ' as subjurnal,4 as prior from lph where lph.period=Pperiod and lph.delete=0 and left(lph,3)="LPJ"
      	union all
      select msk as jurnal,date, 'MSK' as subjurnal,5 as prior from msk where msk.period=Pperiod and msk.group_=1 and msk.delete=0
			union all
      select msk as jurnal,date, 'MSK' as subjurnal,5 as prior from msk where msk.period=Pperiod and msk.group_=2 and msk.delete=0
    		union all
      select hpro as jurnal,date(date),'HPP' as subjurnal,6 as prior from hpro where hpro.period=Pperiod and hpro.delete=0
      union all
      select lhp as jurnal,date(date),'LHP' as subjurnal,7 as prior from lhp where lhp.period=Pperiod and lhp.delete=0
      union all
      select sjr as jurnal,date(date), 'SJR' as subjurnal,9 as prior from sjr where sjr.period=Pperiod and sjr.delete=0 and sjr.group_=1
			union all
      select sjr as jurnal,date, 'SJT' as subjurnal,9 as prior from sjr where sjr.period=Pperiod and sjr.delete=0 and sjr.group_=2
			union all
      select rms as jurnal,date, 'RSK' as subjurnal,10 as prior from rms where rms.period=Pperiod and rms.delete=0
			union all
      select sjh as jurnal,date, 'SJL' as subjurnal,11 as prior from sjh where sjh.period=Pperiod and sjh.delete=0
			union all
	  	select klr as jurnal,DATE_ADD(date(date),INTERVAL '0:23:55' DAY_MINUTE), 'KLR' as subjurnal,12 as prior from klr where klr.date>=date(concat(PERIOD_ADD(Pperiod,0),'01')) and klr.date < date_add(last_day(concat(PERIOD_ADD(Pperiod,0),'01')), interval 1 day) and klr.delete=0
    	union all
	  	select klri as jurnal,DATE_ADD(date(date),INTERVAL '0:23:55' DAY_MINUTE), 'KLE' as subjurnal,12 as prior from klri where klri.date>=date(concat(PERIOD_ADD(Pperiod,0),'01')) and klri.date < date_add(last_day(concat(PERIOD_ADD(Pperiod,0),'01')), interval 1 day) and klri.delete=0
      union all
			select umh as jurnal,DATE_ADD(date(date),INTERVAL '0:23:57' DAY_MINUTE), 'UMH' as subjurnal,13 as prior from umh where umh.period=Pperiod and umh.delete=0
			union all
	    select cad as jurnal,date, 'CAD' as subjurnal,13 as prior from cad where cad.period=Pperiod and cad.delete=0
			union all
			select jin as jurnal,date, 'JIN' as subjurnal,14 as prior from jin where jin.period=Pperiod and group_=1 and jin.delete=0
      union all
			select jin as jurnal,date, 'BPP' as subjurnal,15 as prior from jin where jin.period=Pperiod and group_=2 and jin.delete=0
			union all
			select jin as jurnal,date, 'BPR' as subjurnal,15 as prior from jin where jin.period=Pperiod and group_=7 and jin.delete=0
			union all
			select trm as jurnal,date, 'TRM' as subjurnal,8 as prior from trm where trm.period=Pperiod and trm.delete=0
	    union all
			select kas as jurnal,date, 'KBK' as subjurnal,16 as prior from kas where kas.period=Pperiod and group_=3 and kas.delete=0
			union all
      select kas as jurnal,date, 'KBM' as subjurnal,16 as prior from kas where kas.period=Pperiod and group_=4 and kas.delete=0
		  union all
		  select kas as jurnal,date, 'KPH' as subjurnal,16 as prior from kas where kas.period=Pperiod and group_=1 and kas.delete=0
	    union all
			select kas as jurnal,date, 'KKP' as subjurnal,16 as prior from kas where kas.period=Pperiod and group_=2 and kas.delete=0
      union all
      select cgr as jurnal,DATE_ADD(date(date),INTERVAL '0:23:55' DAY_MINUTE), 'CGR' as subjurnal,17 as prior from cgr where cgr.period=Pperiod and cgr.delete=0
      union all
      select rka as jurnal,date, 'RKA' as subjurnal,18 as prior from rka where rka.period=Pperiod and rka.delete=0
			union all
      select rkl as jurnal,date, 'RKL' as subjurnal,19 as prior from rkl where rkl.period=Pperiod and rkl.delete=0
      union all
      select jin as jurnal,date, 'AKT' as subjurnal,20 as prior from jin where jin.period=Pperiod and jin.group_=5 and jin.delete=0
      union all
      select opn as jurnal,DATE_ADD(date(date),INTERVAL '0:23:00' DAY_MINUTE), 'OPN' as subjurnal,21 as prior from opn where opn.period=Pperiod and opn.delete=0
) as rep
      order by date,4,1;
  delete from acd where period=Pperiod and adj=0 ;
  update rac set vdebet=0,vkredit=0 where period=Pperiod;
  delete from oms_in where substring(oms,5,4)=Pperiod;
  delete from ind where period=Pperiod;
 
 
 
 end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_Reproses1
DROP PROCEDURE IF EXISTS `Sp_Reproses1`;
DELIMITER //
CREATE PROCEDURE `Sp_Reproses1`(Pperiod char(4))
BEGIN
if Pperiod>'1601' then
select * from
(
      select oms as jurnal,date(date) as `date`, 'OMS' as subjurnal,1 as prior from oms where oms.period=Pperiod and oms.delete=0
			union all
      select jsu as jurnal,date(date), 'MMO' as subjurnal,2 as prior from jsu where jsu.period=Pperiod and jsu.delete=0
  		union all
			select okl as jurnal,date(date), 'OKL' as subjurnal,3 as prior from okl where okl.period=Pperiod and okl.delete=0
     	union all
    	select lph as jurnal,date(date), 'LPH' as subjurnal,4 as prior from lph where lph.period=Pperiod and lph.delete=0 and left(lph,3)="LPB"
      	union all
    	select lph as jurnal,date(date), 'LPJ' as subjurnal,4 as prior from lph where lph.period=Pperiod and lph.delete=0 and left(lph,3)="LPJ"
      	union all
      select msk as jurnal,date, 'MSK' as subjurnal,5 as prior from msk where msk.period=Pperiod and msk.group_=1 and msk.delete=0
			union all
      select msk as jurnal,date, 'MSK' as subjurnal,5 as prior from msk where msk.period=Pperiod and msk.group_=2 and msk.delete=0
    		union all
      select hpro as jurnal,date(date),'HPP' as subjurnal,6 as prior from hpro where hpro.period=Pperiod and hpro.delete=0
      union all
      select lhp as jurnal,date(date),'LHP' as subjurnal,7 as prior from lhp where lhp.period=Pperiod and lhp.delete=0
      union all
      select sjr as jurnal,date(date), 'SJR' as subjurnal,9 as prior from sjr where sjr.period=Pperiod and sjr.delete=0
			union all
      select rms as jurnal,date, 'RSK' as subjurnal,10 as prior from rms where rms.period=Pperiod and rms.delete=0
			union all
      select sjh as jurnal,date, 'SJL' as subjurnal,11 as prior from sjh where sjh.period=Pperiod and sjh.delete=0
			union all
			select klr as jurnal,DATE_ADD(date(date),INTERVAL '0:23:55' DAY_MINUTE), 'KLR' as subjurnal,12 as prior from klr where klr.date>=date(concat(PERIOD_ADD(Pperiod,0),'01')) and klr.date<date_add(last_day(concat(PERIOD_ADD(Pperiod,0),'01')), interval 1 day) and klr.delete=0
			union all
	    select klri as jurnal,DATE_ADD(date(date),INTERVAL '0:23:55' DAY_MINUTE), 'KLE' as subjurnal,12 as prior from klri where klri.date>=date(concat(PERIOD_ADD(Pperiod,0),'01')) and klri.date < date_add(last_day(concat(PERIOD_ADD(Pperiod,0),'01')), interval 1 day) and klri.delete=0
      union all
      select umh as jurnal,DATE_ADD(date(date),INTERVAL '0:23:57' DAY_MINUTE), 'UMH' as subjurnal,13 as prior from umh where umh.period=Pperiod and umh.delete=0
			union all
	    select cad as jurnal,date, 'CAD' as subjurnal,13 as prior from cad where cad.period=Pperiod and cad.delete=0
			union all
			select jin as jurnal,date, 'JIN' as subjurnal,14 as prior from jin where jin.period=Pperiod and group_=1 and jin.delete=0
      union all
			select jin as jurnal,date, 'BPP' as subjurnal,15 as prior from jin where jin.period=Pperiod and group_=2 and jin.delete=0
			union all
			select trm as jurnal,date, 'TRM' as subjurnal,8 as prior from trm where trm.period=Pperiod and trm.delete=0
	    union all
			select kas as jurnal,date, 'KBK' as subjurnal,16 as prior from kas where kas.period=Pperiod and group_=3 and kas.delete=0
			union all
      select kas as jurnal,date, 'KBM' as subjurnal,16 as prior from kas where kas.period=Pperiod and group_=4 and kas.delete=0
		  union all
		  select kas as jurnal,date, 'KPH' as subjurnal,16 as prior from kas where kas.period=Pperiod and group_=1 and kas.delete=0
	    union all
			select kas as jurnal,date, 'KKP' as subjurnal,16 as prior from kas where kas.period=Pperiod and group_=2 and kas.delete=0
      union all
      select cgr as jurnal,date, 'CGR' as subjurnal,17 as prior from cgr where cgr.period=Pperiod and cgr.delete=0
      union all
      select rka as jurnal,date, 'RKA' as subjurnal,18 as prior from rka where rka.period=Pperiod and rka.delete=0
			union all
      select rkl as jurnal,date, 'RKL' as subjurnal,19 as prior from rkl where rkl.period=Pperiod and rkl.delete=0
      union all
      select jin as jurnal,date, 'AKT' as subjurnal,20 as prior from jin where jin.period=Pperiod and jin.group_=5 and jin.delete=0
      union all
      select opn as jurnal,DATE_ADD(date(date),INTERVAL '0:23' DAY_HOUR), 'OPN' as subjurnal,21 as prior from opn where opn.period=Pperiod and opn.delete=0
) as rep
      order by date,4,1;
 end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_Reprosesinv
DROP PROCEDURE IF EXISTS `Sp_Reprosesinv`;
DELIMITER //
CREATE PROCEDURE `Sp_Reprosesinv`(
	IN `Pperiod` char(4)
)
BEGIN
select * from
(
    	select lph as jurnal,date(date) as `date`, 'LPH' as subjurnal,4 as prior from lph where lph.period=Pperiod and lph.delete=0 and left(lph,3)="LPB"
      	union all
    	select lph as jurnal,date(date), 'LPJ' as subjurnal,4 as prior from lph where lph.period=Pperiod and lph.delete=0 and left(lph,3)="LPJ"
      	union all
      select hpro as jurnal,date(date),'HPP' as subjurnal,6 as prior from hpro where hpro.period=Pperiod and hpro.delete=0
      union all
      select lhp as jurnal,date(date),'LHP' as subjurnal,7 as prior from lhp where lhp.period=Pperiod and lhp.delete=0
      union all
      select sjr as jurnal,date, 'SJR' as subjurnal,9 as prior from sjr where sjr.period=Pperiod and sjr.delete=0 and sjr.group_=1
			union all
      select sjr as jurnal,date, 'SJT' as subjurnal,9 as prior from sjr where sjr.period=Pperiod and sjr.delete=0 and sjr.group_=2
			union all
      select sjh as jurnal,date, 'SJL' as subjurnal,11 as prior from sjh where sjh.period=Pperiod and sjh.delete=0
			union all
			select jin as jurnal,date, 'JIN' as subjurnal,14 as prior from jin where jin.period=Pperiod and group_=1 and jin.delete=0
      union all
	  	select trm as jurnal,date, 'TRM' as subjurnal,8 as prior from trm where trm.period=Pperiod and trm.delete=0
	    union all
		  select rka as jurnal,date, 'RKA' as subjurnal,18 as prior from rka where rka.period=Pperiod and rka.delete=0
      union all
      select opn as jurnal,DATE_ADD(date(date),INTERVAL '0:23:00' DAY_MINUTE), 'OPN' as subjurnal,21 as prior from opn where opn.period=Pperiod and opn.delete=0
) as rep
      order by date,4,1;
  delete from ind where period=Pperiod;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_RFP
DROP PROCEDURE IF EXISTS `SP_RFP`;
DELIMITER //
CREATE PROCEDURE `SP_RFP`(
	IN `trfp` varchar(15)
)
BEGIN
select rfp.`rfp`, 
		 rfp.`date`,
  		 rfd.`nodoc`, 
		 rhp.`date` as 'Tgl BU', 
		 sub.`name`,
	    datediff(rhp.`duedate`,rhp.`date`) as 'TOP', 
		 rhp.`duedate` as 'Tgl Jtp', 
		 rfd.`DK`, 
		 rfd.`val`, if(rfd.dk='D',-rfd.val,rfd.val) as total,
		 rfd.remark,
		 rfd.invoice,
		 sub.bankname,
		 sub.norek
  from rfp, 
  		 sub, 
		 rfd left join rhp on rfd.`nodoc`=rhp.`jurnal` and 
		 rfd.invoice=rhp.invoice
 where rfp.`rfp`=rfd.`rfp` and 
 		 rfp.`sub`=sub.`sub` and 
		 rfp.`rfp`=trfp
group by rfd.`no`,rfp.rfp;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_rsb
DROP PROCEDURE IF EXISTS `sp_rsb`;
DELIMITER //
CREATE PROCEDURE `sp_rsb`(
	IN `Psuba` char(15),
	IN `Psubz` char(15),
	IN `Pdate0` datetime,
	IN `Pdatea` datetime,
	IN `Pdatez` datetime,
	IN `Pgroup_` varchar(1),
	IN `Pacca` varchar(15),
	IN `Paccz` varchar(15)
)
BEGIN
declare Pperiod char(4);
declare lcdk char(1);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists trsb;
create temporary table trsb (jurnal varchar(15),`date` datetime, val double, acc varchar(15), dk varchar(1), sub varchar(15), invoice varchar(50), kurs double);
insert into trsb
select rsb.jurnal,rsb.date, rsb.val, rsb.acc, rsb.dk, rsb.sub,rsb.invoice, rsb.kurs
from rsb
where rsb.sub between Psuba and Psubz and rsb.period=Pperiod and rsb.acc between Pacca and Paccz and rsb.jurnal not in ('IBL-1602-000038')
union all
select rhp.jurnal,rhp.date, rhp.val, rhp.acc, rhp.dk, rhp.sub,rhp.invoice, rhp.kurs
from rhp
where rhp.sub between Psuba and Psubz and rhp.date >= Pdate0 and  rhp.date < Pdatez and rhp.acc between Pacca and Paccz
union all
select payhp.jurnal , payhp.date, payhp.val, payhp.acc, payhp.dk ,payhp.sub,payhp.invoice, (select max(kurs) from rhp where rhp.jurnal=payhp.reff and trim(rhp.invoice)=trim(payhp.invoice))  as kurs
from payhp
where payhp.sub between Psuba and Psubz and payhp.date >= Pdate0 and  payhp.date < Pdatez and payhp.acc between Pacca and Paccz;
select trsb.sub, sub.name as subname, trsb.acc, acc.name as accname,
ifnull(sum(trsb.val*trsb.kurs*case when trsb.dk='D' then 1 else -1 end*case when trsb.date<pdatea then 1 else 0 end ),0) as vlast,
ifnull(sum(trsb.val*trsb.kurs*case when trsb.dk='D' and trsb.date >= Pdatea and trsb.date < Pdatez then 1 else 0 end),0) as vdebet,
ifnull(sum(trsb.val*trsb.kurs*case when trsb.dk='K' and trsb.date >= Pdatea and trsb.date < Pdatez then 1 else 0 end),0) as vkredit,
(ifnull(sum(trsb.val*trsb.kurs*case when trsb.dk='D' then 1 else -1 end*case when trsb.date<pdatea then 1 else 0 end),0)+
ifnull(sum(trsb.val*trsb.kurs*case when trsb.dk='D' and trsb.date between Pdatea and Pdatez then 1 else 0 end),0)-
ifnull(sum(trsb.val*trsb.kurs*case when trsb.dk='K' and trsb.date between Pdatea and Pdatez then 1 else 0 end),0) )as vsaldo
from trsb
left outer join acc on trsb.acc=acc.acc
left outer join sub on trsb.sub=sub.sub
where sub.group_=Pgroup_
group by trsb.sub,trsb.acc, sub.name,sub.grp,acc.name
order by sub.name, trsb.acc;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_rugilaba
DROP PROCEDURE IF EXISTS `Sp_rugilaba`;
DELIMITER //
CREATE PROCEDURE `Sp_rugilaba`( lcdatea datetime, lcdatez datetime, lclevel FLOAT)
BEGIN
DECLARE lcperiod      VARCHAR(4);
DECLARE lcAccParent   VARCHAR(15);
DECLARE lcAccDetil    VARCHAR(15);
DECLARE lcDebet       double;
DECLARE lcKredit      double;
DECLARE lcDebetadj    double;
DECLARE lcKreditadj   double;
DECLARE lcDebetnetto  double;
DECLARE lcKreditnetto double;
DECLARE lcVal double;
DECLARE lcValnetto,labarugi double;
DECLARE DONe INT DEFAULT 0;
DECLARE lcADetil,lcAParent,a,p CHAR(15);
DECLARE lcD,lcK,lcDa,lcKa,lcV,lcVnet,lcDnet,lcKnet,v,valkiri,valkanan,aw DOUBLE;
DECLARE i,j,n,l,d,k INT;
DECLARE g CHAR(1);
DECLARE r VARCHAR(70);
DECLARE SalDODetil CURSOR FOR
SELECT  acc,parent,debet,kredit,awal FROM TsalDO WHERE detil=1 AND abs(awal)+abs(debet)+abs(kredit)>0;
DECLARE Crugilaba CURSOR FOR
SELECT  n,awal,GROUP_, name, acc ,(awal+debet-kredit) as val,level_,detil,parent  FROM TsalDO  ;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONe = 1;
SET lcperiod = (SELECT Fdate2period(lcdatea));
drop temporary table IF EXISTS Tawal ;
CREATE TEMPORARY TABLE Tawal (acc VARCHAR(15),vlast DOUBLE);
drop temporary table IF EXISTS Tmutasi;
CREATE TEMPORARY TABLE Tmutasi (acc VARCHAR(15),debet DOUBLE,kredit DOUBLE);
drop temporary table IF EXISTS TsalDO;
CREATE TEMPORARY TABLE TsalDO (acc VARCHAR(15),name VARCHAR(70),parent VARCHAR(15),group_ char(1),detil tinyint(2),level_ smallint(5),awal DOUBLE,
              debet DOUBLE,kredit DOUBLE);
drop temporary table IF EXISTS TsalDOparent;
CREATE TEMPORARY TABLE TsalDOparent (acc VARCHAR(15),parent VARCHAR(15));
drop temporary table IF EXISTS rugilaba;
CREATE TEMPORARY TABLE rugilaba (nomer int,GROUP_ CHAR(1),remark varchar (100), acc VARCHAR(15),val DOUBLE,level_ int,detil int,parent VARCHAR(15));
INSERT INTO Tawal
SELECT acc, SUM(IF(isnull(vlast),0,vlast)) as vlast
FROM
(
  SELECT rac.acc,rac.vlast
      FROM rac
      WHERE rac.period=lcPeriod
  uniON all
  SELECT acd.acc, SUM(val*IF(dk="D",1,-1)) as vlast
      FROM acd
      WHERE acd.period=lcperiod AND acd.date < lcdatea GROUP BY acd.acc
)
as oawal GROUP BY acc;
INSERT INTO Tmutasi
SELECT acc,
    SUM(val*IF(dk="D",1,0)) as debet,                             
    SUM(val*IF(dk="K",1,0)) as kredit			
    FROM acd
    WHERE acd.date >=lcdatea  AND acd.date<lcdatez  GROUP BY acd.acc;
INSERT INTO TsalDO
SELECT acc.acc,
    acc.name,
    acc.parent,
    acc.group_,
    acc.detil,
    acc.level_,
    IF(isnull(Tawal.vlast),0,Tawal.Vlast) as awal,
    IF(isnull(Tmutasi.debet),0,Tmutasi.debet) as debet,
    IF(isnull(Tmutasi.kredit),0,Tmutasi.kredit) as kredit
    FROM  Tawal
    RIGHT OUTER JOIN acc
    LEFT OUTER JOIN Tmutasi
    ON acc.acc=Tmutasi.acc
    ON Tawal.acc=acc.acc;
INSERT INTO tsalDOparent
SELECT acc, parent FROM TsalDO WHERE detil=0;
OPEN SalDODetil;
  REPEAT
      FETCH SalDODetil INTO lcADetil,lcAParent,lcD,lcK,lcV;
               WHILE lcAParent<>'' DO
                  UPDATE TsalDO SET  debet=debet+lcD, kredit=kredit+lcK WHERE acc=lcAParent;
                  SET lcAParent=(SELECT parent FROM tsalDOparent WHERE acc=lcAParent);
               end WHILE;
    UNTIL DONe=1  END REPEAT;
   CLOSE SalDODetil;
set done=0;
  set j=0;
  set k=0;
  set i=(select count(acc) from Tsaldo);
  OPEN Crugilaba;
  REPEAT
    FETCH Crugilaba INTO n,aw,g,r,a,v,l,d,p;
    if i>0 then
       if g>"3" and v<>0 and ( l<= lclevel or (l<lclevel AND d=1)) then
         insert into rugilaba (nomer,group_,remark,acc,val,level_,detil,parent)
              values (j,g,concat(space(l*3),left(r,50)),a,if ((l=lclevel) or d=1,v*-1,0.00),l,d,p) ;
         if (a=(select acc from tsaldo where parent=p and awal+debet-kredit<>0 order by acc desc limit 1) and l=lclevel) then
           set j=j+1;
           insert into rugilaba (nomer,group_,remark,acc,val,level_,detil,parent)
           values (j,g,concat(space(l+14),'S.TOTAL ',left((select name from acc where acc=p),50)),a,if ((l=lclevel) or d=1,(select (awal+debet-kredit)*-1 from tsaldo where acc=p),0.00),0.00,d,'') ;
         end if;
         set j=j+1;
        end if;
    end if ;
    set i = i - 1;
    UNTIL done=1  END REPEAT;
  CLOSE Crugilaba;
  set labarugi=(select sum(val) from rugilaba where level_<>0);
  insert into rugilaba (nomer,group_,remark,acc,val,level_,detil,parent) values (j+1,3,'  LABA (RUGI)','',labarugi,0.00,0.00,'');
select * from rugilaba;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_rugilababanding
DROP PROCEDURE IF EXISTS `Sp_rugilababanding`;
DELIMITER //
CREATE PROCEDURE `Sp_rugilababanding`( lcdatea datetime, lcdatez datetime, lclevel FLOAT)
BEGIN
DECLARE lcperiod,lcperiodlalu,lcperiodawal     VARCHAR(4);
DECLARE lcAccParent   VARCHAR(15);
DECLARE lcAccDetil    VARCHAR(15);
DECLARE lcDebet       double;
DECLARE lcKredit      double;
DECLARE lcDebetadj    double;
DECLARE lcKreditadj   double;
DECLARE lcDebetnetto  double;
DECLARE lcKreditnetto double;
DECLARE lcVal double;
DECLARE lcValnetto,labarugi double;
DECLARE DONe INT DEFAULT 0;
DECLARE lcADetil,lcAParent,a,p CHAR(15);
DECLARE lcD,lcK,lcDa,lcKa,lcV,lcVnet,lcDnet,lcKnet,v,valkiri,valkanan,aw DOUBLE;
DECLARE i,j,n,l,d,k INT;
DECLARE g CHAR(1);
DECLARE r VARCHAR(50);
DECLARE SalDODetil CURSOR FOR
SELECT  acc,parent,debet,kredit,awal FROM TsalDO WHERE detil=1 AND round(abs(awal)+abs(debet)+abs(kredit),2)>0;
DECLARE Crugilaba CURSOR FOR
SELECT  n,awal,GROUP_, name, acc ,(awal+debet-kredit) as val,level_,detil,parent  FROM TsalDO  ;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONe = 1;
SET lcperiod = (SELECT Fdate2period(lcdatea));
SET lcperiodlalu = (SELECT Fdate2period(adddate(lcdatea,-1)));
SET lcperiodawal = (SELECT Fdate2period(MAKEDATE(year(lcdatea),1)));
drop temporary table IF EXISTS Tawal ;
CREATE TEMPORARY TABLE Tawal (acc VARCHAR(15),vlast DOUBLE);
drop temporary table IF EXISTS Tmutasi;
CREATE TEMPORARY TABLE Tmutasi (acc VARCHAR(15),debet DOUBLE,kredit DOUBLE);
drop temporary table IF EXISTS TsalDO;
CREATE TEMPORARY TABLE TsalDO (acc VARCHAR(15),name VARCHAR(50),parent VARCHAR(15),group_ char(1),detil tinyint(2),level_ smallint(5),awal DOUBLE,
              debet DOUBLE,kredit DOUBLE);
drop temporary table IF EXISTS TsalDOparent;
CREATE TEMPORARY TABLE TsalDOparent (acc VARCHAR(15),parent VARCHAR(15));
drop temporary table IF EXISTS rugilaba;
CREATE TEMPORARY TABLE rugilaba (nomer int,GROUP_ CHAR(1),remark varchar (100), acc VARCHAR(15),val DOUBLE,level_ int,detil int,parent VARCHAR(15));
INSERT INTO Tawal
SELECT acc, SUM(IF(isnull(vlast),0,vlast)) as vlast
FROM
(
  SELECT rac.acc,rac.vlast
      FROM rac
      WHERE rac.period=lcPeriod
)
as oawal GROUP BY acc;
INSERT INTO Tmutasi
SELECT acc,
    SUM(val*IF(dk="D",1,0)) as debet,
    SUM(val*IF(dk="K",1,0)) as kredit
    FROM acd
    WHERE acd.period=lcPeriod  GROUP BY acd.acc;
INSERT INTO TsalDO
SELECT acc.acc,
    acc.name,
    acc.parent,
    acc.group_,
    acc.detil,
    acc.level_,
    IF(isnull(Tawal.vlast),0,Tawal.Vlast) as awal,
    IF(isnull(Tmutasi.debet),0,Tmutasi.debet) as debet,
    IF(isnull(Tmutasi.kredit),0,Tmutasi.kredit) as kredit
    FROM  Tawal
    RIGHT OUTER JOIN acc
    LEFT OUTER JOIN Tmutasi
    ON acc.acc=Tmutasi.acc
    ON Tawal.acc=acc.acc;
INSERT INTO tsalDOparent
SELECT acc, parent FROM TsalDO WHERE detil=0;
OPEN SalDODetil;
  REPEAT
      FETCH SalDODetil INTO lcADetil,lcAParent,lcD,lcK,lcV;
               WHILE lcAParent<>'' DO
                  UPDATE TsalDO SET  debet=debet+lcD, kredit=kredit+lcK WHERE acc=lcAParent;
                  SET lcAParent=(SELECT parent FROM tsalDOparent WHERE acc=lcAParent);
               end WHILE;
    UNTIL DONe=1  END REPEAT;
   CLOSE SalDODetil;
set done=0;
  set j=0;
  set k=0;
  set i=(select count(acc) from Tsaldo);
  OPEN Crugilaba;
  REPEAT
    FETCH Crugilaba INTO n,aw,g,r,a,v,l,d,p;
    if i>0 then
       if g>"3" and v<>0 and ( l<= lclevel or (l<lclevel AND d=1)) then
         insert into rugilaba (nomer,group_,remark,acc,val,level_,detil,parent)
              values (j,g,concat(space(l*3),left(r,50)),a,if ((l=lclevel) or d=1,v*-1,0.00),l,d,p) ;
         if (a=(select acc from tsaldo where parent=p and awal+debet-kredit<>0 order by acc desc limit 1) and l=lclevel) then
           set j=j+1;
           insert into rugilaba (nomer,group_,remark,acc,val,level_,detil,parent)
           values (j,g,concat(space(l+14),'S.TOTAL ',left((select name from acc where acc=p),50)),a,if ((l=lclevel) or d=1,(select (awal+debet-kredit)*-1 from tsaldo where acc=p),0.00),0.00,d,'') ;
         end if;
         set j=j+1;
        end if;
    end if ;
    set i = i - 1;
    UNTIL done=1  END REPEAT;
  CLOSE Crugilaba;
  set labarugi=(select sum(val) from rugilaba where level_<>0);
  insert into rugilaba (nomer,group_,remark,acc,val,level_,detil,parent) values (j+1,3,'  LABA (RUGI)','',labarugi,0.00,0.00,'');
 drop temporary table if exists rugilabanow;
 create temporary table rugilabanow as select * from rugilaba;
drop temporary table IF EXISTS Tawal ;
CREATE TEMPORARY TABLE Tawal (acc VARCHAR(15),vlast DOUBLE);
drop temporary table IF EXISTS Tmutasi;
CREATE TEMPORARY TABLE Tmutasi (acc VARCHAR(15),debet DOUBLE,kredit DOUBLE);
drop temporary table IF EXISTS TsalDO;
CREATE TEMPORARY TABLE TsalDO (acc VARCHAR(15),name VARCHAR(50),parent VARCHAR(15),group_ char(1),detil tinyint(2),level_ smallint(5),awal DOUBLE,
              debet DOUBLE,kredit DOUBLE);
drop temporary table IF EXISTS TsalDOparent;
CREATE TEMPORARY TABLE TsalDOparent (acc VARCHAR(15),parent VARCHAR(15));
drop temporary table IF EXISTS rugilaba;
CREATE TEMPORARY TABLE rugilaba (nomer int,GROUP_ CHAR(1),remark varchar (100), acc VARCHAR(15),val DOUBLE,level_ int,detil int,parent VARCHAR(15));
INSERT INTO Tawal
SELECT acc, SUM(IF(isnull(vlast),0,vlast)) as vlast
FROM
(
  SELECT rac.acc,rac.vlast
      FROM rac
      WHERE rac.period=lcPeriodlalu
)
as oawal GROUP BY acc;
INSERT INTO Tmutasi
SELECT acc,
    SUM(val*IF(dk="D",1,0)) as debet,
    SUM(val*IF(dk="K",1,0)) as kredit
    FROM acd
    WHERE acd.period=lcPeriodlalu  GROUP BY acd.acc;
INSERT INTO TsalDO
SELECT acc.acc,
    acc.name,
    acc.parent,
    acc.group_,
    acc.detil,
    acc.level_,
    IF(isnull(Tawal.vlast),0,Tawal.Vlast) as awal,
    IF(isnull(Tmutasi.debet),0,Tmutasi.debet) as debet,
    IF(isnull(Tmutasi.kredit),0,Tmutasi.kredit) as kredit
    FROM  Tawal
    RIGHT OUTER JOIN acc
    LEFT OUTER JOIN Tmutasi
    ON acc.acc=Tmutasi.acc
    ON Tawal.acc=acc.acc;
INSERT INTO tsalDOparent
SELECT acc, parent FROM TsalDO WHERE detil=0;
set done=0;
OPEN SalDODetil;
  REPEAT
      FETCH SalDODetil INTO lcADetil,lcAParent,lcD,lcK,lcV;
               WHILE lcAParent<>'' DO
                  UPDATE TsalDO SET  debet=debet+lcD, kredit=kredit+lcK WHERE acc=lcAParent;
                  SET lcAParent=(SELECT parent FROM tsalDOparent WHERE acc=lcAParent);
               end WHILE;
    UNTIL DONe=1  END REPEAT;
   CLOSE SalDODetil;
  set done=0;
  set j=0;
  set k=0;
  set i=(select count(acc) from Tsaldo);
  OPEN Crugilaba;
  REPEAT
    FETCH Crugilaba INTO n,aw,g,r,a,v,l,d,p;
    if i>0 then
       if g>"3" and v<>0 and ( l<= lclevel or (l<lclevel AND d=1)) then
         insert into rugilaba (nomer,group_,remark,acc,val,level_,detil,parent)
              values (j,g,concat(space(l*3),left(r,50)),a,if ((l=lclevel) or d=1,v*-1,0.00),l,d,p) ;
         if (a=(select acc from tsaldo where parent=p and awal+debet-kredit<>0 order by acc desc limit 1) and l=lclevel) then
           set j=j+1;
           insert into rugilaba (nomer,group_,remark,acc,val,level_,detil,parent)
           values (j,g,concat(space(l+14),'S.TOTAL ',left((select name from acc where acc=p),50)),a,if ((l=lclevel) or d=1,(select (awal+debet-kredit)*-1 from tsaldo where acc=p),0.00),0.00,d,'') ;
         end if;
         set j=j+1;
        end if;
    end if ;
    set i = i - 1;
    UNTIL done=1  END REPEAT;
  CLOSE Crugilaba;
  set labarugi=(select sum(val) from rugilaba where level_<>0);
  insert into rugilaba (nomer,group_,remark,acc,val,level_,detil,parent) values (j+1,3,'  LABA (RUGI)','',labarugi,0.00,0.00,'');
 drop temporary table if exists rugilabalast;
 create temporary table rugilabalast as select * from rugilaba;
drop temporary table IF EXISTS Tawal ;
CREATE TEMPORARY TABLE Tawal (acc VARCHAR(15),vlast DOUBLE);
drop temporary table IF EXISTS Tmutasi;
CREATE TEMPORARY TABLE Tmutasi (acc VARCHAR(15),debet DOUBLE,kredit DOUBLE);
drop temporary table IF EXISTS TsalDO;
CREATE TEMPORARY TABLE TsalDO (acc VARCHAR(15),name VARCHAR(50),parent VARCHAR(15),group_ char(1),detil tinyint(2),level_ smallint(5),awal DOUBLE,
              debet DOUBLE,kredit DOUBLE);
drop temporary table IF EXISTS TsalDOparent;
CREATE TEMPORARY TABLE TsalDOparent (acc VARCHAR(15),parent VARCHAR(15));
drop temporary table IF EXISTS rugilaba;
CREATE TEMPORARY TABLE rugilaba (nomer int,GROUP_ CHAR(1),remark varchar (100), acc VARCHAR(15),val DOUBLE,level_ int,detil int,parent VARCHAR(15));
INSERT INTO Tawal
SELECT acc, SUM(IF(isnull(vlast),0,vlast)) as vlast
FROM
(
  SELECT rac.acc,rac.vlast as vlast
      FROM rac
      WHERE rac.period = lcPeriodawal
)
as oawal GROUP BY acc;
INSERT INTO Tmutasi
SELECT acc,
    SUM(val*IF(dk="D",1,0)) as debet,
    SUM(val*IF(dk="K",1,0)) as kredit
    FROM acd
    WHERE acd.period between lcPeriodawal and lcPeriod GROUP BY acd.acc;
INSERT INTO TsalDO
SELECT acc.acc,
    acc.name,
    acc.parent,
    acc.group_,
    acc.detil,
    acc.level_,
    IF(isnull(Tawal.vlast),0,Tawal.Vlast) as awal,
    IF(isnull(Tmutasi.debet),0,Tmutasi.debet) as debet,
    IF(isnull(Tmutasi.kredit),0,Tmutasi.kredit) as kredit
    FROM  Tawal
    RIGHT OUTER JOIN acc
    LEFT OUTER JOIN Tmutasi
    ON acc.acc=Tmutasi.acc
    ON Tawal.acc=acc.acc;
INSERT INTO tsalDOparent
SELECT acc, parent FROM TsalDO WHERE detil=0;
set done=0;
OPEN SalDODetil;
  REPEAT
      FETCH SalDODetil INTO lcADetil,lcAParent,lcD,lcK,lcV;
               WHILE lcAParent<>'' DO
                  UPDATE TsalDO SET  debet=debet+lcD, kredit=kredit+lcK WHERE acc=lcAParent;
                  SET lcAParent=(SELECT parent FROM tsalDOparent WHERE acc=lcAParent);
               end WHILE;
    UNTIL DONe=1  END REPEAT;
   CLOSE SalDODetil;
  set done=0;
  set j=0;
  set k=0;
  set i=(select count(acc) from Tsaldo);
  OPEN Crugilaba;
  REPEAT
    FETCH Crugilaba INTO n,aw,g,r,a,v,l,d,p;
    if i>0 then
       if g>"3" and v<>0 and ( l<= lclevel or (l<lclevel AND d=1)) then
         insert into rugilaba (nomer,group_,remark,acc,val,level_,detil,parent)
              values (j,g,concat(space(l*3),left(r,50)),a,if ((l=lclevel) or d=1,v*-1,0.00),l,d,p) ;
         if (a=(select acc from tsaldo where parent=p and awal+debet-kredit<>0 order by acc desc limit 1) and l=lclevel) then
           set j=j+1;
           insert into rugilaba (nomer,group_,remark,acc,val,level_,detil,parent)
           values (j,g,concat(space(l+14),'S.TOTAL ',left((select name from acc where acc=p),50)),a,if ((l=lclevel) or d=1,(select (awal+debet-kredit)*-1 from tsaldo where acc=p),0.00),0.00,d,'') ;
         end if;
         set j=j+1;
        end if;
    end if ;
    set i = i - 1;
    UNTIL done=1  END REPEAT;
  CLOSE Crugilaba;
  set labarugi=(select sum(val) from rugilaba where level_<>0);
  insert into rugilaba (nomer,group_,remark,acc,val,level_,detil,parent) values (j+1,3,'  LABA (RUGI)','',labarugi,0.00,0.00,'');
 drop temporary table if exists rugilabayear;
 create temporary table rugilabayear as select * from rugilaba;
select nomer,group_,remark,acc,sum(val) as valnow,sum(vallast) as vallast,sum(valyear) as valyear,level_,detil,parent from (
  select nomer,group_,remark,acc,val,0 as vallast,0 as valyear,level_,detil,parent from rugilabanow
  union all
  select nomer,group_,remark,acc,0,val,0,level_,detil,parent from rugilabalast
  union all
  select nomer,group_,remark,acc,0,0,val,level_,detil,parent from rugilabayear
) as Trugilaba group by Trugilaba.acc,Trugilaba.remark order by nomer,acc;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_Save
DROP PROCEDURE IF EXISTS `SP_Save`;
DELIMITER //
CREATE PROCEDURE `SP_Save`(
	IN `Pdate` datetime,
	IN `Psubjurnal` varchar(3),
	IN `Pjurnal` varchar(15)
)
BEGIN
  DECLARE pdatez datetime ;
  DECLARE pdatea datetime ;
  DECLARE ploc varchar(15);
call sp_delete (Psubjurnal,Pjurnal);
update sjh set sjh.`date`=DATE_ADD(date(sjh.`date`),INTERVAL '0:23:54' DAY_MINUTE) where sjh=pjurnal and sjh.date>=DATE_ADD(date(sjh.date),INTERVAL '0:23:55' DAY_MINUTE);
if (Psubjurnal='OMS') then
     call SP_SaveOrderB (Psubjurnal,Pjurnal);
end if ;
if (Psubjurnal='SPB') then
  call sp_savebcmasukspm(Pjurnal);
end if;
if (Psubjurnal='SPR') then
  call sp_savebcmasukspr(Pjurnal);
end if;
if (Psubjurnal='SPJ') then
  call sp_savebckeluarspj(Pjurnal);
end if;
if (Psubjurnal='LPH') then
  call Sp_SaveInv (Psubjurnal,Pjurnal);
  if ((select ifnull(oms.cmv,0) from lph left outer join oms on lph.oms = oms.oms where lph = Pjurnal) =0) then
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
  end if;
end if;
if (Psubjurnal='LPJ') then
  call Sp_SaveInv (Psubjurnal,Pjurnal);
 end if;
if (Psubjurnal='MSK') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'HUTANG');
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PELUNASAN');
end if;
if (Psubjurnal='SJT') then
  call SP_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
end if;
if (Psubjurnal='SJR') then
  call SP_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
end if;
if (Psubjurnal='RSK') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'HUTANG');
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
end if;
if (Psubjurnal='SPM') then
  call sp_savebckeluarspm (Pjurnal);
end if;
if (Psubjurnal='SJL') then
  update sjd,okd set sjd.price=okd.val/okd.qty,sjd.val=(okd.val/okd.qty)* sjd.qty where sjd.okl=okd.okl and sjd.inv=okd.inv and sjd.remark=okd.remark and sjd.sjh=Pjurnal;
  call SP_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
end if;
if (Psubjurnal='RKA') then
  call SP_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
end if;
if (Psubjurnal='KLR') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PIUTANG');
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PELUNASAN');
end if;
if (Psubjurnal='KLE') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PIUTANG');
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PELUNASAN');
end if;
if (Psubjurnal='UMH') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PELUNASAN');
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
end if;
if (Psubjurnal='CAD') then
   call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
end if;
if (Psubjurnal='MMO') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'HUTANG');
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
end if;
if (Psubjurnal='JIN') then
  call SP_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
end if;
if (Psubjurnal='BPP') then
  call SP_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
end if;
if (Psubjurnal='BPR') then
  call SP_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
end if;
if (Psubjurnal='LHP') then
  call SP_SaveInv (Psubjurnal,Pjurnal);
end if;
if (Psubjurnal='OPN') then
  call SP_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
end if;
if (Psubjurnal='TRM') then
  call SP_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
end if;
if (Psubjurnal='HPP') then
   set pdatez=(select date(datez) from hpro where hpro=pjurnal);
   set pdatea=(select date(`date`) from hpro where hpro=pjurnal);
   set ploc=(select loc from hpro where hpro=pjurnal);
    update lhd,lhp,hprod,hpro set lhd.price=hprod.hargapokokproduksi
    where lhd.lhp=lhp.lhp and lhd.inv=hprod.inv and hprod.hpro=pjurnal and hprod.hpro=hpro.hpro and lhp.loc<>'TP.001' and hpro.cct<>'111111'
    and lhp.date>=pdatea and lhp.date<adddate(pdatez,1);
    update lhd,lhp,hprod,hpro set lhd.price=hprod.hargapokokproduksi
    where lhd.lhp=lhp.lhp and lhd.inv=hprod.inv and hprod.hpro=pjurnal and hprod.hpro=hpro.hpro and lhp.loc ='TP.001' and hpro.cct='111111'
    and lhp.date>=pdatea and lhp.date<adddate(pdatez,1);
end if;
if (Psubjurnal='KBK') or (Psubjurnal='KBM') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'HUTANG');
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PELUNASAN');
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
end if;
if (Psubjurnal='KKP') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PIUTANG');
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PELUNASAN');
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
end if;
if (Psubjurnal='KPH') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'HUTANG');
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PELUNASAN');
 call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
 end if;
if (Psubjurnal='RKL') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PIUTANG');
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
end if;
if (Psubjurnal='CGR') then
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
end if;
if (Psubjurnal='AKT') then
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
end if;
if (Psubjurnal='INO') then
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
end if;
call Sp_SaveRac ('1',Pjurnal);
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_Save1
DROP PROCEDURE IF EXISTS `SP_Save1`;
DELIMITER //
CREATE PROCEDURE `SP_Save1`(
	IN `Pdate` datetime,
	IN `Psubjurnal` varchar(3),
	IN `Pjurnal` varchar(15)
)
BEGIN
  DECLARE pdatez datetime ;
  DECLARE pdatea datetime ;
  DECLARE ploc varchar(15);
call sp_delete (Psubjurnal,Pjurnal);
update sjh set sjh.`date`=DATE_ADD(date(sjh.`date`),INTERVAL '0:23:54' DAY_MINUTE) where sjh=pjurnal and sjh.date>=DATE_ADD(date(sjh.date),INTERVAL '0:23:55' DAY_MINUTE);
if (Psubjurnal='OMS') then
     call SP_SaveOrderB (Psubjurnal,Pjurnal);
elseif (Psubjurnal='LPH') then
  call Sp_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='MSK') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'HUTANG');
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PELUNASAN');
elseif (Psubjurnal='SJR') then
  call SP_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='RSK') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'HUTANG');
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='SJL') then
  update sjd,okd set sjd.price=okd.val/okd.qty,sjd.val=(okd.val/okd.qty)* sjd.qty where sjd.okl=okd.okl and sjd.inv=okd.inv and sjd.remark=okd.remark and sjd.sjh=Pjurnal;
  call SP_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='SJT') then
  call SP_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='RKA') then
  call SP_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='KLR') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PIUTANG');
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PELUNASAN');
elseif (Psubjurnal='KLE') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PIUTANG');
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PELUNASAN');
elseif (Psubjurnal='UMH') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PELUNASAN');
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='CAD') then
   call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='MMO') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'HUTANG');
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='JIN') then
  call SP_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='BPP') then
  call SP_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='LHP') then
  call SP_SaveInv (Psubjurnal,Pjurnal);
elseif (Psubjurnal='OPN') then
  call SP_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='TRM') then
  call SP_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='HPP') then
   set pdatez=(select date(datez) from hpro where hpro=pjurnal);
   set pdatea=(select date(`date`) from hpro where hpro=pjurnal);
   set ploc=(select loc from hpro where hpro=pjurnal);
  update lhd,lhp,hprod,hpro set lhd.price=hprod.hargapokokproduksi
    where lhd.lhp=lhp.lhp and lhd.inv=hprod.inv and hprod.hpro=pjurnal and hprod.hpro=hpro.hpro and lhp.loc<>'TP.001' and hpro.cct<>'111111'
    and lhp.date>=pdatea and lhp.date<adddate(pdatez,1);
    update lhd,lhp,hprod,hpro set lhd.price=hprod.hargapokokproduksi
    where lhd.lhp=lhp.lhp and lhd.inv=hprod.inv and hprod.hpro=pjurnal and hprod.hpro=hpro.hpro and lhp.loc ='TP.001' and hpro.cct='111111'
    and lhp.date>=pdatea and lhp.date<adddate(pdatez,1);
elseif (Psubjurnal='KBK') or (Psubjurnal='KBM') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'HUTANG');
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PELUNASAN');
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='KKP') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PIUTANG');
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PELUNASAN');
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='KPH') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'HUTANG');
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PELUNASAN');
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='RKL') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PIUTANG');
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='CGR') then
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='AKT') then
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='BPR') then
  call SP_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='LPJ') then
  call Sp_SaveInv (Psubjurnal,Pjurnal);
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_Save2
DROP PROCEDURE IF EXISTS `SP_Save2`;
DELIMITER //
CREATE PROCEDURE `SP_Save2`(Pdate datetime,
  Psubjurnal varchar(3),
  Pjurnal varchar(15))
BEGIN
  DECLARE pdatez datetime ;
  DECLARE pdatea datetime ;
  DECLARE ploc varchar(15);
call sp_delete2 (Psubjurnal,Pjurnal);
update sjh set sjh.`date`=DATE_ADD(date(sjh.`date`),INTERVAL '0:23:54' DAY_MINUTE) where sjh=pjurnal and sjh.date>=DATE_ADD(date(sjh.date),INTERVAL '0:23:55' DAY_MINUTE);
if (Psubjurnal='OMS') then
     call SP_SaveOrderB (Psubjurnal,Pjurnal);
elseif (Psubjurnal='LPH') then
  call Sp_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='MSK') then
 call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='SJR') then
  call SP_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='RSK') then
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='SJL') then
  update sjd,okd set sjd.price=okd.val/okd.qty,sjd.val=(okd.val/okd.qty)* sjd.qty where sjd.okl=okd.okl and sjd.inv=okd.inv and sjd.remark=okd.remark and sjd.sjh=Pjurnal;
  call SP_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='SJT') then
  call SP_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='RKA') then
  call SP_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='KLR') then
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='UMH') then
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='CAD') then
   call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='MMO') then
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='JIN') then
  call SP_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='BPP') then
  call SP_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='LHP') then
  call SP_SaveInv (Psubjurnal,Pjurnal);
elseif (Psubjurnal='OPN') then
  call SP_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='TRM') then
  call SP_SaveInv (Psubjurnal,Pjurnal);
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='HPP') then
   set pdatez=(select date(datez) from hpro where hpro=pjurnal);
   set pdatea=(select date(`date`) from hpro where hpro=pjurnal);
   set ploc=(select loc from hpro where hpro=pjurnal);
  update lhd,lhp,hprod,hpro set lhd.price=hprod.hargapokokproduksi
    where lhd.lhp=lhp.lhp and lhd.inv=hprod.inv and hprod.hpro=pjurnal and hprod.hpro=hpro.hpro and lhp.loc<>'TP.001' and hpro.cct<>'111111'
    and lhp.date>=pdatea and lhp.date<adddate(pdatez,1);
    update lhd,lhp,hprod,hpro set lhd.price=hprod.hargapokokproduksi
    where lhd.lhp=lhp.lhp and lhd.inv=hprod.inv and hprod.hpro=pjurnal and hprod.hpro=hpro.hpro and lhp.loc ='TP.001' and hpro.cct='111111'
    and lhp.date>=pdatea and lhp.date<adddate(pdatez,1);
elseif (Psubjurnal='KBK') or (Psubjurnal='KBM') then
 call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='KKP') then
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='KPH') then
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='RKL') then
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='CGR') then
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
elseif (Psubjurnal='AKT') then
  call Sp_SaveAcd (Pdate,Psubjurnal,Pjurnal);
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_Save3
DROP PROCEDURE IF EXISTS `SP_Save3`;
DELIMITER //
CREATE PROCEDURE `SP_Save3`(Pdate datetime,
  Psubjurnal varchar(3),
  Pjurnal varchar(15))
BEGIN
  DECLARE pdatez datetime ;
  DECLARE pdatea datetime ;
  DECLARE ploc varchar(15);
call sp_delete3 (Psubjurnal,Pjurnal);
update sjh set sjh.`date`=DATE_ADD(date(sjh.`date`),INTERVAL '0:23:54' DAY_MINUTE) where sjh=pjurnal and sjh.date>=DATE_ADD(date(sjh.date),INTERVAL '0:23:55' DAY_MINUTE);
if (Psubjurnal='MSK') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'HUTANG');
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PELUNASAN');
elseif (Psubjurnal='RSK') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'HUTANG');
elseif (Psubjurnal='KLR') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PIUTANG');
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PELUNASAN');
elseif (Psubjurnal='UMH') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PELUNASAN');
elseif (Psubjurnal='MMO') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'HUTANG');
elseif (Psubjurnal='KBK') or (Psubjurnal='KBM') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'HUTANG');
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PELUNASAN');
elseif (Psubjurnal='KKP') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PIUTANG');
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PELUNASAN');
elseif (Psubjurnal='KPH') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'HUTANG');
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PELUNASAN');
elseif (Psubjurnal='RKL') then
  call SP_SaveRhp (Psubjurnal,Pjurnal,'PIUTANG');
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_SaveAcd
DROP PROCEDURE IF EXISTS `Sp_SaveAcd`;
DELIMITER //
CREATE PROCEDURE `Sp_SaveAcd`(
	IN `Pdate` datetime,
	IN `Psubjurnal` varchar(3),
	IN `Pjurnal` varchar(15)
)
BEGIN
declare kondisi datetime;
set kondisi=Pdate;
if (Psubjurnal='LPH') then
insert into acd select *,'' as bsa from (
 SELECT ind.jurnal, ind.period, jenis.acc as acc, ind.date,
 ifnull(sum(ind.val),0) as val, convert('' using latin1) as cct, max(ind.rem) as rem, convert('D' using latin1) as dk,Psubjurnal as  subjurnal, 0 as adj
 FROM ind
	left outer join inv on ind.inv=inv.inv
	left outer join jenis on inv.jenis=jenis.jenis
	left outer join lph on ind.jurnal=lph.lph
	left outer join oms on lph.oms=oms.oms
	WHERE ind.jurnal=Pjurnal and jenis.acc<>space(15) and left(ind.inv,1)<>'9' and oms.jenispo<>'2'
	GROUP BY ind.jurnal, ind.period, jenis.acc, ind.date,ind.dk
union all
SELECT ind.jurnal, ind.period, grp.acchtbfl as acc, ind.date,
 ifnull(sum(ind.val),0) as val, convert('' using latin1) as cct, lph.remark as remark, convert('K' using latin1),Psubjurnal as  subjurnal, 0 as adj
 FROM ind
	left outer join inv on ind.inv=inv.inv
	left outer join lph on ind.jurnal=lph.lph
  left outer join oms on lph.oms=oms.oms
  left outer join sub on lph.sub=sub.sub
  left outer join grp on sub.grp=grp.grp
	WHERE ind.jurnal=Pjurnal and (oms.group_ =3 or oms.group_ =1) and left(ind.inv,1)<>'9' and oms.jenispo<>'2'
	GROUP BY ind.jurnal, ind.period
 union all
  select lpd.lph, lph.period,(jenis.acc) as acc, lph.date,
   ifnull(((oms_in.val/oms_in.qty)*oms.kurs)*lpd.qty,0) as val,oms_in.cct as cct,lph.remark,convert('K' using latin1) as dk,Psubjurnal as  subjurnal, 0 as adj
   from lpd left outer join jenis on left(lpd.inv,5) = jenis.jenis left outer join lph on lpd.lph=lph.lph left outer join oms_in on lph.oms=oms_in.oms and lpd.inv=oms_in.inv and lpd.remark=oms_in.remark left outer join oms on  oms_in.oms=oms.oms
  where left(lpd.inv,3)='900' and lpd.lph=pjurnal
union all
select lpd.lph, lph.period,(grp.acchtbfl) as acc, lph.date,
   ifnull(((oms_in.val/oms_in.qty)*oms.kurs)*lpd.qty,0) as val,oms_in.cct as cct,lph.remark,convert('D' using latin1) as dk,Psubjurnal as  subjurnal, 0 as adj
   from lpd left outer join lph on lpd.lph=lph.lph left join grp on left(lph.sub,3) = grp.grp  left outer join oms_in on lph.oms=oms_in.oms and lpd.inv=oms_in.inv and lpd.remark=oms_in.remark left outer join oms on  oms_in.oms=oms.oms
  where left(lpd.inv,3)='900' and lpd.lph=Pjurnal
) as xacd;
elseif (Psubjurnal='MSK') then
insert into acd select *,'' bsa from (
select msl.msk,msk.period,grp.acchtbfl as acc,max(msk.date) as date,
  sum(if(ind.val=null,0,ind.val)) as val,convert('' using latin1) as cct,max(msk.remark) as remark,convert('D' using latin1) as dk,psubjurnal as subjurnal,0 as adj
  from msl
  inner join msk on msl.msk=msk.msk
  left outer join ind on ind.jurnal=msl.lph
  left outer join oms on msl.oms=oms.oms
  left outer join sub on msk.sub=sub.sub
  left outer join grp on grp.grp=sub.grp
  where msl.msk=Pjurnal  and (left(msl.oms,3)) in (select noseri from modul where menuid='232' or menuid='235') and left(ind.inv,1)<>9
  group by msl.msk,msk.period
union all
select msk,period,acc,date,sum(val) as val,cct,remark,dk,subjurnal,adj from (
select msd.msk,msk.period,(select acc from grp where grp.grp=sub.grp) as acc,msk.date as date,
  if(left(msd.nofp,3)in ('070','071'),(msd.dpp*msd.kurs)-(ifnull(umkp.val,0)*msd.kurs),(msd.val*msd.kurs)-(ifnull(umkp.val,0)*msd.kurs)) as val,
  convert('' using latin1) as cct,msd.remark as remark,convert('K' using latin1) as dk,Psubjurnal as subjurnal,0 as adj
  from msd left outer join msk on msd.msk=msk.msk
  left outer join  (select umkp.msk,trim(umkp.invoice) invoice,sum(umkp.val) as val from umkp where umkp.msk=Pjurnal group by trim(invoice)) umkp on msd.msk=umkp.msk and trim(msd.invo)=trim(umkp.invoice)
  left outer join sub on msk.sub=sub.sub
  where msd.msk=Pjurnal
) as x where val<>0 group by msk,acc
union all
select msk.msk,msk.period,(select grp.accum from grp where grp.grp=sub.grp limit 1) as acc,max(msk.date) as date,
  sum(umkp.val*ifnull(umkp.kurs,1)) as val,convert('' using latin1) as cct,max(umkp.remark) as remark,
  umkp.dk as dk,Psubjurnal as subjurnal,0 as adj
  from umkp
  left outer join msk on umkp.msk=msk.msk
  left outer join sub on msk.sub=sub.sub
  where umkp.msk=Pjurnal and umkp.val<>0
  group by umkp.msk,msk.period
union all
select msx.msk,msk.period,msx.acc,msk.date,
  (msx.val*ifnull(msx.kurs,1)) as val,trim(msx.cct) as cct,msx.remark,msx.dk,Psubjurnal as subjurnal,0 as adj
  from msx left outer join msk on msx.msk=msk.msk
  where msx.msk=Pjurnal and msx.val<>0
union all
SELECT msk.msk AS jurnal, msk.period,if(left(msd.nofp,3) in ('070','071'),if(month(msd.tglsfp)<>month(msk.date),'11070111','11070106'),if(month(msd.tglsfp)<>month(msk.date),grp.accppnbm ,grp.accppn)) as acc,max(msk.date) as date,
	sum(msd.ppn*ifnull(msd.kurs,1)) as val,
	convert('' using latin1) as cct, max(msd.remark) as remark, convert('D' using latin1) as dk, Psubjurnal as  subjurnal, 0 as adj
	FROM msd
	left outer join msk on msd.msk=msk.msk
	left outer join sub on msk.sub=sub.sub
  left outer join grp on grp.grp=sub.grp
	WHERE msd.msk=Pjurnal and msd.ppn>0
group by msk.msk,msk.period
union all
SELECT msk.msk AS jurnal, msk.period,if(month(msd.tglsfp)<>month(msk.date),'11070111','11070106') as acc,max(msk.date) as date,
	sum(msd.ppn*ifnull(msd.kurs,1)) as val,
	convert('' using latin1) as cct, max(msd.remark) as remark, convert('K' using latin1) as dk, Psubjurnal as  subjurnal, 0 as adj
	FROM msd
	left outer join msk on msd.msk=msk.msk
	left outer join sub on msk.sub=sub.sub
  left outer join grp on grp.grp=sub.grp
	WHERE msd.msk=Pjurnal and msd.ppn>0 and left(msd.nofp,3) in ('070','071')
group by msk.msk,msk.period
union all
select msk.msk,msk.period,'52081801' as acc,max(msk.date) as date,
  abs(sum(umkp.val*ifnull(msk.kurs-umkp.kurs,1))) as val,'121105' as cct,max(umkp.remark) as remark,
  if(umkp.kurs<msk.kurs,'K','D') as dk,Psubjurnal as subjurnal,0 as adj
  from umkp
  left outer join msk on umkp.msk=msk.msk
  left outer join sub on msk.sub=sub.sub
  where umkp.msk=Pjurnal and umkp.val<>0 and umkp.kurs>1 and msk.kurs>1
  group by umkp.msk,msk.period
union all
select msk,period,acc,date,sum(val) as val,cct,remark,dk,subjurnal,adj from (
select msx.msk,msk.period,(select acc from grp where grp.grp=sub.grp) as acc,msk.date as date,
 (ifnull(msx.pph23,0)+ifnull(msx.pph4ay2,0)+ifnull(pph15,0))*msx.kurs as val,
  convert('' using latin1) as cct,msx.remark as remark,convert('D' using latin1) as dk,'MSK' as subjurnal,0 as adj
  from msx left outer join msk on msx.msk=msk.msk
    left outer join sub on msk.sub=sub.sub
  where msx.msk=Pjurnal and (ifnull(msx.pph23,0)+ifnull(msx.pph4ay2,0)+ifnull(pph15,0))>0
) as x where val<>0 group by msk,acc
union all
select msk,period,acc,date,sum(val) as val,cct,remark,dk,subjurnal,adj from (
select msx.msk,msk.period,if(msx.pph23>0,'21060202',if(msx.pph4ay2>0,'21060203','21060207')) as acc,msk.date as date,
 (ifnull(msx.pph23,0)+ifnull(msx.pph4ay2,0)+ifnull(pph15,0))*msx.kurs as val,
  convert('' using latin1) as cct,msk.remark as remark,convert('K' using latin1) as dk,'MSK' as subjurnal,0 as adj
  from msx left outer join msk on msx.msk=msk.msk
    left outer join sub on msk.sub=sub.sub
  where msx.msk=Pjurnal and (ifnull(msx.pph23,0)+ifnull(msx.pph4ay2,0)+ifnull(pph15,0))>0
) as x where val<>0 group by msk,acc
) as xacd;
elseif (Psubjurnal='SJR') then
insert into acd select *,'' as bsa from (
 SELECT ind.jurnal, ind.period, jenis.acc as acc, ind.date,
 sum(ind.val) as val, convert('' using latin1) as cct, max(ind.rem) as remark, convert('K' using latin1) as dk,Psubjurnal as  subjurnal, 0 as adj
 FROM ind
	left outer join inv on ind.inv=inv.inv
	left outer join jenis on inv.jenis=jenis.jenis
	WHERE ind.jurnal=Pjurnal and jenis.acc<>space(15)
	GROUP BY ind.jurnal, ind.period, jenis.acc, ind.date,ind.dk
union all
SELECT ind.jurnal, ind.period, grp.acchtbfl as acc, ind.date,
 sum(ind.val) as val, convert('' using latin1) as cct, sjr.remark as remark, convert('D' using latin1),Psubjurnal as  subjurnal, 0 as adj
 FROM ind
	left outer join inv on ind.inv=inv.inv
	left outer join sjr on ind.jurnal=sjr.sjr
   left outer join sub on sjr.sub=sub.sub
  left outer join grp on grp.grp=sub.grp
	WHERE ind.jurnal=Pjurnal
	GROUP BY ind.jurnal, ind.period
) as xacd order by dk;
elseif (Psubjurnal='SJT') then
insert into acd select *, '' as bsa from (
 SELECT ind.jurnal, ind.period, jenis.acc as acc, ind.date,
 sum(ind.val) as val, '' as cct, max(ind.rem) as rem, 'K' as dk,Psubjurnal as  subjurnal, 0 as adj
 FROM ind
	left outer join inv on ind.inv=inv.inv
	left outer join jenis on inv.jenis=jenis.jenis
  inner join sjr on sjr.sjr=ind.jurnal
	WHERE ind.jurnal=Pjurnal and jenis.acc<>space(15) and left(sjr.sub,1)<>'1'
	GROUP BY ind.jurnal, ind.period, jenis.acc, ind.date,ind.dk
union all
SELECT ind.jurnal, ind.period, '11050703' as acc, ind.date,
 sum(ind.val) as val, '' as cct, sjr.remark as rem, 'D' as dk,Psubjurnal as  subjurnal, 0 as adj
 FROM ind
	left outer join inv on ind.inv=inv.inv
	left outer join sjr on ind.jurnal=sjr.sjr
   left outer join sub on sjr.sub=sub.sub
  left outer join grp on grp.grp=sub.grp
	WHERE ind.jurnal=Pjurnal and left(sjr.sub,1)<>'1'
	GROUP BY ind.jurnal, ind.period
) as xacd order by dk;
elseif (Psubjurnal='RSK') then
insert into acd select *, '' as bsa from (
select rmd.rms,rms.period,(select acc from grp where grp.grp=sub.grp) as acc,max(rms.date) as date,
  sum(rmd.val*if(rms.kurs=0,1,ifnull(rms.kurs,1))*if(rms.ppn=1 and left(rms.fpj,2)<>'07',1.1,1)) as val,convert('' using latin1) as cct,max(rms.remark) as remark,convert('D' using latin1) as dk,Psubjurnal as subjurnal,0 as adj
  from rmd left outer join rms on rmd.rms=rms.rms
  left outer join sub on rms.sub=sub.sub
  where rmd.rms=Pjurnal
  group by rmd.rms,rms.period
union all
SELECT rms.rms AS jurnal, rms.period,grp.accppn,max(rms.date) as date,
	sum(rmd.val*if(rms.kurs=0,1,ifnull(rms.kurs,1))* if(rms.ppn=1,0.1,0)) as val,
	convert('' using latin1) as cct, max(rms.remark) as remark, convert('K' using latin1) as dk, Psubjurnal as  subjurnal, 0 as adj
	FROM rmd
	left outer join rms on rmd.rms=rms.rms
	left outer join sub on rms.sub=sub.sub
	left outer join grp on sub.grp=grp.grp
	WHERE rmd.rms=Pjurnal and left(rms.fpj,2)<>'07'
group by rms.rms,rms.period,grp.accppn
union all
SELECT rms.rms AS jurnal, rms.period,if(left(rms.fpj,2)='07','11070106',grp.accppn),max(rms.date) as date,
	sum(rmd.val*if(rms.kurs=0,1,ifnull(rms.kurs,1))* if(rms.ppn=1,0.1,0)) as val,
	convert('' using latin1) as cct, max(rms.remark) as remark, convert('K' using latin1) as dk, Psubjurnal as  subjurnal, 0 as adj
	FROM rmd
	left outer join rms on rmd.rms=rms.rms
	left outer join sub on rms.sub=sub.sub
	left outer join grp on sub.grp=grp.grp
	WHERE rmd.rms=Pjurnal and left(rms.fpj,2)='07'
group by rms.rms,rms.period,grp.accppn
union all
SELECT rms.rms AS jurnal, rms.period,'11070106' acc,max(rms.date) as date,
	sum(rmd.val*if(rms.kurs=0,1,ifnull(rms.kurs,1))* if(rms.ppn=1,0.1,0)) as val,
	convert('' using latin1) as cct, max(rms.remark) as remark, convert('D' using latin1) as dk, Psubjurnal as  subjurnal, 0 as adj
	FROM rmd
	left outer join rms on rmd.rms=rms.rms
	left outer join sub on rms.sub=sub.sub
	left outer join grp on sub.grp=grp.grp
	WHERE rmd.rms=Pjurnal  and left(rms.fpj,2)='07'
group by rms.rms,rms.period,grp.accppn
union all
select rmd.rms,rms.period,grp.acchtbfl as acc,max(rms.date) as date,
  sum(rmd.val) as val,convert('' using latin1) as cct,max(rms.remark) as remark,convert('K' using latin1) as dk,psubjurnal as subjurnal,0 as adj
  from rmd
  left outer join rms on rmd.rms=rms.rms
  left outer join ind on ind.jurnal=rms.rma and ind.inv=rmd.inv
  left outer join sub on rms.sub=sub.sub
  left outer join grp on grp.grp=sub.grp
  where rmd.rms=Pjurnal
  group by rmd.rms,rms.period
) as xacd;
elseif (Psubjurnal='SJL') then
insert into acd select *, '' as bsa from (
 SELECT ind.jurnal, ind.period, jenis.acc as acc, ind.date,
 sum(ind.val) as val, convert('' using latin1) as cct, max(ind.rem) as remark, convert('K' using latin1) as dk,Psubjurnal as  subjurnal, 0 as adj
 FROM ind
	left outer join inv on ind.inv=inv.inv
	left outer join jenis on inv.jenis=jenis.jenis
	WHERE ind.jurnal=Pjurnal and jenis.acc<>space(15)
	GROUP BY ind.jurnal, ind.period, jenis.acc, ind.date,ind.dk
union all
SELECT ind.jurnal, ind.period, jenis.acchppbf as acc, ind.date,
 sum(ind.val) as val, convert('' using latin1) as cct, sjh.remark as remark, convert('D' using latin1),Psubjurnal as  subjurnal, 0 as adj
 FROM ind
	left outer join inv on ind.inv=inv.inv
  left outer join jenis on inv.jenis=jenis.jenis
	left outer join sjh on ind.jurnal=sjh.sjh
	WHERE ind.jurnal=Pjurnal
  GROUP BY ind.jurnal, ind.period,jenis.acchppbf
union all
select * from (
  select sjh.sjh,sjh.period,grp.accoang,sjh.date,
   (select ifnull(okl.valkg,0) * sjd.qty from okl where okl.okl=sjd.okl) val,
   convert('' using latin1) as cct, sjh.remark as remark, convert('K' using latin1),Psubjurnal as  subjurnal, 0 as adj
   from sjd left outer join sjh on sjd.sjh=sjh.sjh left outer join sub on sjh.sub=sub.sub
   left outer join grp on sub.grp=grp.grp where sjd.sjh=Pjurnal and sjh.angkutan<>''
  union all
  select sjh.sjh,sjh.period,grp.accpang,sjh.date,
   (select ifnull(okl.valkg,0) * sjd.qty from okl where okl.okl=sjd.okl),
   convert('210000' using latin1) as cct, sjh.remark as remark, convert('D' using latin1),Psubjurnal as  subjurnal, 0 as adj
   from sjd left outer join sjh on sjd.sjh=sjh.sjh left outer join sub on sjh.sub=sub.sub
   left outer join grp on sub.grp=grp.grp where sjd.sjh=Pjurnal  and sjh.angkutan<>''
  ) as xsjh where val is not null
) as xacd order by dk;
elseif (Psubjurnal='KLR') then
insert into acd select *,'' as bsa from (
select kll1.klr,fdate2period(klr.date) as period,jenis.acchpp as acc,klr.date as date,
 sum(if(ind.val=null,0,ind.val/ind.qty)*kll1.qty*ifnull(konversi.konversi,1)) as val,convert('' using latin1) as cct,klr.remark as remark,
  convert('D' using latin1) as dk,psubjurnal as subjurnal,0 as adj
  from (select distinct klr,sjh,kll.qty as qty,kll.val from kll where kll.val>0 ) as kll1
  left outer join klr on kll1.klr=klr.klr
  left outer join ind on ind.jurnal=kll1.sjh
  left outer join sjd on kll1.sjh = sjd.sjh
  left outer join konversi on sjd.inv=konversi.inv and sjd.unit=konversi.unit
  left outer join inv on ind.inv=inv.inv left outer join jenis on inv.jenis=jenis.jenis
  where kll1.klr=pjurnal
  group by kll1.klr
union all
select klr.klr,fdate2period(klr.date) as period,(select grp.acc from grp where grp.grp=sub.grp limit 1) as acc,max(klr.date) as date,
  (sum(kld.dpp*klr.kurs)-ifnull((select sum(umk.val) from umk where klr=pjurnal),0))
  *if(sum(kld.ppn)>0,01.1,1) as val,convert('' using latin1) as cct,max(kld.remark) as remark,
  convert('D' using latin1) as dk,Psubjurnal as subjurnal,0 as adj
  from kld
  left outer join klr on kld.klr=klr.klr
  left outer join okl on kld.okl=okl.okl
  left outer join sub on klr.sub=sub.sub
  where kld.klr=Pjurnal
  group by kld.klr,klr.period
union all
select klr.klr,fdate2period(klr.date) as period,(select grp.accum from grp where grp.grp=sub.grp limit 1) as acc,max(klr.date) as date,
  sum(umk.val*if(umk.kurs=0,1,klr.kurs)) as val,convert('' using latin1) as cct,max(umk.remark) as remark,
  convert (umk.dk using latin1) as dk,Psubjurnal as subjurnal,0 as adj
  from umk
  left outer join klr on umk.klr=klr.klr
  left outer join sub on klr.sub=sub.sub
  where umk.klr=Pjurnal and umk.val<>0
  group by umk.klr,klr.period
union all
select max(klr) as klr,max(period) as period,acc,max(date) as date,sum(val*if(dk='K',1,-1)) as val,
convert('' using latin1) as cct,max(remark) as remark,
if(sum(val*if(dk='D',1,-1))>0,convert('D' using latin1),convert('K' using latin1)) as dk,max(psubjurnal) as psubjurnal,max(adj) as adj from
(
select kld.klr,fdate2period(klr.date) as period,
(select jenis.accrev from sjd,inv,jenis,kll where sjd.sjh=kll.sjh and sjd.inv=inv.inv and inv.jenis=jenis.jenis and kll.klr=klr.klr limit 1) as acc,
max(klr.date) as date,
  sum(kld.dpp*if(kld.kurs=0 or kld.kurs is null,klr.kurs,klr.kurs)) as val,convert('' using latin1) as cct,max(klr.remark) as remark,
  convert('K' using latin1) as dk,psubjurnal as subjurnal,0 as adj
  from kld
  left outer join klr on kld.klr=klr.klr
  where kld.klr=pjurnal and kld.okl is null
  group by kld.klr,fdate2period(klr.date)
) as xxx where acc is not null group by acc
union all
select max(klr.klr) as klr,max(fdate2period(klr.date)) as period,if((select F_getawalkodebrg(Pjurnal)) =1,grp.accslsbhn,grp.accsls) as accsls,max(klr.date) as date,sum(kld.dpp*klr.kurs) as val,
  convert('' using latin1) as cct,max(klr.remark) as remark,
  'K' as dk,psubjurnal as psubjurnal,0 as adj
  from kld left outer join klr on kld.klr=klr.klr
  left outer join sub on klr.sub=sub.sub left outer join grp on sub.grp=grp.grp
  where klr.klr=Pjurnal group by klr.klr
union all
SELECT klr.klr, fdate2period(klr.date) as period,grp.accppn as acc,max(klr.date) as date,
 	(sum(kld.dpp*klr.kurs)-ifnull((select sum(umk.val) from umk where klr=pjurnal),0))
  *if(sum(kld.ppn)>0,0.1,0) as val,
	convert('' using latin1) as cct, max(kld.remark) as remark,
  convert('K' using latin1) as dk, Psubjurnal as  subjurnal, 0 as adj
	FROM kld
	left outer join klr on kld.klr=klr.klr
	left outer join sub on klr.sub=sub.sub
  left outer join grp on grp.grp=sub.grp
	WHERE kld.klr=Pjurnal and
  (select round(sum(kld.dpp),2) from kld where klr=Pjurnal)<>(select ifnull(round(sum(umk.val),2),0) from umk where klr=Pjurnal and substring(jurnal,5,4)<>'1107' )
 group by klr.klr,fdate2period(klr.date),grp.accppn
 union all
select kll1.klr,fdate2period(klr.date) as period,jenis.acchppbf as acc,klr.date as date,
 sum(if(ind.val=null,0,ind.val/ind.qty)*kll1.qty*ifnull(konversi.konversi,1)) as val,convert('' using latin1) as cct,klr.remark as remark,
  convert('K' using latin1) as dk,psubjurnal as subjurnal,0 as adj
  from (select distinct klr,sjh,kll.qty as qty,kll.val from kll where kll.val>0 ) as kll1
  left outer join klr on kll1.klr=klr.klr
  left outer join ind on ind.jurnal=kll1.sjh
  left outer join sjd on kll1.sjh = sjd.sjh
  left outer join konversi on sjd.inv=konversi.inv and sjd.unit=konversi.unit
  left outer join inv on ind.inv=inv.inv left outer join jenis on inv.jenis=jenis.jenis
  where kll1.klr=pjurnal
  group by kll1.klr
) as xacd where round(val,2) <>0;
elseif (Psubjurnal='KLE') then
insert into acd select *,'' as bsa FROM (
select kll1.klr,fdate2period(klri.date) as period,jenis.acchpp as acc,klri.date as date,
 sum(if(ind.val=null,0,ind.val/ind.qty)*kll1.qty*ifnull(konversi.konversi,1)) as val,convert('' using latin1) as cct,'' as remark,
  convert('D' using latin1) as dk,'KLR' as subjurnal,0 as adj
  from (select distinct klr,sjh,kll.qty as qty,kll.val from kll where kll.val>0 ) as kll1
  left outer join klri on kll1.klr=klri.klri
  left outer join ind on ind.jurnal=kll1.sjh
  left outer join sjd on kll1.sjh = sjd.sjh
  left outer join konversi on sjd.inv=konversi.inv and sjd.unit=konversi.unit
  left outer join inv on ind.inv=inv.inv left outer join jenis on inv.jenis=jenis.jenis
  where kll1.klr=Pjurnal
  group by kll1.klr
UNION ALL
select klri.klri,fdate2period(klri.date) as period,(select grp.acc from grp where grp.grp=sub.grp limit 1) as acc,max(klri.date) as date,
  ((klri.val*klri.kurs)-ifnull((select sum(umk.val) from umk where klr=Pjurnal),0))
   as val,convert('' using latin1) as cct,max(klrid.remark) as remark,
  convert('D' using latin1) as dk,'KLR' as subjurnal,0 as adj
  from klrid
  left outer join klri on klrid.klri=klri.klri
  left outer join sub on klri.sub=sub.sub
  where klrid.klri=Pjurnal
  group by klrid.klri,klri.period
UNION ALL
select klri.klri,fdate2period(klri.date) as period,(select grp.accum from grp where grp.grp=sub.grp limit 1) as acc,max(klri.date) as date,
  sum(umk.val*if(umk.kurs=0,1,klri.kurs)) as val,convert('' using latin1) as cct,max(umk.remark) as remark,
  convert (umk.dk using latin1) as dk,'KLR' as subjurnal,0 as adj
  from umk
  left outer join klri on umk.klr=klri.klri
  left outer join sub on klri.sub=sub.sub
  where umk.klr=Pjurnal and umk.val<>0
  group by umk.klr,klri.period
UNION ALL
select max(klri) as klri,max(period) as period,acc,max(date) as date,sum(val*if(dk='K',1,-1)) as val,
convert('' using latin1) as cct,max(remark) as remark,
if(sum(val*if(dk='D',1,-1))>0,convert('D' using LATIN1),convert('K' using LATIN1)) as dk,max('KLR') as subjurnal,max(adj) as adj from
(
select klrid.klri,fdate2period(klri.date) as period,
(select jenis.accrev from sjd,inv,jenis,kll where sjd.sjh=kll.sjh and sjd.inv=inv.inv and inv.jenis=jenis.jenis and kll.klr=klri.klri limit 1) as acc,
max(klri.date) as date,
  (klri.val*if(klri.kurs=0 or klri.kurs is null,klri.kurs,klri.kurs)) as val,convert('' using latin1) as cct,'' as remark,
  convert('K' using latin1) as dk,'KLR' as subjurnal,0 as adj
  from klrid
  left outer join klri on klrid.klri=klri.klri
  where klrid.klri=Pjurnal
  group by klrid.klri,fdate2period(klri.date)
) as xxx where acc is not null group by acc
UNION ALL
select max(klri.klri) as klri,max(fdate2period(klri.date)) as period,if((select F_getawalkodebrg(Pjurnal)) =1,grp.accslsbhn,grp.accsls) as accsls,max(klri.date) as date,if(grp.grp='111',sum(klrid.packaging),klri.val) *klri.kurs as val,
  convert('' using latin1) as cct,'' as remark,
  'K' as dk,'KLR' as subjurnal,0 as adj
  from klrid left outer join klri on klrid.klri=klri.klri
  left outer join sub on klri.sub=sub.sub left outer join grp on sub.grp=grp.grp
  where klri.klri=Pjurnal group by klri.klri
UNION ALL
SELECT klri.klri, fdate2period(klri.date) as period,grp.accppn as acc,max(klri.date) as date,
 	sum(klrid.packaging*klri.kurs)
  *if(grp.grp='111',0.1,0) as val,
	convert('' using latin1) as cct, max(klrid.remark) as remark,
  convert('K' using latin1) as dk, Psubjurnal as  subjurnal, 0 as adj
	FROM klrid
	left outer join klri on klrid.klri=klri.klri
	left outer join sub on klri.sub=sub.sub
  left outer join grp on grp.grp=sub.grp
	WHERE klrid.klri=Pjurnal and
  (select round(SUM(klrid.packaging),2) from klrid where klri.klri=Pjurnal)<>(select ifnull(round(sum(umk.val),2),0) from umk where klri.klri=Pjurnal and substring(jurnal,5,4)<>'1107' )
 group by klri.klri,fdate2period(klri.date),grp.accppn
 union all
 select kll1.klr,fdate2period(klri.date) as period,jenis.acchppbf as acc,klri.date as date,
 sum(if(ind.val=null,0,ind.val/ind.qty)*kll1.qty*ifnull(konversi.konversi,1)) as val,convert('' using latin1) as cct,'' as remark,
  convert('K' using latin1) as dk,'KLR' as subjurnal,0 as adj
  from (select distinct klr,sjh,kll.qty as qty,kll.val from kll where kll.val>0 ) as kll1
  left outer join klri on kll1.klr=klri.klri
  left outer join ind on ind.jurnal=kll1.sjh
  left outer join sjd on kll1.sjh = sjd.sjh
  left outer join konversi on sjd.inv=konversi.inv and sjd.unit=konversi.unit
  left outer join inv on ind.inv=inv.inv left outer join jenis on inv.jenis=jenis.jenis
  where kll1.klr=Pjurnal
  group by kll1.klr
) as xacd WHERE val <> 0;
elseif (Psubjurnal='RKA') then
  insert into acd select *,'' as bsa from
  (
    SELECT ind.jurnal, ind.period, jenis.acc as acc, ind.date,
           sum(ind.val) as val, convert('' using latin1) as cct, max(ind.rem) as remark,
           convert('D' using latin1) as dk,Psubjurnal as  subjurnal, 0 as adj
      FROM ind left outer join inv on ind.inv=inv.inv
    	         left outer join jenis on inv.jenis=jenis.jenis
	   WHERE ind.jurnal=Pjurnal and jenis.acc<>space(15)
	   GROUP BY ind.jurnal, ind.period, jenis.acc, ind.date,ind.dk
    union all
    SELECT ind.jurnal, ind.period, (select acchpp from jenis where left(jenis,5)=left(ind.inv,5)) as acc, ind.date,
           sum(ind.val) as val, convert('' using latin1) as cct, rka.remark as remark, convert('K' using latin1),
           Psubjurnal as  subjurnal, 0 as adj
      FROM ind left outer join inv on ind.inv=inv.inv
             	left outer join rka on ind.jurnal=rka.rka
	   WHERE ind.jurnal=Pjurnal
     GROUP BY ind.jurnal, ind.period
  ) as xacd order by dk;
elseif (Psubjurnal='RKL') then
insert into acd select *,'' as bsa from (
 select rkl,period,acc,date,sum(val) as val,cct,remark,dk,subjurnal,adj from (
 SELECT rkl.rkl, rkl.period, (select grp.acc from grp where grp.grp=sub.grp limit 1) as acc, rkl.date,
 sum(rkd.val*rkd.kurs) as val, convert('' using latin1) as cct, rkl.remark, convert('K' using latin1) as dk,Psubjurnal as  subjurnal, 0 as adj
 FROM rkd
  left outer join rkl on rkd.rkl=rkl.rkl
  left outer join sub on rkl.sub=sub.sub
 WHERE rkl.rkl=pjurnal
 GROUP BY rkd.rkl
union all
SELECT rkd.rkl, rkl.period,
(select jenis.accreturn from rll left outer join rkb on rll.rka=rkb.rka
left outer join inv on rkb.inv=inv.inv left outer join jenis on inv.jenis=jenis.jenis where rll.rkl=rkd.rkl limit 1
) as acc, rkl.date,
 ifnull(sum(rkd.dpp),0) as val, convert('' using latin1) as cct, rkl.remark, convert('D' using latin1) as dk,
 Psubjurnal as  subjurnal, 0 as adj
 FROM rkd
  left outer join rkl on rkd.rkl=rkl.rkl
 WHERE rkl.rkl=pjurnal
 GROUP BY rkd.rkl, acc
union all
SELECT rkd.rkl, rkl.period, (select grp.accppn from grp where grp.grp=sub.grp limit 1) as acc, rkl.date,
 rkd.ppn*rkl.kurs as val, convert('' using latin1) as cct, rkl.remark, convert('D' using latin1) as dk,Psubjurnal as  subjurnal, 0 as adj
 FROM rkd left outer join rkl on rkd.rkl=rkl.rkl left outer join sub on rkl.sub=sub.sub
 WHERE rkl.rkl=pjurnal
)as xacd group by acc
)as xacd1;
elseif (Psubjurnal='CAD') then
insert into acd select *,'' as bsa from (
 SELECT cadet.cad, cad.period, cadet.acc as acc, cad.date,
 cadet.val*cad.kurs as val, cadet.cct, cadet.remark, cadet.dk as dk,Psubjurnal as  subjurnal, 0 as adj
 FROM cadet
	left outer join cad on cadet.cad=cad.cad
	WHERE cadet.cad=Pjurnal
) as xacd;
elseif (Psubjurnal='UMH') then
insert into acd select *,'' as bsa from (
 SELECT umd.umh, umh.period, umd.acc as acc, umh.date,
 umd.val*umh.kurs as val, umd.cct, umd.remark, umd.dk as dk,Psubjurnal as  subjurnal, 0 as adj
 FROM umd
	left outer join umh on umd.umh=umh.umh
	WHERE umd.umh=Pjurnal and (umd.jurnal='' or umd.jurnal is null)
union all
SELECT umd.umh, umh.period, umd.acc as acc, umh.date,
 umd.val*(select kurs from rhp where rhp.jurnal=umd.jurnal and rhp.acc=umd.acc limit 1) as val,
 trim(umd.cct) as cct, umd.remark, umd.dk as dk,Psubjurnal as  subjurnal, 0 as adj
 FROM umd
	left outer join umh on umd.umh=umh.umh
	WHERE umd.umh=Pjurnal and umd.jurnal<>''
) as xacd;
elseif (Psubjurnal='JIN') then
insert into acd select *,'' as bsa from (
 SELECT jurnal, period, acc, date,abs(sum(val*if(dk='D',1,-1))) as val, cct, remark,if(sum(val*if(dk='D',1,-1))<0,'K','D') as dk,Psubjurnal as  subjurnal, 0 as adj
 from
(
 SELECT ind.jurnal, ind.period, jenis.acc as acc, ind.date,
 sum(ind.val) as val, convert('' using latin1) as cct, max(ind.rem) as remark,dk,Psubjurnal as  subjurnal, 0 as adj
 FROM ind
	left outer join inv on ind.inv=inv.inv
	left outer join jenis on inv.jenis=jenis.jenis
	WHERE ind.jurnal=Pjurnal and jenis.acc<>space(15)
	GROUP BY ind.jurnal, ind.period, jenis.acc, ind.date,ind.dk
union all
 SELECT ind.jurnal, ind.period, jenis.accsls as acc, ind.date,
 sum(ind.val) as val, trim(jin.cct) as cct, max(ind.rem) as remark,if(dk='D',convert('K' using latin1),convert('D' using latin1)) as dk,Psubjurnal as  subjurnal, 0 as adj
 FROM ind
	left outer join inv on ind.inv=inv.inv
	left outer join jenis on inv.jenis=jenis.jenis
left outer join jin on ind.jurnal=jin.jin
	WHERE ind.jurnal=Pjurnal and jenis.acc<>space(15)
	GROUP BY ind.jurnal, ind.period, jenis.acc, ind.date,ind.dk
) as xacd1 group by xacd1.jurnal,xacd1.acc
) as xacd where val<>0;
elseif (Psubjurnal='BPP') then
insert into acd select *,'' as bsa from (
 SELECT ind.jurnal, ind.period, jenis.acc as acc, ind.date,
 sum(ind.val) as val, convert('' using latin1) as cct, max(ind.rem) as remark,convert('K' using latin1) as dk,
 Psubjurnal as  subjurnal, 0 as adj
 FROM ind
	left outer join inv on ind.inv=inv.inv
	left outer join jenis on inv.jenis=jenis.jenis
	WHERE ind.jurnal=Pjurnal and jenis.acc<>space(15)
	GROUP BY ind.jurnal, ind.period, jenis.acc, ind.date,ind.dk
union all
 SELECT ind.jurnal, ind.period, if (jin.sperpart=0, jenis.accmt, jin.acc) as acc, ind.date,
 sum(ind.val) as val, trim(jin.cct) as cct, max(ind.rem) as remark,convert('D' using latin1) as dk,
 Psubjurnal as  subjurnal, 0 as adj
 FROM ind
	left outer join inv on ind.inv=inv.inv
	left outer join jenis on inv.jenis=jenis.jenis
  left outer join jin on ind.jurnal=jin.jin
	WHERE ind.jurnal=Pjurnal 
	GROUP BY ind.jurnal, ind.period, jenis.acc, ind.date,ind.dk
) as xacd;
elseif (Psubjurnal='BPR') then
insert into acd select *,'' as bsa from (
 SELECT ind.jurnal, ind.period, jenis.acc as acc, ind.date,
 sum(ind.val) as val, convert('' using latin1) as cct, max(ind.rem) as remark,convert('D' using latin1) as dk,
 Psubjurnal as  subjurnal, 0 as adj
 FROM ind
	left outer join inv on ind.inv=inv.inv
	left outer join jenis on inv.jenis=jenis.jenis
	WHERE ind.jurnal=Pjurnal and jenis.acc<>space(15)
	GROUP BY ind.jurnal, ind.period, jenis.acc, ind.date,ind.dk
union all
 SELECT ind.jurnal, ind.period, if (jin.sperpart=0, jenis.accmt, jin.acc) as acc, ind.date,
 sum(ind.val) as val, trim(jin.cct) as cct, max(ind.rem) as remark,convert('K' using latin1) as dk,
 Psubjurnal as  subjurnal, 0 as adj
 FROM ind
	left outer join inv on ind.inv=inv.inv
	left outer join jenis on inv.jenis=jenis.jenis
  left outer join jin on ind.jurnal=jin.jin
	WHERE ind.jurnal=Pjurnal 
	GROUP BY ind.jurnal, ind.period, jenis.acc, ind.date,ind.dk
) as xacd;
elseif (Psubjurnal='MMO') then
insert into acd select *, '' as bsa from (
  SELECT jsu.jsu, jsu.period, jsu.acc, jsu.date, jsu.val*jsu.kurs as val, convert('' using latin1) as cct,
  jsu.remark, jsu.dk, Psubjurnal as subjurnal, 0 as adj
  FROM jsu
  WHERE jsu.jsu=Pjurnal
union all
  SELECT jsd.jsu, jsu.period, jsd.acc, jsu.date, jsd.val*jsu.kurs as val, convert(trim(jsd.cct) using latin1) as cct,
  jsd.remark, jsd.dk, Psubjurnal as subjurnal, 0 as adj
  FROM jsd
  left outer join jsu on jsd.jsu=jsu.jsu
  WHERE jsd.jsu=Pjurnal
) as xacd;
elseif (Psubjurnal='OPN') then
insert into acd select *,'' as bsa from (
 SELECT ind.jurnal, ind.period, jenis.acc as acc, ind.date,
 ifnull(abs(sum(ind.val*if(dk='K',-1,1))),0) as val, convert('' using latin1) as cct, max(ind.rem) as remark,if(sum(ind.val*if(dk='K',-1,1))<=0,convert('K' using latin1),convert('D' using latin1)) as dk,Psubjurnal as  subjurnal, 0 as adj
 FROM ind
	left outer join inv on ind.inv=inv.inv
	left outer join jenis on inv.jenis=jenis.jenis
	WHERE ind.jurnal=Pjurnal and jenis.acc<>space(15)
	GROUP BY ind.jurnal, ind.period, jenis.acc, ind.date
union all
 SELECT ind.jurnal, ind.period, jenis.accsls as acc, ind.date,
 ifnull(abs(sum(ind.val*if(dk='K',-1,1))),0) as val, (select trim(cct) from opn where opn=Pjurnal limit 1) as cct, max(ind.rem) as remark,if(sum(ind.val*if(dk='K',-1,1))<=0,convert('D' using latin1),convert('K' using latin1)) as dk,Psubjurnal as  subjurnal, 0 as adj
 FROM ind
	left outer join inv on ind.inv=inv.inv
	left outer join jenis on inv.jenis=jenis.jenis
	WHERE ind.jurnal=Pjurnal and jenis.acc<>space(15)
	GROUP BY ind.jurnal, ind.period, jenis.acc, ind.date
) as xacd;
elseif (Psubjurnal='TRM') then
insert into acd select *,'' as bsa from (
 SELECT ind.jurnal, ind.period, jenis.acc as acc, ind.date,
 sum(ind.val) as val, convert('' using latin1) as cct, max(ind.rem) as remark,dk,Psubjurnal as  subjurnal, 0 as adj
 FROM ind
	left outer join inv on ind.inv=inv.inv
	left outer join jenis on inv.jenis=jenis.jenis
	WHERE ind.jurnal=Pjurnal and jenis.acc<>space(15)
	GROUP BY ind.jurnal, ind.period, jenis.acc, ind.date,ind.dk
) as xacd;
elseif (Psubjurnal='KBK') or (Psubjurnal='KBM') then
insert into acd select * ,'' as bsa from (
  SELECT kas.kas, kas.period, kas.acc, kas.date, kas.val as val, convert('' using latin1) as cct,
  kas.remark, if(psubjurnal='KBK',convert('K' using latin1),convert('D' using latin1)) as dk, Psubjurnal as subjurnal, 0 as adj
  FROM kas
  WHERE kas.kas=Pjurnal and kas.val<>0
union all
  SELECT kad.kas, kas.period, kad.acc, kas.date, kad.val, trim(kad.cct) as cct,
  kad.remark, kad.dk, Psubjurnal as subjurnal, 0 as adj
  FROM kad
  left outer join kas on kad.kas=kas.kas
  WHERE kad.kas=Pjurnal
) as xacd;
elseif (Psubjurnal='KKP')  then
insert into acd select *, '' as bsa from (
  SELECT kas.kas, kas.period, kas.acc, kas.date, kas.val*if(kas.kurs=0,1,kas.kurs) as val, convert('' using latin1) as cct,
  kas.remark, convert('D' using latin1) as dk, Psubjurnal as subjurnal, 0 as adj
  FROM kas
  WHERE kas.kas=Pjurnal and kas.val<>0
union all
  SELECT kag.kas, kas.period, kag.acc, kas.date, kag.val*if(kas.kurs=0,1,kas.kurs), convert('' using latin1) as cct,
  kag.nobg,convert('D' using latin1), Psubjurnal as subjurnal, 0 as adj
  FROM kag
  left outer join kas on kag.kas=kas.kas
  WHERE kag.kas=Pjurnal and kag.val<>0
union all
  SELECT kad.kas, kas.period, kad.acc, kas.date,
  kad.val*if(kad.jurnal='' or kad.jurnal=kas.kas,kas.kurs,ifnull((select kurs from rhp where rhp.jurnal=kad.jurnal and rhp.acc=kad.acc limit 1),1)) as val, trim(kad.cct) as cct,
  kad.remark, kad.dk, Psubjurnal as subjurnal, 0 as adj
  FROM kad
  left outer join kas on kad.kas=kas.kas
  WHERE kad.kas=Pjurnal and kad.val<>0
union all
SELECT kad.kas, kas.period,if(kas.kurs>(select kurs from regrsb rhp where rhp.jurnal=kad.jurnal and rhp.acc=kad.acc limit 1) and kad.dk='K',convert('71010100'using latin1),convert('72010100' using latin1)), kas.date,
  abs(kad.val*if(kad.jurnal='',0,ifnull(kas.kurs-(select kurs from regrsb rhp where rhp.jurnal=kad.jurnal and rhp.acc=kad.acc limit 1),1))) as val,trim(kad.cct) as cct,
  kad.remark,
  if(kas.kurs>(select kurs from regrsb rhp where rhp.jurnal=kad.jurnal and rhp.acc=kad.acc limit 1),if(kad.DK='K',convert('K' using latin1),convert('D' using latin1)), if(kad.DK='K',convert('D' using latin1),convert('K' using latin1))),
  Psubjurnal as subjurnal, 0 as adj
  FROM kad
  left outer join kas on kad.kas=kas.kas
  WHERE kad.kas=Pjurnal and kad.val<>0 and kas.kurs<>(select kurs from regrsb rhp where rhp.jurnal=kad.jurnal and rhp.acc=kad.acc limit 1)
) as xacd;
elseif (Psubjurnal='KPH')  then
insert into acd select *,'' as bsa from (
  SELECT kas.kas, kas.period, kas.acc, kas.date, kas.val*if(kas.kurs=0,1,kas.kurs) as val, convert('' using latin1) as cct,
  kas.remark, convert('K' using latin1) as dk, Psubjurnal as subjurnal, 0 as adj
  FROM kas
  WHERE kas.kas=Pjurnal and kas.val<>0
union all
  SELECT kag.kas, kas.period, kag.acc, kas.date, kag.val*if(kas.kurs=0,1,kas.kurs), convert('' using latin1) as cct,
  kas.remark,convert('K' using latin1), Psubjurnal as subjurnal, 0 as adj
  FROM kag
  left outer join kas on kag.kas=kas.kas
  WHERE kag.kas=Pjurnal and kag.val<>0
union all
  SELECT kad.kas, kas.period, kad.acc, kas.date,
  kad.val*if(kad.jurnal='' or kad.jurnal=kas.kas,if(kas.tcsi=0,if(kas.kurs=0,1,kas.kurs),kad.kurs),ifnull((select kurs from regrsb rhp  where rhp.jurnal=kad.jurnal and rhp.acc=kad.acc and trim(kad.invoice)=trim(rhp.invoice) limit 1),1)) as val,trim(kad.cct) as cct,
  kad.remark, kad.dk, Psubjurnal as subjurnal, 0 as adj
  FROM kad
  left outer join kas on kad.kas=kas.kas
  WHERE kad.kas=Pjurnal and kad.val<>0
union all
SELECT kad.kas, Fdate2period(kas.date),if(kad.kurs<(select kurs from regrsb rhp where rhp.jurnal=kad.jurnal and rhp.acc=kad.acc and
  trim(rhp.invoice)=trim(kad.invoice) limit 1),if(kad.dk='D','71010200','72010200'),if(kad.dk='D','71010200','72010200')), kas.date,
  abs(kad.val*if(kad.jurnal='',0,ifnull(kad.kurs-(select kurs from regrsb rhp where rhp.jurnal=kad.jurnal and rhp.acc=kad.acc and trim(kad.invoice)=trim(rhp.invoice) limit 1),1))) as val, kad.cct,
  kad.remark, if(kad.kurs<(select kurs from rhp where rhp.jurnal=kad.jurnal and rhp.acc=kad.acc and
  trim(rhp.invoice)=trim(kad.invoice) limit 1),if(kad.dk='D','K','D'),if(kad.dk='D','D','K')) as dk,
   Psubjurnal as subjurnal, 0 as adj
  FROM kad
  left outer join kas on kad.kas=kas.kas
  WHERE kad.kas=Pjurnal and kad.val<>0 and kad.kurs<>(select kurs from regrsb rhp where rhp.jurnal=kad.jurnal and rhp.acc=kad.acc and trim(rhp.invoice)=trim(kad.invoice) limit 1) and kas.tcsi=1
union all
SELECT kad.kas, kas.period,if(kas.kurs<(select kurs from rhp where rhp.jurnal=kad.jurnal and rhp.acc=kad.acc and
  trim(rhp.invoice)=trim(kad.invoice) limit 1),if(kad.dk='D','71010200','72010200'),if(kad.dk='D','71010200','72010200')), kas.date,
  abs(kad.val*if(kad.jurnal='',0,ifnull(kas.kurs-(select kurs from regrsb rhp where rhp.jurnal=kad.jurnal and rhp.acc=kad.acc and trim(kad.invoice)=trim(rhp.invoice) limit 1),1))) as val, trim(kad.cct) as cct,
  kad.remark, if(kas.kurs<(select kurs from regrsb rhp where rhp.jurnal=kad.jurnal and rhp.acc=kad.acc and
  trim(rhp.invoice)=trim(kad.invoice) limit 1),if(kad.dk='D','K','D'),if(kad.dk='D','D','K')) as dk,
   Psubjurnal as subjurnal, 0 as adj
  FROM kad
  left outer join kas on kad.kas=kas.kas
  WHERE kad.kas=Pjurnal and kad.val<>0 and kas.kurs<>(select kurs from regrsb rhp where rhp.jurnal=kad.jurnal and rhp.acc=kad.acc and trim(rhp.invoice)=trim(kad.invoice) limit 1) and kas.tcsi<>1
  ) as xacd;
elseif (Psubjurnal='INO') then
insert into acd select * from (
 select ino.ino,Fdate2period(inoc.tgl) period,ino.acc,inoc.tgl,inoc.val,'',inoc.remark,'D',Psubjurnal,0 as adj,'' as bsa
 from inoc,ino where inoc.ino=ino.ino and ino.ino=Pjurnal and ino.settle=1
union all
 select ino.ino,Fdate2period(inoc.tgl) period,accgl.acc,inoc.tgl,inoc.val,'',inoc.remark,'K',Psubjurnal,0 as adj,'' as bsa
 from inoc,ino,accgl
 WHERE inoc.ino=ino.ino and ino.acc=accgl.remark and ino.ino=Pjurnal and ino.settle=1) as xacd;
elseif (Psubjurnal='CGR')  then
insert into acd select *,'' as bsa from (
  SELECT cgr.cgr,cgr.period, cgr.acc, cgr.date, ifnull(cgr.bgval*(select kas.kurs from cgr as a,kag,kas where a.nobg=kag.nobg and kag.kas=kas.kas and a.nobg=cgr.nobg),0) as val, convert('' using latin1) as cct,
  cgr.remark, if(dk=1,convert('D' using latin1),convert('K' using latin1)) as dk, Psubjurnal as subjurnal, 0 as adj
  FROM cgr
  WHERE cgr.cgr=Pjurnal and cgr.bgval>0
union all
  SELECT cgr.cgr,cgr.period, cgr.accbank, cgr.date, ifnull(cgr.bgval*(select kas.kurs from cgr as a,kag,kas where a.nobg=kag.nobg and kag.kas=kas.kas and a.nobg=cgr.nobg),0) as val, convert('' using latin1) as cct,
  cgr.remark, if(dk=1,convert('K' using latin1),convert('D' using latin1)), Psubjurnal as subjurnal, 0 as adj
  FROM cgr
  WHERE cgr.cgr=Pjurnal AND cgr.bgval>0
) as xacd;
elseif (Psubjurnal='CAD') then
insert into acd select *,'' as bsa from (
 SELECT cadet.cad, cad.period, cadet.acc as acc, cad.date,
 cadet.val*cad.kurs as val, cadet.cct, cadet.remark, cadet.dk as dk,Psubjurnal as  subjurnal, 0 as adj
 FROM cadet
	left outer join cad on cadet.cad=cad.cad
	WHERE cadet.cad=Pjurnal
) as xacd;
elseif (Psubjurnal='AKT') then
insert into acd select *,'' as bsa from (
 SELECT jin.jin, jin.period, akt.accbiaya as acc, jin.date,
 round(jid.val*akd.prosent/100,2) as val, trim(akd.cct) as cct, jid.remark as remark,'D',Psubjurnal as  subjurnal, 0 as adj
 FROM jin,jid,akt,akd
 WHERE jin.jin=Pjurnal and jin.jin=jid.jin and jid.inv=akt.akt and jin.group_=5 and akd.akt=akt.akt
union all
SELECT jin.jin, jin.period, akt.accsusut as acc, jin.date,
 round(jid.val,2) as val, convert('' using latin1) as cct, jid.remark as remark,'K',Psubjurnal as  subjurnal, 0 as adj
 FROM jin,jid,akt
 WHERE jin.jin=Pjurnal and jin.jin=jid.jin and jid.inv=akt.akt and jin.group_=5
) as xacd;
end if;
if (Psubjurnal='UMH') then
insert into acd select *,'' as bsa from (
select jurnal,period,if(val>0,if(left(acc,1)='1','71010200','72010200'),if(left(acc,1)='1','71010200','72010200')) acc,date,abs(val) as val,'' as cct,'' rem,if(val>0,'K','D') as dk,subjurnal, adj from
(
select jurnal,period,acc,date,sum(val*if(dk='D',1,-1)) val,cct,rem,dk,'UMH' subjurnal,0 adj from acd
where jurnal=Pjurnal group by jurnal ) as xzcd
) as xacd where round(val,2)>0;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SaveBCKeluar
DROP PROCEDURE IF EXISTS `SP_SaveBCKeluar`;
DELIMITER //
CREATE PROCEDURE `SP_SaveBCKeluar`(
	IN `Pjurnal` VARCHAR(50)
)
replace into bckeluar
select * from (
select ifnull(docpd.jnsp,'') as jenis,ifnull(docpd.no_bc,'') as nodoc,ifnull(date_format(docpd.datedoc,'%Y-%m-%d'),'') as datedoc,
sjh.sjh as sjh, ifnull(spm.tgl_bc,sjh.date) sjhdate,sjd.qty as qty, sjd.inv,sjd.remark,sjd.qty1,inv.unit,Ifnull(sjd.val,0)*ifnull(okl.kurs,1) as val,
sub.name as supplier,docpd.form as form,sjd.loc,sub.sub
from spm inner join sjh on spm.spm=sjh.spm left outer join sjd on sjh.sjh=sjd.sjh left outer join inv on sjd.inv=inv.inv
left outer join (select docp.docp,docp.jnsp,docp.oms,docpd.nodoc,docpd.datedoc,docpd.no_bc,docp.form from docpd,docp where docp.docp=docpd.docp ) docpd on docpd.nodoc=spm.nodoc and sjd.okl=docpd.oms
left outer join okl on sjd.okl=okl.okl  left outer join sub on sjh.sub=sub.sub 
WHERE LEFT(sjd.inv,2) BETWEEN '11' AND '81' AND sjh.sjh = Pjurnal
) as bckeluar//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_SaveBCKeluar30
DROP PROCEDURE IF EXISTS `sp_SaveBCKeluar30`;
DELIMITER //
CREATE PROCEDURE `sp_SaveBCKeluar30`(
	IN `nobc` VARCHAR(50)
)
replace into bckeluar
select * from (
SELECT 'BC 3.0' AS jenis,h.CAR AS nodoc,h.NODAFT AS nopen,cast(DATE_FORMAT(c.datedoc,'%Y-%m-%d') as char) as datedoc,c.nodoc AS sjh,m.date as sjhdate,d.JMSATUAN AS qty,d.KDBRG AS inv,d.URBRG1 AS remark,d.JMSATUAN AS qty1,d.JNSATUAN AS unit,d.DNilInv AS val,s.name AS supplier,'' AS form,'' as loc,m.sub AS sub
FROM peb.tblpebhdr h, peb.tblpebdtl d, wis_inventory.docpd c, wis_inventory.spd AS p, wis_inventory.spm AS m,wis_inventory.sub s
WHERE h.CAR = d.CAR AND c.no_bc = h.CAR AND c.nodoc = p.spm AND m.spm = p.spm AND m.sub = s.sub and c.no_bc = nobc
GROUP BY d.HS
) as bckeluar//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_SaveBCKeluarSpj
DROP PROCEDURE IF EXISTS `Sp_SaveBCKeluarSpj`;
DELIMITER //
CREATE PROCEDURE `Sp_SaveBCKeluarSpj`(
	IN `Pjurnal` VARCHAR(50)
)
replace into bckeluar
select * from (
select ifnull(docpd.jnsp,'') as jenis,ifnull(docpd.no_bc,'') as nodoc,docpd.nopen as nopen,ifnull(date_format(docpd.datedoc,'%Y-%m-%d'),'') as datedoc,
spm.spm as sjr, ifnull(spm.tgl_bc,sjr.date) sjrdate,sjrd.qty as qty, sjrd.inv,sjrd.remark,sjrd.qty1,inv.unit,Ifnull(sjrd.val,0)*ifnull(por.kurs,1) as val,
sub.name as supplier,docpd.form as form,sjrd.loc,sub.sub
from spm inner join sjr on spm.spm=sjr.spm left outer join sjrd on sjr.sjr=sjrd.sjr left outer join inv on sjrd.inv=inv.inv
left outer join (select docp.docp,docp.jnsp,docp.oms,docpd.nodoc,docpd.datedoc,docpd.no_bc,docp.form,docpd.nopen from docpd,docp where docp.docp=docpd.docp ) docpd on trim(docpd.nopen)=trim(spm.nodoc) and sjrd.okl=docpd.oms
left outer join por on sjrd.okl=por.por  left outer join sub on sjr.sub=sub.sub 
WHERE sjr.spm = Pjurnal
) as bckeluar//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_SaveBCKeluarSpm
DROP PROCEDURE IF EXISTS `sp_SaveBCKeluarSpm`;
DELIMITER //
CREATE PROCEDURE `sp_SaveBCKeluarSpm`(
	IN `Pjurnal` VARCHAR(50)
)
replace into bckeluar
select * from (
select ifnull(docpd.jnsp,'') as jenis,ifnull(docpd.no_bc,'') as nodoc,ifnull(docpd.nopen,'') as nopen,ifnull(date_format(docpd.datedoc,'%Y-%m-%d'),'') as datedoc,
spm.spm as sjh, ifnull(spm.tgl_bc,sjh.date) sjhdate,sum(sjd.qty) as qty, sjd.inv,sjd.remark,sum(sjd.qty1) AS qty1,inv.unit,sum(Ifnull(sjd.price,0)*sjd.qty*ifnull(okl.kurs,1)) as val,
sub.name as supplier,docpd.form as form,sjd.loc,sub.sub
from spm 
inner join sjh on spm.spm=sjh.spm 
left outer join sjd on sjh.sjh=sjd.sjh 
left outer join inv on sjd.inv=inv.inv
left outer join (select docp.docp,docp.jnsp,docp.oms,docpd.nodoc,docpd.nopen,docpd.datedoc,docpd.no_bc,docp.form from docpd,docp where docp.docp=docpd.docp AND docpd.nodoc = PJurnal) docpd on docpd.nopen=spm.nodoc
left outer join okl on sjd.okl=okl.okl
left outer join sub on sjh.sub=sub.sub 
WHERE LEFT(sjd.inv,2) BETWEEN '10' AND '81' AND spm.spm = PJurnal
GROUP BY sjd.inv
) as bckeluar//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SaveBCMasuk
DROP PROCEDURE IF EXISTS `SP_SaveBCMasuk`;
DELIMITER //
CREATE PROCEDURE `SP_SaveBCMasuk`(
	IN `Pjurnal` VARCHAR(50)
)
replace into bcmasuk
select * from (
select ifnull(docpd.jnsp,'') as jenis,ifnull(docpd.no_bc,spb.nodoc) as nodoc,docpd.nopen as nopen,ifnull(date_format(datedoc,'%Y-%m-%d'),'') as datedoc,spbd.spb as lpb, ifnull(spb.tgl_bc,spb.date) lpbdate,
ifnull(spbd.shipper,sub.name) as supplier,spbd.inv,spbd.remark,spbd.qty1 as qty,spbd.unit,omd.val as val,sub.sub
from (select spbd.*,spb.sub,spb.shipper from spb,spbd where spb.spb=spbd.spb and spb.`delete`=0 and spb.spb = Pjurnal) spbd
left outer join spb on spbd.spb=spb.spb
left outer join (select docpd.*,docp.jnsp,docp.oms from docpd,docp where docp.docp=docpd.docp and docpd.nodoc<>'') as docpd on trim(spb.nodoc)=trim(docpd.nodoc) and spb.oms=docpd.oms
left outer join sub on spbd.sub=sub.sub
left outer join (select * from oms_in) omd on spb.oms=omd.oms and omd.inv=spbd.inv and omd.remark=spbd.remark
left outer join oms on omd.oms=oms.oms
WHERE spb.spb = Pjurnal and left(spbd.inv,2) between '11' and '81'
) as bcmasuk//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_SaveBCMasukSpj
DROP PROCEDURE IF EXISTS `sp_SaveBCMasukSpj`;
DELIMITER //
CREATE PROCEDURE `sp_SaveBCMasukSpj`(
	IN `Pjurnal` VARCHAR(50)
)
replace into bcmasuk
select * from (
select ifnull(docpd.jnsp,'') as jenis,ifnull(docpd.no_bc,lph.nodoc) as nodoc,docpd.nopen as nopen,ifnull(date_format(datedoc,'%Y-%m-%d'),'') as datedoc,lpd.lph as lpb, ifnull(lph.tgl_bc,lph.date) lpbdate,
sub.name as supplier,lpd.inv,lpd.remark,lpd.qty as qty,inv.unit AS unitgd,(pord.price)*lpd.qty*por.kurs as val,sub.sub, lpd.no as `no_spb`
from (select lpd.*,lph.sub from lph,lpd where lph.lph=lpd.lph and lph.`delete`=0 and lph.lph = Pjurnal) lpd
left outer join lph on lpd.lph=lph.lph
LEFT OUTER JOIN inv ON lpd.inv = inv.inv
left outer join (select docpd.*,docp.jnsp,docp.oms from docpd,docp where docp.docp=docpd.docp and docpd.nodoc<>'') as docpd on trim(lph.nodoc)=trim(docpd.nopen) and lph.oms=docpd.oms
left outer join sub on lpd.sub=sub.sub
left outer join por on por.por=lph.oms
left outer join pord on pord.por=por.por and pord.inv=lpd.inv and pord.remark=lpd.remark
WHERE lph.lph = Pjurnal and left(lpd.inv,2) between '11' AND '91' and trim(lph.nodoc) <>''
GROUP BY lpd.nodsg) as bcmasuk//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_SaveBCMasukSPM
DROP PROCEDURE IF EXISTS `sp_SaveBCMasukSPM`;
DELIMITER //
CREATE PROCEDURE `sp_SaveBCMasukSPM`(
	IN `Pjurnal` VARCHAR(50)
)
replace into bcmasuk
select * from (
select ifnull(docpd.jnsp,'') as jenis,ifnull(docpd.no_bc,spb.nodoc) as nodoc,docpd.nopen as nopen,ifnull(date_format(datedoc,'%Y-%m-%d'),'') as datedoc,spbd.spb as lpb, ifnull(spb.tgl_bc,spb.date) lpbdate,
ifnull(spbd.shipper,sub.name) as supplier,spbd.inv,spbd.remark,spbd.qty as qty,inv.unit AS unitgd,(select omd.val/omd.qty from omd where oms=spb.oms and inv=spbd.inv and remark=spbd.remark limit 1)*spbd.qty as val,sub.sub,spbd.no
from (select spbd.*,spb.sub,spb.shipper from spb,spbd where spb.spb=spbd.spb and spb.`delete`=0 and spb.spb = Pjurnal) spbd
left outer join spb on spbd.spb=spb.spb
LEFT OUTER JOIN inv ON spbd.inv = inv.inv
left outer join (select docpd.*,docp.jnsp,docp.oms from docpd,docp where docp.docp=docpd.docp and docpd.nodoc<>'') as docpd on trim(spb.nodoc)=trim(docpd.nopen) and spb.oms=docpd.oms
left outer join sub on spbd.sub=sub.sub
left outer join (select * from oms_in) omd on spb.oms=omd.oms and omd.inv=spbd.inv and omd.remark=spbd.remark
left outer join oms on omd.oms=oms.oms
WHERE spb.spb = Pjurnal and left(spbd.inv,2) between '11' and '81'
) as bcmasuk//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_SaveBCMasukSPR
DROP PROCEDURE IF EXISTS `sp_SaveBCMasukSPR`;
DELIMITER //
CREATE PROCEDURE `sp_SaveBCMasukSPR`(
	IN `Pjurnal` VARCHAR(50)
)
replace into bcmasuk
select jenis,nodoc,nopen,datedoc,lpb,lpbdate,shipper,inv,remark,sum(qty) as qty,unitgd,sum(val) as val,sub from (
select ifnull(docpd.jnsp,'') as jenis,ifnull(docpd.no_bc,spr.nodoc) as nodoc,docpd.nopen as nopen,
ifnull(date_format(datedoc,'%Y-%m-%d'),'') as datedoc,sprd.spr as lpb, ifnull(spr.tgl_bc,spr.date) lpbdate,
sub.name as shipper, sprd.inv,sprd.remark,sprd.qty as qty,inv.unit AS unitgd,(okd.price)*sprd.qty as val,sub.sub FROM (select sprd.*,spr.sub from spr,sprd where spr.spr=sprd.spr and spr.`delete`=0 and spr.spr = Pjurnal) sprd
left outer join spr on sprd.spr=spr.spr
LEFT OUTER JOIN spm ON spr.rsm=spm.spm
LEFT OUTER JOIN doh ON spm.okl_rms=doh.doh
LEFT OUTER JOIN inv ON sprd.inv = inv.inv
left outer join (select docpd.*,docp.jnsp,docp.oms AS okl from docpd,docp where docp.docp=docpd.docp and docpd.nodoc<>'') as docpd on trim(spr.nodoc)=trim(docpd.nopen) and doh.okl=docpd.okl
left outer join sub on spr.sub=sub.sub
left outer join (select * from okd) okd on doh.okl=okd.okl and okd.inv=sprd.inv and okd.remark=sprd.remark
left outer join okl on okd.okl=okl.okl
WHERE spr.spr = Pjurnal and left(sprd.inv,1)='5'
) as bcmasuk group by lpb,inv,remark//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SaveInv
DROP PROCEDURE IF EXISTS `SP_SaveInv`;
DELIMITER //
CREATE PROCEDURE `SP_SaveInv`(
	IN `Psubjurnal` varchar(3),
	IN `Pjurnal` varchar(15)
)
BEGIN
declare tmpadj  double;
   if (Psubjurnal='LPH') then
      if ((select count(csl.lph) from csl where csl.lph=Pjurnal) <= 0 ) then
      insert into ind select * from (
        SELECT lph.lph AS jurnal,substring(lph.lph,5,4) as period, lpd.inv,lpd.spesifikasi, trim(lpd.loc) loc, lph.date,lpd.qty,
        ifnull((select ifnull((val/qty),0) from oms_in
         where oms_in.inv = lpd.inv and
               oms_in.remark = lpd.remark and
               oms_in.oms = lph.oms
        )*lpd.qty*(select oms.kurs from oms where oms.oms=lph.oms limit 1),0) as val,
        lph.oms as rem, 'D' as dk , Psubjurnal as subjurnal, nodsg as nodsg, expired
        FROM lpd inner join lph on lph.lph=lpd.lph
        WHERE lpd.lph=pjurnal and lpd.qty>0  and left(lpd.inv,1)<>'7' and (lph.period<'1107')
        union all
        SELECT lph.lph AS jurnal,substring(lph.lph,5,4) as period, lpd.inv,lpd.spesifikasi, trim(lpd.loc), date(lph.date) as `date`,lpd.qty,
        ifnull((select ifnull((val/qty),0) from oms_in
         where oms_in.inv = lpd.inv and
               oms_in.remark = lpd.remark and
               oms_in.oms = lph.oms
        )*lpd.qty*(select oms.kurs from oms where oms.oms=lph.oms limit 1),0) as val,
        lph.oms as rem, 'D' as dk , Psubjurnal as subjurnal,nodsg as nodsg, expired
        FROM lpd inner join lph on lph.lph=lpd.lph
        WHERE lpd.lph=pjurnal and lpd.qty>0  and (lph.period>='1107')
        ) as xacd;
     else
     insert into ind select * from (
       SELECT lph.lph AS jurnal, Fdate2period(lph.date) AS period, lpd.inv,lpd.spesifikasi, trim(lpd.loc) loc, lph.date,lpd.qty,
        ifnull((select (price*qty1)/qty from csl where csl.lph=lph.lph and csl.inv=lpd.inv limit 1),0)*lpd.qty as val,
        lph.remark as rem, 'D' as dk , Psubjurnal as subjurnal,nodsg as nodsg,expired
        FROM lpd inner join lph on lph.lph=lpd.lph
	      left outer join oms on lph.oms=oms.oms
        left outer join inv on lpd.inv=inv.inv
        WHERE lpd.lph=Pjurnal and lpd.qty>0  and left(lpd.inv,1)<>'7' and (lph.period<'1107')
        union all
        SELECT lph.lph AS jurnal, Fdate2period(lph.date) AS period, lpd.inv,lpd.spesifikasi, trim(lpd.loc) loc, date(lph.date),lpd.qty,
        ifnull((select (price*qty1)/qty from csl where csl.lph=lph.lph and csl.inv=lpd.inv limit 1),0)*lpd.qty as val,
        lph.remark as rem, 'D' as dk , Psubjurnal as subjurnal,nodsg as nodsg,expired
        FROM lpd inner join lph on lph.lph=lpd.lph
	      left outer join oms on lph.oms=oms.oms
        left outer join inv on lpd.inv=inv.inv
        WHERE lpd.lph=Pjurnal and lpd.qty>0  and (lph.period>='1107')
        ) as xacd;
     end if;
else
   if (Psubjurnal='SJR') then
   insert into ind select * from (
       SELECT sjr.sjr AS jurnal,substring(sjr.sjr,5,4) as period, sjrd.inv,'' as spesifikasi, sjrd.loc, sjr.date,sjrd.qty,
        (select FCariHpp(sjrd.loc,sjrd.inv,sjr.date,sjrd.nodsg))*sjrd.qty  as val,
        sjr.remark as rem, 'K' as dk , Psubjurnal as subjurnal,nodsg as nodsg,expired
        FROM sjrd left outer join sjr on sjr.sjr=sjrd.sjr
        WHERE sjrd.sjr=PJurnal and sjr.group_=1 and sjrd.qty>0) as xacd ;
else
 if (Psubjurnal='SJT') then
   insert into ind select * from (
       SELECT sjr.sjr AS jurnal,substring(sjr.sjr,5,4) as period, sjrd.inv, '' as spesifikasi, sjrd.loc, sjr.date,sjrd.qty,
        (select FCariHpp(sjrd.loc,sjrd.inv,sjr.date,''))*sjrd.qty  as val,
        sjr.remark as rem, 'K' as dk , Psubjurnal as subjurnal,trim(nodsg) as nodsg, expired
        FROM sjrd left outer join sjr on sjr.sjr=sjrd.sjr
        WHERE sjrd.sjr=PJurnal and sjr.group_=2  and sjrd.qty>0  and (left(sjrd.inv,1))<>'9' ) as xacd ;
else
 if (Psubjurnal='LPJ') then
   insert into ind select * from (
       SELECT lph.lph AS jurnal,substring(lph.lph,5,4) as period, lpd.inv, '' as spesifikasi, lpd.loc, lph.date,lpd.qty,
        (select FCariHpp(lpd.loc,lpd.inv,lph.date,''))*lpd.qty  as val,
        lph.remark as rem, 'D' as dk , Psubjurnal as subjurnal,trim(nodsg) as nodsg, expired
        FROM lpd left outer join lph on lph.lph=lpd.lph
        WHERE lpd.lph=PJurnal and lpd.qty>0  and (left(lpd.inv,1))<>'9' 
) as xacd ;
else
   if (Psubjurnal='SJL') then
     insert into ind select * from (
         SELECT sjh.sjh AS jurnal,substring(sjh.sjh,5,4) as period, sjd.inv, '' as spesifikasi, trim(sjd.loc), sjh.date, sum(sjd.qty) as qty,
       sum((select FCariHpp(trim(sjd.loc),sjd.inv,sjh.date,sjd.nodsg))*sjd.qty) as val,
          sjh.remark as rem, 'K' as dk , Psubjurnal as subjurnal,sjd.nodsg as nodsg,sjd.expired
          FROM sjd left outer join sjh on sjh.sjh=sjd.sjh
          WHERE sjd.sjh=PJurnal and sjd.qty>0 and (left(sjd.inv,1)<>'9' or left(sjd.inv,1)<>'7') group by sjd.nodsg,sjd.inv,sjd.remark,sjd.loc) as xacd;
else
   if (Psubjurnal='RKA') then
     insert into ind select * from
     (
        select rka.rka as jurnal, rka.period, rkb.inv, '' as spesifikasi, rkb.loc, rka.date, rkb.qty, (rsmd.val/rsmd.qty)*rkb.qty*ifnull(rsm.kurs,1) as val,
               rka.remark as rem, 'D' as dk, Psubjurnal as subjurnal, rkb.nodsg,rkb.expired
          from rkb left outer join rka on rka.rka=rkb.rka
                   left outer join rsmd on rka.rsm=rsmd.rsm and rsmd.nodsg=rkb.nodsg and rsmd.inv=rkb.inv
                   left outer join rsm on rsmd.rsm=rsm.rsm
         where rkb.rka=Pjurnal and rkb.qty>0 and rka.period>='1602'
union all
   select rka.rka as jurnal, rka.period, rkb.inv, '' as spesifikasi, rkb.loc, rka.date, rkb.qty, (select sum(val)/sum(qty) from ind where ind.jurnal=rka.rsm)*rkb.qty as val,
               rka.remark as rem, 'D' as dk, Psubjurnal as subjurnal, rkb.nodsg, rkb.expired
          from rkb left outer join rka on rka.rka=rkb.rka
                   left outer join rsmd on rka.rsm=rsmd.rsm and rsmd.nodsg=rkb.nodsg and rsmd.inv=rkb.inv
         where rkb.rka=Pjurnal and rkb.qty>0 and period <'1602'
     ) as xacd;
else
   if (Psubjurnal='JIN') then
   insert into ind select * from (
       SELECT jin.jin AS jurnal,jin.period as period, jid.inv, jid.spesifikasi as spesifikasi, jin.loc, jin.date, jid.qty,
        if(jid.dk='K' or trim(jin.jenis)='Checked' or trim(jenis)='True',if(left(jid.inv,1)<>'9',(select FCariHpp(jin.loc,jid.inv,jin.date,jid.nodsg))*jid.qty,jid.qty*jid.price), jid.qty*jid.price) as val,
        jin.remark as rem, dk as dk , Psubjurnal as subjurnal,jid.nodsg as nodsg,jid.expired
        FROM jid left outer join jin on jin.jin=jid.jin
        WHERE jid.jin=PJurnal and jid.qty>0 and (left(jid.inv,1))<>'9') as xacd ;
    update jid,jin set jid.price=(select FCariHpp(jin.loc,jid.inv,jin.date,jid.nodsg))*jid.qty/jid.qty1, jid.val=(select FCariHpp(jin.loc,jid.inv,jin.date,jid.nodsg))*jid.qty
    where jid.jin=jin.jin and dk='K' and jin.group_=1 and jin.jin=Pjurnal ;
else
   if (Psubjurnal='BPP') then
   insert into ind select * from (
       SELECT jin.jin AS jurnal,jin.period as period, jid.inv, jid.spesifikasi as spesifikasi, jin.loc, jin.date, jid.qty,
        (select FCariHpp(jin.loc,jid.inv,jin.date,jid.nodsg))*jid.qty as val,
         jin.remark as rem, 'K' as dk , Psubjurnal as subjurnal,jid.nodsg as nodsg,jid.expired
         FROM jid left outer join jin on jin.jin=jid.jin
         WHERE jid.jin=PJurnal and jid.qty>0
         union all
         SELECT jin.jin AS jurnal,jin.period as period, jid.inv,jid.spesifikasi, 'GBPH', jin.date, jid.qty,
         0 as val,
         jin.remark as rem, 'D' as dk , Psubjurnal as subjurnal,jid.nodsg as nodsg,jid.expired
         FROM jid left outer join jin on jin.jin=jid.jin
         WHERE jid.jin=PJurnal and jid.qty>0 and jin.sperpart=0 and left(jid.inv,1)='7'
        ) as xacd ;
else
if (Psubjurnal='BPR') then
   insert into ind select * from (
       SELECT jin.jin AS jurnal,jin.period as period, jid.inv, jid.spesifikasi as spesifikasi, jin.loc, jin.date, jid.qty,
        (select FCariHpp(jin.loc,jid.inv,jin.date,jid.nodsg))*jid.qty as val,
         jin.remark as rem, 'D' as dk , Psubjurnal as subjurnal,jid.nodsg as nodsg,jid.expired
         FROM jid left outer join jin on jin.jin=jid.jin
         WHERE jid.jin=PJurnal and jid.qty>0
         union all
         SELECT jin.jin AS jurnal,jin.period as period, jid.inv,jid.spesifikasi, 'GBPH', jin.date, jid.qty,
         0 as val,
         jin.remark as rem, 'K' as dk , Psubjurnal as subjurnal,jid.nodsg as nodsg,jid.expired
         FROM jid left outer join jin on jin.jin=jid.jin
         WHERE jid.jin=PJurnal and jid.qty>0 and jin.sperpart=0 and left(jid.inv,1)='7'
        ) as xacd ;
else
   if (Psubjurnal='LHP') then
   set tmpadj=ifnull((select val from adj where period=substring(Pjurnal,5,4))/(select sum(qty) from lhd left outer join lhp on lhd.lhp=lhp.lhp
   where substring(lhd.lhp,5,4)=substring(Pjurnal,5,4) and price<>0 and left(inv,1)='4' and lhp.`delete`=0),0);
   insert into ind select * from (
       SELECT lhp.lhp AS jurnal, lhp.period AS period, lhd.inv, '' as spesifikasi, lhp.loc, date(lhp.date) as `date`,
        lhd.qty, if(lhd.price is null,0.000000,lhd.price*lhd.qty)+if(price=0.000000,0.000000,(tmpadj*qty)) as val,
        lhp.remark as rem, 'D' as dk , Psubjurnal as subjurnal,lhd.nodsg as nodsg,lhd.expired
        FROM lhd left outer join lhp on lhp.lhp=lhd.lhp
        WHERE lhp.lhp=Pjurnal and lhd.qty>0 ) as xacd;
else
 If (Psubjurnal='OPN') then
    drop temporary table if exists opname;
    create temporary table opname (opn varchar(15), `date` datetime, inv varchar(15),
    loc varchar(15), qty double, val float,valhpp float, remark varchar(50),qlast double,vlast double,nodsg varchar(50),expired datetime);
    insert into opname
    (
      select opd.opn, opn.date, opd.inv, opn.loc, round(opd.qty,2) as qty, opd.val as val,opd.hpp as hpp, opn.remark,
	    FCariOpnQtyVal(opn.loc,opd.inv,DATE_ADD(date(opn.date),INTERVAL '0:23:55' DAY_MINUTE),'Q',pjurnal,opd.nodsg)  as qlast, FCariOpnQtyVal(opn.loc,opd.inv,DATE_ADD(date(opn.date),INTERVAL '0:23:55' DAY_MINUTE),'V',pjurnal,opd.nodsg)  as vlast,opd.nodsg,opd.expired
	    from opd left outer join opn on opd.opn=opn.opn
      where opn.opn=Pjurnal
    );
    insert into ind select * from
    (
      SELECT opname.opn AS jurnal, Fdate2period(opname.date) AS period, opname.inv, '' as spesifikasi, opname.loc ,DATE_ADD(date(opname.date),INTERVAL '0:23:55' DAY_MINUTE),
      round(abs(opname.qlast*(-1)+opname.qty),2) as qty,
      if(opname.qlast>=opname.qty,round(FCariHpp(opname.loc,opname.inv,opname.date,opname.nodsg)*opname.qty*(-1)+opname.vlast,2),
        if((opname.val=0 and opname.qty>0),ifnull((round(opname.vlast,2)/opname.qlast)*round(abs(opname.qlast*(-1)+opname.qty),2),0),ifnull(round(opname.vlast*(-1)+opname.val,2),0))) as val,
      opname.remark as rem,if(opname.qlast>=opname.qty,'K','D') as dk , 'OPN' as subjurnal,trim(opname.nodsg) as nodsg,expired
      FROM opname
     ) as xacd ;
else
 if (Psubjurnal='TRM') then
   insert into ind select * from (
       SELECT trm.trm AS jurnal,trm.period as period, trd.inv, '' as spesifikasi, trm.`lock`, trm.date, trd.qty,
        FCariHpp(`lock`,trd.inv,trm.date,trd.nodsg)*trd.qty as val,
        trm.remark,'K' as dk, Psubjurnal as subjurnal,trd.nodsg as nodsg,trd.expired
        FROM trd left outer join trm on trm.trm=trd.trm
        WHERE trd.trm=PJurnal and trd.qty>0 and (left(trd.inv,1))<>'9'
     union all
        SELECT trm.trm AS jurnal,trm.period as period, trd.inv,'' as spesifikasi, trm.`locd`, trm.date, trd.qty,
        FCariHpp(`lock`,trd.inv,trm.date,trd.nodsg)*trd.qty as val,
        trm.remark,'D' as dk, Psubjurnal as subjurnal,trd.nodsg as nodsg,trd.expired
        FROM trd left outer join trm on trm.trm=trd.trm
        WHERE trd.trm=PJurnal and trd.qty>0 and (left(trd.inv,1))<>'9') as xacd ;
end if ;
end if ;
end if ;
end if ;
end if ;
end if ;
end if ;
end if ;
end if ;
end if ;
end if ;
end if ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SaveInv1
DROP PROCEDURE IF EXISTS `SP_SaveInv1`;
DELIMITER //
CREATE PROCEDURE `SP_SaveInv1`(
	IN `Psubjurnal` varchar(3),
	IN `Pjurnal` varchar(15)
)
BEGIN
declare tmpadj  double;
   if (Psubjurnal='LPH') then
      if ((select count(csl.lph) from csl where csl.lph=Pjurnal) <= 0 ) then
      insert into ind select * from (
        SELECT lph.lph AS jurnal,substring(lph.lph,5,4) as period, lpd.inv, lpd.loc, lph.date,lpd.qty,
        ifnull((select ifnull((val/qty),0) from oms_in
         where oms_in.inv = lpd.inv and
               oms_in.remark = lpd.remark and
               oms_in.oms = lph.oms
        )*lpd.qty*(select oms.kurs from oms where oms.oms=lph.oms limit 1),0) as val,
        lph.oms as rem, 'D' as dk , Psubjurnal as subjurnal,'' as nodsg
        FROM lpd inner join lph on lph.lph=lpd.lph
        WHERE lpd.lph=pjurnal and lpd.qty>0  and left(lpd.inv,1)<>'7' and (lph.period<'1107')
        union all
        SELECT lph.lph AS jurnal,substring(lph.lph,5,4) as period, lpd.inv, lpd.loc, date(lph.date) as `date`,lpd.qty,
        ifnull((select ifnull((val/qty),0) from oms_in
         where oms_in.inv = lpd.inv and
               oms_in.remark = lpd.remark and
               oms_in.oms = lph.oms
        )*lpd.qty*(select oms.kurs from oms where oms.oms=lph.oms limit 1),0) as val,
        lph.oms as rem, 'D' as dk , Psubjurnal as subjurnal,'' as nodsg
        FROM lpd inner join lph on lph.lph=lpd.lph
        WHERE lpd.lph=pjurnal and lpd.qty>0  and left(lpd.inv,1)<>'7' and (lph.period>='1107')
        ) as xacd;
     else
     insert into ind select * from (
       SELECT lph.lph AS jurnal, Fdate2period(lph.date) AS period, lpd.inv, lpd.loc, lph.date,lpd.qty,
        ifnull((select (price*qty1)/qty from csl where csl.lph=lph.lph and csl.inv=lpd.inv limit 1),0)*lpd.qty as val,
        lph.remark as rem, 'D' as dk , Psubjurnal as subjurnal,'' as nodsg
        FROM lpd inner join lph on lph.lph=lpd.lph
	      left outer join oms on lph.oms=oms.oms
        left outer join inv on lpd.inv=inv.inv
        WHERE lpd.lph=Pjurnal and lpd.qty>0  and left(lpd.inv,1)<>'7' and (lph.period<'1107')
        union all
        SELECT lph.lph AS jurnal, Fdate2period(lph.date) AS period, lpd.inv, lpd.loc, date(lph.date),lpd.qty,
        ifnull((select (price*qty1)/qty from csl where csl.lph=lph.lph and csl.inv=lpd.inv limit 1),0)*lpd.qty as val,
        lph.remark as rem, 'D' as dk , Psubjurnal as subjurnal,'' as nodsg
        FROM lpd inner join lph on lph.lph=lpd.lph
	      left outer join oms on lph.oms=oms.oms
        left outer join inv on lpd.inv=inv.inv
        WHERE lpd.lph=Pjurnal and lpd.qty>0  and left(lpd.inv,1)<>'7' and (lph.period>='1107')
        ) as xacd;
     end if;
else
   if (Psubjurnal='LPJ') then
   insert into ind select * from (
     SELECT lph.lph AS jurnal, Fdate2period(lph.date) AS period, lpd.inv, lpd.loc, date(lph.date),lpd.qty,
        0 as val,
        lph.remark as rem, 'D' as dk , Psubjurnal as subjurnal,'' as nodsg
        FROM lpd inner join lph on lph.lph=lpd.lph
        left outer join inv on lpd.inv=inv.inv
        WHERE lpd.lph=Pjurnal and lpd.qty>0  and left(lpd.inv,1)<>'7' and (lph.period>='1107')
   ) as xacd;
else
   if (Psubjurnal='SJR') then
   insert into ind select * from (
       SELECT sjr.sjr AS jurnal,substring(sjr.sjr,5,4) as period, sjrd.inv, sjrd.loc, sjr.date,sjrd.qty,
        (select FCariHpp(sjrd.loc,sjrd.inv,sjr.date,''))*sjrd.qty  as val,
        sjr.remark as rem, 'K' as dk , Psubjurnal as subjurnal,'' as nodsg
        FROM sjrd left outer join sjr on sjr.sjr=sjrd.sjr
        WHERE sjrd.sjr=PJurnal and sjr.group_=1 and sjrd.qty>0  and (left(sjrd.inv,1))<>'9' and (left(sjrd.inv,1))<>'7') as xacd ;
else
 if (Psubjurnal='SJT') then
   insert into ind select * from (
       SELECT sjr.sjr AS jurnal,substring(sjr.sjr,5,4) as period, sjrd.inv, sjrd.loc, sjr.date,sjrd.qty,
        (select FCariHpp(sjrd.loc,sjrd.inv,sjr.date,''))*sjrd.qty  as val,
        sjr.remark as rem, 'K' as dk , Psubjurnal as subjurnal,'' as nodsg
        FROM sjrd left outer join sjr on sjr.sjr=sjrd.sjr
        WHERE sjrd.sjr=PJurnal and sjr.group_=2  and sjrd.qty>0  and (left(sjrd.inv,1))<>'9' and (left(sjrd.inv,1))<>'7') as xacd ;
else
   if (Psubjurnal='SJL') then
     insert into ind select * from (
         SELECT sjh.sjh AS jurnal,substring(sjh.sjh,5,4) as period, sjd.inv, trim(sjd.loc), sjh.date, sum(sjd.qty) as qty,
       sum((select FCariHpp(trim(sjd.loc),sjd.inv,sjh.date,sjd.nodsg))*sjd.qty) as val,
          sjh.remark as rem, 'K' as dk , Psubjurnal as subjurnal,sjd.nodsg as nodsg
          FROM sjd left outer join sjh on sjh.sjh=sjd.sjh
          WHERE sjd.sjh=PJurnal and sjd.qty>0 and (left(sjd.inv,1))<>'9' and (left(sjd.inv,1))<>'7' group by sjd.nodsg,sjd.inv,sjd.remark,sjd.loc) as xacd;
else
   if (Psubjurnal='RKA') then
     insert into ind select * from
     (
        select rka.rka as jurnal, rka.period, rkb.inv, rkb.loc, rka.date, rkb.qty, (select sum(val)/sum(qty) from ind where ind.jurnal=rka.rsm)*rkb.qty as val,
               rka.remark as rem, 'D' as dk, Psubjurnal as subjurnal, rkb.nodsg
          from rkb left outer join rka on rka.rka=rkb.rka
                   left outer join rsmd on rka.rsm=rsmd.rsm and rsmd.nodsg=rkb.nodsg and rsmd.inv=rkb.inv
         where rkb.rka=Pjurnal and rkb.qty>0
     ) as xacd;
else
   if (Psubjurnal='JIN') then     
   insert into ind select * from (
       SELECT jin.jin AS jurnal,jin.period as period, jid.inv, jin.loc, jin.date, jid.qty,
        if(jid.dk='K' or trim(jin.jenis)='Checked' or trim(jenis)='True',if(left(jid.inv,1)<>'9',(select FCariHpp(jin.loc,jid.inv,jin.date,jid.nodsg))*jid.qty,jid.qty*jid.price), jid.qty*jid.price) as val,
        jin.remark as rem, dk as dk , Psubjurnal as subjurnal,jid.nodsg as nodsg
        FROM jid left outer join jin on jin.jin=jid.jin
        WHERE jid.jin=PJurnal and jid.qty>0 and (left(jid.inv,1))<>'9' and (left(jid.inv,1))<>'7') as xacd ;
    update jid,jin set jid.price=(select FCariHpp(jin.loc,jid.inv,jin.date,jid.nodsg))*jid.qty/jid.qty1, jid.val=(select FCariHpp(jin.loc,jid.inv,jin.date,jid.nodsg))*jid.qty
    where jid.jin=jin.jin and dk='K' and jin.group_=1 and jin.jin=Pjurnal ;
else
   if (Psubjurnal='BPP') then
   insert into ind select * from (
       SELECT jin.jin AS jurnal,jin.period as period, jid.inv, jin.loc, jin.date, jid.qty,
        (select FCariHpp(jin.loc,jid.inv,jin.date,jid.nodsg))*jid.qty as val,
        jin.remark as rem, 'K' as dk , Psubjurnal as subjurnal,jid.nodsg as nodsg
        FROM jid left outer join jin on jin.jin=jid.jin
        WHERE jid.jin=PJurnal and jid.qty>0 ) as xacd ;
else
   if (Psubjurnal='LHP') then
   set tmpadj=ifnull((select val from adj where period=substring(Pjurnal,5,4))/(select sum(qty) from lhd left outer join lhp on lhd.lhp=lhp.lhp
   where substring(lhd.lhp,5,4)=substring(Pjurnal,5,4) and price<>0 and left(inv,1)='4' and lhp.`delete`=0),0);
   insert into ind select * from (
       SELECT lhp.lhp AS jurnal, lhp.period AS period, lhd.inv, lhp.loc, date(lhp.date) as `date`,
        lhd.qty, if(lhd.price is null,0.000000,lhd.price*lhd.qty)+if(price=0.000000,0.000000,(tmpadj*qty)) as val,
        lhp.remark as rem, 'D' as dk , Psubjurnal as subjurnal,lhd.nodsg as nodsg
        FROM lhd left outer join lhp on lhp.lhp=lhd.lhp
        WHERE lhp.lhp=Pjurnal and lhd.qty>0 ) as xacd;
else
 If (Psubjurnal='OPN') then
    drop temporary table if exists opname;
    create temporary table opname (opn varchar(15), `date` datetime, inv varchar(15),
    loc varchar(15), qty double, val float,valhpp float, remark varchar(50),qlast double,vlast double,nodsg varchar(50));
    insert into opname
    (
      select opd.opn, opn.date, opd.inv, opn.loc, round(opd.qty,2) as qty, opd.val as val,opd.hpp as hpp, opn.remark,
	    FCariOpnQtyVal(opn.loc,opd.inv,opn.date,'Q',pjurnal,opd.nodsg)  as qlast, FCariOpnQtyVal(opn.loc,opd.inv,opn.date,'V',pjurnal,opd.nodsg)  as vlast,opd.nodsg
	    from opd left outer join opn on opd.opn=opn.opn
      where opn.opn=Pjurnal
    );
   insert into ind select * from
    (
      SELECT opname.opn AS jurnal, Fdate2period(opname.date) AS period, opname.inv, opname.loc ,opname.date,
      round(abs(opname.qlast*(-1)+opname.qty),2) as qty,
      if(opname.qlast>=opname.qty,round(FCariHpp(opname.loc,opname.inv,opname.date,opname.nodsg)*opname.qty*(-1)+opname.vlast,2),
        if((opname.val=0 and opname.qty>0),(round(opname.vlast,2)/opname.qlast)*round(abs(opname.qlast*(-1)+opname.qty),2),round(opname.vlast*(-1)+opname.val,2))) as val,
      opname.remark as rem,if(opname.qlast>=opname.qty,'K','D') as dk , 'OPN' as subjurnal,trim(opname.nodsg) as nodsg
      FROM opname
     ) as xacd ;
else
 if (Psubjurnal='TRM') then
   insert into ind select * from (
       SELECT trm.trm AS jurnal,trm.period as period, trd.inv, trm.`lock`, trm.date, trd.qty,
        FCariHpp(`lock`,trd.inv,trm.date,trd.nodsg)*trd.qty as val,
        trm.remark,'K' as dk, Psubjurnal as subjurnal,trd.nodsg as nodsg
        FROM trd left outer join trm on trm.trm=trd.trm
        WHERE trd.trm=PJurnal and trd.qty>0 and (left(trd.inv,1))<>'9'
     union all
        SELECT trm.trm AS jurnal,trm.period as period, trd.inv, trm.`locd`, trm.date, trd.qty,
        FCariHpp(`lock`,trd.inv,trm.date,trd.nodsg)*trd.qty as val,
        trm.remark,'D' as dk, Psubjurnal as subjurnal,trd.nodsg as nodsg
        FROM trd left outer join trm on trm.trm=trd.trm
        WHERE trd.trm=PJurnal and trd.qty>0 and (left(trd.inv,1))<>'9' and (left(trd.inv,1))<>'7') as xacd ;
end if ;
end if ;
end if ;
end if ;
end if ;
end if ;
end if ;
end if ;
end if ;
end if ;
end if ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SaveOrderB
DROP PROCEDURE IF EXISTS `SP_SaveOrderB`;
DELIMITER //
CREATE PROCEDURE `SP_SaveOrderB`(Psubjurnal Varchar(3),Pjurnal varchar(15))
BEGIN
if (Psubjurnal='OMS') then
insert into oms_in
   select oms,inv,loc,remark,sum(qty) as qty,sum(val)/sum(qty) as price,0,sum(val) as val,cct,no,
    ifnull(sum(qty * ((select toleransi from omd where oms=PJurnal and inv=d.inv and remark=d.remark limit 1)/ 100)),0) as toleransi
   from omd d
   where d.oms=Pjurnal
   group by d.oms,d.inv,d.remark;
   update oms set jenispo=0 where jenispo is null and oms=Pjurnal;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_SaveRac
DROP PROCEDURE IF EXISTS `Sp_SaveRac`;
DELIMITER //
CREATE PROCEDURE `Sp_SaveRac`(Pinsdel char(1),Pjurnal char(15))
BEGIN
 DECLARE done INT DEFAULT 0;
  DECLARE j,a,lc CHAR(16);
  DECLARE p CHAR(4);
  DECLARE d CHAR(2);
  DECLARE v double;
  DECLARE i INT;
  DECLARE cur1 CURSOR FOR select jurnal,period,acc,dk,val as val from acd where jurnal=Pjurnal;
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
   set i=(select count(jurnal) from acd where jurnal=pjurnal);
  OPEN cur1;
  REPEAT
    FETCH cur1 INTO j,p,a,d,v;
           set lc=a;
           if i>0 then
              while lc<>'' do
                if ((select count(rac.acc) from rac where rac.period=p and rac.acc=lc) = 0)  then
                   insert into rac (rac.period, rac.acc, rac.vdebet, rac.vkredit) values(p,lc,0 ,0);
                END if;
                if pinsdel=1 then   
                 if d='D' then
                   UPDATE rac
                   set rac.vdebet=rac.vdebet+v where rac.acc=lc and rac.period=p;
                 End if;
                 if d='K' then
                   UPDATE rac
                   set rac.vkredit=rac.vkredit+v where rac.acc=lc and rac.period=p;
                 End if;
                end if;
                if pinsdel=0 then           
                 if d='D' then
                   UPDATE rac
                   set rac.vdebet=rac.vdebet-v where rac.acc=lc and rac.period=p;
                 End if;
                 if d='K' then
                   UPDATE rac
                   set rac.vkredit=rac.vkredit-v where rac.acc=lc and rac.period=p;
                 End if;
                end if;
                 set lc=(select parent from acc where acc=lc);
              end while;
          end if;
          set i = i - 1;
    UNTIL done=1  END REPEAT;
  CLOSE cur1;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SAVERAC1
DROP PROCEDURE IF EXISTS `SP_SAVERAC1`;
DELIMITER //
CREATE PROCEDURE `SP_SAVERAC1`(Pperiod varchar(4))
BEGIN
DECLARE done INT DEFAULT 0;
DECLARE counter double ;
DECLARE a,lc CHAR(16);
DECLARE cur1 CURSOR FOR select acc from acd where period=Pperiod group by acc;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
OPEN cur1;
REPEAT
    FETCH cur1 INTO a;
           set lc=a;
              while lc<>'' do
                if ((select count(rac.acc) from rac where rac.period=Pperiod and rac.acc=lc) = 0)  then
                   insert into rac (rac.period, rac.acc, rac.vlast,rac.vdebet, rac.vkredit) values(Pperiod,lc,0,0,0);
                END if;
                set lc=(select parent from acc where acc=lc);
              end while;
UNTIL done=1  END REPEAT;
update rac set vdebet=0,vkredit=0 where period=Pperiod;
update rac,(select acc,sum(if(dk='D',ifnull(val,0),0)) vald,sum(if(dk='K',ifnull(val,0),0)) valk from acd where period=Pperiod group by acc) temp
set rac.vdebet =  temp.vald, rac.vkredit = temp.valk where rac.acc=temp.acc and rac.period=Pperiod;
set counter = 4;
label1: LOOP
    update rac,(select acc.parent,sum(ifnull(rac.vdebet,0)) vald,sum(ifnull(rac.vkredit,0)) valk
     from acc,rac
     where rac.acc=acc.acc
           and rac.period=Pperiod
           and acc.parent in (select acc from acc where level_=counter and detil =0 order by level_ desc,acc asc)
           and acc.level_=counter+1
     group by acc.parent
     order by acc.parent) temp
    set rac.vdebet =  temp.vald, rac.vkredit = temp.valk
    where rac.acc=temp.parent and rac.period=Pperiod;
    SET counter = counter - 1;
    IF counter = 0  THEN
      LEAVE label1;
    END IF;
END LOOP label1;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_Saverhp
DROP PROCEDURE IF EXISTS `SP_Saverhp`;
DELIMITER //
CREATE PROCEDURE `SP_Saverhp`(
	IN `Psubjurnal` varchar(3),
	IN `Pjurnal` varchar(15),
	IN `PJenis` varchar(10)
)
BEGIN
declare pgrp varchar(15);
declare pgrpum varchar(15);
declare pgrph varchar(15);
if (Pjenis='HUTANG' or Pjenis='PIUTANG') then
if (Psubjurnal='MSK') then
insert into rhp select * from (
  SELECT msd.msk AS jurnal, Psubjurnal as subjurnal, msk.date, msk.sub, grp.acc, convert('K' using latin1)  as dk,
  if(left(msd.nofp,3) in ('070','071'),sum(msd.dpp),sum(msd.val))-(select ifnull(sum(val),0) from umkp where umkp.msk=msk.msk and trim(umkp.invoice)=trim(msd.invo)) as val, msk.duedate, msd.remark, 0 as payment, msk.period,msd.invo as invoice,if(msd.kurs=0,1,msd.kurs) as kurs
	FROM msd
    left outer join msk on msd.msk=msk.msk
	  left outer join sub on msk.sub=sub.sub
	  left outer join grp on sub.grp=grp.grp
  	WHERE msk.msk=Pjurnal group by msd.msk,trim(msd.invo)) as Xrhp
 union all
 SELECT msx.msk AS jurnal, Psubjurnal as subjurnal, msk.date, msk.sub, grp.acc, convert('D' using latin1)  as dk,
  sum((ifnull(msx.pph23,0)+ifnull(msx.pph4ay2,0)+ifnull(pph15,0))) as val, msk.duedate, msk.remark, 0 as payment, msk.period,'PPH' as invoice,if(msx.kurs=0,1,msx.kurs) as kurs
	FROM msx
    left outer join msk on msx.msk=msk.msk
	  left outer join sub on msk.sub=sub.sub
	  left outer join grp on sub.grp=grp.grp
  	WHERE msx.msk=Pjurnal and (ifnull(msx.pph23,0)+ifnull(msx.pph4ay2,0)+ifnull(pph15,0))>0 group by msx.msk;
elseif (Psubjurnal='RSK') then
insert into rhp select * from (
  SELECT rmd.rms AS jurnal, Psubjurnal as subjurnal, rms.date, rms.sub, grp.acc, convert('D' using latin1)  as dk,
  rmd.val*if(rms.ppn=1 and left(rms.fpj,2)<>'07',1.1,1) as val, rms.duedate, rmd.remark, 0 as payment, rms.period,'' as invoice,ifnull(rms.kurs,1) as kurs
	FROM rmd
    left outer join rms on rmd.rms=rms.rms
	  left outer join sub on rms.sub=sub.sub
	  left outer join grp on sub.grp=grp.grp
  	WHERE rms.rms=Pjurnal ) as Xrhp ;
elseif (Psubjurnal='KLR') then
insert into rhp select * from (
  SELECT kld.klr AS jurnal, Psubjurnal as subjurnal, klr.date, klr.sub, grp.acc, convert('D' using latin1)  as dk,
 (if(kodefp='070',sum(kld.dpp),sum(kld.dpp))-(select ifnull(sum(val),0) as val from umk where umk.klr=kld.klr))+sum(kld.ppn) as val, klr.duedate, kld.remark, 0 as payment, fdate2period(klr.date) as period,'' as invoice,if(kld.kurs=0 or kld.kurs is null,klr.kurs,if(klr.period>='1112',klr.kurs,kld.kurs)) as kurs
		FROM kld
    left outer join klr on kld.klr=klr.klr
    left outer join okl on kld.okl=okl.okl
	  left outer join sub on klr.sub=sub.sub
	  left outer join grp on sub.grp=grp.grp
  	WHERE klr.klr=Pjurnal and kld.dpp > 1 group by kld.klr) as Xrhp;
elseif (Psubjurnal='RKL') then
insert into rhp select * from (
    SELECT rkl.rkl, Psubjurnal as subjurnal,rkl.date,rkl.sub,
         (select grp.acc from grp where grp.grp=sub.grp limit 1) as acc,
         convert('K' using latin1) as dk,
         sum(rkd.val),rkl.date as duedate,rkl.remark,0 as payment, rkl.period, rkd.invo as invo,rkd.kurs
   FROM rkd,rkl left outer join sub on rkl.sub=sub.sub
   WHERE rkl.rkl=rkd.rkl and rkl.rkl=pjurnal group by rkl.rkl) as Xrhp;
elseif (Psubjurnal='KLE') then
insert into rhp select * from (
SELECT klrid.klri AS jurnal, 'KLR' as subjurnal, klri.date, klri.sub, grp.acc, convert('D' using latin1)  as dk,
 (klri.val-(select ifnull(sum(val),0) as val from umk where umk.klr=klrid.klri)) as val,null as duedate, klrid.remark, 0 as payment, fdate2period(klri.date) as period,'' as invoice,if(klri.kurs=0 or klri.kurs is null,klri.kurs,if(klri.period>='1112',klri.kurs,klri.kurs)) as kurs
		FROM klrid
    left outer join klri on klrid.klri=klri.klri
	  left outer join sub on klri.sub=sub.sub
	  left outer join grp on sub.grp=grp.grp
  	WHERE klri.klri=pjurnal and klrid.val > 1 group by klrid.klri) as Xrhp;
elseif (Psubjurnal='MMO') then
insert into rhp select * from (
  SELECT jsu.jsu AS jurnal, Psubjurnal as subjurnal, jsu.date, jsu.sub, jsu.acc, jsu.dk, jsu.val, jsu.duedate,
  jsu.remark, 0 as payment, jsu.period, trim((select invoice from jsd where jsd.jsu = jsu.jsu limit 1)) as invoice, if(jsu.kurs=0,1,jsu.kurs) as kurs
  FROM jsu
  WHERE jsu.jsu=PJurnal and jsu.val<>0 ) as Xrhp ;
elseif (Psubjurnal='KKP') then
set pgrp=(select trim(max(grp.accumbf)) from grp where grp=(select sub.grp from kas,sub where kas=Pjurnal and kas.sub=sub.sub));
set pgrpum=(select trim(max(grp.accum)) from grp where grp=(select sub.grp from kas,sub where kas=Pjurnal and kas.sub=sub.sub));
  update kad,kas set kad.jurnal=kas.kas
	where
   kad.kas=kas.kas and (kad.jurnal='' or kad.jurnal is null or length(jurnal)=0) and
 	( kad.acc=(select if(grp.accum is null,'',grp.accum) from sub,grp where sub.grp=grp.grp and sub.sub=kas.sub)
 	or
	kad.acc=(select if(grp.acc is null,'',grp.acc) from sub,grp where sub.grp=grp.grp and sub.sub=kas.sub))
	and
   kad.kas=Pjurnal;
  delete from rhp where rhp.jurnal in (select jurnal from kad where kas=Pjurnal and acc=pgrp) and rhp.subjurnal='KKP'
  and trim(acc)=trim(pgrpum) ;
  delete from rhp where rhp.jurnal=Pjurnal and rhp.jurnal in (select jurnal from kad where kas=Pjurnal) and rhp.subjurnal='KKP'
  and trim(acc)=trim(pgrpum) ;
  insert into rhp select * from (
  SELECT if(trim(kad.acc)=trim(pgrp),max(kad.jurnal),max(kad.kas)) AS jurnal, Psubjurnal as subjurnal, max(kas.date)as date,
             kas.sub, if(trim(kad.acc)=trim(pgrp),pgrpum,kad.acc),
             kad. dk, sum(jsd.val)as val, max(kas.date) as duedate, max(kad.remark)as remark, 0 as payment, max(kas.period)as period,kad.no as invoice,max(kas.kurs)as kurs
	FROM kad left outer join kas on kad.kas=kas.kas left outer join sub on kas.sub=sub.sub left outer join jsd on kad.jurnal=jsd.jsu
	WHERE Pjurnal=kad.kas and (kad.jurnal=kad.kas or (kad.acc=pgrp)) and jsd.acc=pgrpum and kad.jurnal=jsd.jsu
  group by kad.jurnal,kad.acc,kas.sub,kad.dk,kad.no  ) as xacd;
  insert into rhp select * from (
  SELECT max(kad.kas) AS jurnal, Psubjurnal as subjurnal, max(kas.date)as date,
             kas.sub, kad.acc,kad. dk, sum(kad.val)as val, max(kas.date) as duedate, max(kad.remark)as remark, 0 as payment, max(kas.period)as period,kad.no as invoice,max(kas.kurs)as kurs
	FROM kad left outer join kas on kad.kas=kas.kas
	WHERE Pjurnal=kad.kas and kad.jurnal=kad.kas  and kad.acc=pgrpum and kad.dk='K'
  group by kad.jurnal,kad.acc,kas.sub,kad.dk,kad.no ) as xacd;
elseif (Psubjurnal='KPH' or Psubjurnal='KBK') then
set pgrp=(select trim(max(grp.accumbf)) from grp where grp=(select sub.grp from kas,sub where kas=Pjurnal and kas.sub=sub.sub));
set pgrpum=(select trim(max(grp.accum)) from grp where grp=(select sub.grp from kas,sub where kas=Pjurnal and kas.sub=sub.sub));
set pgrph=(select trim(max(grp.acc)) from grp where grp=(select sub.grp from kas,sub where kas=Pjurnal and kas.sub=sub.sub));
  update kad,kas set kad.jurnal=kas.kas
	where
   kad.kas=kas.kas and (kad.jurnal='' or kad.jurnal is null or length(jurnal)=0) and
 	( kad.acc=(select if(grp.accum is null,'',grp.accum) from sub,grp where sub.grp=grp.grp and sub.sub=kas.sub)
 	or
	kad.acc=(select if(grp.acc is null,'',grp.acc) from sub,grp where sub.grp=grp.grp and sub.sub=kas.sub))
	and
   kad.kas=Pjurnal;
  delete from rhp where rhp.jurnal in (select jurnal from kad where kas=Pjurnal) and (rhp.subjurnal='KPH' or rhp.subjurnal='KBK') and rhp.acc=pgrpum;
 insert into rhp
 select * from (
  SELECT if(trim(kad.acc)=trim(pgrp),max(kad.jurnal),max(kad.kas)) AS jurnal, Psubjurnal as subjurnal, max(kas.date)as date,
             kas.sub, if(trim(kad.acc)=trim(pgrp),pgrpum,kad.acc),
             kad. dk,if(trim(kad.acc)=trim(pgrp),sum(jsd.val),sum(kad.val)) as val, max(kas.date) as duedate, max(kad.remark)as remark, 0 as payment, max(kas.period)as period,1 as invoice,
             if(trim(kad.acc)=trim(pgrp),(select kurs from rhp where jurnal=kad.jurnal and rhp.acc=trim(pgrp) limit 1),
             max(kas.kurs) )
             as kurs
  FROM kad left outer join kas on kad.kas=kas.kas left outer join sub on kas.sub=sub.sub left outer join (select jsd.jsu,jsd.acc,sum(jsd.val) as val from jsd group by jsd.jsu,jsd.acc) jsd on kad.jurnal=jsd.jsu
	WHERE Pjurnal=kad.kas and ((kad.jurnal=kad.kas and (kad.acc=pgrph or kad.acc=pgrpum)) or (kad.acc=pgrp and jsd.acc=pgrpum and kad.jurnal=jsd.jsu))
  group by kad.jurnal,kad.acc,kas.sub,kad.dk,kad.no  ) as xacd;
end if;
elseif (Pjenis='PELUNASAN') then
If (Psubjurnal='KPH' or Psubjurnal='KBK') then
insert into payhp select * from (
  SELECT kad.kas AS jurnal, kad.jurnal as reff, kas.date, kas.sub,
        kad.acc,kad.dk,kad.val,Psubjurnal as subjurnal,kas.period,kad.invoice as invoice
	FROM kad left outer join kas on kad.kas=kas.kas
	WHERE Pjurnal=kad.kas and kad.jurnal<>'' and kad.jurnal<>kad.kas
) as xacd  ;
elseif (Psubjurnal='KKP') then
insert into payhp select * from (
SELECT kad.kas AS jurnal, kad.jurnal as reff, kas.date, kas.sub,
        kad.acc,kad.dk,kad.val,Psubjurnal as subjurnal,kas.period,kad.invoice as invoice
	FROM kad left outer join kas on kad.kas=kas.kas
	WHERE Pjurnal=kad.kas and kad.jurnal<>'' and kad.jurnal<>kad.kas
) as xacd  ;
elseif (Psubjurnal='KLR') then
insert into payhp select * from (
  SELECT umk.klr AS jurnal, umk.jurnal as reff, klr.date, klr.sub,
        umk.acc, umk.dk,umk.val,Psubjurnal as subjurnal,fdate2period(klr.date) as period,umk.invo as invoice
	FROM umk left outer join klr on umk.klr=klr.klr
	WHERE Pjurnal=umk.klr
) as xacd  ;
elseif (Psubjurnal='KLE') then
insert into payhp select * from (
  SELECT umk.klr AS jurnal, umk.jurnal as reff, klr.date, klr.sub,
        umk.acc, umk.dk,umk.val,'KLR' as subjurnal,fdate2period(klr.date) as period,umk.invo as invoice
	FROM umk left outer join klr on umk.klr=klr.klr
	WHERE Pjurnal=umk.klr
) as xacd  ;
elseif (Psubjurnal='MSK') then
insert into payhp select * from (
SELECT umkp.msk AS jurnal, umkp.jurnal as reff, msk.date, msk.sub,
        umkp.acc, umkp.dk,umkp.val,Psubjurnal as subjurnal,msk.period,umkp.invo as invoice
	FROM umkp left outer join msk on umkp.msk=msk.msk
	WHERE Pjurnal=umkp.msk
) as xacd  ;
elseif (Psubjurnal='MSI') then
insert into payhp select * from (
SELECT umkp.msk AS jurnal, umkp.jurnal as reff, msk.date, msk.sub,
        umkp.acc, umkp.dk,umkp.val,Psubjurnal as subjurnal,msk.period,convert('' using latin1) as invoice
	FROM umkp left outer join msk on umkp.msk=msk.msk
	WHERE Pjurnal=umkp.msk
) as xacd  ;
elseif (Psubjurnal='UMH') then
insert into payhp select * from (
SELECT umd.umh AS jurnal, umd.jurnal as reff, umh.date, umh.sub,
        umd.acc,umd.dk,umd.val,Psubjurnal as subjurnal,umh.period,ifnull(umd.invo,ifnull((select invoice from rhp where rhp.jurnal=umd.jurnal and rhp.acc=umd.acc limit 1),'')) as invoice
	FROM umd left outer join umh on umd.umh=umh.umh
	WHERE Pjurnal=umd.umh and umd.jurnal<>'' and umd.jurnal<>umd.umh and sub<>''
) as xacd ;
end if;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SaveToHBL
DROP PROCEDURE IF EXISTS `SP_SaveToHBL`;
DELIMITER //
CREATE PROCEDURE `SP_SaveToHBL`(pinv varchar(15),premark varchar(70),
                                psub varchar(15),psubname varchar(50),
                                pprice double,psatuan varchar(10),
                                pno_po varchar(15),ptanggal datetime,
                                pcur varchar(15),pdisc double,
                                pchusr varchar(20),pchtime varchar(16))
BEGIN
  if ((select inv from hbl
       where inv = pinv and sub = psub and price = pprice and satuan = psatuan and
             cur = pcur and disc = pdisc) is null) then
    insert into hbl values(pinv,premark,psub,psubname,pprice,psatuan,pno_po,ptanggal,pcur,pdisc,'',pchtime);
  elseif ((select inv from hbl
           where inv = pinv and sub = psub and price = pprice and satuan = psatuan and
                 cur = pcur and disc = pdisc) is not null) then
    update hbl set tanggal = ptanggal,no_po = pno_po
    where inv = pinv and sub = psub and price = pprice and satuan = psatuan and
          cur = pcur and disc = pdisc;
  end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SaveToHJL
DROP PROCEDURE IF EXISTS `SP_SaveToHJL`;
DELIMITER //
CREATE PROCEDURE `SP_SaveToHJL`(pinv varchar(15),premark varchar(70),
                                psub varchar(15),psubname varchar(50),
                                pprice double,psatuan varchar(10),
                                pno_po varchar(15),ptanggal datetime,
                                pcur varchar(15),pdisc double,
                                pchusr varchar(20),pchtime varchar(16))
BEGIN
  if ((select inv from hjl
       where inv = pinv and sub = psub and price = pprice and satuan = psatuan and
             cur = pcur and disc = pdisc) is null) then
    insert into hjl values(pinv,premark,psub,psubname,pprice,psatuan,pno_po,ptanggal,pcur,pdisc,'',pchtime);
  elseif ((select inv from hjl
           where inv = pinv and sub = psub and price = pprice and satuan = psatuan and
                 cur = pcur and disc = pdisc) is not null) then
    update hjl set tanggal = ptanggal,no_po = pno_po
    where inv = pinv and sub = psub and price = pprice and satuan = psatuan and
          cur = pcur and disc = pdisc;
  end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_SelectforInvoice
DROP PROCEDURE IF EXISTS `Sp_SelectforInvoice`;
DELIMITER //
CREATE PROCEDURE `Sp_SelectforInvoice`(
	IN `PSubjurnal` char(3),
	IN `PSub` char(15)
)
BEGIN
  
  if (PSubjurnal = 'PO') then
     select oms as PO, date as Tanggal,duedate as JTempo, left(remark,50) as Keterangan,cur, kurs as Kurs, ppn as PPN
     from oms
     where aprov=1 and closedval=0 and sub=PSub and `delete`=0 ;
  elseif (Psubjurnal = 'POI') then
     select oms as PO, date as Tanggal, remark as Keterangan,cur as cur,val as nilai, kurs as Kurs, ppn as PPN
     from oms
     where aprov=1 and closedval=0 and sub=PSub and `delete`=0 ;
  elseif (PSubJurnal = 'PR') then
     select distinct prq.prq as PR, '' AS JTempo, prq.date as Tanggal, prq.remark as Keterangan, 0 as Kurs, 0 as PPN
     from prq WHERE aprov = 1 and withpo = 0 AND `delete` = 0 AND `close` = 0 order by prq;
  elseif (PSubJurnal = 'RMS') then
   select sjr.sjr as SJ_Retur,sjr.date as Tanggal, sjr.remark as Keterangan from sjr where `delete`=0 and sjr not in (select sjr from rsl,rsk where rsl.rsk=rsk.rsk and rsk.delete=0);
   elseif (PSubJurnal = 'SO') then
     select okl.okl as SO, cast(a.date as char(10)) as Tanggal, a.sjh as SJ, okl.remark as Keterangan, okl.sub as Customer,
            if(okl.ppn=true,1,0) as PPN, okl.cur as Cur, okl.kurs as Kurs, okl.nopoc as `No PO Cust`, okl.shiptoname as `Ship To`
      from okl,
           ( select distinct sjd.okl,sjh.date, sjh.sjh, kll1.sjh as kllsjh
               from sjh left outer join sjd on  sjh.sjh=sjd.sjh
               left outer join (select kll.sjh,kll.okl from kll,klr where kll.klr=klr.klr and klr.delete=0 and klr.sub=Psub and klr.date > adddate(curdate(),interval -1 year)) as kll1 on kll1.sjh=sjh.sjh and kll1.okl=sjd.okl
              where sjh.delete=0 and sjh.sub=Psub and sjh.date > adddate(curdate(),interval -2 year) and sjh.sjh<>'SJL-1610-000471'
           ) as a
      where okl.okl = a.okl and okl.`delete`=0  and a.kllsjh is null and okl.sub=PSub
      union all
      select distinct SO,Tanggal, SJ,Keterangan, Customer,PPN,Cur,Kurs,`No PO Cust`,`Ship To` from
      (
      select ' ' as SO, cast(sjh.date as char(10)) as Tanggal, sjh.sjh as SJ, sjh.remark as Keterangan, sjh.sub as Customer,
              1 as PPN, 'Rp.' as Cur, 1 as Kurs, ' ' as `No PO Cust`, ' ' as `Ship To`,kll.sjh as kllsjh
      from sjh left outer join kll on sjh.sjh=kll.sjh inner join sjd on sjh.sjh=sjd.sjh  where sjd.okl='' and sjh.sub=Psub and sjh.date >adddate(curdate(),interval -1 year))
      as xsjh where xsjh.kllsjh is null ;
    elseif (PSubJurnal = 'SOS') then
     select okl.okl as SO, cast(a.date as char(10)) as Tanggal, a.sjh as SJ, okl.remark as Keterangan, okl.sub as Customer,
             1 as PPN, okl.cur as Cur, okl.kurs as Kurs, okl.nopoc as `No PO Cust`, okl.shiptoname as `Ship To`
      from okl,
           ( select distinct sjd.okl,sjh.date, sjh.sjh, kll1.sjh as kllsjh
               from sjh left outer join sjd on  sjh.sjh=sjd.sjh
               left outer join (select kll.* from kll,klr where kll.klr=klr.klr and klr.delete=0) as kll1 on kll1.sjh=sjh.sjh and kll1.okl=sjd.okl
              where sjh.delete=0 and sjh.date >= adddate(curdate(),interval -2 month) and sjh.sub=psub
           ) as a
      where okl.okl = a.okl and okl.`delete`=0 and a.kllsjh is not null and okl.sub=PSub;
  elseif (PSubJurnal = 'MO') then
     select okl.okl as SO, okl.date as Tanggal, okl.remark as Keterangan, okl.sub as Customer, a.sjh as SJ,
             okl.ppn as PPN, okl.cur as Cur, okl.kurs as Kurs, okl.nopoc as `No PO Cust`, okl.shiptoname as `Ship To`
      from okl,
           ( select sjd.okl, sjh.sjh
               from sjd, sjh
              where sjd.mor='' and sjh.sjh=sjd.sjh and sjh.delete=0 and
                    (sjd.sjh, sjd.okl) not in (select sjh,okl from kll, klr where kll.klr=klr.klr and klr.delete=0)
           ) as a
      where okl.okl = a.okl and okl.`delete`=0 order by a.sjh;
  elseif (PSubJurnal = 'RKA') then
   select rsm.rsm as `SO Retur`, rsm.date as Tanggal, rsm.remark as Keterangan, rsm.cur as Cur, rsm.kurs as Kurs, rsm.ppn as PPN,qty from (
      select x.rka,x.rsm,sum(x.qty) as qty from (
        select r.rka,r.rsm,r.inv,-r.qty*ifnull(konversi,1) qty from rll r,rkl k,konversi
        where k.`delete`=0 and r.rkl=k.rkl and k.period>='1602' and r.inv=konversi.inv and r.unit=konversi.unit and k.sub=Psub
      union
       select t.rka,a.rsm,t.inv,t.qty from rkb t, rka a where  a.`delete`=0 and a.rka=t.rka and a.period>='1602' and a.sub=Psub) as x
       group by x.rka having sum(x.qty)>0 ) as y inner join rsm on y.rsm=rsm.rsm where rsm.`delete`=0;
  end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SelectKlrforRsm
DROP PROCEDURE IF EXISTS `SP_SelectKlrforRsm`;
DELIMITER //
CREATE PROCEDURE `SP_SelectKlrforRsm`(Pdate datetime, PCust varchar(15))
BEGIN
  select klr.klr as Penjualan, klr.date as Date, sub.name as `Customer`, kld.okl as SO,
         okd.nodsg as `No Design`, okd.inv as `Kode Barang`, okd.remark as `Nama Barang`,
         okd.loc as Loc, okd.qty1 as Qty, okd.unit as Unit
     from klr, kld, okd, sub
    where date(klr.date)<=pdate and kld.klr=klr.klr and okd.okl=kld.okl
      and klr.sub=sub.sub and klr.sub=PCust and klr.delete=0;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_SelectLHPforBPB
DROP PROCEDURE IF EXISTS `Sp_SelectLHPforBPB`;
DELIMITER //
CREATE PROCEDURE `Sp_SelectLHPforBPB`(Plhp varchar(15))
BEGIN
  select nodsg as `No Dsg`, inv as `Kode Barang`, remark as `Nama Barang`,
         qty1 as Qty, unit as Unit, qty as `Qty Base`
    from lhd where lhp=Plhp;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SelectMOforSPM
DROP PROCEDURE IF EXISTS `SP_SelectMOforSPM`;
DELIMITER //
CREATE PROCEDURE `SP_SelectMOforSPM`(Pdate datetime, Pokl varchar(15))
BEGIN
if (select count(okl) from okl where okl.okl=Pokl and withMO=true)=1 then
  select d.MO,d.`No Design`,d.`Kode Barang`, d.`Nama Barang`, d.Loc, d.Qty, d.Unit,
         ifnull(d.`Unit Dikirim`,inv.unit) as `Unit Dikirim`,
         ifnull(`Unit Base Dikirim`,inv.unit) as `Unit Base Dikirim`
  from
  (
    select b.MO,b.`No Design`,b.`Kode Barang`, b.`Nama Barang`, b.Loc, (b.Qty-ifnull(c.Qty,0)) as Qty,
           b.Unit, c.Unit as `Unit Dikirim`,c.Unitb as `Unit Base Dikirim`
    from
    (
      select lhd.mor as `MO`,lhd.nodsg as `No Design`,lhd.inv as `Kode Barang`, lhd.remark as `Nama Barang`,
             max(lhp.loc) as Loc, sum(lhd.qty) as Qty, lhd.unit as Unit
      from lhd,lhp,
      (
        (
          
          select mor.mor,mor.nodsg
            from mor,okl,
                 (select okl.okl,okl.sub,okd.nodsg from okl,okd where okd.okl=okl.okl and okl.okl =Pokl) as a
           where mor.okl=okl.okl and okl.sub=a.sub and okl.okl<>a.okl and mor.nodsg=a.nodsg and
                 okl.close=true and okl.date<=adddate(Pdate,1)
        )
        union all
        (
          
          select mor.mor,mor.nodsg
            from mor,okl
           where mor.okl=Pokl and okl.okl=mor.okl and okl.date<=adddate(Pdate,1) and okl.close=false
        )
        union all
        (
          
          select mor.mor, mor.nodsg
            from mor,
                 ( select nodsg from okd, okl
                    where okd.okl=okl.okl and okl.date<=adddate(Pdate,1) and okl.close=0 and okl.okl=Pokl
                 ) as x
           where mor.group_=2 and mor.nodsg=x.nodsg
        )
      ) as a
      where lhd.mor=a.mor and lhd.nodsg=a.nodsg and lhd.lhp=lhp.lhp and lhp.delete=false
      group by lhd.mor,lhd.nodsg
    ) as b
    left join
    (select sjd.sjh,sjd.okl,sjd.inv,sjd.loc,sjd.remark,sum(sjd.qty) as qty,sjd.`no`,sjd.unit,sum(sjd.qty1) as qty1,
          sjd.nopoc,sjd.nodsg,sjd.mor,inv.unit as unitb
       from sjd,inv,sjh where sjd.inv=inv.inv and sjh.`delete`=false and sjd.sjh=sjh.sjh  group by sjd.nodsg,sjd.mor
    ) as c
    on b.mo=c.mor and b.`No Design`=c.nodsg
    where (b.Qty-ifnull(c.Qty,0))>0
  )
  as d,inv
  where d.`Kode Barang`=inv.inv;
else
  
  select '' as MO, '' as `No Design`, okd.inv as `Kode Barang`, okd.remark as `Nama Barang`, okd.Loc, (okd.Qty-ifnull(z.qty,0)) as Qty, okd.Unit,inv.unit as `Unit Dikirim`, inv.unit as `Unit Base Dikirim`
  from inv,okl,okd left join
  (select sjd.okl,sjd.qty,sjd.inv from sjd where sjd.okl=Pokl group by sjd.okl) as z on okd.okl=z.okl and okd.inv=z.inv
  where okl.okl=okd.okl and okl.okl=Pokl and okd.inv=inv.inv;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SelectNoDsgforMO
DROP PROCEDURE IF EXISTS `SP_SelectNoDsgforMO`;
DELIMITER //
CREATE PROCEDURE `SP_SelectNoDsgforMO`(
	IN `pokl` VARCHAR(50)
)
BEGIN
    select okd.nodsg as `Kode Desain`,dsg.abrev as `Nama Singkat`,inv.oldinv as `Kode Lama`, inv.inv as `Kode Barang`,
         inv.name as `Nama Barang`, inv.unit as Unit, inv.unit as `Unit Base`
      from okd,dsg,inv
     where okd.okl=pokl and okd.nodsg not in
                                      (
                                        select a.nodsg from
                                        (select mor.okl,mor.nodsg,sum(mor.qty) as jummor
                                           from mor
                                          where mor.delete = false
                                          group by mor.okl,mor.nodsg
                                        ) as a,
                                        (select okd.okl,okd.nodsg,sum(okd.qty) as jumokd
                                           from okd
                                          group by okd.okl,okd.nodsg
                                        ) as b
                                        where a.okl=b.okl and a.nodsg=b.nodsg and a.jummor>=b.jumokd and a.okl=pokl
                                      )
       and okd.okl=pokl and okd.nodsg=dsg.nodsg and dsg.inv=inv.inv;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SelectOklforSPM
DROP PROCEDURE IF EXISTS `SP_SelectOklforSPM`;
DELIMITER //
CREATE PROCEDURE `SP_SelectOklforSPM`(ptable varchar(3))
BEGIN
if (ptable='OKL') then
select distinct okl.okl as `Sales Order`,okl.nopoc as `No Po Cust`,okl.`date`, okl.sub as `Kode Customer`,sub.name as CustName, okl.remark as `Keterangan` from
(
select okl,inv,sum(qty1) as qty1 from
(
  select convert(okd.okl using latin1) okl,convert(okd.inv using latin1) inv,okd.qty1,convert(okd.unit using latin1) unit from okd
  union all
  select convert(dod.okl using latin1),convert(dod.inv using latin1),-dod.qty/ifnull(konversi,1) as qty,convert(okd.unit using latin1)as unit from dod left outer join
  okd on dod.inv=okd.inv and dod.okl=okd.okl left outer join konversi
  on dod.inv=konversi.inv and okd.unit=konversi.unit left outer join doh on dod.doh=doh.doh where doh.`delete`=0
) as tempdo group by okl,inv
) as xdo inner join okl on xdo.okl=okl.okl  left outer join sub on okl.sub=sub.sub
where okl.`delete`=0 and okl.close=false and qty1>0;
end if;
if (Ptable='tdo') then
select * from (
select doh as `DO Number`,sub as `Customer`,name as`Name`,remark as `Keterangan`,date,max(nopoc) `PO Customer`,sum(qty) as Qty from
(
select dod.doh,doh.sub,sub.name,doh.remark,doh.date,dod.inv,dod.qty,okl.nopoc from dod,doh,okl,sub where dod.doh=doh.doh and doh.okl=okl.okl and doh.sub=sub.sub and doh.`delete`=0 and doh.`close`=0
and doh.aprov=1 and okl.`close`=0
union all
select doh.doh,doh.sub,sub.name,doh.remark,doh.date,spd.inv,-spd.qty,'' from spd,spm,doh,sub where spd.spm=spm.spm and spm.okl_rms=doh.doh and doh.sub=sub.sub and spm.`delete`=0
union all
select spm.okl_rms,spm.sub,'',doh.remark,doh.date,sprd.inv,sprd.qty,''from spr,sprd,sjh,spm,doh where sprd.spr=spr.spr and spr.rsm=sjh.sjh and sjh.spm=spm.spm and spm.okl_rms=doh.doh
) as tdoh group by doh
) as tdoh1 where qty>0;
end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SelectPorDetailForRms
DROP PROCEDURE IF EXISTS `SP_SelectPorDetailForRms`;
DELIMITER //
CREATE PROCEDURE `SP_SelectPorDetailForRms`(
	IN `Pjurnal` VARCHAR(50)
)
BEGIN
    select t.inv as "Kode Barang",t.remark as "Nama Barang",i.unit as Unit, sum(qty) as Qty, t.loc as Loc, t.price as Price, t.disc as `Disc (%)`, t.pph21 as `PPH 21`, t.valpph21 as `Nilai PPH 21`, t.pph22 as `PPH 22`, t.valpph22 as `Nilai PPH 22`, t.pph23 as `PPH 23`, t.valpph23 as `Nilai PPH 23`, t.pph42 as `PPH 4(2)`, t.valpph42 as `Nilai PPH 4(2)`, t.val as Val
           from
    (
      (select b.por, b.inv, b.qty, b.remark, b.unit, b.loc, b.price,b.disc,b.pph21,b.valpph21,b.pph22,b.valpph22,b.pph23,b.valpph23,b.pph42,b.valpph42,b.val
       from pord b, por a
       where b.por = a.por and b.por=PJurnal and a.delete=0)
      union all
      (select m.rms, d.inv, -d.qty,
       
       d.remark, d.unit, d.loc, d.price,d.disc,d.pph21,d.valpph21,d.pph22,d.valpph22,d.pph23,d.valpph23,d.pph42,d.valpph42,d.val
       from rms m, rmd d
       where d.rms = m.rms and m.rma=PJurnal and m.delete=0)
    ) as t, inv as i where t.inv=i.inv group by t.por,t.inv,t.remark having sum(qty)>0;
  
  
  
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SelectPorForRms
DROP PROCEDURE IF EXISTS `SP_SelectPorForRms`;
DELIMITER //
CREATE PROCEDURE `SP_SelectPorForRms`()
BEGIN
    
    select distinct t.por as `PO Jasa`, s.sub as `Kode Supplier`, s.name `Nama Supplier`, max(t.date) as Tanggal from
    (
      (select pord.por, por.sub, por.date, pord.inv, pord.qty, pord.unit, pord.loc, pord.remark
       from por, pord
		 where pord.por = por.por and por.delete=0)
      union all
      (select m.rma, m.sub, makedate(1900,01) as date, d.inv, -d.qty,
       convert('' using latin1) as unit, d.loc, d.remark
       from rms m, rmd d
       where m.rms = d.rms and m.rma<>'' and m.delete=0)
    ) as t, sub s where t.sub=s.sub group by t.por,t.inv,t.remark having sum(qty)>0 order by t.date desc;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SelectPOSJReturforRSK
DROP PROCEDURE IF EXISTS `SP_SelectPOSJReturforRSK`;
DELIMITER //
CREATE PROCEDURE `SP_SelectPOSJReturforRSK`(Psjr varchar(15),Prsk varchar(15))
BEGIN
select PRsk as rsk,ind.jurnal as sjr,ind.date,ind.rem as remark,sum(val) as val,0 as no,'' as rms
from ind where ind.jurnal=Psjr group by jurnal ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SelectPRforPO
DROP PROCEDURE IF EXISTS `SP_SelectPRforPO`;
DELIMITER //
CREATE PROCEDURE `SP_SelectPRforPO`(
	IN `pdate` datetime
)
BEGIN
 select a.`Purchase Request`,a.date,a.apdate,a.`No Item PR`,y.person as `Our Reference`, a.`Kode Barang`,
     a.`Nama Barang`, a.spesifikasi as Spesifikasi, a.`Unit`,a.`Qty`,ifnull(y.price,0) Harga,if(y.ppn=1,'PPN',if(y.ppn=0,'NON','')) PPN ,ifnull(y.oms,'') LastOrder,ifnull(vendor,'') as NamaVendor,a.`Loc`,a.`Ket Header`,
     a.`Cost Center`,a.`Kode Transaksi`,a.`Keterangan`, a.`Unit Base`, a.Departement,
     prd.dateneed  as `Tgl Dibutuhkan` ,ifnull(y.cur,'') Cur, ifnull(lastunit,'') lastunit from prd,
  (
   select t.prq as `Purchase Request`,max(t.date) as date,t.apdate,t.noprd as `No Item PR`,t.inv as `Kode Barang`,
     t.remark as `Nama Barang`,t.spesifikasi as Spesifikasi,max(t.unit) as `Unit`,sum(t.qty1) as `Qty`,t.loc as `Loc`,ketheader  as `Ket Header`,
     t.cct as `Cost Center`,t.acc as `Kode Transaksi`,t.etd as `Keterangan`, inv.unit as `Unit Base`, t.dept as Departement from
    (
      (select d.prq, d.inv, d.qty1, d.no as noprd, d.remark, d.etd,  convert(d.unit using latin1) as unit, convert(d.loc using latin1) as loc,convert(q.remark using latin1) as ketheader,
        d.cct, d.acc, convert(q.close using latin1) as close,convert(d.dept using latin1) as dept, q.date,convert(q.apdate using latin1) as apdate,d.spesifikasi
        from prd d, prq q
        where d.prq = q.prq and q.aprov=1 and q.date < adddate(pdate,1) and withPO=1 and q.`delete`=0 and q.`close` = 0)
      union all
      (select md.prq, md.inv, -1*(select F_GetQty(md.inv, md.unit, md.qty1, prd.unit)) as qty1,
        md.noprd, md.remark, md.etd, convert('' using latin1) as unit, convert(md.loc using latin1) as loc,convert('' using latin1) as ketheader,
        md.cct, md.acc, convert(0 using latin1) as close, convert('' using latin1) as dept,date(19000101) as date,convert('' using latin1) as apdate,md.spesifikasi
        from omd md, oms ms, prd
      where md.prq=prd.prq and md.inv=prd.inv and md.noprd=prd.no and md.oms = ms.oms and md.prq is not null and md.noprd is not null and ms.`delete`=0)
    ) as t, inv where t.inv=inv.inv
    group by t.prq,t.inv,t.noprd,t.noprd having sum(t.qty1)>0 and max(t.close)<>1) as a
  left outer join (select * from (select omd.oms,oms.person,omd.noprd,omd.inv,omd.remark,omd.unit lastunit,omd.price,oms.ppn,oms.cur, sub.name as vendor from omd,oms,sub where omd.oms=oms.oms and oms.sub=sub.sub and oms.date >= adddate(now(),interval -1 year) order by oms.date desc) as z group by inv ) y on a.`Kode Barang`=y.inv and a.`No Item PR`=y.noprd
  where a.`Purchase Request`=prd.prq and prd.no=a.`No Item PR`
 order by a. `Purchase Request`,a.`No Item PR`;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SelectPRforPOIT
DROP PROCEDURE IF EXISTS `SP_SelectPRforPOIT`;
DELIMITER //
CREATE PROCEDURE `SP_SelectPRforPOIT`(pdate datetime)
BEGIN
  
   select a.*,prd.dateneed as `Tgl Dibutuhkan.` from prd,
  (
   select t.prq as `Purchase Request`,t.noprd as `No Item PR`,t.inv as `Kode Barang`,
     t.remark as `Nama Barang`,max(t.unit) as `Unit`,sum(t.qty1) as `Qty`,t.loc as `Loc`,ketheader as `Ket Header`,
     t.cct as `Cost Center`,t.acc as `Kode Transaksi`,t.etd as `Keterangan`, inv.unit as `Unit Base` from
    (
      (select d.prq, d.inv, d.qty1, d.no as noprd, d.remark, d.etd, d.unit, d.loc,q.remark as ketheader,
        d.cct, d.acc, q.close
        from prd d, prq q
        where d.prq = q.prq and q.aprov=1 and q.date < adddate(pdate,1) and withPO=1 and q.`delete`=0 and po_it=1)
      union all
      (select md.prq, md.inv, -1*(select F_GetQty(md.inv, md.unit, md.qty1, prd.unit)) as qty1,
        md.noprd, md.remark, md.etd, convert('' using latin1) as unit, md.loc,convert('' using latin1) as ketheader,
        md.cct, md.acc, 0 as close
        from omd md, oms ms, prd
        where md.prq=prd.prq and md.inv=prd.inv and md.noprd=prd.no and md.oms = ms.oms and ms.date < adddate(pdate,1) and md.prq is not null and md.noprd is not null and ms.`delete`=0)
    ) as t, inv where t.inv=inv.inv
    group by t.prq,t.inv,t.noprd having sum(t.qty1)>0 and max(t.close)<>1) as a
 where a.`Purchase Request`=prd.prq and prd.no=a.`No Item PR`;
  
  
  
  
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_SelectPRforSpb
DROP PROCEDURE IF EXISTS `Sp_SelectPRforSpb`;
DELIMITER //
CREATE PROCEDURE `Sp_SelectPRforSpb`(
	IN `PJurnal` char(15)
)
BEGIN
  select t.inv as "Kode Barang",t.remark as "Nama Barang", t.spesifikasi as Spesifikasi,
  inv.unit as "Unit SJ", sum(t.qty) as "Qty SJ", t.loc as Loc,t.cct as "Cost Center",
  inv.unit as "Unit Diterima", inv.unit as "Unit Base Diterima" from
  (
    (select d.prq, d.inv, d.qty, d.no as noprd, d.remark, d.unit, d.loc, d.cct, d.spesifikasi
     from prd d, prq q
     where d.prq = q.prq and d.prq=PJurnal and q.delete=0)
    union all
    
     (select h.oms as prq,inv,-d.qty,d.no, d.remark, convert('' using latin1) as unit, d.loc, d.cct, d.spesifikasi
     from lpd d, lph h
     where d.lph = h.lph and h.oms=PJurnal and h.delete=0)
  ) as t,inv where inv.inv = t.inv group by t.prq,t.inv,t.remark having sum(qty)>0;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_SelectPRPOforMsk
DROP PROCEDURE IF EXISTS `Sp_SelectPRPOforMsk`;
DELIMITER //
CREATE PROCEDURE `Sp_SelectPRPOforMsk`(PSubjurnal char(3), PSub char(15))
BEGIN
  
  if (PSubjurnal = 'PO') then
    select oms as PO, date as Tanggal, remark as Keterangan, kurs as Kurs, ppn as PPN
     from oms
     where aprov=1 and closedval=0 and sub=PSub and
           oms in (select oms from lph where lph not in (select lph from msl));
  elseif (PSubJurnal = 'PR') then
    select prq as PR, date as Tanggal, remark as Keterangan, 0 as Kurs, 0 as PPN
     from prq
     where aprov=1 and close=0 and
           prq in (select oms from lph where lph not in (select lph from msl));
  end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SelectRmaDetailForRms
DROP PROCEDURE IF EXISTS `SP_SelectRmaDetailForRms`;
DELIMITER //
CREATE PROCEDURE `SP_SelectRmaDetailForRms`(PJurnal varchar(15))
BEGIN
  
    
   
    select t.inv as "Kode Barang",t.remark as "Nama Barang",i.unit as Unit, sum(qty) as Qty, loc as Loc,
           t.cct as "Cost Center", max(t.etd) as Keterangan from
    (
      (select b.rma, b.inv, b.qty, b.remark, b.unit, b.loc, b.cct, b.etd
       from rmb b, rma a
       where b.rma = a.rma and b.rma=PJurnal and a.delete=0)
      union all
      (select m.rma, d.inv, -d.qty,
       
       d.remark, d.unit, d.loc, d.cct, d.etd
       from rms m, rmd d
       where d.rms = m.rms and m.rma=PJurnal and m.delete=0)
    ) as t, inv as i where t.inv=i.inv group by t.rma,t.inv,t.remark having sum(qty)>0;
  
  
  
  
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SelectRmaForRms
DROP PROCEDURE IF EXISTS `SP_SelectRmaForRms`;
DELIMITER //
CREATE PROCEDURE `SP_SelectRmaForRms`()
BEGIN
    
    select distinct t.rma as `PR Retur`, s.sub as `Kode Supplier`, s.name `Nama Supplier`, max(t.date) as Tanggal from
    (
      (select  convert(b.rma using latin1) as rma, convert(a.sub using latin1) sub, convert(a.date using latin1) as date, convert(b.inv using latin1) inv, convert(b.qty using latin1) qty,convert(b.unit using latin1) as unit, convert(b.remark using latin1) loc,
      convert(b.remark using latin1) remark
       from rmb b, rma a where b.rma = a.rma and a.aprov=1 and a.close=0 and a.delete=0)
     union all
      (select  convert(m.rma using latin1), convert(m.sub using latin1) sub, convert(makedate(1900,01) using latin1) as date, convert(d.inv using latin1) inv, -convert(d.qty using latin1) qty,
       convert('' using latin1) as unit,convert(d.loc using latin1) loc, convert(d.remark using latin1) remark
       from rms m, rmd d
       where m.rms = d.rms and m.rma<>'' and m.delete=0)
    ) as t, sub s where t.sub=s.sub group by t.rma,t.inv,t.remark having sum(qty)>0;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SelectRmsForSpm
DROP PROCEDURE IF EXISTS `SP_SelectRmsForSpm`;
DELIMITER //
CREATE PROCEDURE `SP_SelectRmsForSpm`()
BEGIN
  select distinct max(s.por) as `PO Retur`, max(rma) as `PR Retur`, s.sub as `Kode Supplier`, c.name as `Nama Supplier`, max(cast(s.date as char)) as Tanggal from
  (
   select convert(por.por using latin1) por, convert(por.rma using latin1)rma, convert(por.sub using latin1) sub,
  por.date, convert(inv using latin1) inv,qty, convert(pord.remark using latin1) remark
      from pord left outer join por on pord.por = por.por
      where por.close=0 and por.delete=0
    union all
    select convert('' using latin1) as rms, convert('' using latin1) as rma, convert(sjr.sub using latin1) sub ,
     convert(makedate(1900,01) using latin1) as date, convert(sjrd.inv using latin1) inv, -sjrd.qty as qty, convert(sjrd.remark using latin1)
    from sjr, sjrd, spm where sjr.sjr = sjrd.sjr and sjr.spm=spm.spm and spm.aprov=1 and spm.group_=2 and spm.delete=0
  ) as s, sub c where s.sub = c.sub
  group by s.por,s.inv,s.remark having sum(qty) > 0;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SelectSjrDetailForRms
DROP PROCEDURE IF EXISTS `SP_SelectSjrDetailForRms`;
DELIMITER //
CREATE PROCEDURE `SP_SelectSjrDetailForRms`(PJurnal varchar(15))
BEGIN
  
    
   
    select t.inv as "Kode Barang",t.remark as "Nama Barang",i.unit as Unit, sum(qty) as Qty, t.loc as Loc
           from
    (
      (select b.sjr, b.inv, b.qty, b.remark, b.unit, b.loc
       from sjrd b, sjr a
       where b.sjr = a.sjr and b.sjr=PJurnal and a.delete=0)
      union all
      (select m.rms, d.inv, -d.qty,
       
       d.remark, d.unit, d.loc
       from rms m, rmd d
       where d.rms = m.rms and m.rma=PJurnal and m.delete=0)
    ) as t, inv as i where t.inv=i.inv group by t.sjr,t.inv,t.remark having sum(qty)>0;
  
  
  
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SelectSjrForRms
DROP PROCEDURE IF EXISTS `SP_SelectSjrForRms`;
DELIMITER //
CREATE PROCEDURE `SP_SelectSjrForRms`()
BEGIN
    
    select distinct t.sjr as `SJ Retur`, s.sub as `Kode Supplier`, s.name `Nama Supplier`, max(t.date) as Tanggal from
    (
      (select b.sjr, a.sub, a.date, b.inv, b.qty, b.unit, b.loc, b.remark
       from sjrd b, sjr a where b.sjr = a.sjr and a.delete=0)
      union all
      (select m.rma, m.sub, makedate(1900,01) as date, d.inv, -d.qty,
       convert('' using latin1) as unit, d.loc, d.remark
       from rms m, rmd d
       where m.rms = d.rms and m.rma<>'' and m.delete=0)
    ) as t, sub s where t.sub=s.sub group by t.sjr,t.inv,t.remark having sum(qty)>0;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SelectSOforMO
DROP PROCEDURE IF EXISTS `SP_SelectSOforMO`;
DELIMITER //
CREATE PROCEDURE `SP_SelectSOforMO`(pdate datetime)
BEGIN
    select okl.okl as `Kode Sales Order`,sub.name as `Nama Customer`,okl.nopoc as `Kode PO`,okl.date as `Tanggal`,okl.duedate as `Tanggal Jatuh Tempo`,
        pdate as tesdate
    from okl,sub 
    where okl.sub = sub.sub and okl.okl in
    (select b.okl from
      (select a.okl,a.jumokl,ifnull(sum(if(mor.delete,mor.qty*0,mor.qty*1)),0) as jummor from
          
          (select okd.okl,sum(okd.qty) as jumokl from okd
           group by okd.okl) a left join mor
           on a.okl=mor.okl
           group by a.okl)  as b
     where b.jumokl> b.jummor
     )
     and okl.withMO=true and okl.date<=pdate and okl.delete=false and okl.close=false;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SelectSOforSPM
DROP PROCEDURE IF EXISTS `SP_SelectSOforSPM`;
DELIMITER //
CREATE PROCEDURE `SP_SelectSOforSPM`(
	IN `pdate` datetime,
	IN `pcust` varchar(15)
)
BEGIN
  select okl.okl as `Sales Order`,okl.nopoc as `No Po Cust`, okd.nodsg as `No Desain`, okd.inv as `Kode Barang`, okd.remark as `Nama Barang`,
           okd.loc as Loc,(okd.qty/konversi)-ifnull((select sum(ifnull(qty,0)) from spd where spd.okl=okd.okl and spd.inv=okd.inv and okd.remark=spd.remark),0)/konversi as Qty,okd.unit as Unit,okd.unit as `Unit Base Dikirim`, okd.kgb as `Kode Global`
    from okd
	 left outer join inv on okd.inv=inv.inv inner join okl on okd.okl=okl.okl
    left outer join konversi on inv.inv=konversi.inv and inv.unit2=konversi.unit
    left outer join kgb on okd.kgb=kgb.kgb
    where okl.delete=false and okl.date<Adddate(pdate,1) and okl.sub=pcust and okl.close=false;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SelectSOLPBReturforRKL
DROP PROCEDURE IF EXISTS `SP_SelectSOLPBReturforRKL`;
DELIMITER //
CREATE PROCEDURE `SP_SelectSOLPBReturforRKL`(PRkl varchar(15), PRsm varchar(15))
BEGIN
 select PRkl as rkl,ind.inv,ind.jurnal as rka,ind.date,rkb.remark as remark,rkb.qty1 as qty ,ind.val/rkb.qty1 as price,ind.val as val,0 as no, rkb.unit as unit,PRsm as rsm
 from ind,rka,spr,rkb where ind.jurnal=rka.rka and rkb.inv=ind.inv and rkb.rka=ind.jurnal and rka.spr=spr.spr and spr.rsm=PRsm;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SelectSOSJforKLR
DROP PROCEDURE IF EXISTS `SP_SelectSOSJforKLR`;
DELIMITER //
CREATE PROCEDURE `SP_SelectSOSJforKLR`(PKlr varchar(15), POkl varchar(15),PSubjurnal varchar(3),Psjl varchar(15))
BEGIN
declare Pperiod varchar(4);
declare Pperiod1 varchar(4);
set Pperiod= (select fdate2period(adddate(now(),-60)));
set Pperiod1= (select fdate2period(adddate(now(),-60)));
  if (PSubjurnal = 'SO') then
    select PKlr as klr,s.inv,s.okl, sjh.sjh, sjh.date, sjh.remark, sum(s.val) as val, sum(s.qty1) as qty,0 as no
    from
      (select sjd.okl,sjd.inv, sjd.sjh, ifnull((okd.val/okd.qty)*sjd.qty,0) as val,sjd.qty1
         from sjd left outer join (select * from okd where okl=POkl) okd on sjd.okl=okd.okl and sjd.inv=okd.inv
        where sjd.okl=POkl 
              and sjd.sjh = Psjl
    
      ) as s, sjh where s.sjh=sjh.sjh and sjh.delete=0 and sjh.sjh=Psjl and sjh.sjh<>'SJL-1610-000471'
    group by sjh.sjh,inv;
  elseif (PSubjurnal = 'SOS') then
    select PKlr as klr, s.okl, sjh.sjh, sjh.date, sjh.remark, sum(s.val) as val, sum(s.qty1) as qty,0 as no
    from
      
      (select sjd.okl, sjd.sjh, ifnull((okd.val/okd.qty)*sjd.qty,0) as val,sjd.qty1
         from sjd left outer join okd on sjd.okl=okd.okl and sjd.inv=okd.inv
        where sjd.okl=POkl and sjd.mor=''
          and sjd.sjh in (select sjh from kll, klr where kll.klr=klr.klr and klr.delete=0)
      ) as s, sjh where s.sjh=sjh.sjh and sjh.delete=0 and sjh.sjh=Psjl
    group by sjh.sjh;
  elseif (PSubjurnal = 'MO') then
    
    
    select PKlr as klr, s.mor as okl, sjh.sjh, sjh.date, sjh.remark, sum(s.val) as val,0 as qty, 0 as no
    from
      (select sjd.mor, sjd.sjh, (okd.val/okd.qty)*sjd.qty as val
         from sjd, okd
        where sjd.mor=POkl and okd.okl=sjd.okl and okd.nodsg=sjd.nodsg and okd.inv=sjd.inv
          and (sjd.sjh, sjd.mor) not in (select sjh,okl as mor from kll, klr where kll.klr=klr.klr and klr.delete=0)
      ) as s, sjh where s.sjh=sjh.sjh and sjh.delete=0
    group by sjh.sjh;
  end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SelectSOSJforKLR2
DROP PROCEDURE IF EXISTS `SP_SelectSOSJforKLR2`;
DELIMITER //
CREATE PROCEDURE `SP_SelectSOSJforKLR2`(PKlr varchar(15), POkl varchar(15),PSubjurnal varchar(3), Psj varchar(15))
BEGIN
  
  if (PSubjurnal = 'SO') then
    select PKlr as klr, s.okl, sjh.sjh, sjh.date, sjh.remark, sum(s.val) as val, 0 as no
    from
      
      (select sjd.okl, sjd.sjh, (okd.val/okd.qty)*sjd.qty as val
         from sjd, okd
        where sjd.okl=okd.okl and sjd.nodsg=okd.nodsg and sjd.inv=okd.inv and sjd.okl=POkl and sjd.mor=''
          
          and (sjd.sjh, sjd.okl) not in (select sjh,okl from kll, klr where kll.klr=klr.klr and klr.delete=0)
      ) as s, sjh where s.sjh=sjh.sjh and sjh.delete=0 and sjh.sjh=Psj
    group by sjh.sjh;
  elseif (PSubjurnal = 'MO') then
    
    
    select PKlr as klr, s.mor as okl, sjh.sjh, sjh.date, sjh.remark, sum(s.val) as val, 0 as no
    from
      (select sjd.mor, sjd.sjh, (okd.val/okd.qty)*sjd.qty as val
         from sjd, okd
        where sjd.mor=POkl and okd.okl=sjd.okl and okd.nodsg=sjd.nodsg and okd.inv=sjd.inv
          and (sjd.sjh, sjd.mor) not in (select sjh,okl as mor from kll, klr where kll.klr=klr.klr and klr.delete=0)
      ) as s, sjh where s.sjh=sjh.sjh and sjh.delete=0
    group by sjh.sjh;
  end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_SelectSPBforLPB
DROP PROCEDURE IF EXISTS `Sp_SelectSPBforLPB`;
DELIMITER //
CREATE PROCEDURE `Sp_SelectSPBforLPB`(
	IN `Pspb` char(15)
)
BEGIN
declare Pperiod varchar(4);
set Pperiod= (select fdate2period(adddate(NOW(),-90)));
 select spb.spb as SPB, spb.date as Tanggal, spb.sub as `Kode Supplier`, sub.name as `Nama Supplier`,
   spb.remark as Keterangan, spb.period as Period, spb.oms as PO, spb.withPO as `With PO`, spb.aprov as `Approve`,
   spb.nopol as `No Polisi`
 from (select * from spb where spb.period>=Pperiod)  spb
 left join sub on spb.sub = sub.sub
 where spb.spb not in (select spb from lph where lph.spb<>Pspb and lph.`delete`=0 and lph.period>=Pperiod) and spb.aprov=1 and spb.delete=0
  and spb.period > '1603';
 
 
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_SelectSPBReturforLPBRetur
DROP PROCEDURE IF EXISTS `Sp_SelectSPBReturforLPBRetur`;
DELIMITER //
CREATE PROCEDURE `Sp_SelectSPBReturforLPBRetur`(Pspr char(15))
BEGIN
 select spr.spr as `SPB Retur`, spr.date as Tanggal, spr.sub as `Kode Customer`, sub.name as `Nama Customer`,
   spr.remark as Keterangan, spr.period as Period, spr.rsm as `SO Retur`, spr.aprov as `Approve`,
   spr.nopol as `No Polisi`
 from spr
 left join sub on spr.sub = sub.sub
 where spr.spr not in (select spr from rka where rka.spr<>Pspr and rka.`delete`=0) and spr.aprov=1 and spr.delete=0;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_SelectSPMforSJ
DROP PROCEDURE IF EXISTS `Sp_SelectSPMforSJ`;
DELIMITER //
CREATE PROCEDURE `Sp_SelectSPMforSJ`(
	IN `PGroup` tinyint,
	IN `Pspm` char(15)
)
BEGIN DECLARE Pperiod VARCHAR(4); SET Pperiod= (
SELECT fdate2period(ADDDATE(NOW(),-60)));
IF (PGroup=1) THEN
SELECT SPM,Tanggal,Customer,Keterangan,`No Polisi`,Angkutan,Approve,`No Container`,kgb,totqtykemasan,totqty,`Dokumen Pelabuhan`
FROM (
SELECT spm.spm AS SPM, spm.date AS Tanggal, spm.sub AS Customer, spm.remark AS Keterangan, spm.nopol AS `No Polisi`,
 spm.angkutan AS Angkutan, spm.aprov AS Approve,tsjh.sjh AS sjhspm, spm.no_con AS `No Container`,spm.kodeglobal AS kodeglobal,spm.totqtykemasan AS totqtykemasan,spm.totqty AS totqty,spm.nodoc AS `Dokumen Pelabuhan`, spd.kgb
FROM spm
LEFT JOIN spd ON spm.spm = spd.spm
LEFT OUTER
JOIN (
SELECT sjh,spm
FROM sjh
WHERE `delete`=0 AND sjh.spm<>Pspm AND sjh.period>=Pperiod) AS tsjh ON tsjh.spm=spm.spm
WHERE spm.aprov=1 AND spm.group_=1 AND spm.`delete`=0 AND spm.period>=2201
) AS xspm
WHERE sjhspm IS NULL;
END IF;
IF (PGroup=2) THEN
SELECT spm AS SPM, DATE AS Tanggal, spm.sub AS `Kode Supplier`,
 sub.name AS `Nama Supplier`, spm.remark AS Keterangan,
 nopol AS `No Polisi`, angkutan AS Angkutan, aprov AS Approve, okl_rms AS `No PO`
FROM spm, sub
WHERE spm NOT IN (
SELECT spm
FROM sjr
WHERE sjr.spm<>Pspm AND sjr.`delete`=0) AND
 aprov=1 AND spm.group_=2 AND spm.sub=sub.sub AND spm.delete=0;
END IF;
IF (PGroup=4) THEN
SELECT spm AS SPM, DATE AS Tanggal, spm.sub AS `Kode Supplier`,
 sub.name AS `Nama Supplier`, spm.remark AS Keterangan,
 nopol AS `No Polisi`, angkutan AS Angkutan, aprov AS Approve, okl_rms AS `No PO`
FROM spm, sub
WHERE spm NOT IN (
SELECT spm
FROM sjr
WHERE sjr.spm<>Pspm AND sjr.`delete`=0) AND
 aprov=1 AND spm.group_=3 AND spm.sub=sub.sub AND spm.delete=0;
END IF;
IF (PGroup=3) THEN
SELECT doh,tdoh1.inv AS inv, IF(sub='1110002' OR sub='1110003',qty/konversi.konversi,qty) AS qty,okl,loc,remark, IF(sub='1110002' OR sub='1110003',tdoh1.unit1,tdoh1.unit) AS unit,etd,nopoc
FROM (
SELECT doh,inv, SUM(qty) qty,okl, IFNULL(loc,' ') AS loc,remark,unit,etd, MAX(nopoc) AS nopoc, MAX(unit1) AS unit1, MAX(sub) AS sub
FROM
 (
SELECT dod.doh,dod.inv,dod.qty,dod.okl,dod.loc,dod.remark,inv.unit,dod.etd,okl.nopoc,dod.unit AS unit1,doh.sub
FROM dod,doh,okl,inv
WHERE dod.doh=doh.doh AND doh.okl=okl.okl AND dod.inv=inv.inv AND doh.`delete`=0 UNION ALL
SELECT doh.doh,spd.inv,-spd.qty,spd.okl,spd.loc,spd.remark,inv.unit,'','','',spm.sub
FROM spd,spm,doh,inv
WHERE spd.spm=spm.spm AND spm.okl_rms=doh.doh AND spd.inv=inv.inv AND spm.`delete`=0 UNION ALL
SELECT spm.okl_rms,sprd.inv,sprd.qty,doh.okl,sprd.loc,sprd.remark,sprd.unit,'','','',spm.sub
FROM spr,sprd,sjh,spm,doh
WHERE sprd.spr=spr.spr AND spr.rsm=sjh.sjh AND sjh.spm=spm.spm AND spm.okl_rms=doh.doh
) AS tdoh
GROUP BY doh,inv
) AS tdoh1
LEFT OUTER
JOIN konversi ON tdoh1.inv=konversi.inv AND tdoh1.unit1=konversi.unit
WHERE doh=Pspm ;
END IF;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_SelectSPMforSJ_SPM
DROP PROCEDURE IF EXISTS `Sp_SelectSPMforSJ_SPM`;
DELIMITER //
CREATE PROCEDURE `Sp_SelectSPMforSJ_SPM`(
	IN `Pgroup` INT,
	IN `Pspm` VARCHAR(50)
)
BEGIN
declare Pperiod varchar(4);
set Pperiod= (select fdate2period(adddate(NOW(),-30)));
   if (PGroup=1) then
 select SPM,Tanggal,Customer,Keterangan,`No Polisi`,Angkutan,Approve,`No Container` from (
    select spm.spm as SPM, spm.date as Tanggal, spm.sub as Customer, spm.remark as Keterangan, spm.nopol as `No Polisi`,
       spm.angkutan as Angkutan, spm.aprov as Approve,tsjh.sjh as sjhspm, spm.no_con as `No Container`
       from spm left outer join (select sjh,spm from sjh where `delete`=0 and sjh.spm<>Pspm and sjh.period>=Pperiod) as tsjh on tsjh.spm=spm.spm where spm.aprov=1 and spm.group_=1 and spm.`delete`=0
       and spm.period>=Pperiod
  ) as xspm where sjhspm is null ;
          end if;
   if (PGroup=2) then
     select spm as SPM, date as Tanggal, spm.sub as `Kode Supplier`,
       sub.name as `Nama Supplier`, spm.remark as Keterangan,
       nopol as `No Polisi`, angkutan as Angkutan, aprov as Approve
       from spm, sub where spm not in (select spm from sjr where sjr.spm<>Pspm and sjr.`delete`=0) and
                           aprov=1 and spm.group_=2 and spm.sub=sub.sub and spm.delete=0;
   end if;
  if (PGroup=4) then
     select spm as SPM, date as Tanggal, spm.sub as `Kode Supplier`,
       sub.name as `Nama Supplier`, spm.remark as Keterangan,
       nopol as `No Polisi`, angkutan as Angkutan, aprov as Approve
       from spm, sub where spm not in (select spm from sjr where sjr.spm<>Pspm and sjr.`delete`=0) and
                           aprov=1 and spm.group_=3 and spm.sub=sub.sub and spm.delete=0;
   end if;
   if (PGroup=3) then
    select doh,tdoh1.inv as inv,konversi,qty as qty,okl,loc,remark,kgb as `Kode Global`, nodsg,tdoh1.unit as unit,etd,nopoc,qtys,units,numbers
from
(
select doh,inv,sum(qty) qty,okl,ifnull(loc,' ') as loc,tdoh.kgb,remark,nodsg,unit,etd,max(nopoc) as nopoc,max(unit1) as unit1,max(sub) as sub,qtys,units, numbers from
(
select dod.doh,dod.inv,dod.qty,dod.okl,dod.loc,dod.remark,dod.nodsg as nodsg,inv.unit,dod.etd,okl.nopoc,dod.unit as unit1,doh.sub,dod.qty1 as qtys,dod.unit as units,dod.kgb as kgb,dod.`no` AS numbers
from dod,doh,okl,inv where dod.doh=doh.doh and doh.okl=okl.okl and dod.inv=inv.inv and doh.`delete`=0
	union all
select doh.doh,spd.inv,-spd.qty,spd.okl,spd.loc,spd.remark,spd.nodsg as nodsg,inv.unit,'','','',spm.sub,-spd.qty as qtys,'',spd.kgb, '' as numbers
from spd,spm,doh,inv where spd.spm=spm.spm and spm.okl_rms=doh.doh and spd.inv=inv.inv and spm.`delete`=0
	union all
select spm.okl_rms,sprd.inv,sprd.qty,doh.okl,sprd.loc,sprd.remark,sprd.nodsg as nodsg,sprd.unit,'','','',spm.sub,sprd.qty as qtys,'','' as kgb,'' as numbers
from spr,sprd,sjh,spm,doh where sprd.spr=spr.spr and spr.rsm=sjh.sjh and sjh.spm=spm.spm and spm.okl_rms=doh.doh
     ) as tdoh 
group by nodsg,doh,numbers
   ) as tdoh1 left outer join konversi on tdoh1.inv=konversi.inv and tdoh1.unit1=konversi.unit
where doh=Pspm;
   end if;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_SelectToClosePRonPO
DROP PROCEDURE IF EXISTS `SP_SelectToClosePRonPO`;
DELIMITER //
CREATE PROCEDURE `SP_SelectToClosePRonPO`(Pjurnal varchar(15))
BEGIN
   select prq as `Purchase Request`,noprd as `No Item PR`,inv as `Kode Barang`,
     remark as `Nama Barang`,unit as `Unit`,sum(qty1) as `Qty`,loc as `Loc`,
     cct as `Cost Center`,acc as `Account`,etd as `Keterangan` from
    (
      (select d.prq, d.inv, d.qty1, d.no as noprd, d.remark, d.etd, d.unit, d.loc,
        d.cct, d.acc
        from prd d, prq q
        where d.prq = q.prq and q.prq=Pjurnal)
      union all
      (select md.prq, inv, -1*(select F_GetQty(md.inv, md.unit, md.qty1, (select unit from prd where prd.prq=md.prq and prd.inv=md.inv and prd.no=md.noprd))) as qty1,
        md.noprd, md.remark, md.etd, md.unit, md.loc,
        md.cct, md.acc
        from omd md, oms ms
        where md.oms = ms.oms and md.prq=PJurnal and md.prq is not null and md.noprd is not null)
    ) as t group by prq,inv,noprd having sum(qty1)>0;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_selisihQty
DROP PROCEDURE IF EXISTS `sp_selisihQty`;
DELIMITER //
CREATE PROCEDURE `sp_selisihQty`(Pdatea datetime, Pdatez datetime, Psuba char(15), Psubz char(15), Pinva char(15), Pinvz char(15))
BEGIN
select sub,inv,invname,unit,name, qtysj,qtyinvoice, selisih,(selisih/qtysj)*100 as persen from (
select sub,x.inv,inv.name invname,inv.unit,x.name,sum(qtysj) as qtysj,sum(qtyinvo) as qtyinvoice,sum(qtyinvo)-sum(qtysj) selisih from (
select klr.sub,sub.name,kld.inv,kld.qty qtyinvo,0 as qtysj from kld,klr,sub where kld.klr=klr.klr
 and klr.sub=sub.sub and klr.`delete` = 0
 and klr.date>=Pdatea and klr.date<adddate(Pdatez,1)
 and if(Psuba<>'' and Psubz<>'', klr.sub between Psuba and PSubz,1)
 and if(Pinva<>'' and Pinvz<>'', kld.inv between Pinva and Pinvz,1)
 and klr.klr in (select kll.klr from kll where klr.klr=kll.klr and klr.date>=Pdatea and klr.date<adddate(Pdatez,1))
union all
select klr.sub,sub.name,kll.inv,0 as qty,kll.qty from kll,klr,sub where kll.klr=klr.klr
 and klr.sub=sub.sub  and klr.`delete` = 0
 and klr.date>=Pdatea and klr.date<adddate(Pdatez,1)
 and if(Psuba<>'' and Psubz<>'', klr.sub between Psuba and PSubz,1)
 and if(Pinva<>'' and Pinvz<>'', kll.inv between Pinva and Pinvz,1)
union all
 select jsu.sub,sub.name,(select inv from sjd where trim(sjh)=trim(jsu.acclawan)  limit 1) inv,-jsu.val1,-jsu.val1
 from jsd left outer join jsu on jsd.jsu=jsu.jsu
 left outer join sub on sub.sub=jsu.sub
 where
 jsu.date >=Pdatea and jsu.date<adddate(Pdatez,1) and jsu.sub between Psuba and Psubz
 and (jsd.acc like '41010%' or jsd.acc like '41020%')
) as x,inv where x.inv=inv.inv  group by sub,inv
) as xxx;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_sopo
DROP PROCEDURE IF EXISTS `sp_sopo`;
DELIMITER //
CREATE PROCEDURE `sp_sopo`()
BEGIN
select oms.oms,name from oms,sub where oms.`delete`=0 and oms.sub=sub.sub and oms.`close`=0 and date > adddate(curdate(),interval -2 year)
union all
select okl.okl,name from okl,sub where okl.`delete`=0 and okl.sub=sub.sub and date > adddate(curdate(),interval -2 year)
union all
select por.por,name from por,sub where por.`delete`=0 and por.sub=sub.sub and date > adddate(curdate(),interval -2 year);
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_StockOrderBeli
DROP PROCEDURE IF EXISTS `Sp_StockOrderBeli`;
DELIMITER //
CREATE PROCEDURE `Sp_StockOrderBeli`(
	IN `Pdatea` datetime,
	IN `pdatez` datetime,
	IN `Pinva` varchar(15),
	IN `Pinvz` varchar(15),
	IN `Ploca` VARCHAR(50),
	IN `Plocz` VARCHAR(50)
)
BEGIN
DECLARE lcperiod VARCHAR(4);
drop temporary table if exists tstock;
SET lcperiod = (SELECT Fdate2period(Pdatea));
create temporary table tstock as
select inv,sum(qtystock) as qtystock,nodsg,loc from
(
select inv,qlast as Qtystock,nodsg,loc from rin where period=lcperiod
and if(Ploca<>'' and Plocz<>'', rin.loc between Ploca and Plocz, 1)
union all
select inv,qty* if(dk='D',1,-1),nodsg,loc from ind where ind.date>Pdatea and ind.date< adddate(Pdatez,1)
and if(Ploca<>'' and Plocz<>'', ind.loc between Ploca and Plocz, 1)
) as xstock  where xstock.inv between Pinva and Pinvz group by inv,trim(loc),trim(nodsg);
select tstock.inv,tstock.qtystock,inv.name,inv.unit,tstock.nodsg,tstock.loc from tstock left outer join inv  on tstock.inv=inv.inv where qtystock<qtymin;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.sp_submut
DROP PROCEDURE IF EXISTS `sp_submut`;
DELIMITER //
CREATE PROCEDURE `sp_submut`(Psuba char(15), Psubz char(15), Pdate0 datetime, Pdatea datetime, Pdatez datetime, Pgroup_ varchar(1), Pacca varchar(15), Paccz varchar(15))
BEGIN
declare Pperiod char(4);
set Pperiod=(select Fdate2period(Pdatea));
drop temporary table if exists awal;
create temporary table awal (acc varchar(15),sub varchar(15), date datetime, rem varchar(50), vdebet double, vkredit double, jurnal varchar(15));
insert into awal
select acc,sub, Pdatea as date, 'Saldo Awal' as rem, sum(ifnull(debet,0)) as vdebet, sum(ifnull(kredit,0)) as vkredit,' ' as jurnal from
(
select rsb.val*rsb.kurs*(case when rsb.dk='D' then 1 else 0 end) as debet,
	rsb.val*rsb.kurs*(case when rsb.dk='K' then 1 else 0 end) as kredit,
	rsb.acc, rsb.sub
from rsb
where rsb.sub between Psuba and Psubz and rsb.period=Pperiod and rsb.acc between Pacca and Paccz and rsb.jurnal not in ('IBL-1602-000038')
union all
select rhp.val*rhp.kurs*(case when rhp.dk='D' then 1 else 0 end) as debet,
	rhp.val*rhp.kurs*(case when rhp.dk='K' then 1 else 0 end) as kredit,
	rhp.acc, rhp.sub
from rhp
where rhp.sub between Psuba and Psubz and rhp.date>=Pdate0 and  rhp.date<Pdatea and rhp.acc between Pacca and Paccz
union all
select payhp.val*(select kurs from rhp where rhp.jurnal=payhp.reff and trim(rhp.invoice)=trim(payhp.invoice) limit 1)*(case when payhp.dk='D' then 1 else 0 end) as debet,
	payhp.val*(select kurs from rhp where rhp.jurnal=payhp.reff and trim(rhp.invoice)=trim(payhp.invoice) limit 1)*(case when payhp.dk='K' then 1 else 0 end) as kredit,
	payhp.acc, payhp.sub
from payhp
where payhp.sub between Psuba and Psubz and payhp.date>=Pdate0 and payhp.date<Pdatea and payhp.acc between Pacca and Paccz
) as xawal group by acc,sub;
drop temporary table if exists mutasi;
create temporary table mutasi (acc varchar(15),sub varchar(15), `date` datetime, remark varchar(50), debet double, kredit double, jurnal varchar(15));
insert into mutasi
select * from
(
select rhp.acc, rhp.sub, date(rhp.date) as date, left(rhp.remark,50) as rem,
	ifnull(rhp.val*rhp.kurs*(case when rhp.dk='D' then 1 else 0 end),0) as debet,
  ifnull(rhp.val*rhp.kurs*(case when rhp.dk='K' then 1 else 0 end),0) as kredit, rhp.jurnal
from rhp
where rhp.sub between Psuba and Psubz and rhp.date>=Pdatea and  rhp.date<=Pdatez and rhp.acc between Pacca and Paccz
union all
select payhp.acc, payhp.sub, payhp.date, concat('Pelunasan. ',payhp.reff) as rem,
	payhp.val *(select kurs from rhp where trim(rhp.jurnal)=trim(payhp.reff) and trim(rhp.invoice)=trim(payhp.invoice)  limit 1)*(case when dk='D' then 1 else 0 end) as debet,
	payhp.val *(select kurs from rhp where trim(rhp.jurnal)=trim(payhp.reff) and trim(rhp.invoice)=trim(payhp.invoice)  limit 1)*(case when dk='K' then 1 else 0 end) as kredit, payhp.jurnal
from payhp
where payhp.sub between Psuba and Psubz and payhp.date>=Pdatea and  payhp.date<=Pdatez and payhp.acc between Pacca and Paccz
) as xmutasi;
select * from
(select awal.*, sub.name as subname, acc.name as accname
from awal
left outer join sub on awal.sub=sub.sub
left outer join acc on awal.acc=acc.acc
where sub.group_=Pgroup_
union all
select mutasi.*, sub.name as subname, acc.name as accname
from mutasi
left outer join sub on mutasi.sub=sub.sub
left outer join acc on mutasi.acc=acc.acc
where sub.group_=Pgroup_
order by 1,2,3,7) as a;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_SynPO
DROP PROCEDURE IF EXISTS `Sp_SynPO`;
DELIMITER //
CREATE PROCEDURE `Sp_SynPO`(pdatea datetime)
BEGIN
select oms.oms as DocNo,oms.date as DocDate,oms.sub as Acct,inv as Product,omd.qop as QualityOfProduct, oms.term as ShipmentTerm,oms.shippedby as ShipmentBy,
oms.delivery_from as DeliveryDate,omd.qty as Qty,if(omd.unit='kg',0,1) as UoMQty,omd.toleransi as Tolerance,cur as Ccy,oms.kurs as Rate,
omd.price as Price,omd.disc as Discount,oms.val as Amount,oms.ppn as VAT,oms.remark as Remarks,
oms.pay1 as PaymentTerms1,oms.pay1date as PaymentTerms1Date,pay2 as PaymentTerms2, pay2date as PaymentTerms2Date,
oms.pay3 as PaymentTerms3,pay3date as PaymentTerms3Date,oms.chtime as dateupdate from wis_inventory.oms oms,wis_inventory.omd omd
where oms.oms=omd.oms and TIMESTAMP(STR_TO_DATE(left(oms.chtime,10),'%d/%m/%Y '),time(substr(oms.chtime,11,5)))>= Pdatea and left(omd.inv,1) between '1' and '4';
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_SynSO
DROP PROCEDURE IF EXISTS `Sp_SynSO`;
DELIMITER //
CREATE PROCEDURE `Sp_SynSO`(pdatea datetime)
BEGIN
select okl.nopoc as CustomerPORefference,okl.okl as DocNo,okl.date as DocDate,okl.sub as Acct,inv as Product,okd.qop as QualityOfProduct, okl.term as ShipmentTerm,okl.shipby as ShipmentBy,
okl.delivery_from as DeliveryDate,okd.qty as Qty,if(okd.unit='kg',0,1) as UoMQty,okd.toleransi as Tolerance,cur as Ccy,okl.kurs as Rate,
okd.price as Price,okd.disc as Discount,okl.val as Amount,okl.ppn as VAT,spec asSpecification,okl.remark as Remarks,noofdaypay as TermsOfPayment,okl.chtime as dateupdate 
 from wis_inventory.okl okl,wis_inventory.okd okd
where okl.okl=okd.okl and TIMESTAMP(STR_TO_DATE(left(okl.chtime,10),'%d/%m/%Y '),time(substr(okl.chtime,11,5)))>= Pdatea and left(okd.inv,1) between '1' and '4';
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_TesMO
DROP PROCEDURE IF EXISTS `Sp_TesMO`;
DELIMITER //
CREATE PROCEDURE `Sp_TesMO`()
BEGIN
    create temporary table tsjh as
      select mor from sjd, sjh
                         where sjh.sjh=sjd.sjh and sjh.delete=0
                           and (sjd.sjh, sjd.mor) not in (select sjh,okl as mor from kll, klr where kll.klr=klr.klr and klr.delete=0);
    select mor.mor as MO, mor.okl as SO, okl.date as Tanggal, mor.remark as Keterangan, okl.sub as Customer,
           okl.ppn as PPN, okl.cur as Cur, okl.kurs as Kurs, okl.nopoc as `No PO Cust`, okl.shiptoname as `Ship To`
      from mor,okl
      where mor.okl=okl.okl and okl.sub='11010002' and mor.delete=0 and okl.delete=0
        and mor.mor in (select mor
                          from tsjh
                       );
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.Sp_trial
DROP PROCEDURE IF EXISTS `Sp_trial`;
DELIMITER //
CREATE PROCEDURE `Sp_trial`( lcdatea datetime, lcdatez datetime, lclevel float)
BEGIN
DECLARE lcperiod      VARCHAR(4);
DECLARE lcAccParent   VARCHAR(15);
DECLARE lcAccDetil    VARCHAR(15);
DECLARE lcDebet       DOUBLE;
DECLARE lcKredit      DOUBLE;
DECLARE lcDebetadj    DOUBLE;
DECLARE lcKreditadj   DOUBLE;
DECLARE lcDebetnetto  DOUBLE;
DECLARE lcKreditnetto DOUBLE;
DECLARE lcVal DOUBLE;
DECLARE lcValnetto DOUBLE;
DECLARE DONe INT DEFAULT 0;
DECLARE lcADetil,lcAParent CHAR(15);
DECLARE lcD,lcK,lcDa,lcKa,lcV,lcVnet,lcDnet,lcKnet DOUBLE;
DECLARE i INT;
DECLARE SalDODetil CURSOR FOR
SELECT  acc,parent,debet,kredit,awal FROM TsalDO WHERE detil=1 AND abs(awal)+abs(debet)+abs(kredit)>0;
DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONe = 1;
SET lcperiod = (SELECT Fdate2period(lcdatea));
drop temporary table IF EXISTS Tawal ;
CREATE TEMPORARY TABLE Tawal (acc VARCHAR(15),vlast DOUBLE);
drop temporary table IF EXISTS Tmutasi;
CREATE TEMPORARY TABLE Tmutasi (acc VARCHAR(15),debet DOUBLE,kredit DOUBLE);
drop temporary table IF EXISTS TsalDO;
CREATE TEMPORARY TABLE TsalDO (acc VARCHAR(15),name VARCHAR(60),parent VARCHAR(15),group_ char(1),detil tinyint(2),level_ smallint(5),awal DOUBLE,
              debet DOUBLE,kredit DOUBLE);
drop temporary table IF EXISTS TsalDOparent;
CREATE TEMPORARY TABLE TsalDOparent (acc VARCHAR(15),parent VARCHAR(15));
INSERT INTO Tawal
SELECT acc, SUM(IF(isnull(vlast),0,vlast)) as vlast
FROM
(
  SELECT rac.acc,rac.vlast
      FROM rac
      WHERE rac.period=lcPeriod
 
)
as oawal GROUP BY acc;
INSERT INTO Tmutasi
SELECT acc,
    SUM(val*IF(dk="D",1,0)) as debet,                             
    SUM(val*IF(dk="K",1,0)) as kredit			
    FROM acd
    WHERE acd.date >=lcdatea  AND acd.date<lcdatez GROUP BY acd.acc;
INSERT INTO TsalDO
SELECT acc.acc,
    acc.name,
    acc.parent,
    acc.group_,
    acc.detil,
    acc.level_,
    IF(isnull(Tawal.vlast),0,Tawal.Vlast) as awal,
    IF(isnull(Tmutasi.debet),0,Tmutasi.debet) as debet,
    IF(isnull(Tmutasi.kredit),0,Tmutasi.kredit) as kredit
    FROM  Tawal
    RIGHT OUTER JOIN acc
    LEFT OUTER JOIN Tmutasi
    ON acc.acc=Tmutasi.acc
    ON Tawal.acc=acc.acc;
INSERT INTO tsalDOparent
SELECT acc, parent FROM TsalDO WHERE detil=0;
OPEN SalDODetil;
  REPEAT
      FETCH SalDODetil INTO lcADetil,lcAParent,lcD,lcK,lcV;
               WHILE lcAParent<>'' DO
                  UPDATE TsalDO SET  debet=debet+lcD, kredit=kredit+lcK WHERE acc=lcAParent;
                  SET lcAParent=(SELECT parent FROM tsalDOparent WHERE acc=lcAParent);
               end WHILE;
    UNTIL DONe=1  END REPEAT;
  CLOSE SalDODetil;
  SELECT *,Tsaldo.awal as saldoawal,Tsaldo.debet as tdebet, Tsaldo.kredit as tkredit,Tsaldo.awal+TSaldo.debet-Tsaldo.kredit as saldo,IF((SELECT acc.name FROM acc WHERE acc.acc=TsalDO.parent) is null,TsalDO.name,(SELECT acc.name FROM acc WHERE acc.acc=TsalDO.parent)) as parentname,  IF(parent='',acc,parent) as parentacc
  FROM TsalDO
  WHERE ( level_= lclevel or (level_<lclevel AND detil=1) ) AND (abs(awal)+abs(debet)+abs(kredit)>0)
  order by acc ;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_UpdateDateNeed
DROP PROCEDURE IF EXISTS `SP_UpdateDateNeed`;
DELIMITER //
CREATE PROCEDURE `SP_UpdateDateNeed`()
BEGIN
DECLARE done INT DEFAULT 0;
  DECLARE p float;
  DECLARE a varchar(15);
  DECLARE d DATETIME;
  DECLARE cur1 CURSOR FOR select * from akt2;
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = 1;
start transaction;
  OPEN cur1;
  REPEAT
    FETCH cur1 INTO a,p;
          update akt set prosentase=p where akt=a;
    UNTIL done=1  END REPEAT;
CLOSE cur1;
commit;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_ValuasiHutangPiutang
DROP PROCEDURE IF EXISTS `SP_ValuasiHutangPiutang`;
DELIMITER //
CREATE PROCEDURE `SP_ValuasiHutangPiutang`(Psuba varchar(15),Psubz varchar(15), Pdatea datetime, Pdatez datetime, Pgroup_ smallint(5), Pacca varchar(15), Paccz varchar(15))
BEGIN
declare Pperiod char(4) ;
declare Pkursbi double ;
declare PkursPJK double ;
set Pperiod = (select Fdate2period(Pdatea)) ;
set PkursBI=ifnull((select valbi from khr where date=Pdatez and cur='USD' limit 1),0) ;
set PkursPJK=ifnull((select val from khr where date=Pdatez and cur='USD' limit 1),0) ;
drop temporary table if exists trhp;
create temporary table trhp as select * from
(
select period,jurnal,invoice,date,sub,acc,dk,val,payment,duedate,subjurnal,remark,kurs from rsb
where rsb.sub between Psuba and Psubz and rsb.period=Pperiod and rsb.acc between Pacca and Paccz and kurs<>1 and rsb.val<>0
union all
select period,jurnal,invoice,date,sub,acc,dk,val,payment,duedate,subjurnal,remark,kurs from rhp
where rhp.sub between Psuba and Psubz and rhp.date>=Pdatea and  rhp.date< adddate(Pdatez,1) and rhp.acc between Pacca and Paccz and rhp.kurs<>1
) as trhp;
drop temporary table if exists tpayhp;
create temporary table tpayhp as select * from
(
select jurnal,invoice,reff,date,sub,acc,dk,(val*case when payhp.dk='K' then -1 else 1 end) as val,period from payhp
where payhp.sub between Psuba and Psubz and payhp.date>=Pdatea and  payhp.date< adddate(Pdatez,1) and payhp.acc between Pacca and Paccz
) as tpayhp;
drop temporary table if exists tkon;
create temporary table tkon as select * from
(
select trhp.period,trhp.jurnal,trhp.invoice,trhp.date,trhp.acc,trhp.kurs,trhp.dk,trhp.sub,sub.name,acc.name as accname,sub.group_ as grup,
(ifnull(trhp.val,0)*case when trhp.dk='K' then -1 else 1 end) as val,ifnull(tpayhp.val,0) as val1 from trhp left outer join tpayhp on trhp.jurnal=tpayhp.reff  and trim(trhp.acc)=trim(tpayhp.acc) and trim(trhp.invoice)=trim(tpayhp.invoice)
left outer join sub on trhp.sub=sub.sub left outer join acc on trhp.acc=acc.acc
) as tkon;
drop temporary table if exists tvaluasi;
create temporary table tvaluasi as select * from
(
select period,jurnal,date,acc,accname,kurs,dk,sub,name,round(val,2) val,round(sum(val1),2) as val1, grup,
(case when grup=1 then PkursBI else PkursBI end) as kursBI
from tkon
group by period,jurnal,date,invoice,acc,accname,kurs,dk,sub,name,val
union all
select period,kas,date,acc,accname,kurs,dk,sub,name,val*if(dk='K',-1,1) as val,0 as val1,grup,(case when grup=1 then PkursBI else PkursBI end) as kursBI from (
select kas.sub,kas.period,kag.*,kas.kurs,kas.date,cgr1.nobg as nobgcair,acc.name as accname,if(kas.group_=1,'K','D') as dk,sub.name,sub.group_ as grup
from kag inner join kas on kag.kas=kas.kas left outer join sub on kas.sub=sub.sub left outer join acc on kag.acc=acc.acc left outer join
(select * from cgr where cgr.date< adddate(Pdatez,1))  as cgr1 on kag.nobg=cgr1.nobg where kas.kurs>1 and kas.date < adddate(Pdatez,1)
) as vgiro where vgiro.nobgcair is null
) as tvaluasi;
select * from tvaluasi where round(round(tvaluasi.val,2)+round(tvaluasi.val1,2),1)<>0 and grup=Pgroup_
order by acc,date,sub,jurnal;
END//
DELIMITER ;

-- Dumping structure for procedure wis_inventory.SP_ValuasiHutangPiutangM
DROP PROCEDURE IF EXISTS `SP_ValuasiHutangPiutangM`;
DELIMITER //
CREATE PROCEDURE `SP_ValuasiHutangPiutangM`(Psuba varchar(15),Psubz varchar(15), Pdatea datetime, Pdatez datetime, Pgroup_ smallint(5), Pacca varchar(15), Paccz varchar(15))
BEGIN
declare Pperiod char(4) ;
declare Pkursbi double ;
declare PkursPJK double ;
set Pperiod = (select Fdate2period(Pdatea)) ;
set PkursBI=ifnull((select valbi from khr where date=Pdatez and cur='USD' limit 1),0) ;
set PkursPJK=ifnull((select val from khr where date=Pdatez and cur='USD' limit 1),0) ;
drop temporary table if exists trhp;
create temporary table trhp as select * from
(
select period,jurnal,invoice,date,sub,acc,dk,val,payment,duedate,subjurnal,remark,kurs from rsb
where rsb.sub between Psuba and Psubz and rsb.period=Pperiod and rsb.acc between Pacca and Paccz and rsb.val<>0
union all
select period,jurnal,invoice,date,sub,acc,dk,val,payment,duedate,subjurnal,remark,kurs from rhp
where rhp.sub between Psuba and Psubz and rhp.date>=Pdatea and  rhp.date< adddate(Pdatez,1) and rhp.acc between Pacca and Paccz
) as trhp;
drop temporary table if exists tpayhp;
create temporary table tpayhp as select * from
(
select jurnal,invoice,reff,date,sub,acc,dk,(val*case when payhp.dk='K' then -1 else 1 end) as val,period from payhp
where payhp.sub between Psuba and Psubz and payhp.date>=Pdatea and  payhp.date< adddate(Pdatez,1) and payhp.acc between Pacca and Paccz
) as tpayhp;
drop temporary table if exists tkon;
create temporary table tkon as select * from
(
select trhp.period,trhp.jurnal,trhp.invoice,trhp.date,trhp.acc,trhp.kurs,trhp.dk,trhp.sub,sub.name,acc.name as accname,sub.group_ as grup,
(ifnull(trhp.val,0)*case when trhp.dk='K' then -1 else 1 end) as val,ifnull(tpayhp.val,0) as val1 from trhp left outer join tpayhp on trhp.jurnal=tpayhp.reff  and trim(trhp.acc)=trim(tpayhp.acc) and trim(trhp.invoice)=trim(tpayhp.invoice)
left outer join sub on trhp.sub=sub.sub left outer join acc on trhp.acc=acc.acc
) as tkon;
drop temporary table if exists tvaluasi;
create temporary table tvaluasi as select * from
(
select period,jurnal,date,acc,accname,kurs,dk,sub,name,round(val,2) val,round(sum(val1),2) as val1, grup,
(case when grup=1 then PkursBI else PkursBI end) as kursBI
from tkon
group by period,jurnal,date,invoice,acc,accname,kurs,dk,sub,name,val
union all
select period,kas,date,acc,accname,kurs,dk,sub,name,val*if(dk='K',-1,1) as val,0 as val1,grup,(case when grup=1 then PkursBI else PkursBI end) as kursBI from (
select kas.sub,kas.period,kag.*,kas.kurs,kas.date,cgr1.nobg as nobgcair,acc.name as accname,if(kas.group_=1,'K','D') as dk,sub.name,sub.group_ as grup
from kag inner join kas on kag.kas=kas.kas left outer join sub on kas.sub=sub.sub left outer join acc on kag.acc=acc.acc left outer join
(select * from cgr where cgr.date< adddate(Pdatez,1))  as cgr1 on kag.nobg=cgr1.nobg where kas.kurs>1 and kas.date < adddate(Pdatez,1)
) as vgiro where vgiro.nobgcair is null
) as tvaluasi;
select tvaluasi.*,kl.inv,kl.name,round(kl.qty,2) as qty,(tvaluasi.val*ifnull(tvaluasi.kurs,1))*ifnull((kl.valkld/(select sum(val) from kld where kld.klr=tvaluasi.jurnal)),1) as valinv from tvaluasi left outer join
(select kld.klr,kld.inv,inv.name,sum(qty) as qty,sum(val) valkld,kld.price from kld left outer join inv on kld.inv=inv.inv group by kld.klr,kld.inv
 union all
 select rkd.rkl,rkd.inv,rkd.remark,sum(qty) as qty,'' valkld,rkd.price from rkd  group by rkd.rkl
) as kl on tvaluasi.jurnal=kl.klr where round(round(tvaluasi.val,2)+round(tvaluasi.val1,2),1)<>0 and grup=Pgroup_
order by acc,sub,date,jurnal;
END//
DELIMITER ;

-- Dumping structure for table wis_inventory.station
DROP TABLE IF EXISTS `station`;
CREATE TABLE IF NOT EXISTS `station` (
  `station` int(10) unsigned NOT NULL default '0',
  `station_name` varchar(45) default ' ',
  `remark` varchar(50) default ' ',
  `tag_num` varchar(30) default ' ',
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  PRIMARY KEY  (`station`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.station: ~2 rows (approximately)
/*!40000 ALTER TABLE `station` DISABLE KEYS */;
REPLACE INTO `station` (`station`, `station_name`, `remark`, `tag_num`, `chtime`, `chusr`) VALUES
	(1, 'Station 1', '', '', '01/09/2014 11:16', 'root'),
	(2, 'Station 2', '', '', '01/09/2014 13:21', 'root');
/*!40000 ALTER TABLE `station` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.std
DROP TABLE IF EXISTS `std`;
CREATE TABLE IF NOT EXISTS `std` (
  `str` varchar(15) NOT NULL,
  `nobg` varchar(15) default NULL,
  `bank` varchar(50) default NULL,
  `acbank` varchar(50) default NULL,
  `duedate` datetime default NULL,
  `date` datetime default NULL,
  `val` double default NULL,
  `no` smallint(5) NOT NULL default '0',
  PRIMARY KEY  (`str`,`no`),
  KEY `str` (`str`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.std: ~0 rows (approximately)
/*!40000 ALTER TABLE `std` DISABLE KEYS */;
/*!40000 ALTER TABLE `std` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.str
DROP TABLE IF EXISTS `str`;
CREATE TABLE IF NOT EXISTS `str` (
  `str` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `acc` varchar(15) default NULL,
  `period` varchar(4) NOT NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `remark` varchar(50) default NULL,
  `val` double default NULL,
  `delete` bit(1) NOT NULL default '\0',
  PRIMARY KEY  (`str`),
  KEY `period` (`period`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.str: ~0 rows (approximately)
/*!40000 ALTER TABLE `str` DISABLE KEYS */;
/*!40000 ALTER TABLE `str` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.sub
DROP TABLE IF EXISTS `sub`;
CREATE TABLE IF NOT EXISTS `sub` (
  `sub` varchar(15) NOT NULL,
  `name` varchar(50) default NULL,
  `person` varchar(50) default NULL,
  `address` varchar(150) default NULL,
  `city` varchar(50) default NULL,
  `phone` varchar(50) default NULL,
  `fax` varchar(50) default NULL,
  `sales` varchar(15) default NULL,
  `group_` smallint(5) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `remark` varchar(50) default NULL,
  `maxkredit` double default NULL,
  `shiptoname` varchar(50) default NULL,
  `shiptoaddress` longtext,
  `gironame` varchar(60) default NULL,
  `grp` varchar(15) default NULL,
  `subnpwp` varchar(20) default NULL,
  `kode_area` varchar(15) default NULL,
  `discust` float default NULL,
  `kd_country` varchar(50) default NULL,
  `country` varchar(30) default NULL,
  `subpkp` varchar(20) default NULL,
  `kodefp` varchar(3) default NULL,
  `duedate` double default NULL,
  `top` smallint(5) default '0',
  `cur` varchar(15) default NULL,
  `aktif` bit(1) NOT NULL default '',
  `kodepos` varchar(15) default NULL,
  `toleransi` double default '0',
  `budget` double default '0',
  `kodeinv` varchar(15) default NULL,
  `limit` double NOT NULL,
  `delete` bit(1) default '\0',
  `norek` varchar(25) default NULL,
  `bankname` varchar(45) default NULL,
  `addressbank` varchar(45) default NULL,
  `citybank` varchar(25) default NULL,
  PRIMARY KEY  (`sub`),
  KEY `group_` (`group_`,`sub`,`grp`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.sub: ~0 rows (approximately)
/*!40000 ALTER TABLE `sub` DISABLE KEYS */;
/*!40000 ALTER TABLE `sub` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.subtemp
DROP TABLE IF EXISTS `subtemp`;
CREATE TABLE IF NOT EXISTS `subtemp` (
  `name` varchar(50) default NULL,
  `person` varchar(50) default NULL,
  `address` varchar(150) default NULL,
  `city` varchar(50) default NULL,
  `phone` varchar(50) default NULL,
  `fax` varchar(50) default NULL,
  `sales` varchar(15) default NULL,
  `group_` smallint(5) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `remark` varchar(50) default NULL,
  `maxkredit` double default NULL,
  `shiptoname` varchar(50) default NULL,
  `shiptoaddress` longtext,
  `gironame` varchar(50) default NULL,
  `grp` varchar(15) default NULL,
  `subnpwp` varchar(20) default NULL,
  `kode_area` varchar(15) default NULL,
  `discust` float default NULL,
  `country` varchar(30) default NULL,
  `subpkp` varchar(20) default NULL,
  `kodefp` varchar(3) default NULL,
  `duedate` double default NULL,
  `top` smallint(5) default '0',
  `cur` varchar(15) default NULL,
  `aktif` bit(1) NOT NULL default '\0',
  `no` smallint(5) unsigned NOT NULL auto_increment,
  PRIMARY KEY  (`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.subtemp: ~0 rows (approximately)
/*!40000 ALTER TABLE `subtemp` DISABLE KEYS */;
/*!40000 ALTER TABLE `subtemp` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.subto
DROP TABLE IF EXISTS `subto`;
CREATE TABLE IF NOT EXISTS `subto` (
  `sub` varchar(15) default NULL,
  `shiptoname` varchar(40) NOT NULL,
  `shiptoaddress` longtext,
  `aliasname` varchar(30) NOT NULL,
  `city` varchar(25) default NULL,
  `country` varchar(25) default NULL,
  `contactperson` varchar(25) default NULL,
  `fax` varchar(15) default NULL,
  `phone` varchar(15) default NULL,
  PRIMARY KEY  (`shiptoname`,`aliasname`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.subto: ~0 rows (approximately)
/*!40000 ALTER TABLE `subto` DISABLE KEYS */;
/*!40000 ALTER TABLE `subto` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.surel
DROP TABLE IF EXISTS `surel`;
CREATE TABLE IF NOT EXISTS `surel` (
  `email` varchar(255) NOT NULL,
  `ket` varchar(255) default NULL,
  PRIMARY KEY  (`email`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.surel: ~0 rows (approximately)
/*!40000 ALTER TABLE `surel` DISABLE KEYS */;
/*!40000 ALTER TABLE `surel` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.tawalx
DROP TABLE IF EXISTS `tawalx`;
CREATE TABLE IF NOT EXISTS `tawalx` (
  `acc` varchar(15) default NULL,
  `vlast` double default NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.tawalx: ~0 rows (approximately)
/*!40000 ALTER TABLE `tawalx` DISABLE KEYS */;
/*!40000 ALTER TABLE `tawalx` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.tes
DROP TABLE IF EXISTS `tes`;
CREATE TABLE IF NOT EXISTS `tes` (
  `sub` varchar(15) NOT NULL default '',
  `name` varchar(50) default NULL,
  `person` varchar(50) default NULL,
  `address` varchar(150) default NULL,
  `city` varchar(50) default NULL,
  `phone` varchar(50) default NULL,
  `fax` varchar(50) default NULL,
  `sales` varchar(15) default NULL,
  `group_` smallint(5) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `remark` varchar(50) default NULL,
  `maxkredit` double default NULL,
  `shiptoname` varchar(50) default NULL,
  `shiptoaddress` longtext,
  `gironame` varchar(50) default NULL,
  `grp` varchar(15) default NULL,
  `subnpwp` varchar(20) default NULL,
  `kode_area` varchar(15) default NULL,
  `discust` float default NULL,
  `country` varchar(30) default NULL,
  `subpkp` varchar(20) default NULL,
  `kodefp` varchar(3) default NULL,
  `duedate` double default NULL,
  `top` smallint(5) default '0',
  `cur` varchar(15) default NULL,
  `aktif` bit(1) NOT NULL default '',
  `kodepos` varchar(15) NOT NULL default '',
  `oldsub` varchar(15) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.tes: ~0 rows (approximately)
/*!40000 ALTER TABLE `tes` DISABLE KEYS */;
/*!40000 ALTER TABLE `tes` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.tlk
DROP TABLE IF EXISTS `tlk`;
CREATE TABLE IF NOT EXISTS `tlk` (
  `tlk` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `dk` smallint(5) default NULL,
  `nobg` varchar(15) default NULL,
  `bank` varchar(50) default NULL,
  `acbank` varchar(50) default NULL,
  `bgdate` datetime default NULL,
  `bgduedate` datetime default NULL,
  `bgval` double default NULL,
  `sub` varchar(15) default NULL,
  `accbank` varchar(50) default NULL,
  `acc` varchar(15) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL,
  `remark` varchar(50) default NULL,
  `delete` bit(1) NOT NULL default '\0',
  PRIMARY KEY  (`tlk`),
  KEY `period` (`period`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.tlk: ~0 rows (approximately)
/*!40000 ALTER TABLE `tlk` DISABLE KEYS */;
/*!40000 ALTER TABLE `tlk` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.tmpoms
DROP TABLE IF EXISTS `tmpoms`;
CREATE TABLE IF NOT EXISTS `tmpoms` (
  `oms` varchar(15) NOT NULL default '',
  PRIMARY KEY  (`oms`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.tmpoms: ~0 rows (approximately)
/*!40000 ALTER TABLE `tmpoms` DISABLE KEYS */;
/*!40000 ALTER TABLE `tmpoms` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.tmpsjh
DROP TABLE IF EXISTS `tmpsjh`;
CREATE TABLE IF NOT EXISTS `tmpsjh` (
  `sjh` varchar(15) NOT NULL default '',
  `inv` varchar(15) default NULL,
  `remark` varchar(200) default NULL,
  `okl` varchar(15) default NULL,
  PRIMARY KEY  (`sjh`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.tmpsjh: ~0 rows (approximately)
/*!40000 ALTER TABLE `tmpsjh` DISABLE KEYS */;
/*!40000 ALTER TABLE `tmpsjh` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.tmpsub
DROP TABLE IF EXISTS `tmpsub`;
CREATE TABLE IF NOT EXISTS `tmpsub` (
  `sublama` varchar(15) NOT NULL default '',
  `subbaru` varchar(15) default NULL,
  `nama` varchar(60) default NULL,
  PRIMARY KEY  (`sublama`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.tmpsub: ~0 rows (approximately)
/*!40000 ALTER TABLE `tmpsub` DISABLE KEYS */;
/*!40000 ALTER TABLE `tmpsub` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.tmutasix
DROP TABLE IF EXISTS `tmutasix`;
CREATE TABLE IF NOT EXISTS `tmutasix` (
  `acc` varchar(15) default NULL,
  `debet` double default NULL,
  `kredit` double default NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.tmutasix: ~0 rows (approximately)
/*!40000 ALTER TABLE `tmutasix` DISABLE KEYS */;
/*!40000 ALTER TABLE `tmutasix` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.trd
DROP TABLE IF EXISTS `trd`;
CREATE TABLE IF NOT EXISTS `trd` (
  `trm` varchar(15) NOT NULL default ' ',
  `inv` varchar(15) default NULL,
  `remark` varchar(100) default NULL,
  `qty` double default NULL,
  `no` smallint(5) NOT NULL default '0',
  `unit` varchar(6) default NULL,
  `nodsg` varchar(50) NOT NULL,
  `qty1` double NOT NULL default '0',
  `expired` datetime default NULL,
  PRIMARY KEY  (`trm`,`no`),
  KEY `trm` (`trm`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.trd: ~0 rows (approximately)
/*!40000 ALTER TABLE `trd` DISABLE KEYS */;
/*!40000 ALTER TABLE `trd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.trm
DROP TABLE IF EXISTS `trm`;
CREATE TABLE IF NOT EXISTS `trm` (
  `trm` varchar(15) NOT NULL,
  `lhp` varchar(15) default NULL,
  `date` datetime default NULL,
  `lock` varchar(15) default NULL,
  `locd` varchar(15) default NULL,
  `remark` varchar(50) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(100) default NULL,
  `period` varchar(4) NOT NULL,
  `delete` bit(1) NOT NULL default '\0',
  `bsa` varchar(15) default ' ',
  PRIMARY KEY  (`trm`),
  KEY `period` (`period`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.trm: ~0 rows (approximately)
/*!40000 ALTER TABLE `trm` DISABLE KEYS */;
/*!40000 ALTER TABLE `trm` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.tsaldoparentx
DROP TABLE IF EXISTS `tsaldoparentx`;
CREATE TABLE IF NOT EXISTS `tsaldoparentx` (
  `acc` varchar(15) NOT NULL default ' ',
  `parent` varchar(15) default NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.tsaldoparentx: ~160 rows (approximately)
/*!40000 ALTER TABLE `tsaldoparentx` DISABLE KEYS */;
REPLACE INTO `tsaldoparentx` (`acc`, `parent`) VALUES
	('10000000', ''),
	('11000000', '10000000'),
	('11010000', '11000000'),
	('11011000', '11010000'),
	('11013000', '11010000'),
	('11014000', '11010000'),
	('11020000', '11000000'),
	('11020100', '11020000'),
	('11020200', '11020000'),
	('11030000', '11000000'),
	('11040000', '11000000'),
	('11040100', '11040000'),
	('11040300', '11040000'),
	('11040400', '11040000'),
	('11040700', '11040000'),
	('11050000', '11000000'),
	('11050100', '11050000'),
	('11050200', '11050000'),
	('11060000', '11000000'),
	('11060100', '11060000'),
	('11060200', '11060000'),
	('11060300', '11060000'),
	('11070000', '11000000'),
	('11070100', '11070000'),
	('11070200', '11070000'),
	('11070300', '11070000'),
	('11070400', '11070000'),
	('11990000', '11000000'),
	('11999900', '11990000'),
	('12000000', '10000000'),
	('12010000', '12000000'),
	('12020000', '12000000'),
	('12030000', '12000000'),
	('12030100', '12030000'),
	('12040000', '12000000'),
	('12040100', '12040000'),
	('12060000', '12000000'),
	('12060100', '12060000'),
	('12060200', '12060000'),
	('12080000', '12000000'),
	('12090000', '12000000'),
	('12090100', '12090000'),
	('12990000', '12000000'),
	('20000000', ''),
	('21000000', '20000000'),
	('21010000', '21000000'),
	('21020000', '21000000'),
	('21020100', '21020000'),
	('21020200', '21020000'),
	('21020600', '21020000'),
	('21030000', '21000000'),
	('21030100', '21030000'),
	('21030200', '21030000'),
	('21040000', '21000000'),
	('21049900', '21040000'),
	('21050000', '21000000'),
	('21050100', '21050000'),
	('21060200', '21050000'),
	('21070000', '21000000'),
	('21070100', '21070000'),
	('21070200', '21070000'),
	('21080000', '21000000'),
	('21080100', '21080000'),
	('21080200', '21080000'),
	('21080300', '21080000'),
	('21080600', '21080000'),
	('21080800', '21080000'),
	('21080900', '21080000'),
	('21090000', '21000000'),
	('21091000', '21090000'),
	('22000000', '20000000'),
	('22010000', '22000000'),
	('22010100', '22010000'),
	('22040000', '22000000'),
	('22040100', '22040000'),
	('22040200', '22040000'),
	('22050000', '22000000'),
	('22990000', '22000000'),
	('30000000', ''),
	('31000000', '30000000'),
	('31010000', '31000000'),
	('31010100', '31010000'),
	('31020000', '31000000'),
	('31020100', '31020000'),
	('31030000', '31000000'),
	('31030100', '31030000'),
	('31040000', '31000000'),
	('31040100', '31040000'),
	('31050000', '31000000'),
	('31050100', '31050000'),
	('31090000', '31000000'),
	('31090100', '31090000'),
	('32000000', '30000000'),
	('32010000', '32000000'),
	('32010100', '32010000'),
	('32020000', '32000000'),
	('32020100', '32020000'),
	('32030000', '32000000'),
	('32030100', '32030000'),
	('32050000', '32000000'),
	('32050100', '32050000'),
	('32050200', '32050000'),
	('40000000', ''),
	('41000000', '40000000'),
	('41010000', '41000000'),
	('41020000', '41000000'),
	('42000000', '40000000'),
	('42010000', '42000000'),
	('42020000', '42000000'),
	('43000000', '40000000'),
	('43010000', '43000000'),
	('43020000', '43000000'),
	('49000000', '40000000'),
	('50000000', ''),
	('51000000', '50000000'),
	('51010000', '51000000'),
	('51020000', '51000000'),
	('51030000', '51000000'),
	('51041000', '51040000'),
	('51042000', '51040000'),
	('52000000', '50000000'),
	('52080000', '52000000'),
	('52081800', '52080000'),
	('52090000', '52000000'),
	('52100000', '52000000'),
	('60000000', ''),
	('61000000', '60000000'),
	('61010000', '61000000'),
	('61010100', '61010000'),
	('61020000', '61000000'),
	('61020100', '61020000'),
	('61030000', '61000000'),
	('61030100', '61030000'),
	('70000000', ''),
	('71000000', '70000000'),
	('71010000', '71000000'),
	('71030000', '71000000'),
	('71040000', '71000000'),
	('71040100', '71040000'),
	('71040200', '71040000'),
	('71990000', '71000000'),
	('71990100', '71990000'),
	('71999900', '71990000'),
	('72000000', '70000000'),
	('72010000', '72000000'),
	('72020000', '72000000'),
	('72030000', '72000000'),
	('72030300', '72030000'),
	('72030900', '72030000'),
	('72990000', '72000000'),
	('72990100', '72990000'),
	('72990300', '72990000'),
	('72990400', '72990000'),
	('72999900', '72990000'),
	('73000000', '70000000'),
	('73010000', '73000000'),
	('73010100', '73010000'),
	('73020000', '73000000'),
	('73020100', '73020000'),
	('79000000', '70000000');
/*!40000 ALTER TABLE `tsaldoparentx` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.tsaldox
DROP TABLE IF EXISTS `tsaldox`;
CREATE TABLE IF NOT EXISTS `tsaldox` (
  `acc` varchar(15) NOT NULL default ' ',
  `name` varchar(70) default NULL,
  `parent` varchar(15) default NULL,
  `group_` smallint(5) default NULL,
  `detil` tinyint(1) default NULL,
  `level_` smallint(5) default NULL,
  `awal` double default NULL,
  `debet` double default NULL,
  `kredit` double default NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.tsaldox: ~576 rows (approximately)
/*!40000 ALTER TABLE `tsaldox` DISABLE KEYS */;
REPLACE INTO `tsaldox` (`acc`, `name`, `parent`, `group_`, `detil`, `level_`, `awal`, `debet`, `kredit`) VALUES
	('10000000', 'AKTIVA', '', 1, 0, 1, 70268318865.7492, 0, 0),
	('11000000', 'AKTIVA LANCAR', '10000000', 1, 0, 2, 44562499679.2592, 0, 0),
	('11010000', 'KAS DAN SETARA KAS', '11000000', 1, 0, 3, 2494290844.396, 0, 0),
	('11011000', 'KAS', '11010000', 1, 0, 4, 51645679.32, 0, 0),
	('11011101', 'KAS IDR', '11011000', 1, 1, 5, 51645679.32, 6273000, 3466000),
	('11011102', 'KAS USD', '11011000', 1, 1, 5, 0, 0, 0),
	('11011103', 'KAS JPY', '11011000', 1, 1, 5, 0, 0, 0),
	('11013000', 'BANK', '11010000', 1, 0, 4, 2442645165.076, 0, 0),
	('11013101', 'BANK CENTRAL ASIA (BCA IDR) 8383', '11013000', 1, 1, 5, 828893534.3, 905842000, 1761516247),
	('11013102', 'BANK CENTRAL ASIA (BCA IDR) 8888', '11013000', 1, 1, 5, 2370318, 597143000, 597911500),
	('11013103', 'BANK CENTRAL ASIA (BCA USD)', '11013000', 1, 1, 5, 280362248.370001, 792432000, 528288000),
	('11013104', 'BANK PANIN (USD)', '11013000', 1, 1, 5, 0, 0, 0),
	('11013105', 'BANK CIMB NIAGA (CIMB 6200)', '11013000', 1, 1, 5, 1271095094.186, 59741000, 573263878),
	('11013106', 'BANK CENTRAL ASIA (BCA USD DHE) 8898', '11013000', 1, 1, 5, 56624970.2199994, 808695015.9, 1601457195.9),
	('11013107', 'BANK CENTRAL ASIA (BCA IDR) 6888', '11013000', 1, 1, 5, 3299000, 0, 0),
	('11014000', 'DEPOSITO', '11010000', 1, 0, 4, 0, 0, 0),
	('11014101', 'DEPOSITO', '11014000', 1, 1, 5, 0, 0, 0),
	('11014201', 'DEPOSITO TAX AMNESTY', '11014000', 1, 1, 5, 0, 0, 0),
	('11020000', 'PIUTANG USAHA', '11000000', 1, 0, 3, 1328484242.20982, 0, 0),
	('11020100', 'PIUTANG USAHA IDR', '11020000', 1, 0, 4, 609388908.96, 0, 0),
	('11020101', 'PIUTANG USAHA LOKAL', '11020100', 1, 1, 5, 0, 0, 0),
	('11020102', 'PIUTANG USAHA LOKAL-PIHAK KETIGA', '11020100', 1, 1, 5, 609388908.96, 394829102.41, 57074000),
	('11020200', 'PIUTANG USAHA USD', '11020000', 1, 0, 4, 719095333.249821, 0, 0),
	('11020201', 'PIUTANG USAHA EKSPOR', '11020200', 1, 1, 5, 719095333.249821, 2356731044.83012, 0),
	('11020202', 'PIUTANG USAHA USD LAINNYA', '11020200', 1, 1, 5, 0, 0, 0),
	('11020300', 'PIUTANG GIRO', '11020000', 1, 1, 4, 0, 0, 0),
	('11020400', 'CADANGAN KERUGIAN PIUTANG', '11020000', 1, 1, 4, 0, 0, 0),
	('11030000', 'PIUTANG LAIN-LAIN', '11000000', 1, 0, 3, 0, 0, 0),
	('11030100', 'PIUTANG PINJAMAN KARYAWAN', '11030000', 1, 1, 4, 0, 0, 0),
	('11030200', 'PIUTANG PIHAK KETIGA', '11030000', 1, 1, 4, 0, 0, 0),
	('11040000', 'PERSEDIAAN', '11000000', 1, 0, 3, 35903483752.9629, 0, 0),
	('11040100', 'PERSEDIAAN BAHAN BAKU', '11040000', 1, 0, 4, 30823272445.1026, 0, 0),
	('11040101', 'PERSEDIAAN BAHAN BAKU IKAN', '11040100', 1, 1, 5, 4938369148.944, -1980578089.4272, -1980578089.4272),
	('11040102', 'PERSEDIAAN BAHAN BAKU KEPITING', '11040100', 1, 1, 5, 256195602.432, 107774430853.651, 63664711471.905),
	('11040103', 'PERSEDIAAN BAHAN BAKU UDANG', '11040100', 1, 1, 5, 25628707693.7266, 21730116968.505, 20450716968.51),
	('11040200', 'PERSEDIAAN BAHAN PENOLONG', '11040000', 1, 1, 4, 0, 0, 0),
	('11040300', 'PERSEDIAAN BAHAN WIP', '11040000', 1, 0, 4, 0, 0, 0),
	('11040301', 'PERSEDIAAN BAHAN WIP IKAN 1', '11040300', 1, 1, 5, 0, 0, 0),
	('11040302', 'PERSEDIAAN BAHAN WIP IKAN 2', '11040300', 1, 1, 5, 0, 0, 0),
	('11040303', 'PERSEDIAAN BAHAN WIP KEPITING', '11040300', 1, 1, 5, 0, 0, 0),
	('11040400', 'PERSEDIAAN BARANG JADI', '11040000', 1, 0, 4, 0, 0, 0),
	('11040401', 'PERSEDIAAN BARANG JADI IKAN', '11040400', 1, 1, 5, 0, 0, 0),
	('11040402', 'PERSEDIAAN BARANG JADI KEPITING', '11040400', 1, 1, 5, 0, 0, 0),
	('11040403', 'PERSEDIAAN BARANG JADI SHRIMP', '11040400', 1, 1, 5, 0, 0, 0),
	('11040500', 'PERSEDIAAN BAHAN BAKAR & GENSET', '11040000', 1, 1, 4, 288000, 7000000, 5544000),
	('11040600', 'PERSEDIAAN PACKAGING', '11040000', 1, 1, 4, 603259387.469356, 392089339.052005, 409732917.258856),
	('11040700', 'PERSEDIAAN SUPPLIES PABRIK', '11040000', 1, 0, 4, 4476663920.39095, 0, 0),
	('11040701', 'PERSEDIAAN EMBALASE', '11040700', 1, 1, 5, 153276207.383828, 10221950, 181000),
	('11040702', 'PERSEDIAAN LAIN-LAIN', '11040700', 1, 1, 5, 1030175264.79068, 230700607.271, 124457890.763),
	('11040703', 'PERSEDIAAN PERLENGKAPAN KERJA', '11040700', 1, 1, 5, 414677751.453469, 14585251.0204082, 12600342.3571429),
	('11040704', 'PERSEDIAAN SPAREPART', '11040700', 1, 1, 5, 2247726589.4727, 18191226.9091, 40362337),
	('11040705', 'PERSEDIAAN ALAT TULIS KANTOR', '11040700', 1, 1, 5, 95523147.5578286, 4025452, 1609255),
	('11040706', 'PERSEDIAAN WASTE IKAN', '11040700', 1, 1, 5, 0, 0, 0),
	('11040707', 'PERSEDIAAN WASTE KEPITING', '11040700', 1, 1, 5, 0, 0, 0),
	('11040708', 'PERSEDIAAN WASTE UDANG', '11040700', 1, 1, 5, 0, 0, 0),
	('11040709', 'PERSEDIAAN CHEMICAL/ INGREDIENT', '11040700', 1, 1, 5, 535284959.732441, 88042860, 66017593.428832),
	('11050000', 'UANG MUKA PEMBELIAN', '11000000', 1, 0, 3, 2968102172.26, 0, 0),
	('11050100', 'UANG MUKA PEMBELIAN (IDR)', '11050000', 1, 0, 4, 2967679022.26, 0, 0),
	('11050101', 'UANG MUKA PEMBELIAN (IDR)', '11050100', 1, 1, 5, 7487615.99000001, 403250000, 519900),
	('11050102', 'UANG MUKA PEMBELIAN AKTIVA TETAP LOKAL', '11050100', 1, 1, 5, 2548253646.63, 0, 0),
	('11050103', 'UANG MUKA PEMBELIAN BLM FAKTUR (IDR)', '11050100', 1, 1, 5, 411937759.64, 470000, 0),
	('11050200', 'UANG MUKA PEMBELIAN (USD)', '11050000', 1, 0, 4, 423150, 0, 0),
	('11050201', 'UANG MUKA PEMBELIAN (USD)', '11050200', 1, 1, 5, 423150, 187377150, 0),
	('11050202', 'UANG MUKA PEMBELIAN AKTIVA TETAP USD', '11050200', 1, 1, 5, 0, 0, 0),
	('11050203', 'UANG MUKA PEMBELIAN BLM FAKTUR (USD)', '11050200', 1, 1, 5, 0, 0, 0),
	('11060000', 'PAJAK DIBAYAR DIMUKA', '11000000', 1, 0, 3, 1563628324.53048, 0, 0),
	('11060100', 'PAJAK PERTAMBAHAN NILAI (PPN) DIBAYAR DIMUKA', '11060000', 1, 0, 4, 1296287329.05048, 0, 0),
	('11060101', 'PPN MASUKAN LOKAL', '11060100', 1, 1, 5, 1059503077.21034, 11711174.0185632, 0),
	('11060102', 'PPN MASUKAN IMPORT', '11060100', 1, 1, 5, 17697277.68, 18793000, 0),
	('11060103', 'PPN MASUKAN YANG TIDAK DI PUNGUT', '11060100', 1, 1, 5, 0, 0, 0),
	('11060104', 'PPN NOL PERSEN MASUKAN YG AKAN DITANGGUNG', '11060100', 1, 1, 5, 0, 0, 0),
	('11060105', 'PPN MASUKAN BELUM DIFAKTURKAN', '11060100', 1, 1, 5, 219086974.160139, 3752205, 0),
	('11060200', 'PAJAK PENGHASILAN (PPH) DIBAYAR DIMUKA', '11060000', 1, 0, 4, 267340995.48, 0, 0),
	('11060201', 'PAJAK PENGHASILAN (PPH) DIBAYAR DIMUKA PPH PS 21', '11060200', 1, 1, 5, 0, 0, 0),
	('11060202', 'PAJAK PENGHASILAN (PPH) DIBAYAR DIMUKA PPH PS 22 LOKAL', '11060200', 1, 1, 5, 50507544, 0, 0),
	('11060203', 'PAJAK PENGHASILAN (PPH) DIBAYAR DIMUKA PPH PS 22 IMPOR', '11060200', 1, 1, 5, 5276178, 4708000, 0),
	('11060204', 'PAJAK PENGHASILAN (PPH) DIBAYAR DIMUKA PPH PS 23', '11060200', 1, 1, 5, 14591221.48, 21260, 0),
	('11060205', 'PAJAK PENGHASILAN (PPH) DIBAYAR DIMUKA PPH PS 25', '11060200', 1, 1, 5, 29395886, 14697943, 0),
	('11060206', 'PAJAK PENGHASILAN (PPH) DIBAYAR DIMUKA PPH PS 4 AYAT 2', '11060200', 1, 1, 5, 167570166, 0, 0),
	('11060207', 'PAJAK PENGHASILAN (PPH) DIBAYAR DIMUKA PPH BELUM DIFAKTURKAN', '11060200', 1, 1, 5, 0, 0, 0),
	('11060300', 'PAJAK PENJUALAN EXPORT (BEA KELUAR)', '11060000', 1, 0, 4, 0, 0, 0),
	('11060301', 'PAJAK PENJUALAN EXPORT (BEA KELUAR)', '11060300', 1, 1, 5, 0, 0, 0),
	('11070000', 'BIAYA DIBAYAR DIMUKA', '11000000', 1, 0, 3, 304510342.9, 0, 0),
	('11070100', 'BIAYA DIBAYAR DIMUKA ASURANSI', '11070000', 1, 0, 4, 0, 0, 0),
	('11070101', 'BDM-ASURANSI GEDUNG', '11070100', 1, 1, 5, 0, 0, 0),
	('11070102', 'BDM-ASURANSI KENDARAAN', '11070100', 1, 1, 5, 0, 0, 0),
	('11070103', 'BDM-ASURANSI INVENTARIS', '11070100', 1, 1, 5, 0, 0, 0),
	('11070104', 'BDM-ASURANSI MESIN', '11070100', 1, 1, 5, 0, 0, 0),
	('11070105', 'BDM-ASURANSI STOK/BARANG', '11070100', 1, 1, 5, 0, 0, 0),
	('11070106', 'BDM-SURANSI LAIN-LAIN', '11070100', 1, 1, 5, 0, 0, 0),
	('11070200', 'BIAYA DIBAYAR DIMUKA BUNGA & ADMINISTRASI', '11070000', 1, 0, 4, 304510342.9, 0, 0),
	('11070201', 'BDM-BUNGA', '11070200', 1, 1, 5, 304510342.9, 0, 0),
	('11070202', 'BDM-ADMINISTRASI & POVISI BANK', '11070200', 1, 1, 5, 0, 0, 0),
	('11070300', 'BIAYA DIBAYAR DIMUKA SEWA', '11070000', 1, 0, 4, 0, 0, 0),
	('11070301', 'BDM-SEWA GEDUNG', '11070300', 1, 1, 5, 0, 0, 0),
	('11070302', 'BDM-SEWA KENDARAAN', '11070300', 1, 1, 5, 0, 0, 0),
	('11070303', 'BDM-SEWA GUDANG', '11070300', 1, 1, 5, 0, 0, 0),
	('11070304', 'BDM-SEWA TANAH', '11070300', 1, 1, 5, 0, 0, 0),
	('11070400', 'BIAYA DIBAYAR DIMUKA LAIN-LAIN', '11070000', 1, 0, 4, 0, 0, 0),
	('11070401', 'BDM-BEA MASUK', '11070400', 1, 1, 5, 0, 0, 0),
	('11070402', 'BDM-BEA KELUAR', '11070400', 1, 1, 5, 0, 0, 0),
	('11070403', 'BDM-PUNGUTAN DANA PENGGANTI PAJAK', '11070400', 1, 1, 5, 0, 0, 0),
	('11070404', 'BDM-LAIN LAIN', '11070400', 1, 1, 5, 0, 0, 0),
	('11990000', 'AKTIVA LANCAR LAIN-LAIN', '11000000', 1, 0, 3, 0, 0, 0),
	('11999900', 'AKTIVA LANCAR LAIN-LAIN', '11990000', 1, 0, 4, 0, 0, 0),
	('11999990', 'AYAT SILANG', '11999900', 0, 1, 5, 0, 2321113000, 2321113000),
	('11999999', 'AKTIVA LANCAR LAIN-LAIN', '11999900', 1, 1, 5, 0, 0, 0),
	('12000000', 'AKTIVA TIDAK LANCAR', '10000000', 1, 0, 2, 25705819186.49, 0, 0),
	('12010000', 'DEPOSITO', '12000000', 1, 0, 3, 0, 0, 0),
	('12010100', 'DEPOSITO IDR', '12010000', 1, 1, 4, 0, 0, 0),
	('12010200', 'DEPOSITO VALAS', '12010000', 1, 1, 4, 0, 0, 0),
	('12020000', 'INVESTASI DAN PENYERTAAN JANGKA PANJANG', '12000000', 1, 0, 3, 0, 0, 0),
	('12020100', 'INVESTASI DAN PENYERTAAN JANGKA PANJANG IDR', '12020000', 1, 1, 4, 0, 0, 0),
	('12020200', 'INVESTASI DAN PENYERTAAN JANGKA PANJANG VALAS', '12020000', 1, 1, 4, 0, 0, 0),
	('12030000', 'AKTIVA TETAP', '12000000', 1, 0, 3, 38834125448.41, 0, 0),
	('12030100', 'AKTIVA TETAP', '12030000', 1, 0, 4, 38834125448.41, 0, 0),
	('12030101', 'TANAH', '12030100', 1, 1, 5, 0, 0, 0),
	('12030102', 'BANGUNAN DAN PRASARANA', '12030100', 1, 1, 5, 4237669211.99, 0, 0),
	('12030103', 'MESIN DAN PERALATAN PABRIK', '12030100', 1, 1, 5, 26164823570.95, 0, 0),
	('12030104', 'KENDARAAN', '12030100', 1, 1, 5, 725000000, 0, 0),
	('12030105', 'INVENTARIS/PERLENGKAPAN', '12030100', 1, 1, 5, 7706632665.47, 0, 0),
	('12030106', 'COLDSTORAGE', '12030100', 1, 1, 5, 0, 0, 0),
	('12030107', 'INSTALASI & PRASARANA', '12030100', 1, 1, 5, 0, 0, 0),
	('12030108', 'ATP DLM PENYELESAIAN BANGUNAN & PRASARANA ', '12030100', 1, 1, 5, 0, 0, 0),
	('12030109', 'ATP DLM PENYELESAIAN MESIN & PERALATAN', '12030100', 1, 1, 5, 0, 0, 0),
	('12030110', 'ATP DLM PENYELESAIAN LAINNYA', '12030100', 1, 1, 5, 0, 0, 0),
	('12040000', 'AKUMULASI PENYUSUTAN', '12000000', 1, 0, 3, -13286297930.54, 0, 0),
	('12040100', 'AKUMULASI PENYUSUTAN', '12040000', 1, 0, 4, -13286297930.54, 0, 0),
	('12040101', 'AKM PENYUSUTAN BANGUNAN DAN PRASARANA', '12040100', 1, 1, 5, -903068574.14, 0, 0),
	('12040102', 'AKM PENYUSUTAN MESIN DAN PERALATAN', '12040100', 1, 1, 5, -4925196530.73, 0, 0),
	('12040103', 'AKM PENYUSUTAN KENDARAAN', '12040100', 1, 1, 5, -385156245.24, 0, 0),
	('12040104', 'AKM PENYUSUTAN INVENTARIS/PERLENGKAPAN', '12040100', 1, 1, 5, -7072876580.43, 0, 0),
	('12040105', 'AKM PENYUSUTAN LAINNYA', '12040100', 1, 1, 5, 0, 0, 0),
	('12040106', 'AKM PENYUSUTAN COLDSTORAGE', '12040100', 1, 1, 5, 0, 0, 0),
	('12040107', 'AKM PENYUSUTAN INSTALASI DAN PRASARANA', '12040100', 1, 1, 5, 0, 0, 0),
	('12060000', 'UANG MUKA PEMBELIAN AKTIVA', '12000000', 1, 0, 3, 0, 0, 0),
	('12060100', 'UANG MUKA PEMBELIAN AKTIVA LOKAL', '12060000', 1, 0, 4, 0, 0, 0),
	('12060101', 'UANG MUKA PEMBELIAN AKTIVA LOKAL', '12060100', 1, 1, 5, 0, 0, 0),
	('12060102', 'UANG MUKA PEMBELIAN AKTIVA LOKAL BLM FAKTUR', '12060100', 1, 1, 5, 0, 0, 0),
	('12060200', 'UANG MUKA PEMBELIAN AKTIVA IMPORT', '12060000', 1, 0, 4, 0, 0, 0),
	('12060201', 'UANG MUKA PEMBELIAN AKTIVA IMPORT', '12060200', 1, 1, 5, 0, 0, 0),
	('12060202', 'UANG MUKA PEMBELIAN AKTIVA IMPORT BLM FAKTUR', '12060200', 1, 1, 5, 0, 0, 0),
	('12070000', 'BIAYA DITANGGUHKAN', '12000000', 1, 1, 3, 0, 0, 0),
	('12080000', 'PAJAK YANG DITANGGUHKAN-AKTIVA ', '12000000', 1, 0, 3, 0, 0, 0),
	('12080100', 'PAJAK YANG DITANGGUHKAN-AKTIVA ', '12080000', 1, 1, 4, 0, 0, 0),
	('12090000', 'TAGIHAN PAJAK PENGHASILAN', '12000000', 1, 0, 3, 0, 0, 0),
	('12090100', 'TAGIHAN PAJAK PENGHASILAN', '12090000', 1, 0, 4, 0, 0, 0),
	('12090101', 'TAGIHAN PAJAK PENGHASILAN', '12090100', 1, 1, 5, 0, 0, 0),
	('12990000', 'AKTIVA TIDAK LANCAR LAIN-LAIN', '12000000', 1, 0, 3, 157991668.62, 0, 0),
	('12990100', 'PIUTANG LAIN-LAIN', '12990000', 1, 1, 4, 157991668.62, 28960, 0),
	('20000000', 'KEWAJIBAN', '', 2, 0, 1, -62418495295.702, 0, 0),
	('21000000', 'KEWAJIBAN LANCAR', '20000000', 2, 0, 2, -47539114352.182, 0, 0),
	('21010000', 'HUTANG BANK JANGKA PENDEK', '21000000', 2, 0, 3, 0, 0, 0),
	('21010100', 'HUTANG BANK JANGKA PENDEK IDR', '21010000', 2, 1, 4, 0, 0, 0),
	('21010200', 'HUTANG BANK JANGKA PENDEK VALAS', '21010000', 2, 1, 4, 0, 0, 0),
	('21010300', 'VALUASI HUTANG BANK JANGKA PENDEK', '21010000', 2, 1, 4, 0, 0, 0),
	('21020000', 'HUTANG USAHA', '21000000', 2, 0, 3, -43832656959.0581, 0, 0),
	('21020100', 'HUTANG USAHA LOKAL', '21020000', 2, 0, 4, -4879395985.6259, 0, 0),
	('21020101', 'HUTANG USAHA LOKAL-NON RAW MATERIAL', '21020100', 2, 1, 5, -4879395985.6259, 867874306.004395, 1566994478.9642),
	('21020102', 'HUTANG USAHA LOKAL-RAW MATERIAL', '21020100', 2, 1, 5, 0, 0, 0),
	('21020103', 'HUTANG USAHA LOKAL-AFFILIASI', '21020100', 2, 1, 5, 0, 0, 0),
	('21020200', 'HUTANG USAHA IMPORT', '21020000', 2, 0, 4, -135539411.16, 0, 0),
	('21020201', 'HUTANG USAHA IMPORT-NON RAW MATERIAL', '21020200', 2, 1, 5, -135539411.16, 0, 0),
	('21020202', 'HUTANG USAHA IMPORT-RAW MATERIAL', '21020200', 2, 1, 5, 0, 0, 0),
	('21020203', 'HUTANG USAHA IMPORT-AFFILIASI', '21020200', 2, 1, 5, 0, 0, 0),
	('21020300', 'HUTANG CEK/GIRO MUNDUR', '21020000', 2, 1, 4, -5515000000, 0, 0),
	('21020400', 'HUTANG ASURANSI', '21020000', 2, 1, 4, 0, 86644124, 86644124),
	('21020500', 'HUTANG LEASING', '21020000', 2, 1, 4, -2576156000, 174824000, 103983000),
	('21020600', 'HUTANG BELUM DIFAKTURKAN', '21020000', 2, 0, 4, -30726565562.2721, 0, 0),
	('21020601', 'HUTANG BELUM DIFAKTURKAN LOKAL', '21020600', 2, 1, 5, -25486447035.3802, 359116581.194732, 43358439278.1254),
	('21020602', 'HUTANG BELUM DIFAKTURKAN IMPORT', '21020600', 2, 1, 5, -5240118526.892, 0, 2507067621.246),
	('21020700', 'VALUASI HUTANG USAHA', '21020000', 2, 1, 4, 0, 0, 0),
	('21020701', 'VALUASI HUTANG USAHA', '21020500', 2, 1, 5, 0, 0, 0),
	('21020702', 'VALUASI HUTANG CEK/GIRO MUNDUR', '21020500', 2, 1, 5, 0, 0, 0),
	('21020800', 'HUTANG USAHA', '21020000', 0, 1, 4, 0, 0, 0),
	('21030000', 'HUTANG BIAYA', '21000000', 2, 0, 3, 0, 0, 0),
	('21030100', 'HUTANG BIAYA', '21030000', 2, 0, 4, 0, 0, 0),
	('21030101', 'HUTANG BIAYA', '21030100', 2, 1, 5, 0, 0, 0),
	('21030200', 'VALUASI HUTANG PERSERO', '21030000', 2, 0, 4, 0, 0, 0),
	('21030201', 'VALUASI HUTANG PERSERO', '21030200', 2, 1, 5, 0, 0, 0),
	('21040000', 'HUTANG LAIN-LAIN', '21000000', 2, 0, 3, -3475000000, 0, 0),
	('21040100', 'HUTANG DEVIDEND', '21040000', 2, 1, 4, 0, 0, 0),
	('21049900', 'HUTANG LAIN-LAIN ', '21040000', 2, 0, 4, -3475000000, 0, 0),
	('21049901', 'HUTANG LAIN-LAIN LOKAL AFFILIASI', '21049900', 2, 1, 5, 0, 1000000000, 3975000000),
	('21049902', 'HUTANG LAIN-LAIN LOKAL', '21049900', 2, 1, 5, 0, 0, 0),
	('21049903', 'HUTANG LAIN-LAIN IMPOR AFFILIASI', '21049900', 2, 1, 5, 0, 0, 0),
	('21049904', 'HUTANG LAIN-LAIN IMPORT', '21049900', 2, 1, 5, 0, 0, 0),
	('21049905', 'HUTANG PIHAK KETIGA', '21049900', 2, 1, 5, -3475000000, 3475000000, 0),
	('21049906', 'HPS', '21049900', 2, 1, 5, 0, 0, 0),
	('21049999', 'VALUASI HUTANG LAIN-LAIN', '21049900', 2, 1, 5, 0, 0, 0),
	('21050000', 'HUTANG PAJAK', '21000000', 2, 0, 3, -26057158.4809999, 0, 0),
	('21050100', 'HUTANG PAJAK PERTAMBAHAN NILAI', '21050000', 2, 0, 4, -22138824.7109999, 0, 0),
	('21050101', 'PPN KELUARAN', '21050100', 2, 1, 5, -22138824.7109999, 0, 18370295.5381818),
	('21050102', 'PPN KELUARAN BELUM DIFAKTURKAN', '21050100', 2, 1, 5, 0, 0, 0),
	('21050103', 'PPN YANG TIDAK DIPUNGUT/DIBEBASKAN', '21050100', 2, 1, 5, 0, 0, 0),
	('21050104', 'PPN YANG DIPUNGUT OLEH PEMUNGUT SSP BELUM DITERIMA', '21050100', 2, 1, 5, 0, 0, 0),
	('21050105', 'PPN DITANGGUNG PEMERINTAH ', '21050100', 2, 1, 5, 0, 0, 0),
	('21060200', 'HUTANG PAJAK PENGHASILAN ', '21050000', 2, 0, 4, -3918333.77, 0, 0),
	('21060201', 'PPH PS 21', '21060200', 2, 1, 5, 0, 0, 0),
	('21060202', 'PPH PS 23', '21060200', 2, 1, 5, -3918332.03, 1285950, 1239841),
	('21060203', 'PPH PS 4 AYAT 2', '21060200', 2, 1, 5, -2, 0, 0),
	('21060204', 'PPH PS 25-29', '21060200', 2, 1, 5, 0.259999999776483, 0, 0),
	('21060205', 'PPH PS 26', '21060200', 2, 1, 5, 0, 0, 0),
	('21060206', 'PPH PS 29', '21060200', 2, 1, 5, 0, 30433215, 0),
	('21060207', 'PPH PS 15', '21060200', 2, 1, 5, 0, 0, 0),
	('21060208', 'PPH PS 22', '21060200', 2, 1, 5, 0, 0, 0),
	('21070000', 'UANG MUKA PELANGGAN', '21000000', 2, 0, 3, -111199634.643, 0, 0),
	('21070100', 'PELANGGAN LOKAL', '21070000', 2, 0, 4, -111199634.643, 0, 0),
	('21070101', 'UM PELANGGAN-PENJUALAN LOKAL', '21070100', 2, 1, 5, -53272727.273, 0, 0),
	('21070102', 'UM PELANGGAN-LOKAL BLM FAKTUR AFFILIASI', '21070100', 2, 1, 5, 0, 0, 0),
	('21070103', 'UM PELANGGAN-LOKAL PIHAK KETIGA', '21070100', 2, 1, 5, -59826907.37, 0, 0),
	('21070104', 'UM PELANGGAN-LOKAL BLM FAKTUR PIHAK KETIGA', '21070100', 2, 1, 5, 1900000, 0, 0),
	('21070200', 'PELANGGAN EXPORT', '21070000', 2, 0, 4, 0, 0, 0),
	('21070201', 'UM PELANGGAN-EXPORT', '21070200', 2, 1, 5, 0, 0, 0),
	('21070202', 'UM PELANGGAN-EXPORT BLM FAKTUR', '21070200', 2, 1, 5, 0, 0, 0),
	('21070203', 'UM PELANGGAN-EXPORT LAINNYA', '21070200', 2, 1, 5, 0, 0, 0),
	('21070204', 'UM PELANGGAN-EXPORT BLM FAKTUR LAINNYA', '21070200', 2, 1, 5, 0, 0, 0),
	('21080000', 'BIAYA YANG MASIH HARUS DI BAYAR', '21000000', 2, 0, 3, -94200600, 0, 0),
	('21080100', 'BUNGA PINJAMAN', '21080000', 2, 0, 4, 0, 0, 0),
	('21080199', 'VALUASI HUTANG BUNGA PINJAMAN-USD', '21080100', 2, 1, 5, 0, 0, 0),
	('21080200', 'GAJI DAN UPAH', '21080000', 2, 0, 4, -94200600, 0, 0),
	('21080201', 'BIAYA YG MSH HRS DIBYR-GAJI DAN UPAH', '21080200', 2, 1, 5, -94200600, 0, 0),
	('21080202', 'BIAYA YG MSH HRS DIBYR-SPSI', '21080200', 2, 1, 5, 0, 0, 0),
	('21080203', 'BIAYA YG MSH HRS DIBYR-ASTEK', '21080200', 2, 1, 5, 0, 0, 0),
	('21080204', 'BIAYA YG MSH HRS DIBYR-ASKES', '21080200', 2, 1, 5, 0, 0, 0),
	('21080205', 'BIAYA YG MSH HRS DIBYR-ASURANSI JIWA', '21080200', 2, 1, 5, 0, 0, 0),
	('21080300', 'SEWA GEDUNG DAN PERALATAN', '21080000', 2, 0, 4, 0, 0, 0),
	('21080301', 'BIAYA YG MSH HRS DIBYR-SEWA GEDUNG DAN PERALATAN', '21080300', 2, 1, 5, 0, 0, 0),
	('21080600', 'BIAYA KOMISI', '21080000', 2, 0, 4, 0, 0, 0),
	('21080601', 'BIAYA YG MSH HRS DIBYR-BIAYA KOMISI', '21080600', 2, 1, 5, 0, 0, 0),
	('21080800', 'BIAYA ASURANSI BARANG', '21080000', 2, 0, 4, 0, 0, 0),
	('21080801', 'BIAYA YG MSH HRS DIBYR-ASURANSI BAHAN BAKU', '21080800', 2, 1, 5, 0, 0, 0),
	('21080900', 'BIAYA LAIN-LAIN', '21080000', 2, 0, 4, 0, 0, 0),
	('21080901', 'BIAYA YG MSH HRS DIBYR-LISTRK & GAS', '21080900', 2, 1, 5, 0, 0, 0),
	('21080902', 'BIAYA YG MSH HRS DIBYR-AIR', '21080900', 2, 1, 5, 0, 0, 0),
	('21080903', 'BIAYA YG MSH HRS DIBYR-TELEPON/FAX', '21080900', 2, 1, 5, 0, 0, 0),
	('21089999', 'BIAYA YG MSH HRS DIBYR-LAIN-LAIN', '21080900', 2, 1, 5, 0, 0, 0),
	('21090000', 'HUTANG JANGKA PANJANG YANG JATUH TEMPO', '21000000', 2, 0, 3, 0, 0, 0),
	('21091000', 'BANK', '21090000', 2, 0, 4, 0, 0, 0),
	('21091100', 'HUTANG JK PANJANG JATUH TEMPO IDR', '21091000', 2, 1, 5, 0, 0, 0),
	('21091200', 'HUTANG JK PANJANG JATUH TEMPO USD', '21091000', 2, 1, 5, 0, 0, 0),
	('22000000', 'KEWAJIBAN TIDAK LANCAR', '20000000', 2, 0, 2, -14879380943.52, 0, 0),
	('22010000', 'KEWAJIBAN JANGKA PANJANG', '22000000', 2, 0, 3, -10279380943.52, 0, 0),
	('22010100', 'KEWAJIBAN JANGKA PANJANG', '22010000', 2, 0, 4, -10279380943.52, 0, 0),
	('22010101', 'HUTANG BANK IDR', '22010100', 2, 1, 5, 0, 0, 0),
	('22010102', 'HUTANG BANK USD', '22010100', 2, 1, 5, -10279380943.52, 167053513.76, 0),
	('22010200', 'HUTANG BANK JANGKA PANJANG-VALAS', '22010000', 2, 1, 4, 0, 0, 0),
	('22010300', 'VALUASI HUTANG BANK JANGKA PANJANG', '22010000', 2, 1, 4, 0, 0, 0),
	('22011200', 'BANK', '22010000', 2, 1, 4, 0, 0, 0),
	('22020000', 'PAJAK YANG DITANGGUHKAN - PASIVA', '22000000', 2, 1, 3, 0, 0, 0),
	('22040000', 'HUTANG JANGKA PANJANG LAIN-LAIN', '22000000', 2, 0, 3, 0, 0, 0),
	('22040100', 'HUTANG JANGKA PANJANG LAIN-LAIN-IDR', '22040000', 2, 0, 4, 0, 0, 0),
	('22040101', 'HUTANG JANGKA PANJANG LAIN-LAIN-IDR', '22040100', 2, 1, 5, 0, 0, 0),
	('22040200', 'HUTANG JANGKA PANJANG LAIN-LAIN-USD', '22040000', 2, 0, 4, 0, 0, 0),
	('22040201', 'HUTANG JANGKA PANJANG LAIN-LAIN-USD', '22040200', 2, 1, 5, 0, 0, 0),
	('22050000', 'HUTANG KPD PEMEGANG SAHAM', '22000000', 2, 0, 3, -4600000000, 0, 0),
	('22050100', 'HUTANG KPD PEMEGANG SAHAM', '22050000', 2, 1, 4, -4600000000, 0, 0),
	('22990000', 'KEWAJIBAN TIDAK LANCAR LAIN-LAIN', '22000000', 2, 0, 3, 0, 0, 0),
	('22990100', 'UANG JAMINAN PELANGGAN / CUSTOMER SECURITY DEPOSIT', '22990000', 2, 1, 4, 0, 0, 0),
	('30000000', 'EKUITAS', '', 3, 0, 1, -10101668989.86, 0, 0),
	('31000000', 'MODAL SAHAM', '30000000', 3, 0, 2, -6725000000, 0, 0),
	('31010000', 'MODAL SAHAM DITEMPATKAN DAN DISETOR PENUH', '31000000', 3, 0, 3, -1000000000, 0, 0),
	('31010100', 'MODAL SAHAM DITEMPATKAN DAN DISETOR PENUH', '31010000', 3, 0, 4, -1000000000, 0, 0),
	('31010101', 'MODAL SAHAM DISETOR', '31010100', 3, 1, 5, -1000000000, 0, 0),
	('31010102', 'MODAL SAHAM DITEMPATKAN DAN DISETOR LAINNYA', '31010100', 3, 1, 5, 0, 0, 0),
	('31020000', 'MODAL SAHAM YANG DIPESAN', '31000000', 3, 0, 3, 0, 0, 0),
	('31020100', 'MODAL SAHAM YANG DIPESAN', '31020000', 3, 0, 4, 0, 0, 0),
	('31020101', 'MODAL SAHAM YANG DIPESAN', '31020100', 3, 1, 5, 0, 0, 0),
	('31030000', 'PIUTANG KEPADA PEMESAN SAHAM', '31000000', 3, 0, 3, 0, 0, 0),
	('31030100', 'PIUTANG KEPADA PEMESAN SAHAM', '31030000', 3, 0, 4, 0, 0, 0),
	('31030101', 'PIUTANG KEPADA PEMESAN SAHAM', '31030100', 3, 1, 5, 0, 0, 0),
	('31040000', 'TAMBAHAN MODAL DISETOR - AGIO/DISAGIO', '31000000', 3, 0, 3, -5725000000, 0, 0),
	('31040100', 'TAMBAHAN MODAL DISETOR - AGIO/DISAGIO', '31040000', 3, 0, 4, -5725000000, 0, 0),
	('31040101', 'TAMBAHAN MODAL DISETOR-AGIO/DISAGIO', '31040100', 3, 1, 5, -5725000000, 0, 0),
	('31050000', 'SELISIH KURS ATAS MODAL DISETOR', '31000000', 3, 0, 3, 0, 0, 0),
	('31050100', 'SELISIH KURS ATAS MODAL DISETOR', '31050000', 3, 0, 4, 0, 0, 0),
	('31050101', 'SELISIH KURS ATAS MODAL DISETOR', '31050100', 3, 1, 5, 0, 0, 0),
	('31090000', 'KOMPONEN EKUITAS LAINNYA', '31000000', 3, 0, 3, 0, 0, 0),
	('31090100', 'PENDAPATAN KOMPREHENSIF LAIN-LAIN', '31090000', 3, 0, 4, 0, 0, 0),
	('31090101', 'PENDAPATAN KOMPREHENSIF LAIN-LAIN', '31090100', 3, 1, 5, 0, 0, 0),
	('32000000', 'SALDO LABA/RUGI DITAHAN', '30000000', 3, 0, 2, -1527650956.01126, 0, 0),
	('32010000', 'LABA DITAHAN TAHUN LALU', '32000000', 3, 0, 3, -3779496379.217, 0, 0),
	('32010100', 'LABA DITAHAN TAHUN LALU', '32010000', 3, 0, 4, -3779496379.217, 0, 0),
	('32010101', 'LABA DITAHAN TAHUN LALU', '32010100', 3, 1, 5, -3779496379.217, 0, 0),
	('32020000', 'KOREKSI POS-POS TAHUN LALU', '32000000', 3, 0, 3, 0, 0, 0),
	('32020100', 'KOREKSI POS-POS TAHUN LALU', '32020000', 3, 0, 4, 0, 0, 0),
	('32020101', 'KOREKSI POS-POS TAHUN LALU', '32020100', 3, 1, 5, 0, 0, 0),
	('32030000', 'LABA RUGI TAHUN BERJALAN', '32000000', 3, 0, 3, 2654672812.56275, 0, 0),
	('32030100', 'LABA RUGI TAHUN BERJALAN', '32030000', 3, 0, 4, 2654672812.56275, 0, 0),
	('32030101', 'RUGI LABA TAHUN BERJALAN', '32030100', 3, 1, 5, 2654672812.56275, 0, 0),
	('32050000', 'DEVIDEN', '32000000', 3, 0, 3, 0, 0, 0),
	('32050100', 'DEVIDEN TUNAI (DIVIDEND CASH)', '32050000', 3, 0, 4, 0, 0, 0),
	('32050101', 'DEVIDEN TUNAI / CASH DIVIDEND', '32050100', 3, 1, 5, 0, 0, 0),
	('32050200', 'DEVIDEN SAHAM (DIVIDEND STOCK)', '32050000', 3, 0, 4, 0, 0, 0),
	('32050201', 'DEVIDEN SAHAM/ STOCK DIVIDEND', '32050200', 3, 1, 5, 0, 0, 0),
	('32099000', 'HISTORICAL BALANCING', '32000000', 3, 1, 3, 0, 0, 0),
	('40000000', 'PENJUALAN', '', 4, 0, 1, 0, 0, 0),
	('41000000', 'PENJUALAN', '40000000', 4, 0, 2, 0, 0, 0),
	('41010000', 'PENJUALAN LOKAL', '41000000', 4, 0, 3, 0, 0, 0),
	('41010100', 'PENJUALAN LOKAL', '41010000', 4, 1, 4, 0, 0, 0),
	('41010200', 'PENJUALAN LOKAL PIHAK KETIGA', '41010000', 4, 1, 4, 0, 0, 376458806.871818),
	('41020000', 'PENJUALAN EXPORT', '41000000', 4, 0, 3, 0, 0, 0),
	('41020100', 'PENJUALAN EXPORT', '41020000', 4, 1, 4, 0, 0, 2356731044.83012),
	('41020200', 'PENJUALAN EXPORT LAINNYA', '41020000', 4, 1, 4, 0, 0, 0),
	('42000000', 'POTONGAN PENJUALAN', '40000000', 4, 0, 2, 0, 0, 0),
	('42010000', 'POTONGAN PENJUALAN LOKAL', '42000000', 4, 0, 3, 0, 0, 0),
	('42010100', 'POTONGAN PENJUALAN LOKAL - AFFILIASI', '42010000', 4, 1, 4, 0, 0, 0),
	('42010200', 'POTONGAN PENJUALAN LOKAL - PIHAK KETIGA', '42010000', 4, 1, 4, 0, 0, 0),
	('42020000', 'POTONGAN PENJUALAN EXPORT', '42000000', 4, 0, 3, 0, 0, 0),
	('42020100', 'POTONGAN PENJUALAN EXPORT - AFFILIASI', '42020000', 4, 1, 4, 0, 0, 0),
	('42020200', 'POTONGAN PENJUALAN EXPORT - PIHAK KETIGA', '42020000', 4, 1, 4, 0, 0, 0),
	('43000000', 'RETUR PENJUALAN', '40000000', 4, 0, 2, 0, 0, 0),
	('43010000', 'RETUR PENJUALAN LOKAL', '43000000', 4, 0, 3, 0, 0, 0),
	('43010100', 'RETUR PENJUALAN LOKAL', '43010000', 4, 1, 4, 0, 0, 0),
	('43010200', 'RETUR PENJUALAN LOKAL - PIHAK KETIGA', '43010000', 4, 1, 4, 0, 0, 0),
	('43020000', 'RETUR PENJUALAN EXPORT', '43000000', 4, 0, 3, 0, 0, 0),
	('43020100', 'RETUR PENJUALAN EXPORT', '43020000', 4, 1, 4, 0, 0, 0),
	('43020200', 'RETUR PENJUALAN EXPORT - PIHAK KETIGA', '43020000', 4, 1, 4, 0, 0, 0),
	('49000000', 'KOREKSI PENJUALAN', '40000000', 4, 0, 2, 0, 0, 0),
	('49010000', 'KOREKSI PENJUALAN', '49000000', 4, 1, 3, 0, 0, 0),
	('50000000', 'HARGA POKOK PENJUALAN DAN HARGA POKOK PRODUKSI', '', 5, 0, 1, 0, 0, 0),
	('51000000', 'HARGA POKOK PENJUALAN', '50000000', 5, 0, 2, 0, 0, 0),
	('51010000', 'HARGA POKOK PENJUALAN LOKAL', '51000000', 5, 0, 3, 0, 0, 0),
	('51010100', 'HARGA POKOK PENJUALAN LOKAL BARANG JADI', '51010000', 5, 1, 4, 0, 0, 0),
	('51010200', 'HARGA POKOK PENJUALAN LOKAL BAHAN BAKU', '51010000', 5, 1, 4, 0, 0, 0),
	('51019900', 'HARGA POKOK PENJUALAN LOKAL BARANG LAIN-LAIN', '51010000', 5, 1, 4, 0, 0, 0),
	('51020000', 'HARGA POKOK PENJUALAN EXPORT', '51000000', 5, 0, 3, 0, 0, 0),
	('51020100', 'HARGA POKOK PENJUALAN EXPORT BARANG JADI', '51020000', 5, 1, 4, 0, 0, 0),
	('51020200', 'HARGA POKOK PENJUALAN EXPORT BAHAN BAKU', '51020000', 5, 1, 4, 0, 0, 0),
	('51029900', 'HARGA POKOK PENJUALAN EXPORT BARANG LAIN-LAIN', '51020000', 5, 1, 4, 0, 0, 0),
	('51030000', 'HARGA POKOK PENYESUAIAN', '51000000', 5, 0, 3, 0, 0, 0),
	('51030100', 'HARGA POKOK PENYESUAIAN-VARIANT BRG JADI ', '51030000', 5, 1, 4, 0, 0, 0),
	('51030200', 'HARGA POKOK PENYESUAIAN-OVER UNDER SETTLEMENT ', '51030000', 5, 1, 4, 0, 0, 0),
	('51030300', 'HARGA POKOK PENYESUAIAN-KOREKSI', '51030000', 5, 1, 4, 0, 0, 0),
	('51041000', ' HARGA POKOK PENJUALAN LOKAL BELUM FAKTUR', '51040000', 0, 0, 4, 0, 0, 0),
	('51041001', 'HARGA POKOK PENJUALAN LOKAL BELUM FAKTUR', '51041000', 0, 1, 5, 0, 0, 0),
	('51042000', ' HARGA POKOK PENJUALAN EKSPOR BLM FAKTUR', '51040000', 0, 0, 4, 0, 0, 0),
	('51042001', 'HARGA POKOK PENJUALAN EKSPOR BELUM FAKTUR', '51042000', 0, 1, 5, 0, 0, 0),
	('52000000', 'HARGA POKOK PRODUKSI (HPPR)', '50000000', 5, 0, 2, 0, 0, 0),
	('52010000', 'HPPR-PEMAKAIAN BAHAN BAKU', '52000000', 5, 1, 3, 0, 0, 0),
	('52020000', 'HPPR-PEMAKAIAN BAHAN KEMASAN', '52000000', 5, 1, 3, 0, 0, 0),
	('52030000', 'HPPR-PEMAKAIAN BARANG DALAM PROSES ', '52000000', 5, 1, 3, 0, 0, 0),
	('52040000', 'HPPR-PEMAKAIAN BARANG JADI ', '52000000', 5, 1, 3, 0, 0, 0),
	('52050000', 'HPPR-BIAYA TENAGA KERJA LANGSUNG (BTKL)', '52000000', 5, 1, 3, 0, 0, 0),
	('52060000', 'HPPR-BEBAN KONVERSI-OVERHEAD PABRIK ( BKOP )', '52000000', 5, 1, 3, 0, 0, 0),
	('52070000', 'HPPR-BEBAN KONVERSI-OVH PABRIK ( BKOP ) YG DITERAP', '52000000', 5, 1, 3, 0, 0, 0),
	('52080000', 'HPPR BEBAN KONV-OVH PABRIK (BKOP) SBLM ALOK-ACTUAL', '52000000', 5, 0, 3, 0, 0, 0),
	('52080100', 'HPPR BKOP SA-BIAYA GAJI DAN TUNJANGAN STAFF', '52080000', 5, 1, 4, 0, 0, 0),
	('52080200', 'HPPR BKOP SA-BIAYA UPAH & TUNJANGAN NON STAFF', '52080000', 5, 1, 4, 0, 0, 0),
	('52080300', 'HPPR BKOP SA-BIAYA ASURANSI', '52080000', 5, 1, 4, 0, 0, 0),
	('52080400', 'HPPR BKOP SA-BIAYA UTILITAS', '52080000', 5, 1, 4, 0, 0, 0),
	('52080500', 'HPPR BKOP SA-OFFICE SUPPLIES (PERLENGKAP KANTOR)', '52080000', 5, 1, 4, 0, 0, 0),
	('52080600', 'HPPR BKOP SA-FACTORY SUPPLIES/SPARE PART PABRIK ', '52080000', 5, 1, 4, 0, 0, 0),
	('52080700', 'HPPR BKOP SA-PERJALANAN DINAS', '52080000', 5, 1, 4, 0, 0, 0),
	('52080800', 'HPPR BKOP SA-BAHAN BAKAR', '52080000', 5, 1, 4, 0, 0, 0),
	('52080900', 'HPPR BKOP SA-PEMELIHARAAN AKTIVA TETAP PABRIK', '52080000', 5, 1, 4, 0, 0, 0),
	('52081000', 'HPPR BKOP SA-BIAYA PENYUSUTAN AKTIVA TETAP PABRIK', '52080000', 5, 1, 4, 0, 0, 0),
	('52081100', 'HPPR BKOP SA-SEWA', '52080000', 5, 1, 4, 0, 0, 0),
	('52081200', 'HPPR BKOP SA-PEMBELIAN IMPORT', '52080000', 5, 1, 4, 0, 0, 0),
	('52081300', 'HPPR-BKOP SA-AMORTISASI', '52080000', 5, 1, 4, 0, 0, 0),
	('52081400', 'HPPR BKOP SA-KESEJAHTERAAN KARYAWAN', '52080000', 5, 1, 4, 0, 0, 0),
	('52081500', 'HPPR BKOP SA-ANGKUTAN PEMBELIAN', '52080000', 5, 1, 4, 0, 0, 0),
	('52081600', 'HPPR BKOP SA-BIAYA PAJAK', '52080000', 5, 1, 4, 0, 0, 0),
	('52081700', 'HPPR BKOP SA-REPRESENTASI', '52080000', 5, 1, 4, 0, 0, 0),
	('52081800', 'HPPR BKOP SA-LAIN-LAIN', '52080000', 5, 0, 4, 0, 0, 0),
	('52089999', 'HPPR BKOP SA-LAIN-LAIN', '52081800', 5, 1, 5, 0, 0, 0),
	('52090000', 'HPPR-PEMAKAIAN BARANG PROMOSI DAN HADIAH', '52000000', 5, 0, 3, 0, 0, 0),
	('52090100', 'HPPR-PEMAKAIAN BARANG PROMOSI DAN HADIAH DIBELI', '52090000', 5, 1, 4, 0, 0, 0),
	('52100000', 'HPPR-PEMAKAIAN BAHAN BAKU SETENGAH JADI', '52000000', 5, 0, 3, 0, 0, 0),
	('52100001', 'HPPR-PEMAKAIAN BAHAN BAKU SETENGAH JADI DIBELI', '52100000', 5, 1, 4, 0, 0, 0),
	('52100002', 'HPPR-PEMAKAIAN BAHAN BAKU SETENGAH JADI DIPRODUKSI', '52100000', 5, 1, 4, 0, 0, 0),
	('60000000', 'BIAYA USAHA', '', 6, 0, 1, 0, 0, 0),
	('61000000', 'BIAYA USAHA', '60000000', 6, 0, 2, 0, 0, 0),
	('61010000', 'BIAYA PABRIKASI', '61000000', 6, 0, 3, 0, 0, 0),
	('61010100', 'BIAYA PABRIKASI', '61010000', 6, 0, 4, 0, 0, 0),
	('61010101', 'POTONGAN PEMBELIAN', '61010100', 6, 1, 5, 0, 0, 0),
	('61010102', 'BY PENGIRIMAN BARANG', '61010100', 6, 1, 5, 0, 0, 0),
	('61010103', 'BEBAN TENAGA KERJA LANGSUNG', '61010100', 6, 1, 5, 0, 0, 0),
	('61010104', 'GAJI KARYAWAN', '61010100', 6, 1, 5, 0, 403952400, 0),
	('61010105', 'UANG MAKAN KARYAWAN', '61010100', 6, 1, 5, 0, 0, 0),
	('61010106', 'LEMBUR KARYAWAN', '61010100', 6, 1, 5, 0, 780000, 0),
	('61010107', 'PREMI KARYAWAN', '61010100', 6, 1, 5, 0, 0, 0),
	('61010108', 'THR KARYAWAN', '61010100', 6, 1, 5, 0, 0, 0),
	('61010109', 'TRANSPORT KARYAWAN', '61010100', 6, 1, 5, 0, 0, 0),
	('61010110', 'PENGOBATAN KARYAWAN', '61010100', 6, 1, 5, 0, 10030000, 0),
	('61010111', 'GAJI BORONGAN', '61010100', 6, 1, 5, 0, 0, 0),
	('61010112', 'ASTEK KARYAWAN', '61010100', 6, 1, 5, 0, 86641224, 0),
	('61010113', 'ES BATU', '61010100', 6, 1, 5, 0, 0, 0),
	('61010114', 'AIR', '61010100', 6, 1, 5, 0, 0, 0),
	('61010115', 'LISTRIK', '61010100', 6, 1, 5, 0, 0, 0),
	('61010116', 'LABORATORIUM', '61010100', 6, 1, 5, 0, 0, 0),
	('61010117', 'PEMELIHARAAN MESIN', '61010100', 6, 1, 5, 0, 1300000, 0),
	('61010118', 'PEMELIHARAAN INV PABRIK', '61010100', 6, 1, 5, 0, 2110800, 0),
	('61010119', 'PEMELIHARAAN COLDSTORAGE', '61010100', 6, 1, 5, 0, 0, 0),
	('61010120', 'PEMELIHARAAN INS LISTRIK', '61010100', 6, 1, 5, 0, 0, 0),
	('61010121', 'PACKAGING', '61010100', 6, 1, 5, 0, 133112056.976851, 974957.32),
	('61010122', 'EMBALASE', '61010100', 6, 1, 5, 0, 181000, 0),
	('61010123', 'INGREDIENT', '61010100', 6, 1, 5, 0, 60740793.428832, 0),
	('61010124', 'PERLENGKAPAN KERJA', '61010100', 6, 1, 5, 0, 7186791.33673469, 0),
	('61010125', 'BAHAN BAKAR & GENSET', '61010100', 6, 1, 5, 0, 5994000, 0),
	('61010126', 'ALAT TULIS & PERC PROD', '61010100', 6, 1, 5, 0, 0, 0),
	('61010127', 'KONSUMSI KARY PRODUKSI', '61010100', 6, 1, 5, 0, 0, 0),
	('61010128', 'BENGKEL', '61010100', 6, 1, 5, 0, 0, 0),
	('61010129', 'PERLENGKAPAN KERJA IKAN', '61010100', 6, 1, 5, 0, 0, 0),
	('61010130', 'SPAREPART', '61010100', 6, 1, 5, 0, 39007837, 0),
	('61010131', 'OVERHEAD LAINNYA', '61010100', 6, 1, 5, 0, 0, 0),
	('61010132', 'PEMELIHARAAN MESIN IKAN', '61010100', 6, 1, 5, 0, 0, 0),
	('61010133', 'PEMELIHARAAN INV PABRIK IKAN', '61010100', 6, 1, 5, 0, 0, 0),
	('61010134', 'BAHAN BAKU', '61010100', 5, 1, 5, 0, 0, 0),
	('61020000', 'BIAYA PENJUALAN', '61000000', 6, 0, 3, 0, 0, 0),
	('61020100', 'BIAYA PENJUALAN', '61020000', 6, 0, 4, 0, 0, 0),
	('61020101', 'ADVERTENSI & PROMOSI ', '61020100', 6, 1, 5, 0, 0, 0),
	('61020102', 'BANK EXPORT', '61020100', 6, 1, 5, 0, 0, 0),
	('61020103', 'PROVISI EXPORT', '61020100', 6, 1, 5, 0, 0, 0),
	('61020104', 'KOMISI EXPORT', '61020100', 6, 1, 5, 0, 0, 0),
	('61020105', 'EMKL', '61020100', 6, 1, 5, 0, 47379500, 0),
	('61020106', 'IMPORT', '61020100', 6, 1, 5, 0, 47127220, 0),
	('61020107', 'STUFFING', '61020100', 6, 1, 5, 0, 0, 0),
	('61020108', 'KLAIM EXPORT', '61020100', 6, 1, 5, 0, 0, 0),
	('61020109', 'DOKUMEN EXPORT', '61020100', 6, 1, 5, 0, 0, 0),
	('61020110', 'FREIGHT', '61020100', 6, 1, 5, 0, 115612957, 0),
	('61030000', 'BIAYA UMUM & ADMINISTRASI', '61000000', 6, 0, 3, 0, 0, 0),
	('61030100', 'BIAYA UMUM & ADMINISTRASI', '61030000', 6, 0, 4, 0, 0, 0),
	('61030101', 'GAJI KARYAWAN', '61030100', 6, 1, 5, 0, 0, 0),
	('61030102', 'THR KARYAWAN', '61030100', 6, 1, 5, 0, 0, 0),
	('61030103', 'SAMPLING', '61030100', 6, 1, 5, 0, 5830000, 0),
	('61030104', 'PERJALANAN DINAS', '61030100', 6, 1, 5, 0, 0, 0),
	('61030105', 'KONSUMSI', '61030100', 6, 1, 5, 0, 4241000, 0),
	('61030106', 'ADMINISTRASI KANTOR', '61030100', 6, 1, 5, 0, 1567855, 0),
	('61030107', 'ALAT TULIS & PERCETAKAN', '61030100', 6, 1, 5, 0, 0, 0),
	('61030108', 'BAHAN BAKAR', '61030100', 6, 1, 5, 0, 990000, 0),
	('61030109', 'TELEPON, TELEX, DLL', '61030100', 6, 1, 5, 0, 493928, 0),
	('61030110', 'PAJAK', '61030100', 6, 1, 5, 0, 9402000, 0),
	('61030111', 'PARKIR, TOL & RETRIBUSI', '61030100', 6, 1, 5, 0, 293000, 0),
	('61030112', 'KIRIM DOKUMEN & SURAT', '61030100', 6, 1, 5, 0, 826780, 0),
	('61030113', 'REP & ENTERTAINMENT', '61030100', 6, 1, 5, 0, 1558792, 0),
	('61030114', 'PENGOBATAN KARYAWAN', '61030100', 6, 1, 5, 0, 0, 0),
	('61030115', 'SEWA GEDUNG', '61030100', 6, 1, 5, 0, 0, 0),
	('61030116', 'ASURANSI', '61030100', 6, 1, 5, 0, 0, 0),
	('61030117', 'MANAGEMENT FEE', '61030100', 6, 1, 5, 0, 19639446, 0),
	('61030118', 'PAKAIAN DINAS KERJA', '61030100', 6, 1, 5, 0, 0, 0),
	('61030119', 'PEMELIHARAAN INV KANTOR', '61030100', 6, 1, 5, 0, 0, 0),
	('61030120', 'PEMELIHARAAN KENDARAAN', '61030100', 6, 1, 5, 0, 4757500, 0),
	('61030121', 'PEMELIHARAAN BANGUNAN', '61030100', 6, 1, 5, 0, 16107500, 0),
	('61030122', 'TRANSPORTASI KARYAWAN', '61030100', 6, 1, 5, 0, 0, 0),
	('61030123', 'SUMBANGAN', '61030100', 6, 1, 5, 0, 0, 0),
	('61030124', 'IJIN - IJIN & IURAN', '61030100', 6, 1, 5, 0, 150000, 0),
	('61030125', 'OUTSOURCHING', '61030100', 6, 1, 5, 0, 16277800, 0),
	('61030126', 'AMORTISASI PRA OPERASIONAL', '61030100', 6, 1, 5, 0, 0, 0),
	('61030127', 'FOTOCOPY', '61030100', 6, 1, 5, 0, 997990, 0),
	('61030128', 'LAIN - LAIN', '61030100', 6, 1, 5, 0, 109992490.763, 0),
	('61030129', 'PAJAK PENGHASILAN', '61030100', 6, 1, 5, 0, 7753412, 0),
	('61030130', 'PEMELIHARAAN BANGUNAN IKAN', '61030100', 6, 1, 5, 0, 0, 0),
	('61030131', 'PELATIHAN & TRAINING', '61030100', 6, 1, 5, 0, 0, 0),
	('61030132', 'PENYUSUTAN BANGUNAN', '61030100', 6, 1, 5, 0, 0, 0),
	('61030133', 'PENYUSUTAN MESIN & PERALATAN', '61030100', 6, 1, 5, 0, 0, 0),
	('61030134', 'PENYUSUTAN INVENTARIS', '61030100', 6, 1, 5, 0, 0, 0),
	('61030135', 'PENYUSUTAN KENDARAAN', '61030100', 6, 1, 5, 0, 0, 0),
	('61030136', 'PENYUSUTAN HARTA LAINNYA', '61030100', 6, 1, 5, 0, 0, 0),
	('61030137', 'AMORTISASI PRA OPERASI DAN OPREASI', '61030100', 6, 1, 5, 0, 0, 0),
	('61030138', 'PENGHAPUSAN PERSEDIAAN', '61030100', 0, 1, 5, 0, 0, 0),
	('70000000', 'PENDAPATAN DAN BIAYA LAIN-LAIN', '', 7, 0, 1, 0, 0, 0),
	('71000000', 'PENDAPATAN LAIN-LAIN', '70000000', 7, 0, 2, 0, 0, 0),
	('71010000', 'LABA SELISIH KURS', '71000000', 7, 0, 3, 0, 0, 0),
	('71010100', 'LABA SELISIH KURS PIUTANG DAGANG', '71010000', 7, 1, 4, 0, 0, 0),
	('71010200', 'LABA SELISIH KURS HUTANG DAGANG', '71010000', 7, 1, 4, 0, 0, 0),
	('71010300', 'LABA SELISIH KURS PINJAMAN DALAM NEGERI', '71010000', 7, 1, 4, 0, 0, 0),
	('71010400', 'LABA SELISIH KURS PINJAMAN LUAR NEGERI', '71010000', 7, 1, 4, 0, 0, 0),
	('71010500', 'LABA SELISIH KURS KAS DAN SETARA KAS', '71010000', 7, 1, 4, 0, 0, 0),
	('71010600', 'LABA SELISIH KURS DEPOSITO ', '71010000', 7, 1, 4, 0, 0, 0),
	('71010700', 'LABA SELISIH KURS HUTANG BY BUNGA PINJAMAN', '71010000', 7, 1, 4, 0, 0, 0),
	('71010800', 'LABA SELISIH KURS BUNGA PPH PS 26', '71010000', 7, 1, 4, 0, 0, 0),
	('71010900', 'LABA SELISIH KURS HUTANG PERSERO', '71010000', 7, 1, 4, 0, 0, 0),
	('71011000', 'LABA SELISIH KURS JASA PPH PS 26', '71010000', 7, 1, 4, 0, 0, 0),
	('71019900', 'LABA SELISIH KURS LAIN-LAIN', '71010000', 7, 1, 4, 0, 0, 0),
	('71020000', 'LABA DARI PENJUALAN AKTIVA TETAP', '71000000', 7, 1, 3, 0, 0, 0),
	('71030000', 'PENDAPATAN BUNGA', '71000000', 7, 0, 3, 0, 0, 0),
	('71030100', 'PENDAPATAN BUNGA JASA GIRO BANK', '71030000', 7, 1, 4, 0, 0, 0),
	('71030200', 'PENDAPATAN BUNGA DEPOSITO BANK', '71030000', 7, 1, 4, 0, 0, 0),
	('71030900', 'PENDAPATAN BUNGA LAIN-LAIN', '71030000', 7, 1, 4, 0, 0, 0),
	('71040000', 'PENDAPATAN BUNGA-PAJAK', '71000000', 7, 0, 3, 0, 0, 0),
	('71040100', 'PENDAPATAN BUNGA JASA GIRO BANK-PAJAK', '71040000', 7, 0, 4, 0, 0, 0),
	('71040101', 'BIAYA PAJAK BUNGA JASA GIRO BANK', '71040100', 7, 1, 5, 0, 0, 0),
	('71040200', 'PENDAPATAN BUNGA DEPOSITO BANK-PAJAK', '71040000', 7, 0, 4, 0, 0, 0),
	('71040201', 'BIAYA PAJAK BUNGA DEPOSITO BANK', '71040200', 7, 1, 5, 0, 0, 0),
	('71990000', 'PENDAPATAN LAIN-LAIN', '71000000', 7, 0, 3, 0, 0, 0),
	('71990100', 'PENDAPATAN DEVIDEN', '71990000', 7, 0, 4, 0, 0, 0),
	('71990101', 'PENDAPATAN LAIN-LAIN-PENDAPATAN DEVIDEN', '71990100', 7, 1, 5, 0, 0, 0),
	('71990200', 'PENDAPATAN DI LUAR USAHA', '71990000', 7, 1, 4, 0, 0, 0),
	('71990300', 'SELISIH DARI PEMBULATAN', '71990000', 7, 1, 4, 0, 0.09, 0),
	('71990400', 'PENDAPATAN KLAIM ASURANSI', '71990000', 7, 1, 4, 0, 0, 0),
	('71990500', 'PENDAPATAN KLAIM LAIN-LAIN', '71990000', 7, 1, 4, 0, 0, 0),
	('71990600', 'BIAYA/PENDAPATAN LAIN-LAIN PENGHAPUSAN AKT TETAP', '71990000', 7, 1, 4, 0, 0, 0),
	('71990700', 'PENDAPATAN AFALAN RAW MATERIAL', '71990000', 7, 1, 4, 0, 0, 0),
	('71999900', 'PENDAPATAN LAIN-LAIN', '71990000', 7, 0, 4, 0, 0, 0),
	('71999999', 'PENDAPATAN LAIN-LAIN-PENDAPATAN LAIN-LAIN', '71999900', 7, 1, 5, 0, 0, 0),
	('72000000', 'BIAYA LAIN-LAIN', '70000000', 7, 0, 2, 0, 0, 0),
	('72010000', 'RUGI SELISIH KURS', '72000000', 7, 0, 3, 0, 0, 0),
	('72010100', 'RUGI SELISIH KURS PENJUALAN EKSPOR', '72010000', 7, 1, 4, 0, 0, 0),
	('72010200', 'RUGI SELISIH KURS HUTANG DAGANG', '72010000', 7, 1, 4, 0, 0, 0),
	('72010300', 'RUGI SELISIH KURS PINJAMAN DALAM NEGERI', '72010000', 7, 1, 4, 0, 0, 0),
	('72010400', 'RUGI SELISIH KURS PINJAMAN LUAR NEGERI', '72010000', 7, 1, 4, 0, 0, 0),
	('72010500', 'RUGI SELISIH KURS KAS DAN SETARA KAS', '72010000', 7, 1, 4, 0, 25696000, 0),
	('72010600', 'RUGI SELISIH KURS DEPOSITO', '72010000', 7, 1, 4, 0, 0, 0),
	('72010700', 'RUGI SELISIH KURS HUTANG BUNGA PINJAMAN', '72010000', 7, 1, 4, 0, 0, 0),
	('72010800', 'RUGI SELISIH KURS BUNGA PPH PS 26 ', '72010000', 7, 1, 4, 0, 0, 0),
	('72010900', 'RUGI SELISIH KURS HUTANG PERSERO', '72010000', 7, 1, 4, 0, 0, 0),
	('72019900', 'RUGI SELISIH KURS LAIN-LAIN', '72010000', 7, 1, 4, 0, 0, 0),
	('72020000', 'RUGI DARI PENJUALAN AKTIVA TETAP', '72000000', 7, 0, 3, 0, 0, 0),
	('72020100', 'RUGI DARI PENJUALAN AKTIVA TETAP', '72020000', 7, 1, 4, 0, 0, 0),
	('72030000', 'BUNGA DAN BIAYA BANK ', '72000000', 7, 0, 3, 0, 0, 0),
	('72030100', 'BUNGA PINJAMAN DALAM NEGERI', '72030000', 7, 1, 4, 0, 64518325.2, 0),
	('72030200', 'BUNGA PINJAMAN LUAR NEGRI', '72030000', 7, 1, 4, 0, 0, 0),
	('72030300', 'AMORTISASI BIAYA KEUANGAN', '72030000', 7, 0, 4, 0, 0, 0),
	('72030301', 'B.ADM-AMORTISASI BIAYA KEUANGAN', '72030300', 7, 1, 5, 0, 0, 0),
	('72030400', 'BEBAN ADM BANK DAN PROVISI KREDIT', '72030000', 7, 1, 4, 0, 951495, 0),
	('72030900', 'BUNGA LAIN-LAIN', '72030000', 7, 0, 4, 0, 0, 0),
	('72030901', 'BUNGA LAIN-LAIN', '72030900', 7, 1, 5, 0, 0, 0),
	('72990000', 'BIAYA LAIN-LAIN', '72000000', 7, 0, 3, 0, 0, 0),
	('72990100', 'PAYROLL CLEARING ACCOUNT ( PCA )', '72990000', 7, 0, 4, 0, 0, 0),
	('72990101', 'PAYROLL CLEARING ACCOUNT', '72990100', 7, 1, 5, 0, 0, 0),
	('72990300', 'BIAYA PAJAK (KEKURANGAN TAHUN YANG LALU)', '72990000', 7, 0, 4, 0, 0, 0),
	('72990301', 'BIAYA PAJAK (KEKURANGAN TAHUN YANG LALU)', '72990300', 7, 1, 5, 0, 0, 0),
	('72990400', 'BIAYA LAIN-LAIN-BIAYA DI LUAR USAHA', '72990000', 7, 0, 4, 0, 0, 0),
	('72990401', 'BIAYA LAIN-LAIN-BIAYA DI LUAR USAHA', '72990400', 7, 1, 5, 0, 0, 0),
	('72999900', 'BIAYA LAIN-LAIN', '72990000', 7, 0, 4, 0, 0, 0),
	('72999901', 'BIAYA PAJAK (DENDA PAJAK)', '72999900', 7, 1, 5, 0, 0, 0),
	('72999902', 'BIAYA PAJAK (PPH FINAL)', '72999900', 7, 1, 5, 0, 0, 0),
	('72999903', 'BIAYA PAJAK (PPH 26)', '72999900', 7, 1, 5, 0, 0, 0),
	('72999904', 'BIAYA PAJAK (DENDA BEA CUKAI)', '72999900', 7, 1, 5, 0, 0, 0),
	('72999999', 'BIAYA LAIN-LAIN', '72999900', 7, 1, 5, 0, 0, 0),
	('73000000', 'TAKSIRAN PAJAK PENGHASILAN', '70000000', 7, 0, 2, 0, 0, 0),
	('73010000', 'TAKSIRAN PAJAK PENGHASILAN - THN BERJALAN', '73000000', 7, 0, 3, 0, 0, 0),
	('73010100', 'TAKSIRAN PAJAK PENGHASILAN - THN BERJALAN', '73010000', 7, 0, 4, 0, 0, 0),
	('73010101', 'TAKSIRAN PAJAK PENGHASILAN-TAHUN BERJALAN', '73010100', 7, 1, 5, 0, 0, 0),
	('73020000', 'TAKSIRAN PAJAK PENGHASILAN - DITANGGUHKAN', '73000000', 7, 0, 3, 0, 0, 0),
	('73020100', 'TAKSIRAN PAJAK PENGHASILAN - DITANGGUHKAN', '73020000', 7, 0, 4, 0, 0, 0),
	('73020101', 'TAKSIRAN PAJAK PENGHASILAN-DITANGGUHKAN', '73020100', 7, 1, 5, 0, 0, 0),
	('79000000', 'INITIAL BALANCE', '70000000', 7, 0, 2, 0, 0, 0),
	('79010000', 'INITIAL BALANCE', '79000000', 7, 1, 3, 0, 0, 0);
/*!40000 ALTER TABLE `tsaldox` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.ttd
DROP TABLE IF EXISTS `ttd`;
CREATE TABLE IF NOT EXISTS `ttd` (
  `ttr` varchar(15) default NULL,
  `jurnal` varchar(15) default NULL,
  `date` datetime default NULL,
  `duedate` datetime default NULL,
  `val` double default NULL,
  `valusd` double default NULL,
  `no` smallint(5) default NULL,
  `group_` varchar(1) default NULL,
  `dk` varchar(1) default NULL,
  `acc` varchar(15) default NULL,
  KEY `jurnal` (`jurnal`),
  KEY `ttrgroup` (`ttr`,`group_`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.ttd: ~0 rows (approximately)
/*!40000 ALTER TABLE `ttd` DISABLE KEYS */;
/*!40000 ALTER TABLE `ttd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.ttr
DROP TABLE IF EXISTS `ttr`;
CREATE TABLE IF NOT EXISTS `ttr` (
  `ttr` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `sub` varchar(15) default NULL,
  `val` double default NULL,
  `duedate` datetime default NULL,
  `remark` varchar(50) default NULL,
  `period` varchar(4) NOT NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(100) default NULL,
  `group_` varchar(1) default NULL,
  PRIMARY KEY  (`ttr`),
  KEY `periodgroup_` (`period`,`group_`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.ttr: ~0 rows (approximately)
/*!40000 ALTER TABLE `ttr` DISABLE KEYS */;
/*!40000 ALTER TABLE `ttr` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.type
DROP TABLE IF EXISTS `type`;
CREATE TABLE IF NOT EXISTS `type` (
  `type` varchar(15) NOT NULL,
  `ket` varchar(45) NOT NULL,
  `chusr` char(10) default NULL,
  `chtime` char(16) default NULL,
  PRIMARY KEY  (`type`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 COMMENT='tipe kemasan';

-- Dumping data for table wis_inventory.type: ~0 rows (approximately)
/*!40000 ALTER TABLE `type` DISABLE KEYS */;
/*!40000 ALTER TABLE `type` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.udr
DROP TABLE IF EXISTS `udr`;
CREATE TABLE IF NOT EXISTS `udr` (
  `udr` char(15) NOT NULL,
  `Name` char(50) default NULL,
  `parent` char(15) default NULL,
  `detil` tinyint(1) default NULL,
  `chtime` char(16) default NULL,
  `chusr` char(10) default NULL,
  `reportname` varchar(50) default NULL,
  `level_` smallint(5) default NULL,
  PRIMARY KEY  (`udr`),
  KEY `parent` (`parent`),
  KEY `udr` (`udr`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.udr: ~0 rows (approximately)
/*!40000 ALTER TABLE `udr` DISABLE KEYS */;
/*!40000 ALTER TABLE `udr` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.ukuran
DROP TABLE IF EXISTS `ukuran`;
CREATE TABLE IF NOT EXISTS `ukuran` (
  `kode` varchar(15) NOT NULL,
  `ket` varchar(45) NOT NULL,
  `chusr` char(10) default NULL,
  `chtime` char(16) default NULL,
  PRIMARY KEY  (`kode`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.ukuran: ~0 rows (approximately)
/*!40000 ALTER TABLE `ukuran` DISABLE KEYS */;
/*!40000 ALTER TABLE `ukuran` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.umd
DROP TABLE IF EXISTS `umd`;
CREATE TABLE IF NOT EXISTS `umd` (
  `umh` varchar(15) NOT NULL,
  `jurnal` varchar(15) default ' ',
  `acc` varchar(15) default ' ',
  `remark` varchar(70) default ' ',
  `cct` varchar(15) default ' ',
  `dk` varchar(1) default ' ',
  `val` double default '0',
  `no` smallint(5) unsigned NOT NULL default '0',
  `ino` varchar(15) NOT NULL,
  `cad` varchar(15) default ' ',
  `okl` varchar(15) default ' ',
  `invo` varchar(50) default NULL,
  PRIMARY KEY  (`umh`,`no`),
  KEY `acc` (`acc`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.umd: ~0 rows (approximately)
/*!40000 ALTER TABLE `umd` DISABLE KEYS */;
/*!40000 ALTER TABLE `umd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.umh
DROP TABLE IF EXISTS `umh`;
CREATE TABLE IF NOT EXISTS `umh` (
  `umh` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `remark` varchar(100) default NULL,
  `period` varchar(4) NOT NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `adj` smallint(5) default NULL,
  `sub` varchar(15) default NULL,
  `oms` varchar(15) default NULL,
  `sspdate` datetime default NULL,
  `fakdate` datetime default NULL,
  `pib` varchar(30) default NULL,
  `bank` varchar(30) default NULL,
  `cur` varchar(15) default NULL,
  `kurs` double default NULL,
  `delete` bit(1) NOT NULL default '\0',
  `bsa` varchar(15) default ' ',
  PRIMARY KEY  (`umh`),
  KEY `period` (`period`),
  KEY `umh` (`umh`),
  KEY `tgl` (`date`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.umh: ~0 rows (approximately)
/*!40000 ALTER TABLE `umh` DISABLE KEYS */;
/*!40000 ALTER TABLE `umh` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.umk
DROP TABLE IF EXISTS `umk`;
CREATE TABLE IF NOT EXISTS `umk` (
  `klr` varchar(15) NOT NULL,
  `jurnal` varchar(15) default ' ',
  `remark` varchar(70) default NULL,
  `val` double default NULL,
  `no` smallint(5) NOT NULL default '0',
  `dk` varchar(1) default NULL,
  `acc` varchar(15) default NULL,
  `cct` varchar(15) default NULL,
  `kurs` double default '1',
  `invoice` varchar(50) default ' ',
  `invo` varchar(50) default ' ',
  PRIMARY KEY  (`klr`,`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.umk: ~0 rows (approximately)
/*!40000 ALTER TABLE `umk` DISABLE KEYS */;
/*!40000 ALTER TABLE `umk` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.umkp
DROP TABLE IF EXISTS `umkp`;
CREATE TABLE IF NOT EXISTS `umkp` (
  `msk` varchar(15) NOT NULL default '',
  `jurnal` varchar(15) NOT NULL default ' ',
  `remark` varchar(70) default NULL,
  `val` double default NULL,
  `no` smallint(5) NOT NULL default '0',
  `dk` varchar(1) default NULL,
  `acc` varchar(15) default NULL,
  `cct` varchar(15) default NULL,
  `kurs` double default '1',
  `invoice` varchar(50) default ' ',
  `invo` varchar(50) default ' ',
  PRIMARY KEY  (`msk`,`no`,`jurnal`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.umkp: ~0 rows (approximately)
/*!40000 ALTER TABLE `umkp` DISABLE KEYS */;
/*!40000 ALTER TABLE `umkp` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.up
DROP TABLE IF EXISTS `up`;
CREATE TABLE IF NOT EXISTS `up` (
  `no` double default NULL,
  `kode` tinytext,
  `y` double default NULL,
  `z` tinytext,
  `val` double default NULL,
  `x` double default NULL,
  `price` double default NULL,
  `qty` double default NULL,
  `unit` tinytext
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.up: ~0 rows (approximately)
/*!40000 ALTER TABLE `up` DISABLE KEYS */;
/*!40000 ALTER TABLE `up` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.upload
DROP TABLE IF EXISTS `upload`;
CREATE TABLE IF NOT EXISTS `upload` (
  `no` double default NULL,
  `kode` tinytext,
  `y` double default NULL,
  `z` tinytext,
  `val` double default NULL,
  `x` double default NULL,
  `price` double default NULL,
  `qty` double default NULL,
  `unit` tinytext
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.upload: ~0 rows (approximately)
/*!40000 ALTER TABLE `upload` DISABLE KEYS */;
/*!40000 ALTER TABLE `upload` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.userlog
DROP TABLE IF EXISTS `userlog`;
CREATE TABLE IF NOT EXISTS `userlog` (
  `logdate` date NOT NULL,
  `logtime` time NOT NULL,
  `user` varchar(16) NOT NULL,
  `status` varchar(25) NOT NULL,
  `ip` varchar(30) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.userlog: ~0 rows (approximately)
/*!40000 ALTER TABLE `userlog` DISABLE KEYS */;
/*!40000 ALTER TABLE `userlog` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.usr
DROP TABLE IF EXISTS `usr`;
CREATE TABLE IF NOT EXISTS `usr` (
  `user` char(15) NOT NULL,
  `name` char(30) default NULL,
  `chtime` char(16) default NULL,
  `chusr` char(10) default NULL,
  `role` char(50) default NULL,
  `pswd` varchar(10) default ' ',
  `aprovname` varchar(50) default NULL,
  PRIMARY KEY  (`user`),
  KEY `userid` (`user`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.usr: ~2 rows (approximately)
/*!40000 ALTER TABLE `usr` DISABLE KEYS */;
REPLACE INTO `usr` (`user`, `name`, `chtime`, `chusr`, `role`, `pswd`, `aprovname`) VALUES
	('guest', 'guest', '19-02-2022 20:09', 'it', 'trial', ' ', 'guest'),
	('it', 'IT', '27-01-2020 08:53', 'root', '1', ' ', 'IT');
/*!40000 ALTER TABLE `usr` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.usrlevel
DROP TABLE IF EXISTS `usrlevel`;
CREATE TABLE IF NOT EXISTS `usrlevel` (
  `role` char(50) NOT NULL,
  `name` char(30) default NULL,
  `chusr` char(10) default NULL,
  `chtime` char(16) default NULL,
  `otolevel_` tinyint(1) default NULL,
  PRIMARY KEY  (`role`),
  KEY `levelid` (`role`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.usrlevel: ~2 rows (approximately)
/*!40000 ALTER TABLE `usrlevel` DISABLE KEYS */;
REPLACE INTO `usrlevel` (`role`, `name`, `chusr`, `chtime`, `otolevel_`) VALUES
	('it', 'it', 'it', NULL, 1),
	('trial', 'trial', 'it', '19-02-2022 20:15', 1);
/*!40000 ALTER TABLE `usrlevel` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.usrloc
DROP TABLE IF EXISTS `usrloc`;
CREATE TABLE IF NOT EXISTS `usrloc` (
  `userid` varchar(15) NOT NULL default ' ',
  `loc` varchar(15) NOT NULL default ' ',
  `keterangan` varchar(50) default ' ',
  `form` varchar(45) default ' ',
  `no` int(10) unsigned NOT NULL default '0',
  PRIMARY KEY  (`userid`,`loc`,`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.usrloc: ~60 rows (approximately)
/*!40000 ALTER TABLE `usrloc` DISABLE KEYS */;
REPLACE INTO `usrloc` (`userid`, `loc`, `keterangan`, `form`, `no`) VALUES
	('root', 'GBB2', NULL, NULL, 1),
	('root', 'GBJ1', NULL, NULL, 2),
	('root', 'GBJ2', NULL, NULL, 3),
	('root', 'GBJS', NULL, NULL, 4),
	('root', 'GBPH', NULL, NULL, 5),
	('root', 'GKM1', NULL, NULL, 6),
	('root', 'GKMS', NULL, NULL, 7),
	('root', 'GKT1', NULL, NULL, 8),
	('root', 'GPP1', NULL, NULL, 9),
	('root', 'GPR1', NULL, NULL, 10),
	('root', 'GPR2 ', NULL, NULL, 11),
	('root', 'GPR3', NULL, NULL, 12),
	('root', 'GPRT', NULL, NULL, 13),
	('root', 'GSP1', NULL, NULL, 14),
	('root', 'T101', NULL, NULL, 15),
	('root', 'T102', NULL, NULL, 16),
	('root', 'T103', NULL, NULL, 17),
	('root', 'T104', NULL, NULL, 18),
	('root', 'T105', NULL, NULL, 19),
	('root', 'T106', NULL, NULL, 20),
	('root', 'T107', NULL, NULL, 21),
	('root', 'T108', NULL, NULL, 22),
	('root', 'T109', NULL, NULL, 23),
	('root', 'T201', NULL, NULL, 24),
	('root', 'T202', NULL, NULL, 25),
	('root', 'T203', NULL, NULL, 26),
	('root', 'T204', NULL, NULL, 27),
	('root', 'T205', NULL, NULL, 28),
	('root', 'T206', NULL, NULL, 29),
	('root', 'T301', NULL, NULL, 30),
	('root', 'T302', NULL, NULL, 31),
	('root', 'T303', NULL, NULL, 32),
	('root', 'T304', NULL, NULL, 33),
	('root', 'T305', NULL, NULL, 34),
	('root', 'T306', NULL, NULL, 35),
	('root', 'T307', NULL, NULL, 36),
	('root', 'T401', NULL, NULL, 37),
	('root', 'T501', NULL, NULL, 38),
	('root', 'T502', NULL, NULL, 39),
	('root', 'T503', NULL, NULL, 40),
	('root', 'T504', NULL, NULL, 41),
	('root', 'T505', NULL, NULL, 42),
	('root', 'T602', NULL, NULL, 43),
	('root', 'T702', NULL, NULL, 44),
	('root', 'T901', NULL, NULL, 45),
	('root', 'T902', NULL, NULL, 46),
	('root', 'T903', NULL, NULL, 47),
	('root', 'T904', NULL, NULL, 48),
	('root', 'T905', NULL, NULL, 49),
	('root', 'T906', NULL, NULL, 50),
	('root', 'TD 001', NULL, NULL, 51),
	('root', 'TD 006', NULL, NULL, 52),
	('root', 'TD 007', NULL, NULL, 53),
	('root', 'TD 008', NULL, NULL, 54),
	('root', 'TD 009', NULL, NULL, 55),
	('root', 'TD SOLAR', NULL, NULL, 56),
	('root', 'TD.002', NULL, NULL, 57),
	('root', 'TP.001', NULL, NULL, 58),
	('root', 'TP.002', NULL, NULL, 59),
	('root', 'TR 001', NULL, NULL, 60);
/*!40000 ALTER TABLE `usrloc` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.usrp
DROP TABLE IF EXISTS `usrp`;
CREATE TABLE IF NOT EXISTS `usrp` (
  `usrp` char(15) NOT NULL,
  `name` char(30) default '',
  `chtime` char(16) default NULL,
  `chusr` char(10) default NULL,
  `aktif` bit(1) default '\0',
  `kabag` char(15) default NULL,
  PRIMARY KEY  (`usrp`),
  KEY `userid` (`usrp`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.usrp: ~2 rows (approximately)
/*!40000 ALTER TABLE `usrp` DISABLE KEYS */;
REPLACE INTO `usrp` (`usrp`, `name`, `chtime`, `chusr`, `aktif`, `kabag`) VALUES
	('guest', 'guest', NULL, 'it', b'1', NULL),
	('IT', 'IT', '19/02/2022 22:24', 'it', b'1', '');
/*!40000 ALTER TABLE `usrp` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.usrpr
DROP TABLE IF EXISTS `usrpr`;
CREATE TABLE IF NOT EXISTS `usrpr` (
  `usrpr` char(15) NOT NULL,
  `name` char(30) default '',
  `chtime` char(16) default NULL,
  `chusr` char(10) default NULL,
  `aktif` bit(1) default '\0',
  `kabag` char(30) default '',
  PRIMARY KEY  (`usrpr`),
  KEY `userid` (`usrpr`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.usrpr: ~2 rows (approximately)
/*!40000 ALTER TABLE `usrpr` DISABLE KEYS */;
REPLACE INTO `usrpr` (`usrpr`, `name`, `chtime`, `chusr`, `aktif`, `kabag`) VALUES
	('guest', 'guest', NULL, 'it', b'1', ''),
	('IT', 'IT', '02-07-2019 10:21', 'root', b'1', '');
/*!40000 ALTER TABLE `usrpr` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.vpd
DROP TABLE IF EXISTS `vpd`;
CREATE TABLE IF NOT EXISTS `vpd` (
  `vpo` varchar(15) NOT NULL default ' ',
  `inv` varchar(15) default NULL,
  `remark` varchar(100) default NULL,
  `qty` double default NULL,
  `price` double default NULL,
  `val` double default NULL,
  `no` smallint(5) NOT NULL default '0',
  `unit` varchar(6) default NULL,
  PRIMARY KEY  (`vpo`,`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.vpd: ~0 rows (approximately)
/*!40000 ALTER TABLE `vpd` DISABLE KEYS */;
/*!40000 ALTER TABLE `vpd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.vpo
DROP TABLE IF EXISTS `vpo`;
CREATE TABLE IF NOT EXISTS `vpo` (
  `vpo` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `kiriman` datetime default NULL,
  `sub` varchar(15) default NULL,
  `ppn` smallint(5) default NULL,
  `disc` double default NULL,
  `remark` varchar(50) default NULL,
  `val` double default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) default NULL,
  `cur` varchar(15) default NULL,
  `kurs` double default NULL,
  `aprov` smallint(5) default NULL,
  `periode` datetime default NULL,
  `delete` bit(1) default '\0',
  `payment` varchar(40) default NULL,
  `packaging` varchar(40) default NULL,
  `country` varchar(40) default NULL,
  `portload` varchar(40) default NULL,
  `shippedby` varchar(40) default NULL,
  `portdes` varchar(40) default NULL,
  `partial_` varchar(40) default NULL,
  `tranship` varchar(40) default NULL,
  `vessel` varchar(40) default NULL,
  `mark` varchar(40) default NULL,
  `facilities` varchar(40) default NULL,
  `shippingdoc` longtext,
  `shippingint` longtext,
  `addnote` longtext,
  PRIMARY KEY  (`vpo`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.vpo: ~0 rows (approximately)
/*!40000 ALTER TABLE `vpo` DISABLE KEYS */;
/*!40000 ALTER TABLE `vpo` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.vsd
DROP TABLE IF EXISTS `vsd`;
CREATE TABLE IF NOT EXISTS `vsd` (
  `vso` varchar(15) default NULL,
  `inv` varchar(15) default NULL,
  `loc` varchar(15) default NULL,
  `remark` varchar(100) default NULL,
  `qty` double default NULL,
  `price` double default NULL,
  `disc` double default NULL,
  `val` double default NULL,
  `no` smallint(5) default NULL,
  `unit` varchar(6) default NULL,
  `qty1` double default NULL,
  `okl` varchar(15) default NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.vsd: ~0 rows (approximately)
/*!40000 ALTER TABLE `vsd` DISABLE KEYS */;
/*!40000 ALTER TABLE `vsd` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.vso
DROP TABLE IF EXISTS `vso`;
CREATE TABLE IF NOT EXISTS `vso` (
  `vso` varchar(15) NOT NULL,
  `date` datetime default NULL,
  `duedate` datetime default NULL,
  `sub` varchar(15) default NULL,
  `ppn` smallint(5) default NULL,
  `disc` double default NULL,
  `remark` varchar(50) default NULL,
  `val` double default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  `period` varchar(4) NOT NULL,
  `loc` varchar(15) default NULL,
  PRIMARY KEY  (`vso`),
  KEY `date` (`date`),
  KEY `period` (`period`),
  KEY `subdate` (`sub`,`date`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.vso: ~0 rows (approximately)
/*!40000 ALTER TABLE `vso` DISABLE KEYS */;
/*!40000 ALTER TABLE `vso` ENABLE KEYS */;

-- Dumping structure for table wis_inventory.wip_lost
DROP TABLE IF EXISTS `wip_lost`;
CREATE TABLE IF NOT EXISTS `wip_lost` (
  `period` varchar(4) NOT NULL default ' ',
  `cct` varchar(15) NOT NULL default ' ',
  `date` datetime NOT NULL,
  `qty` double unsigned default '0',
  `remmark` varchar(45) default ' ',
  `chtime` varchar(16) default ' ',
  `chusr` varchar(10) default ' ',
  `no` int(10) unsigned NOT NULL default '0',
  PRIMARY KEY  (`period`,`date`,`cct`,`no`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory.wip_lost: ~0 rows (approximately)
/*!40000 ALTER TABLE `wip_lost` DISABLE KEYS */;
/*!40000 ALTER TABLE `wip_lost` ENABLE KEYS */;

-- Dumping structure for table wis_inventory._close
DROP TABLE IF EXISTS `_close`;
CREATE TABLE IF NOT EXISTS `_close` (
  `no` int(10) unsigned NOT NULL default '0',
  `period` varchar(16) NOT NULL default ' ',
  `remark` varchar(10) default NULL,
  `chtime` varchar(16) default NULL,
  `chusr` varchar(10) default NULL,
  PRIMARY KEY  (`no`,`period`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- Dumping data for table wis_inventory._close: ~0 rows (approximately)
/*!40000 ALTER TABLE `_close` DISABLE KEYS */;
/*!40000 ALTER TABLE `_close` ENABLE KEYS */;

-- Dumping structure for view wis_inventory.regrsb
DROP VIEW IF EXISTS `regrsb`;
-- Removing temporary table and create final VIEW structure
DROP TABLE IF EXISTS `regrsb`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `regrsb` AS select sql_no_cache `rsb`.`sub` AS `sub`,`rsb`.`acc` AS `acc`,`rsb`.`jurnal` AS `jurnal`,`rsb`.`kurs` AS `kurs`,`rsb`.`period` AS `period`,`rsb`.`invoice` AS `invoice` from `rsb` where ((round(`rsb`.`val`,2) <> 0) and (`rsb`.`period` = _latin1'1512')) union all select sql_no_cache `rhp`.`sub` AS `sub`,`rhp`.`acc` AS `acc`,`rhp`.`jurnal` AS `jurnal`,`rhp`.`kurs` AS `kurs`,`rhp`.`period` AS `period`,`rhp`.`invoice` AS `invoice` from `rhp` where ((round(`rhp`.`val`,2) <> 0) and (`rhp`.`period` >= _latin1'1512'));

/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
